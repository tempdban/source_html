<dec f='linux-4.14.y/include/linux/vt_kern.h' l='192' type='void vt_kbd_con_start(int console)'/>
<def f='linux-4.14.y/drivers/tty/vt/keyboard.c' l='1152' ll='1160' type='void vt_kbd_con_start(int console)'/>
<doc f='linux-4.14.y/drivers/tty/vt/keyboard.c' l='1139'>/**
 *	vt_kbd_con_start	-	Keyboard side of console start
 *	@console: console
 *
 *	Handle console start. This is a wrapper for the VT layer
 *	so that we can keep kbd knowledge internal
 *
 *	FIXME: We eventually need to hold the kbd lock here to protect
 *	the LED updating. We can&apos;t do it yet because fn_hold calls stop_tty
 *	and start_tty under the kbd_event_lock, while normal tty paths
 *	don&apos;t hold the lock. We probably need to split out an LED lock
 *	but not during an -rc release!
 */</doc>
<use f='linux-4.14.y/drivers/tty/vt/vt.c' l='2852' u='c' c='con_start'/>
<dec f='linux-4.14.y/include/linux/vt_kern.h' l='192' type='void vt_kbd_con_start(int console)'/>
<def f='linux-4.14.y/drivers/tty/vt/keyboard.c' l='1152' ll='1160' type='void vt_kbd_con_start(int console)'/>
<doc f='linux-4.14.y/drivers/tty/vt/keyboard.c' l='1139'>/**
 *	vt_kbd_con_start	-	Keyboard side of console start
 *	@console: console
 *
 *	Handle console start. This is a wrapper for the VT layer
 *	so that we can keep kbd knowledge internal
 *
 *	FIXME: We eventually need to hold the kbd lock here to protect
 *	the LED updating. We can&apos;t do it yet because fn_hold calls stop_tty
 *	and start_tty under the kbd_event_lock, while normal tty paths
 *	don&apos;t hold the lock. We probably need to split out an LED lock
 *	but not during an -rc release!
 */</doc>
<use f='linux-4.14.y/drivers/tty/vt/vt.c' l='2852' u='c' c='con_start'/>
