<dec f='linux-4.18.y/include/crypto/hash.h' l='439' type='int crypto_ahash_final(struct ahash_request * req)'/>
<def f='linux-4.18.y/crypto/ahash.c' l='365' ll='368' type='int crypto_ahash_final(struct ahash_request * req)'/>
<dec f='linux-4.18.y/crypto/ahash.c' l='369' type='int crypto_ahash_final(struct ahash_request * )'/>
<use f='linux-4.18.y/crypto/ahash.c' l='369' c='crypto_ahash_final'/>
<use f='linux-4.18.y/crypto/ahash.c' l='369' u='a'/>
<use f='linux-4.18.y/crypto/ahash.c' l='369' u='a'/>
<doc f='linux-4.18.y/include/crypto/hash.h' l='424'>/**
 * crypto_ahash_final() - calculate message digest
 * @req: reference to the ahash_request handle that holds all information
 *	 needed to perform the cipher operation
 *
 * Finalize the message digest operation and create the message digest
 * based on all data added to the cipher handle. The message digest is placed
 * into the output buffer registered with the ahash_request handle.
 *
 * Return:
 * 0		if the message digest was successfully calculated;
 * -EINPROGRESS	if data is feeded into hardware (DMA) or queued for later;
 * -EBUSY	if queue is full and request should be resubmitted later;
 * other &lt; 0	if an error occurred
 */</doc>
