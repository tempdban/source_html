<dec f='linux-4.18.y/include/scsi/scsi_transport_fc.h' l='800' type='void fc_host_post_vendor_event(struct Scsi_Host * shost, u32 event_number, u32 data_len, char * data_buf, u64 vendor_id)'/>
<def f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='606' ll='657' type='void fc_host_post_vendor_event(struct Scsi_Host * shost, u32 event_number, u32 data_len, char * data_buf, u64 vendor_id)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='658' type='void fc_host_post_vendor_event(struct Scsi_Host * , u32 , u32 , char * , u64 )'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='658' c='fc_host_post_vendor_event'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='658' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='658' u='a'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='595'>/**
 * fc_host_post_vendor_event - called to post a vendor unique event on an fc_host
 * @shost:		host the event occurred on
 * @event_number:	fc event number obtained from get_fc_event_number()
 * @data_len:		amount, in bytes, of vendor unique data
 * @data_buf:		pointer to vendor unique data
 * @vendor_id:          Vendor id
 *
 * Notes:
 *	This routine assumes no locks are held on entry.
 */</doc>
