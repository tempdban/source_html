<dec f='linux-4.14.y/include/linux/netdevice.h' l='2424' type='void unregister_netdevice_many(struct list_head * head)'/>
<def f='linux-4.14.y/net/core/dev.c' l='8226' ll='8236' type='void unregister_netdevice_many(struct list_head * head)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='8237' type='void unregister_netdevice_many(struct list_head * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='8237' c='unregister_netdevice_many'/>
<use f='linux-4.14.y/net/core/dev.c' l='8237' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='8237' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='8690' u='c' c='default_device_exit_batch'/>
<doc f='linux-4.14.y/net/core/dev.c' l='8219'>/**
 *	unregister_netdevice_many - unregister many devices
 *	@head: list of devices
 *
 *  Note: As most callers use a stack allocated list_head,
 *  we force a list_del() to make sure stack wont be corrupted later.
 */</doc>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='338' u='c' c='__rtnl_kill_links'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2339' u='c' c='rtnl_group_dellink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2354' u='c' c='rtnl_delete_link'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2734' u='c' c='rtnl_newlink'/>
