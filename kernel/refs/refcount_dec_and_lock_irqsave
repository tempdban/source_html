<dec f='linux-4.18.y/include/linux/refcount.h' l='101' type='bool refcount_dec_and_lock_irqsave(refcount_t * r, spinlock_t * lock, unsigned long * flags)'/>
<def f='linux-4.18.y/lib/refcount.c' l='366' ll='379' type='bool refcount_dec_and_lock_irqsave(refcount_t * r, spinlock_t * lock, unsigned long * flags)'/>
<dec f='linux-4.18.y/lib/refcount.c' l='380' type='bool refcount_dec_and_lock_irqsave(refcount_t * , spinlock_t * , unsigned long * )'/>
<use f='linux-4.18.y/lib/refcount.c' l='380' c='refcount_dec_and_lock_irqsave'/>
<use f='linux-4.18.y/lib/refcount.c' l='380' u='a'/>
<use f='linux-4.18.y/lib/refcount.c' l='380' u='a'/>
<doc f='linux-4.18.y/lib/refcount.c' l='353'>/**
 * refcount_dec_and_lock_irqsave - return holding spinlock with disabled
 *                                 interrupts if able to decrement refcount to 0
 * @r: the refcount
 * @lock: the spinlock to be locked
 * @flags: saved IRQ-flags if the is acquired
 *
 * Same as refcount_dec_and_lock() above except that the spinlock is acquired
 * with disabled interupts.
 *
 * Return: true and hold spinlock if able to decrement refcount to 0, false
 *         otherwise
 */</doc>
