<dec f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/e1000.h' l='508' type='void e1000e_write_itr(struct e1000_adapter * adapter, u32 itr)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ethtool.c' l='2039' u='c' c='e1000_set_coalesce'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ethtool.c' l='2041' u='c' c='e1000_set_coalesce'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='2619' u='c' c='e1000_set_itr'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='2632' ll='2645' type='void e1000e_write_itr(struct e1000_adapter * adapter, u32 itr)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='3264' u='c' c='e1000_configure_rx'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='4116' u='c' c='e1000e_reset'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='4123' u='c' c='e1000e_reset'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='5376' u='c' c='e1000_watchdog_task'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='2623'>/**
 * e1000e_write_itr - write the ITR value to the appropriate registers
 * @adapter: address of board private structure
 * @itr: new ITR value to program
 *
 * e1000e_write_itr determines if the adapter is in MSI-X mode
 * and, if so, writes the EITR registers with the ITR value.
 * Otherwise, it writes the ITR value into the ITR register.
 **/</doc>
<dec f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/e1000.h' l='508' type='void e1000e_write_itr(struct e1000_adapter * adapter, u32 itr)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ethtool.c' l='2039' u='c' c='e1000_set_coalesce'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ethtool.c' l='2041' u='c' c='e1000_set_coalesce'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='2619' u='c' c='e1000_set_itr'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='2632' ll='2645' type='void e1000e_write_itr(struct e1000_adapter * adapter, u32 itr)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='3264' u='c' c='e1000_configure_rx'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='4116' u='c' c='e1000e_reset'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='4123' u='c' c='e1000e_reset'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='5376' u='c' c='e1000_watchdog_task'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='2623'>/**
 * e1000e_write_itr - write the ITR value to the appropriate registers
 * @adapter: address of board private structure
 * @itr: new ITR value to program
 *
 * e1000e_write_itr determines if the adapter is in MSI-X mode
 * and, if so, writes the EITR registers with the ITR value.
 * Otherwise, it writes the ITR value into the ITR register.
 **/</doc>
