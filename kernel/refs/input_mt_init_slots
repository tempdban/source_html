<dec f='linux-4.18.y/include/linux/input/mt.h' l='79' type='int input_mt_init_slots(struct input_dev * dev, unsigned int num_slots, unsigned int flags)'/>
<def f='linux-4.18.y/drivers/input/input-mt.c' l='41' ll='103' type='int input_mt_init_slots(struct input_dev * dev, unsigned int num_slots, unsigned int flags)'/>
<dec f='linux-4.18.y/drivers/input/input-mt.c' l='104' type='int input_mt_init_slots(struct input_dev * , unsigned int , unsigned int )'/>
<use f='linux-4.18.y/drivers/input/input-mt.c' l='104' c='input_mt_init_slots'/>
<use f='linux-4.18.y/drivers/input/input-mt.c' l='104' u='a'/>
<use f='linux-4.18.y/drivers/input/input-mt.c' l='104' u='a'/>
<doc f='linux-4.18.y/drivers/input/input-mt.c' l='26'>/**
 * input_mt_init_slots() - initialize MT input slots
 * @dev: input device supporting MT events and finger tracking
 * @num_slots: number of slots used by the device
 * @flags: mt tasks to handle in core
 *
 * This function allocates all necessary memory for MT slot handling
 * in the input device, prepares the ABS_MT_SLOT and
 * ABS_MT_TRACKING_ID events for use and sets up appropriate buffers.
 * Depending on the flags set, it also performs pointer emulation and
 * frame synchronization.
 *
 * May be called repeatedly. Returns -EINVAL if attempting to
 * reinitialize with a different number of slots.
 */</doc>
<use f='linux-4.18.y/drivers/input/mouse/alps.c' l='2993' u='c' c='alps_set_abs_params_semi_mt'/>
<use f='linux-4.18.y/drivers/input/mouse/alps.c' l='3004' u='c' c='alps_set_abs_params_v7'/>
<use f='linux-4.18.y/drivers/input/mouse/alps.c' l='3018' u='c' c='alps_set_abs_params_ss4_v2'/>
<use f='linux-4.18.y/drivers/input/mouse/cypress_ps2.c' l='388' u='c' c='cypress_set_input_params'/>
<use f='linux-4.18.y/drivers/input/mouse/focaltech.c' l='347' u='c' c='focaltech_set_input_params'/>
<use f='linux-4.18.y/drivers/input/mouse/synaptics.c' l='1281' u='c' c='set_input_params'/>
<use f='linux-4.18.y/drivers/input/mouse/synaptics.c' l='1296' u='c' c='set_input_params'/>
