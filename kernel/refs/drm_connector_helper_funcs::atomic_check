<dec f='linux-4.14.y/include/drm/drm_modeset_helper_vtables.h' l='978' type='int (*)(struct drm_connector *, struct drm_connector_state *)'/>
<offset>320</offset>
<doc f='linux-4.14.y/include/drm/drm_modeset_helper_vtables.h' l='947'>/**
	 * @atomic_check:
	 *
	 * This hook is used to validate connector state. This function is
	 * called from &amp;drm_atomic_helper_check_modeset, and is called when
	 * a connector property is set, or a modeset on the crtc is forced.
	 *
	 * Because &amp;drm_atomic_helper_check_modeset may be called multiple times,
	 * this function should handle being called multiple times as well.
	 *
	 * This function is also allowed to inspect any other object&apos;s state and
	 * can add more state objects to the atomic commit if needed. Care must
	 * be taken though to ensure that state check and compute functions for
	 * these added states are all called, and derived state in other objects
	 * all updated. Again the recommendation is to just call check helpers
	 * until a maximal configuration is reached.
	 *
	 * NOTE:
	 *
	 * This function is called in the check phase of an atomic update. The
	 * driver is not allowed to change anything outside of the free-standing
	 * state objects passed-in or assembled in the overall &amp;drm_atomic_state
	 * update tracking structure.
	 *
	 * RETURNS:
	 *
	 * 0 on success, -EINVAL if the state or the transition can&apos;t be
	 * supported, -ENOMEM on memory allocation failure and -EDEADLK if an
	 * attempt to obtain another state object ran into a &amp;drm_modeset_lock
	 * deadlock.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='642' u='r' c='drm_atomic_helper_check_modeset'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='643' u='r' c='drm_atomic_helper_check_modeset'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='684' u='r' c='drm_atomic_helper_check_modeset'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='685' u='r' c='drm_atomic_helper_check_modeset'/>
<dec f='linux-4.14.y/include/drm/drm_modeset_helper_vtables.h' l='978' type='int (*)(struct drm_connector *, struct drm_connector_state *)'/>
<offset>320</offset>
<doc f='linux-4.14.y/include/drm/drm_modeset_helper_vtables.h' l='947'>/**
	 * @atomic_check:
	 *
	 * This hook is used to validate connector state. This function is
	 * called from &amp;drm_atomic_helper_check_modeset, and is called when
	 * a connector property is set, or a modeset on the crtc is forced.
	 *
	 * Because &amp;drm_atomic_helper_check_modeset may be called multiple times,
	 * this function should handle being called multiple times as well.
	 *
	 * This function is also allowed to inspect any other object&apos;s state and
	 * can add more state objects to the atomic commit if needed. Care must
	 * be taken though to ensure that state check and compute functions for
	 * these added states are all called, and derived state in other objects
	 * all updated. Again the recommendation is to just call check helpers
	 * until a maximal configuration is reached.
	 *
	 * NOTE:
	 *
	 * This function is called in the check phase of an atomic update. The
	 * driver is not allowed to change anything outside of the free-standing
	 * state objects passed-in or assembled in the overall &amp;drm_atomic_state
	 * update tracking structure.
	 *
	 * RETURNS:
	 *
	 * 0 on success, -EINVAL if the state or the transition can&apos;t be
	 * supported, -ENOMEM on memory allocation failure and -EDEADLK if an
	 * attempt to obtain another state object ran into a &amp;drm_modeset_lock
	 * deadlock.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='642' u='r' c='drm_atomic_helper_check_modeset'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='643' u='r' c='drm_atomic_helper_check_modeset'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='684' u='r' c='drm_atomic_helper_check_modeset'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='685' u='r' c='drm_atomic_helper_check_modeset'/>
