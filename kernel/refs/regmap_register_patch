<dec f='linux-4.18.y/include/linux/regmap.h' l='974' type='int regmap_register_patch(struct regmap * map, const struct reg_sequence * regs, int num_regs)'/>
<def f='linux-4.18.y/drivers/base/regmap/regmap.c' l='2857' ll='2896' type='int regmap_register_patch(struct regmap * map, const struct reg_sequence * regs, int num_regs)'/>
<dec f='linux-4.18.y/drivers/base/regmap/regmap.c' l='2897' type='int regmap_register_patch(struct regmap * , const struct reg_sequence * , int )'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='2897' c='regmap_register_patch'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='2897' u='a'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='2897' u='a'/>
<doc f='linux-4.18.y/drivers/base/regmap/regmap.c' l='2840'>/**
 * regmap_register_patch - Register and apply register updates to be applied
 *                         on device initialistion
 *
 * @map: Register map to apply updates to.
 * @regs: Values to update.
 * @num_regs: Number of entries in regs.
 *
 * Register a set of register updates to be applied to the device
 * whenever the device registers are synchronised with the cache and
 * apply them immediately.  Typically this is used to apply
 * corrections to be applied to the device defaults on startup, such
 * as the updates some vendors provide to undocumented registers.
 *
 * The caller must ensure that this function cannot be called
 * concurrently with either itself or regcache_sync().
 */</doc>
