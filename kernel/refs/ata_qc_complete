<dec f='linux-4.18.y/include/linux/libata.h' l='1190' type='void ata_qc_complete(struct ata_queued_cmd * qc)'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='1672' u='c' c='ata_exec_internal_sg'/>
<def f='linux-4.18.y/drivers/ata/libata-core.c' l='5244' ll='5337' type='void ata_qc_complete(struct ata_queued_cmd * qc)'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='5388' u='c' c='ata_qc_complete_multiple'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='5467' u='c' c='ata_qc_issue'/>
<dec f='linux-4.18.y/drivers/ata/libata-core.c' l='7311' type='void ata_qc_complete(struct ata_queued_cmd * )'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7311' c='ata_qc_complete'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7311' u='a'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7311' u='a'/>
<doc f='linux-4.18.y/drivers/ata/libata-core.c' l='5229'>/**
 *	ata_qc_complete - Complete an active ATA command
 *	@qc: Command to complete
 *
 *	Indicate to the mid and upper layers that an ATA command has
 *	completed, with either an ok or not-ok status.
 *
 *	Refrain from calling this function multiple times when
 *	successfully completing multiple NCQ commands.
 *	ata_qc_complete_multiple() should be used instead, which will
 *	properly update IRQ expect state.
 *
 *	LOCKING:
 *	spin_lock_irqsave(host lock)
 */</doc>
<use f='linux-4.18.y/drivers/ata/libata-eh.c' l='1012' u='c' c='ata_do_link_abort'/>
<use f='linux-4.18.y/drivers/ata/libata-sff.c' l='983' u='c' c='ata_hsm_qc_complete'/>
<use f='linux-4.18.y/drivers/ata/libata-sff.c' l='989' u='c' c='ata_hsm_qc_complete'/>
<use f='linux-4.18.y/drivers/ata/libata-sff.c' l='996' u='c' c='ata_hsm_qc_complete'/>
<use f='linux-4.18.y/drivers/ata/libata-sff.c' l='998' u='c' c='ata_hsm_qc_complete'/>
<use f='linux-4.18.y/drivers/scsi/libsas/sas_ata.c' l='170' u='c' c='sas_ata_task_done'/>
