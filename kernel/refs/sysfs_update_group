<dec f='linux-4.18.y/include/linux/sysfs.h' l='271' type='int sysfs_update_group(struct kobject * kobj, const struct attribute_group * grp)'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_spi.c' l='1565' u='c' c='spi_target_configure'/>
<def f='linux-4.18.y/fs/sysfs/group.c' l='209' ll='213' type='int sysfs_update_group(struct kobject * kobj, const struct attribute_group * grp)'/>
<dec f='linux-4.18.y/fs/sysfs/group.c' l='214' type='int sysfs_update_group(struct kobject * , const struct attribute_group * )'/>
<use f='linux-4.18.y/fs/sysfs/group.c' l='214' c='sysfs_update_group'/>
<use f='linux-4.18.y/fs/sysfs/group.c' l='214' u='a'/>
<use f='linux-4.18.y/fs/sysfs/group.c' l='214' u='a'/>
<doc f='linux-4.18.y/fs/sysfs/group.c' l='192'>/**
 * sysfs_update_group - given a directory kobject, update an attribute group
 * @kobj:	The kobject to update the group on
 * @grp:	The attribute group to update
 *
 * This function updates an attribute group.  Unlike
 * sysfs_create_group(), it will explicitly not warn or error if any
 * of the attribute files being created already exist.  Furthermore,
 * if the visibility of the files has changed through the is_visible()
 * callback, it will update the permissions and add or remove the
 * relevant files.
 *
 * The primary use for this function is to call it after making a change
 * that affects group visibility.
 *
 * Returns 0 on success or error code on failure.
 */</doc>
