<def f='linux-4.14.y/kernel/trace/trace.h' l='1321' ll='1334' type='void event_trigger_unlock_commit(struct trace_event_file * file, struct ring_buffer * buffer, struct ring_buffer_event * event, void * entry, unsigned long irq_flags, int pc)'/>
<doc f='linux-4.14.y/kernel/trace/trace.h' l='1308'>/**
 * event_trigger_unlock_commit - handle triggers and finish event commit
 * @file: The file pointer assoctiated to the event
 * @buffer: The ring buffer that the event is being written to
 * @event: The event meta data in the ring buffer
 * @entry: The event itself
 * @irq_flags: The state of the interrupts at the start of the event
 * @pc: The state of the preempt count at the start of the event.
 *
 * This is a helper function to handle triggers that require data
 * from the event itself. It also tests the event against filters and
 * if the event is soft disabled and should be discarded.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='2371' u='c' c='trace_event_buffer_commit'/>
<use f='linux-4.14.y/kernel/trace/trace_syscalls.c' l='352' u='c' c='ftrace_syscall_enter'/>
<use f='linux-4.14.y/kernel/trace/trace_syscalls.c' l='398' u='c' c='ftrace_syscall_exit'/>
<use f='linux-4.14.y/kernel/trace/trace_uprobe.c' l='823' u='c' c='__uprobe_trace_func'/>
<def f='linux-4.14.y/kernel/trace/trace.h' l='1321' ll='1334' type='void event_trigger_unlock_commit(struct trace_event_file * file, struct ring_buffer * buffer, struct ring_buffer_event * event, void * entry, unsigned long irq_flags, int pc)'/>
<doc f='linux-4.14.y/kernel/trace/trace.h' l='1308'>/**
 * event_trigger_unlock_commit - handle triggers and finish event commit
 * @file: The file pointer assoctiated to the event
 * @buffer: The ring buffer that the event is being written to
 * @event: The event meta data in the ring buffer
 * @entry: The event itself
 * @irq_flags: The state of the interrupts at the start of the event
 * @pc: The state of the preempt count at the start of the event.
 *
 * This is a helper function to handle triggers that require data
 * from the event itself. It also tests the event against filters and
 * if the event is soft disabled and should be discarded.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='2371' u='c' c='trace_event_buffer_commit'/>
<use f='linux-4.14.y/kernel/trace/trace_syscalls.c' l='352' u='c' c='ftrace_syscall_enter'/>
<use f='linux-4.14.y/kernel/trace/trace_syscalls.c' l='398' u='c' c='ftrace_syscall_exit'/>
<use f='linux-4.14.y/kernel/trace/trace_uprobe.c' l='823' u='c' c='__uprobe_trace_func'/>
