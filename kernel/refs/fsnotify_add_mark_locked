<dec f='linux-4.14.y/include/linux/fsnotify_backend.h' l='352' type='int fsnotify_add_mark_locked(struct fsnotify_mark * mark, struct inode * inode, struct vfsmount * mnt, int allow_dups)'/>
<use f='linux-4.14.y/fs/notify/dnotify/dnotify.c' l='322' u='c' c='fcntl_dirnotify'/>
<use f='linux-4.14.y/fs/notify/fanotify/fanotify_user.c' l='638' u='c' c='fanotify_add_new_mark'/>
<use f='linux-4.14.y/fs/notify/inotify/inotify_user.c' l='567' u='c' c='inotify_new_watch'/>
<def f='linux-4.14.y/fs/notify/mark.c' l='566' ll='606' type='int fsnotify_add_mark_locked(struct fsnotify_mark * mark, struct inode * inode, struct vfsmount * mnt, int allow_dups)'/>
<use f='linux-4.14.y/fs/notify/mark.c' l='615' u='c' c='fsnotify_add_mark'/>
<doc f='linux-4.14.y/fs/notify/mark.c' l='561'>/*
 * Attach an initialized mark to a given group and fs object.
 * These marks may be used for the fsnotify backend to determine which
 * event types should be delivered to which group.
 */</doc>
<use f='linux-4.14.y/kernel/audit_tree.c' l='291' u='c' c='untag_chunk'/>
<use f='linux-4.14.y/kernel/audit_tree.c' l='437' u='c' c='tag_chunk'/>
