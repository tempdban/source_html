<dec f='linux-4.14.y/include/drm/drm_vblank.h' l='154' type='int drm_vblank_init(struct drm_device * dev, unsigned int num_crtcs)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='431' ll='476' type='int drm_vblank_init(struct drm_device * dev, unsigned int num_crtcs)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='477' type='int drm_vblank_init(struct drm_device * , unsigned int )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='477' c='drm_vblank_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='477' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='477' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='419'>/**
 * drm_vblank_init - initialize vblank support
 * @dev: DRM device
 * @num_crtcs: number of CRTCs supported by @dev
 *
 * This function initializes vblank support for @num_crtcs display pipelines.
 * Cleanup is handled by the DRM core, or through calling drm_dev_fini() for
 * drivers with a &amp;drm_driver.release callback.
 *
 * Returns:
 * Zero on success or a negative error code on failure.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='546' u='c' c='vmw_kms_ldu_init_display'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='548' u='c' c='vmw_kms_ldu_init_display'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='750' u='c' c='vmw_kms_sou_init_display'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1602' u='c' c='vmw_kms_stdu_init_display'/>
