<dec f='linux-4.14.y/include/net/switchdev.h' l='171' type='int switchdev_port_obj_add(struct net_device * dev, const struct switchdev_obj * obj)'/>
<use f='linux-4.14.y/net/bridge/br_mdb.c' l='327' u='c' c='__br_mdb_notify'/>
<def f='linux-4.14.y/net/switchdev/switchdev.c' l='459' ll='466' type='int switchdev_port_obj_add(struct net_device * dev, const struct switchdev_obj * obj)'/>
<dec f='linux-4.14.y/net/switchdev/switchdev.c' l='467' type='int switchdev_port_obj_add(struct net_device * , const struct switchdev_obj * )'/>
<use f='linux-4.14.y/net/switchdev/switchdev.c' l='467' c='switchdev_port_obj_add'/>
<use f='linux-4.14.y/net/switchdev/switchdev.c' l='467' u='a'/>
<use f='linux-4.14.y/net/switchdev/switchdev.c' l='467' u='a'/>
<doc f='linux-4.14.y/net/switchdev/switchdev.c' l='445'>/**
 *	switchdev_port_obj_add - Add port object
 *
 *	@dev: port device
 *	@id: object ID
 *	@obj: object to add
 *
 *	Use a 2-phase prepare-commit transaction model to ensure
 *	system is not left in a partially updated state due to
 *	failure from driver/device.
 *
 *	rtnl_lock must be held and must not be in atomic section,
 *	in case SWITCHDEV_F_DEFER flag is not set.
 */</doc>
