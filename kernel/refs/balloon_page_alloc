<dec f='linux-4.18.y/include/linux/balloon_compaction.h' l='71' type='struct page * balloon_page_alloc()'/>
<use f='linux-4.18.y/drivers/virtio/virtio_balloon.c' l='156' u='c' c='fill_balloon'/>
<def f='linux-4.18.y/mm/balloon_compaction.c' l='22' ll='27' type='struct page * balloon_page_alloc()'/>
<dec f='linux-4.18.y/mm/balloon_compaction.c' l='28' type='struct page * balloon_page_alloc()'/>
<use f='linux-4.18.y/mm/balloon_compaction.c' l='28' c='balloon_page_alloc'/>
<use f='linux-4.18.y/mm/balloon_compaction.c' l='28' u='a'/>
<use f='linux-4.18.y/mm/balloon_compaction.c' l='28' u='a'/>
<doc f='linux-4.18.y/mm/balloon_compaction.c' l='13'>/*
 * balloon_page_alloc - allocates a new page for insertion into the balloon
 *			  page list.
 *
 * Driver must call it to properly allocate a new enlisted balloon page.
 * Driver must call balloon_page_enqueue before definitively removing it from
 * the guest system.  This function returns the page address for the recently
 * allocated page or NULL in the case we fail to allocate a new page this turn.
 */</doc>
