<def f='linux-4.14.y/drivers/vfio/pci/vfio_pci_config.c' l='111' ll='118'/>
<size>32</size>
<doc f='linux-4.14.y/drivers/vfio/pci/vfio_pci_config.c' l='104'>/*
 * Read/Write Permission Bits - one bit for each bit in capability
 * Any field can be read if it exists, but what is read depends on
 * whether the field is &apos;virtualized&apos;, or just pass thru to the
 * hardware.  Any virtualized field is also virtualized for writes.
 * Writes are only permitted if they have a 1 bit here.
 */</doc>
<mbr r='perm_bits::virt' o='0' t='u8 *'/>
<mbr r='perm_bits::write' o='64' t='u8 *'/>
<mbr r='perm_bits::readfn' o='128' t='int (*)(struct vfio_pci_device *, int, int, struct perm_bits *, int, __le32 *)'/>
<mbr r='perm_bits::writefn' o='192' t='int (*)(struct vfio_pci_device *, int, int, struct perm_bits *, int, __le32)'/>
<def f='linux-4.14.y/drivers/vfio/pci/vfio_pci_config.c' l='111' ll='118'/>
<size>32</size>
<doc f='linux-4.14.y/drivers/vfio/pci/vfio_pci_config.c' l='104'>/*
 * Read/Write Permission Bits - one bit for each bit in capability
 * Any field can be read if it exists, but what is read depends on
 * whether the field is &apos;virtualized&apos;, or just pass thru to the
 * hardware.  Any virtualized field is also virtualized for writes.
 * Writes are only permitted if they have a 1 bit here.
 */</doc>
<mbr r='perm_bits::virt' o='0' t='u8 *'/>
<mbr r='perm_bits::write' o='64' t='u8 *'/>
<mbr r='perm_bits::readfn' o='128' t='int (*)(struct vfio_pci_device *, int, int, struct perm_bits *, int, __le32 *)'/>
<mbr r='perm_bits::writefn' o='192' t='int (*)(struct vfio_pci_device *, int, int, struct perm_bits *, int, __le32)'/>
