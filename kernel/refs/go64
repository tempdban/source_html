<def f='linux-4.14.y/arch/x86/entry/vdso/vdso2c.h' l='8' macro='1' type='void go64(void * raw_addr, size_t raw_len, void * stripped_addr, size_t stripped_len, FILE * outfile, const char * name)'/>
<use f='linux-4.14.y/arch/x86/entry/vdso/vdso2c.c' l='181' u='c' c='go'/>
<doc f='linux-4.14.y/arch/x86/entry/vdso/vdso2c.h' l='2'>/*
 * This file is included twice from vdso2c.c.  It generates code for 32-bit
 * and 64-bit vDSOs.  We need both for 64-bit builds, since 32-bit vDSOs
 * are built for 32-bit userspace.
 */</doc>
<def f='linux-4.14.y/arch/x86/entry/vdso/vdso2c.h' l='8' macro='1' type='void go64(void * raw_addr, size_t raw_len, void * stripped_addr, size_t stripped_len, FILE * outfile, const char * name)'/>
<use f='linux-4.14.y/arch/x86/entry/vdso/vdso2c.c' l='181' u='c' c='go'/>
<doc f='linux-4.14.y/arch/x86/entry/vdso/vdso2c.h' l='2'>/*
 * This file is included twice from vdso2c.c.  It generates code for 32-bit
 * and 64-bit vDSOs.  We need both for 64-bit builds, since 32-bit vDSOs
 * are built for 32-bit userspace.
 */</doc>
