<dec f='linux-4.18.y/include/linux/usb/hcd.h' l='472' type='void usb_hcd_pci_remove(struct pci_dev * dev)'/>
<def f='linux-4.18.y/drivers/usb/core/hcd-pci.c' l='316' ll='360' type='void usb_hcd_pci_remove(struct pci_dev * dev)'/>
<dec f='linux-4.18.y/drivers/usb/core/hcd-pci.c' l='361' type='void usb_hcd_pci_remove(struct pci_dev * )'/>
<use f='linux-4.18.y/drivers/usb/core/hcd-pci.c' l='361' c='usb_hcd_pci_remove'/>
<use f='linux-4.18.y/drivers/usb/core/hcd-pci.c' l='361' u='a'/>
<use f='linux-4.18.y/drivers/usb/core/hcd-pci.c' l='361' u='a'/>
<doc f='linux-4.18.y/drivers/usb/core/hcd-pci.c' l='305'>/**
 * usb_hcd_pci_remove - shutdown processing for PCI-based HCDs
 * @dev: USB Host Controller being removed
 * Context: !in_interrupt()
 *
 * Reverses the effect of usb_hcd_pci_probe(), first invoking
 * the HCD&apos;s stop() method.  It is always called from a thread
 * context, normally &quot;rmmod&quot;, &quot;apmd&quot;, or something similar.
 *
 * Store this function in the HCD&apos;s struct pci_driver as remove().
 */</doc>
<use f='linux-4.18.y/drivers/usb/host/ehci-pci.c' l='369' u='c' c='ehci_pci_remove'/>
<use f='linux-4.18.y/drivers/usb/host/ohci-pci.c' l='295'/>
<use f='linux-4.18.y/drivers/usb/host/ohci-pci.c' l='295'/>
<use f='linux-4.18.y/drivers/usb/host/xhci-pci.c' l='340' u='c' c='xhci_pci_probe'/>
<use f='linux-4.18.y/drivers/usb/host/xhci-pci.c' l='361' u='c' c='xhci_pci_remove'/>
