<def f='linux-4.14.y/include/uapi/linux/fb.h' l='188' ll='193'/>
<size>12</size>
<doc f='linux-4.14.y/include/uapi/linux/fb.h' l='178'>/* Interpretation of offset for color fields: All offsets are from the right,
 * inside a &quot;pixel&quot; value, which is exactly &apos;bits_per_pixel&apos; wide (means: you
 * can use the offset as right argument to &lt;&lt;). A pixel afterwards is a bit
 * stream and is written to video memory as that unmodified.
 *
 * For pseudocolor: offset and length should be the same for all color
 * components. Offset specifies the position of the least significant bit
 * of the pallette index in a pixel value. Length indicates the number
 * of available palette entries (i.e. # of entries = 1 &lt;&lt; length).
 */</doc>
<mbr r='fb_bitfield::offset' o='0' t='__u32'/>
<mbr r='fb_bitfield::length' o='32' t='__u32'/>
<mbr r='fb_bitfield::msb_right' o='64' t='__u32'/>
<def f='linux-4.14.y/include/uapi/linux/fb.h' l='188' ll='193'/>
<size>12</size>
<doc f='linux-4.14.y/include/uapi/linux/fb.h' l='178'>/* Interpretation of offset for color fields: All offsets are from the right,
 * inside a &quot;pixel&quot; value, which is exactly &apos;bits_per_pixel&apos; wide (means: you
 * can use the offset as right argument to &lt;&lt;). A pixel afterwards is a bit
 * stream and is written to video memory as that unmodified.
 *
 * For pseudocolor: offset and length should be the same for all color
 * components. Offset specifies the position of the least significant bit
 * of the pallette index in a pixel value. Length indicates the number
 * of available palette entries (i.e. # of entries = 1 &lt;&lt; length).
 */</doc>
<mbr r='fb_bitfield::offset' o='0' t='__u32'/>
<mbr r='fb_bitfield::length' o='32' t='__u32'/>
<mbr r='fb_bitfield::msb_right' o='64' t='__u32'/>
