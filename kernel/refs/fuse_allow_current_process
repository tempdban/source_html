<dec f='linux-4.14.y/fs/fuse/fuse_i.h' l='901' type='int fuse_allow_current_process(struct fuse_conn * fc)'/>
<doc f='linux-4.14.y/fs/fuse/fuse_i.h' l='898'>/**
 * Is current process allowed to perform filesystem operation?
 */</doc>
<def f='linux-4.14.y/fs/fuse/dir.c' l='1028' ll='1045' type='int fuse_allow_current_process(struct fuse_conn * fc)'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='1102' u='c' c='fuse_permission'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='1736' u='c' c='fuse_setattr'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='1794' u='c' c='fuse_getattr'/>
<doc f='linux-4.14.y/fs/fuse/dir.c' l='1015'>/*
 * Calling into a user-controlled filesystem gives the filesystem
 * daemon ptrace-like capabilities over the current process.  This
 * means, that the filesystem daemon is able to record the exact
 * filesystem operations performed, and can also control the behavior
 * of the requester process in otherwise impossible ways.  For example
 * it can delay the operation for arbitrary length of time allowing
 * DoS against the requester.
 *
 * For this reason only those processes can call into the filesystem,
 * for which the owner of the mount has ptrace privilege.  This
 * excludes processes started by other users, suid or sgid processes.
 */</doc>
<use f='linux-4.14.y/fs/fuse/file.c' l='2682' u='c' c='fuse_ioctl_common'/>
<use f='linux-4.14.y/fs/fuse/inode.c' l='427' u='c' c='fuse_statfs'/>
<use f='linux-4.14.y/fs/fuse/xattr.c' l='116' u='c' c='fuse_listxattr'/>
