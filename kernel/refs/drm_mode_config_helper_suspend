<dec f='linux-4.18.y/include/drm/drm_modeset_helper.h' l='37' type='int drm_mode_config_helper_suspend(struct drm_device * dev)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='178' ll='197' type='int drm_mode_config_helper_suspend(struct drm_device * dev)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='198' type='int drm_mode_config_helper_suspend(struct drm_device * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='198' c='drm_mode_config_helper_suspend'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='198' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='198' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='163'>/**
 * drm_mode_config_helper_suspend - Modeset suspend helper
 * @dev: DRM device
 *
 * This helper function takes care of suspending the modeset side. It disables
 * output polling if initialized, suspends fbdev if used and finally calls
 * drm_atomic_helper_suspend().
 * If suspending fails, fbdev and polling is re-enabled.
 *
 * Returns:
 * Zero on success, negative error code on error.
 *
 * See also:
 * drm_kms_helper_poll_disable() and drm_fb_helper_set_suspend_unlocked().
 */</doc>
