<dec f='linux-4.18.y/fs/internal.h' l='82' type='int __mnt_want_write_file(struct file * )'/>
<use f='linux-4.18.y/fs/inode.c' l='1867' u='c' c='file_update_time'/>
<def f='linux-4.18.y/fs/namespace.c' l='425' ll='431' type='int __mnt_want_write_file(struct file * file)'/>
<use f='linux-4.18.y/fs/namespace.c' l='450' u='c' c='mnt_want_write_file_path'/>
<use f='linux-4.18.y/fs/namespace.c' l='498' u='c' c='mnt_want_write_file'/>
<doc f='linux-4.18.y/fs/namespace.c' l='418'>/**
 * __mnt_want_write_file - get write access to a file&apos;s mount
 * @file: the file who&apos;s mount on which to take a write
 *
 * This is like __mnt_want_write, but it takes a file and can
 * do some optimisations if the file is open for write already
 */</doc>
