<dec f='linux-4.18.y/include/linux/netdevice.h' l='3850' type='int register_netdev(struct net_device * dev)'/>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-main.c' l='403' u='c' c='xgbe_config_netdev'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e100.c' l='2934' u='c' c='e100_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000/e1000_main.c' l='1200' u='c' c='e1000_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='7324' u='c' c='e1000_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='12681' u='c' c='i40e_vsi_setup'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_main.c' l='3564' u='c' c='i40evf_init_task'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='3265' u='c' c='igb_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igbvf/netdev.c' l='2875' u='c' c='igbvf_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='10618' u='c' c='ixgbe_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='4667' u='c' c='ixgbevf_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/realtek/8139cp.c' l='2007' u='c' c='cp_init_one'/>
<use f='linux-4.18.y/drivers/net/ethernet/realtek/8139too.c' l='1039' u='c' c='rtl8139_init_one'/>
<use f='linux-4.18.y/drivers/net/loopback.c' l='214' u='c' c='loopback_net_init'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='755' u='c' c='net_failover_create'/>
<use f='linux-4.18.y/drivers/net/virtio_net.c' l='2948' u='c' c='virtnet_probe'/>
<use f='linux-4.18.y/drivers/net/vmxnet3/vmxnet3_drv.c' l='3492' u='c' c='vmxnet3_probe_device'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='793' u='c' c='gether_setup_name'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='866' u='c' c='gether_register_netdev'/>
<use f='linux-4.18.y/net/bridge/br_if.c' l='399' u='c' c='br_add_bridge'/>
<def f='linux-4.18.y/net/core/dev.c' l='8111' ll='8120' type='int register_netdev(struct net_device * dev)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='8121' type='int register_netdev(struct net_device * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='8121' c='register_netdev'/>
<use f='linux-4.18.y/net/core/dev.c' l='8121' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='8121' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='8098'>/**
 *	register_netdev	- register a network device
 *	@dev: device to register
 *
 *	Take a completed network device structure and add it to the kernel
 *	interfaces. A %NETDEV_REGISTER message is sent to the netdev notifier
 *	chain. 0 is returned on success. A negative errno code is returned
 *	on a failure to set up the device, or if the name is a duplicate.
 *
 *	This is a wrapper around register_netdevice that takes the rtnl semaphore
 *	and expands the device name if you passed a format string to
 *	alloc_netdev.
 */</doc>
