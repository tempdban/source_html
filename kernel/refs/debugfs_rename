<dec f='linux-4.14.y/include/linux/debugfs.h' l='120' type='struct dentry * debugfs_rename(struct dentry * old_dir, struct dentry * old_dentry, struct dentry * new_dir, const char * new_name)'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='562' u='c' c='xgbe_debugfs_rename'/>
<def f='linux-4.14.y/fs/debugfs/inode.c' l='762' ll='803' type='struct dentry * debugfs_rename(struct dentry * old_dir, struct dentry * old_dentry, struct dentry * new_dir, const char * new_name)'/>
<dec f='linux-4.14.y/fs/debugfs/inode.c' l='804' type='struct dentry * debugfs_rename(struct dentry * , struct dentry * , struct dentry * , const char * )'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='804' c='debugfs_rename'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='804' u='a'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='804' u='a'/>
<doc f='linux-4.14.y/fs/debugfs/inode.c' l='743'>/**
 * debugfs_rename - rename a file/directory in the debugfs filesystem
 * @old_dir: a pointer to the parent dentry for the renamed object. This
 *          should be a directory dentry.
 * @old_dentry: dentry of an object to be renamed.
 * @new_dir: a pointer to the parent dentry where the object should be
 *          moved. This should be a directory dentry.
 * @new_name: a pointer to a string containing the target name.
 *
 * This function renames a file/directory in debugfs.  The target must not
 * exist for rename to succeed.
 *
 * This function will return a pointer to old_dentry (which is updated to
 * reflect renaming) if it succeeds. If an error occurs, %NULL will be
 * returned.
 *
 * If debugfs is not enabled in the kernel, the value -%ENODEV will be
 * returned.
 */</doc>
