<dec f='linux-4.14.y/include/net/tcp.h' l='411' type='void tcp_enter_loss(struct sock * sk)'/>
<def f='linux-4.14.y/net/ipv4/tcp_input.c' l='1947' ll='2023' type='void tcp_enter_loss(struct sock * sk)'/>
<doc f='linux-4.14.y/net/ipv4/tcp_input.c' l='1943'>/* Enter Loss state. If we detect SACK reneging, forget all SACK information
 * and reset tags completely, otherwise preserve SACKs. If receiver
 * dropped its ofo queue, we will know this due to reneging detection.
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp_timer.c' l='460' u='c' c='tcp_retransmit_timer'/>
<use f='linux-4.14.y/net/ipv4/tcp_timer.c' l='491' u='c' c='tcp_retransmit_timer'/>
<dec f='linux-4.14.y/include/net/tcp.h' l='411' type='void tcp_enter_loss(struct sock * sk)'/>
<def f='linux-4.14.y/net/ipv4/tcp_input.c' l='1947' ll='2023' type='void tcp_enter_loss(struct sock * sk)'/>
<doc f='linux-4.14.y/net/ipv4/tcp_input.c' l='1943'>/* Enter Loss state. If we detect SACK reneging, forget all SACK information
 * and reset tags completely, otherwise preserve SACKs. If receiver
 * dropped its ofo queue, we will know this due to reneging detection.
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp_timer.c' l='460' u='c' c='tcp_retransmit_timer'/>
<use f='linux-4.14.y/net/ipv4/tcp_timer.c' l='491' u='c' c='tcp_retransmit_timer'/>
