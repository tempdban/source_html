<dec f='linux-4.14.y/include/linux/string_helpers.h' l='53' type='int string_escape_mem(const char * src, size_t isz, char * dst, size_t osz, unsigned int flags, const char * only)'/>
<use f='linux-4.14.y/include/linux/string_helpers.h' l='59' u='c' c='string_escape_mem_any_np'/>
<use f='linux-4.14.y/include/linux/string_helpers.h' l='65' u='c' c='string_escape_str'/>
<def f='linux-4.14.y/lib/string_helpers.c' l='493' ll='539' type='int string_escape_mem(const char * src, size_t isz, char * dst, size_t osz, unsigned int flags, const char * only)'/>
<dec f='linux-4.14.y/lib/string_helpers.c' l='540' type='int string_escape_mem(const char * , size_t , char * , size_t , unsigned int , const char * )'/>
<use f='linux-4.14.y/lib/string_helpers.c' l='540' c='string_escape_mem'/>
<use f='linux-4.14.y/lib/string_helpers.c' l='540' u='a'/>
<use f='linux-4.14.y/lib/string_helpers.c' l='540' u='a'/>
<use f='linux-4.14.y/lib/string_helpers.c' l='557' u='c' c='kstrdup_quotable'/>
<use f='linux-4.14.y/lib/string_helpers.c' l='562' u='c' c='kstrdup_quotable'/>
<doc f='linux-4.14.y/lib/string_helpers.c' l='437'>/**
 * string_escape_mem - quote characters in the given memory buffer
 * @src:	source buffer (unescaped)
 * @isz:	source buffer size
 * @dst:	destination buffer (escaped)
 * @osz:	destination buffer size
 * @flags:	combination of the flags (bitwise OR):
 *	%ESCAPE_SPACE: (special white space, not space itself)
 *		&apos;\f&apos; - form feed
 *		&apos;\n&apos; - new line
 *		&apos;\r&apos; - carriage return
 *		&apos;\t&apos; - horizontal tab
 *		&apos;\v&apos; - vertical tab
 *	%ESCAPE_SPECIAL:
 *		&apos;\\&apos; - backslash
 *		&apos;\a&apos; - alert (BEL)
 *		&apos;\e&apos; - escape
 *	%ESCAPE_NULL:
 *		&apos;\0&apos; - null
 *	%ESCAPE_OCTAL:
 *		&apos;\NNN&apos; - byte with octal value NNN (3 digits)
 *	%ESCAPE_ANY:
 *		all previous together
 *	%ESCAPE_NP:
 *		escape only non-printable characters (checked by isprint)
 *	%ESCAPE_ANY_NP:
 *		all previous together
 *	%ESCAPE_HEX:
 *		&apos;\xHH&apos; - byte with hexadecimal value HH (2 digits)
 * @only:	NULL-terminated string containing characters used to limit
 *		the selected escape class. If characters are included in @only
 *		that would not normally be escaped by the classes selected
 *		in @flags, they will be copied to @dst unescaped.
 *
 * Description:
 * The process of escaping byte buffer includes several parts. They are applied
 * in the following sequence.
 *	1. The character is matched to the printable class, if asked, and in
 *	   case of match it passes through to the output.
 *	2. The character is not matched to the one from @only string and thus
 *	   must go as-is to the output.
 *	3. The character is checked if it falls into the class given by @flags.
 *	   %ESCAPE_OCTAL and %ESCAPE_HEX are going last since they cover any
 *	   character. Note that they actually can&apos;t go together, otherwise
 *	   %ESCAPE_HEX will be ignored.
 *
 * Caller must provide valid source and destination pointers. Be aware that
 * destination buffer will not be NULL-terminated, thus caller have to append
 * it if needs.
 *
 * Return:
 * The total size of the escaped output that would be generated for
 * the given input and flags. To check whether the output was
 * truncated, compare the return value to osz. There is room left in
 * dst for a &apos;\0&apos; terminator if and only if ret &lt; osz.
 */</doc>
<use f='linux-4.14.y/lib/vsprintf.c' l='1300' u='c' c='escaped_string'/>
