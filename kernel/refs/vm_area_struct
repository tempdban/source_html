<def f='linux-4.14.y/include/linux/mm_types.h' l='278' ll='340'/>
<size>184</size>
<doc f='linux-4.14.y/include/linux/mm_types.h' l='272'>/*
 * This struct defines a memory VMM memory area. There is one of these
 * per VM-area/task.  A VM area is any part of the process virtual memory
 * space that has a special rule for the page-fault handlers (ie a shared
 * library, the executable area etc).
 */</doc>
<mbr r='vm_area_struct::vm_start' o='0' t='unsigned long'/>
<mbr r='vm_area_struct::vm_end' o='64' t='unsigned long'/>
<mbr r='vm_area_struct::vm_next' o='128' t='struct vm_area_struct *'/>
<mbr r='vm_area_struct::vm_prev' o='192' t='struct vm_area_struct *'/>
<mbr r='vm_area_struct::vm_rb' o='256' t='struct rb_node'/>
<mbr r='vm_area_struct::rb_subtree_gap' o='448' t='unsigned long'/>
<mbr r='vm_area_struct::vm_mm' o='512' t='struct mm_struct *'/>
<mbr r='vm_area_struct::vm_page_prot' o='576' t='pgprot_t'/>
<mbr r='vm_area_struct::vm_flags' o='640' t='unsigned long'/>
<mbr r='vm_area_struct::shared' o='704' t='struct (anonymous struct at /home/tempdban/kernel/stable/./include/linux/mm_types.h:308:2)'/>
<mbr r='vm_area_struct::anon_vma_chain' o='960' t='struct list_head'/>
<mbr r='vm_area_struct::anon_vma' o='1088' t='struct anon_vma *'/>
<mbr r='vm_area_struct::vm_ops' o='1152' t='const struct vm_operations_struct *'/>
<mbr r='vm_area_struct::vm_pgoff' o='1216' t='unsigned long'/>
<mbr r='vm_area_struct::vm_file' o='1280' t='struct file *'/>
<mbr r='vm_area_struct::vm_private_data' o='1344' t='void *'/>
<mbr r='vm_area_struct::swap_readahead_info' o='1408' t='atomic_long_t'/>
<mbr r='vm_area_struct::vm_userfaultfd_ctx' o='1472' t='struct vm_userfaultfd_ctx'/>
<def f='linux-4.14.y/include/linux/mm_types.h' l='278' ll='340'/>
<size>184</size>
<doc f='linux-4.14.y/include/linux/mm_types.h' l='272'>/*
 * This struct defines a memory VMM memory area. There is one of these
 * per VM-area/task.  A VM area is any part of the process virtual memory
 * space that has a special rule for the page-fault handlers (ie a shared
 * library, the executable area etc).
 */</doc>
<mbr r='vm_area_struct::vm_start' o='0' t='unsigned long'/>
<mbr r='vm_area_struct::vm_end' o='64' t='unsigned long'/>
<mbr r='vm_area_struct::vm_next' o='128' t='struct vm_area_struct *'/>
<mbr r='vm_area_struct::vm_prev' o='192' t='struct vm_area_struct *'/>
<mbr r='vm_area_struct::vm_rb' o='256' t='struct rb_node'/>
<mbr r='vm_area_struct::rb_subtree_gap' o='448' t='unsigned long'/>
<mbr r='vm_area_struct::vm_mm' o='512' t='struct mm_struct *'/>
<mbr r='vm_area_struct::vm_page_prot' o='576' t='pgprot_t'/>
<mbr r='vm_area_struct::vm_flags' o='640' t='unsigned long'/>
<mbr r='vm_area_struct::shared' o='704' t='struct (anonymous struct at /home/tempdban/kernel/stable/./include/linux/mm_types.h:308:2)'/>
<mbr r='vm_area_struct::anon_vma_chain' o='960' t='struct list_head'/>
<mbr r='vm_area_struct::anon_vma' o='1088' t='struct anon_vma *'/>
<mbr r='vm_area_struct::vm_ops' o='1152' t='const struct vm_operations_struct *'/>
<mbr r='vm_area_struct::vm_pgoff' o='1216' t='unsigned long'/>
<mbr r='vm_area_struct::vm_file' o='1280' t='struct file *'/>
<mbr r='vm_area_struct::vm_private_data' o='1344' t='void *'/>
<mbr r='vm_area_struct::swap_readahead_info' o='1408' t='atomic_long_t'/>
<mbr r='vm_area_struct::vm_userfaultfd_ctx' o='1472' t='struct vm_userfaultfd_ctx'/>
