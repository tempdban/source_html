<dec f='linux-4.14.y/arch/x86/include/asm/signal.h' l='38' type='void do_signal(struct pt_regs * regs)'/>
<use f='linux-4.14.y/arch/x86/entry/common.c' l='159' u='c' c='exit_to_usermode_loop'/>
<def f='linux-4.14.y/arch/x86/kernel/signal.c' l='805' ll='838' type='void do_signal(struct pt_regs * regs)'/>
<doc f='linux-4.14.y/arch/x86/kernel/signal.c' l='800'>/*
 * Note that &apos;init&apos; is a special process: it doesn&apos;t get signals it doesn&apos;t
 * want to handle. Thus you cannot kill init even with a SIGKILL even by
 * mistake.
 */</doc>
<dec f='linux-4.14.y/arch/x86/include/asm/signal.h' l='38' type='void do_signal(struct pt_regs * regs)'/>
<use f='linux-4.14.y/arch/x86/entry/common.c' l='159' u='c' c='exit_to_usermode_loop'/>
<def f='linux-4.14.y/arch/x86/kernel/signal.c' l='805' ll='838' type='void do_signal(struct pt_regs * regs)'/>
<doc f='linux-4.14.y/arch/x86/kernel/signal.c' l='800'>/*
 * Note that &apos;init&apos; is a special process: it doesn&apos;t get signals it doesn&apos;t
 * want to handle. Thus you cannot kill init even with a SIGKILL even by
 * mistake.
 */</doc>
