<dec f='linux-4.18.y/include/linux/regmap.h' l='1026' type='int regmap_fields_update_bits_base(struct regmap_field * field, unsigned int id, unsigned int mask, unsigned int val, bool * change, bool async, bool force)'/>
<def f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1930' ll='1943' type='int regmap_fields_update_bits_base(struct regmap_field * field, unsigned int id, unsigned int mask, unsigned int val, bool * change, bool async, bool force)'/>
<dec f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1944' type='int regmap_fields_update_bits_base(struct regmap_field * , unsigned int , unsigned int , unsigned int , bool * , bool , bool )'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1944' c='regmap_fields_update_bits_base'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1944' u='a'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1944' u='a'/>
<doc f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1915'>/**
 * regmap_fields_update_bits_base() - Perform a read/modify/write cycle a
 *                                    register field with port ID
 *
 * @field: Register field to write to
 * @id: port ID
 * @mask: Bitmask to change
 * @val: Value to be written
 * @change: Boolean indicating if a write was done
 * @async: Boolean indicating asynchronously
 * @force: Boolean indicating use force update
 *
 * A value of zero will be returned on success, a negative errno will
 * be returned in error cases.
 */</doc>
