<dec f='linux-4.14.y/include/drm/drm_crtc_helper.h' l='73' type='void drm_kms_helper_poll_init(struct drm_device * dev)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='735' ll='741' type='void drm_kms_helper_poll_init(struct drm_device * dev)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='742' type='void drm_kms_helper_poll_init(struct drm_device * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='742' c='drm_kms_helper_poll_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='742' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='742' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='716'>/**
 * drm_kms_helper_poll_init - initialize and enable output polling
 * @dev: drm_device
 *
 * This function intializes and then also enables output polling support for
 * @dev. Drivers which do not have reliable hotplug support in hardware can use
 * this helper infrastructure to regularly poll such connectors for changes in
 * their connection state.
 *
 * Drivers can control which connectors are polled by setting the
 * DRM_CONNECTOR_POLL_CONNECT and DRM_CONNECTOR_POLL_DISCONNECT flags. On
 * connectors where probing live outputs can result in visual distortion drivers
 * should not set the DRM_CONNECTOR_POLL_DISCONNECT flag to avoid this.
 * Connectors which have no flag or only DRM_CONNECTOR_POLL_HPD set are
 * completely ignored by the polling logic.
 *
 * Note that a connector can be both polled and probed from the hotplug handler,
 * in case the hotplug interrupt is known to be unreliable.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.c' l='89' u='c' c='qxl_pci_probe'/>
