<dec f='linux-4.14.y/include/linux/cpumask.h' l='202' type='int cpumask_any_but(const struct cpumask * mask, unsigned int cpu)'/>
<use f='linux-4.14.y/arch/x86/events/intel/cstate.c' l='382' u='c' c='cstate_cpu_exit'/>
<use f='linux-4.14.y/arch/x86/events/intel/cstate.c' l='393' u='c' c='cstate_cpu_exit'/>
<use f='linux-4.14.y/arch/x86/events/intel/rapl.c' l='580' u='c' c='rapl_cpu_offline'/>
<use f='linux-4.14.y/arch/x86/events/intel/uncore.c' l='1099' u='c' c='uncore_event_cpu_offline'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc.c' l='1374' u='c' c='calibrate_delay_is_known'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc_sync.c' l='129' u='c' c='tsc_store_and_check_tsc_adjust'/>
<use f='linux-4.14.y/arch/x86/mm/tlb.c' l='637' u='c' c='flush_tlb_mm_range'/>
<use f='linux-4.14.y/arch/x86/mm/tlb.c' l='698' u='c' c='arch_tlbbatch_flush'/>
<use f='linux-4.14.y/kernel/irq/cpuhotplug.c' l='37' u='c' c='irq_needs_fixup'/>
<def f='linux-4.14.y/lib/cpumask.c' l='51' ll='60' type='int cpumask_any_but(const struct cpumask * mask, unsigned int cpu)'/>
<dec f='linux-4.14.y/lib/cpumask.c' l='61' type='int cpumask_any_but(const struct cpumask * , unsigned int )'/>
<use f='linux-4.14.y/lib/cpumask.c' l='61' c='cpumask_any_but'/>
<use f='linux-4.14.y/lib/cpumask.c' l='61' u='a'/>
<use f='linux-4.14.y/lib/cpumask.c' l='61' u='a'/>
<doc f='linux-4.14.y/lib/cpumask.c' l='43'>/**
 * cpumask_any_but - return a &quot;random&quot; in a cpumask, but not this one.
 * @mask: the cpumask to search
 * @cpu: the cpu to ignore.
 *
 * Often used to find any cpu but smp_processor_id() in a mask.
 * Returns &gt;= nr_cpu_ids if no cpus set.
 */</doc>
<use f='linux-4.14.y/mm/rmap.c' l='637' u='c' c='should_defer_flush'/>
<dec f='linux-4.14.y/include/linux/cpumask.h' l='202' type='int cpumask_any_but(const struct cpumask * mask, unsigned int cpu)'/>
<use f='linux-4.14.y/arch/x86/events/intel/cstate.c' l='382' u='c' c='cstate_cpu_exit'/>
<use f='linux-4.14.y/arch/x86/events/intel/cstate.c' l='393' u='c' c='cstate_cpu_exit'/>
<use f='linux-4.14.y/arch/x86/events/intel/rapl.c' l='580' u='c' c='rapl_cpu_offline'/>
<use f='linux-4.14.y/arch/x86/events/intel/uncore.c' l='1099' u='c' c='uncore_event_cpu_offline'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc.c' l='1374' u='c' c='calibrate_delay_is_known'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc_sync.c' l='129' u='c' c='tsc_store_and_check_tsc_adjust'/>
<use f='linux-4.14.y/arch/x86/mm/tlb.c' l='637' u='c' c='flush_tlb_mm_range'/>
<use f='linux-4.14.y/arch/x86/mm/tlb.c' l='698' u='c' c='arch_tlbbatch_flush'/>
<use f='linux-4.14.y/kernel/irq/cpuhotplug.c' l='37' u='c' c='irq_needs_fixup'/>
<def f='linux-4.14.y/lib/cpumask.c' l='51' ll='60' type='int cpumask_any_but(const struct cpumask * mask, unsigned int cpu)'/>
<dec f='linux-4.14.y/lib/cpumask.c' l='61' type='int cpumask_any_but(const struct cpumask * , unsigned int )'/>
<use f='linux-4.14.y/lib/cpumask.c' l='61' c='cpumask_any_but'/>
<use f='linux-4.14.y/lib/cpumask.c' l='61' u='a'/>
<use f='linux-4.14.y/lib/cpumask.c' l='61' u='a'/>
<doc f='linux-4.14.y/lib/cpumask.c' l='43'>/**
 * cpumask_any_but - return a &quot;random&quot; in a cpumask, but not this one.
 * @mask: the cpumask to search
 * @cpu: the cpu to ignore.
 *
 * Often used to find any cpu but smp_processor_id() in a mask.
 * Returns &gt;= nr_cpu_ids if no cpus set.
 */</doc>
<use f='linux-4.14.y/mm/rmap.c' l='637' u='c' c='should_defer_flush'/>
