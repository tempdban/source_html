<dec f='linux-4.18.y/include/linux/swait.h' l='162' type='void swake_up_locked(struct swait_queue_head * q)'/>
<def f='linux-4.18.y/kernel/sched/swait.c' l='22' ll='32' type='void swake_up_locked(struct swait_queue_head * q)'/>
<dec f='linux-4.18.y/kernel/sched/swait.c' l='33' type='void swake_up_locked(struct swait_queue_head * )'/>
<use f='linux-4.18.y/kernel/sched/swait.c' l='33' c='swake_up_locked'/>
<use f='linux-4.18.y/kernel/sched/swait.c' l='33' u='a'/>
<use f='linux-4.18.y/kernel/sched/swait.c' l='33' u='a'/>
<use f='linux-4.18.y/kernel/sched/swait.c' l='40' u='c' c='swake_up'/>
<doc f='linux-4.18.y/kernel/sched/swait.c' l='16'>/*
 * The thing about the wake_up_state() return value; I think we can ignore it.
 *
 * If for some reason it would return 0, that means the previously waiting
 * task is already running, so it will observe condition true (or has already).
 */</doc>
