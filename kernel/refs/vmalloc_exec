<dec f='linux-4.14.y/include/linux/vmalloc.h' l='76' type='void * vmalloc_exec(unsigned long size)'/>
<use f='linux-4.14.y/kernel/module.c' l='2729' u='c' c='module_alloc'/>
<def f='linux-4.14.y/mm/vmalloc.c' l='1939' ll='1943' type='void * vmalloc_exec(unsigned long size)'/>
<doc f='linux-4.14.y/mm/vmalloc.c' l='1927'>/**
 *	vmalloc_exec  -  allocate virtually contiguous, executable memory
 *	@size:		allocation size
 *
 *	Kernel-internal function to allocate enough pages to cover @size
 *	the page level allocator and map them into contiguous and
 *	executable kernel virtual space.
 *
 *	For tight control over page level allocator and protection flags
 *	use __vmalloc() instead.
 */</doc>
<dec f='linux-4.14.y/include/linux/vmalloc.h' l='76' type='void * vmalloc_exec(unsigned long size)'/>
<use f='linux-4.14.y/kernel/module.c' l='2729' u='c' c='module_alloc'/>
<def f='linux-4.14.y/mm/vmalloc.c' l='1939' ll='1943' type='void * vmalloc_exec(unsigned long size)'/>
<doc f='linux-4.14.y/mm/vmalloc.c' l='1927'>/**
 *	vmalloc_exec  -  allocate virtually contiguous, executable memory
 *	@size:		allocation size
 *
 *	Kernel-internal function to allocate enough pages to cover @size
 *	the page level allocator and map them into contiguous and
 *	executable kernel virtual space.
 *
 *	For tight control over page level allocator and protection flags
 *	use __vmalloc() instead.
 */</doc>
