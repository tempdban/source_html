<dec f='linux-4.18.y/include/scsi/scsi_transport_spi.h' l='152' type='void spi_schedule_dv_device(struct scsi_device * )'/>
<def f='linux-4.18.y/drivers/scsi/scsi_transport_spi.c' l='1095' ll='1120' type='void spi_schedule_dv_device(struct scsi_device * sdev)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi_transport_spi.c' l='1121' type='void spi_schedule_dv_device(struct scsi_device * )'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_spi.c' l='1121' c='spi_schedule_dv_device'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_spi.c' l='1121' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_spi.c' l='1121' u='a'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_transport_spi.c' l='1086'>/**
 *	spi_schedule_dv_device - schedule domain validation to occur on the device
 *	@sdev:	The device to validate
 *
 *	Identical to spi_dv_device() above, except that the DV will be
 *	scheduled to occur in a workqueue later.  All memory allocations
 *	are atomic, so may be called from any context including those holding
 *	SCSI locks.
 */</doc>
