<dec f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='1128' type='int vmw_cmdbuf_res_add(struct vmw_cmdbuf_res_manager * man, enum vmw_cmdbuf_res_type res_type, u32 user_key, struct vmw_resource * res, struct list_head * list)'/>
<def f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_cmdbuf_res.c' l='198' ll='223' type='int vmw_cmdbuf_res_add(struct vmw_cmdbuf_res_manager * man, enum vmw_cmdbuf_res_type res_type, u32 user_key, struct vmw_resource * res, struct list_head * list)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_cmdbuf_res.c' l='185'>/**
 * vmw_cmdbuf_res_add - Stage a command buffer managed resource for addition.
 *
 * @man: Pointer to the command buffer resource manager.
 * @res_type: The resource type.
 * @user_key: The user-space id of the resource.
 * @res: Valid (refcount != 0) pointer to a struct vmw_resource.
 * @list: The staging list.
 *
 * This function allocates a struct vmw_cmdbuf_res entry and adds the
 * resource to the hash table of the manager identified by @man. The
 * entry is then put on the staging list identified by @list.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_shader.c' l='652' u='c' c='vmw_dx_shader_add'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_shader.c' l='1029' u='c' c='vmw_compat_shader_add'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_so.c' l='382' u='c' c='vmw_view_add'/>
