<dec f='linux-4.14.y/include/linux/cpuidle.h' l='139' type='int cpuidle_register_driver(struct cpuidle_driver * drv)'/>
<use f='linux-4.14.y/drivers/acpi/processor_idle.c' l='1449' u='c' c='acpi_processor_power_init'/>
<use f='linux-4.14.y/drivers/cpuidle/cpuidle.c' l='602' u='c' c='cpuidle_register'/>
<def f='linux-4.14.y/drivers/cpuidle/driver.c' l='255' ll='264' type='int cpuidle_register_driver(struct cpuidle_driver * drv)'/>
<dec f='linux-4.14.y/drivers/cpuidle/driver.c' l='265' type='int cpuidle_register_driver(struct cpuidle_driver * )'/>
<use f='linux-4.14.y/drivers/cpuidle/driver.c' l='265' c='cpuidle_register_driver'/>
<use f='linux-4.14.y/drivers/cpuidle/driver.c' l='265' u='a'/>
<use f='linux-4.14.y/drivers/cpuidle/driver.c' l='265' u='a'/>
<doc f='linux-4.14.y/drivers/cpuidle/driver.c' l='245'>/**
 * cpuidle_register_driver - registers a driver
 * @drv: a pointer to a valid struct cpuidle_driver
 *
 * Register the driver under a lock to prevent concurrent attempts to
 * [un]register the driver from occuring at the same time.
 *
 * Returns 0 on success, a negative error code (returned by
 * __cpuidle_register_driver()) otherwise.
 */</doc>
