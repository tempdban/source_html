<def f='linux-4.14.y/arch/x86/include/asm/user_64.h' l='51' ll='64'/>
<size>512</size>
<doc f='linux-4.14.y/arch/x86/include/asm/user_64.h' l='48'>/* This matches the 64bit FXSAVE format as defined by AMD. It is the same
   as the 32bit format defined by Intel, except that the selector:offset pairs
   for data and eip are replaced with flat 64bit pointers. */</doc>
<mbr r='user_i387_struct::cwd' o='0' t='unsigned short'/>
<mbr r='user_i387_struct::swd' o='16' t='unsigned short'/>
<mbr r='user_i387_struct::twd' o='32' t='unsigned short'/>
<mbr r='user_i387_struct::fop' o='48' t='unsigned short'/>
<mbr r='user_i387_struct::rip' o='64' t='__u64'/>
<mbr r='user_i387_struct::rdp' o='128' t='__u64'/>
<mbr r='user_i387_struct::mxcsr' o='192' t='__u32'/>
<mbr r='user_i387_struct::mxcsr_mask' o='224' t='__u32'/>
<mbr r='user_i387_struct::st_space' o='256' t='__u32 [32]'/>
<mbr r='user_i387_struct::xmm_space' o='1280' t='__u32 [64]'/>
<mbr r='user_i387_struct::padding' o='3328' t='__u32 [24]'/>
<def f='linux-4.14.y/arch/x86/include/asm/user_64.h' l='51' ll='64'/>
<size>512</size>
<doc f='linux-4.14.y/arch/x86/include/asm/user_64.h' l='48'>/* This matches the 64bit FXSAVE format as defined by AMD. It is the same
   as the 32bit format defined by Intel, except that the selector:offset pairs
   for data and eip are replaced with flat 64bit pointers. */</doc>
<mbr r='user_i387_struct::cwd' o='0' t='unsigned short'/>
<mbr r='user_i387_struct::swd' o='16' t='unsigned short'/>
<mbr r='user_i387_struct::twd' o='32' t='unsigned short'/>
<mbr r='user_i387_struct::fop' o='48' t='unsigned short'/>
<mbr r='user_i387_struct::rip' o='64' t='__u64'/>
<mbr r='user_i387_struct::rdp' o='128' t='__u64'/>
<mbr r='user_i387_struct::mxcsr' o='192' t='__u32'/>
<mbr r='user_i387_struct::mxcsr_mask' o='224' t='__u32'/>
<mbr r='user_i387_struct::st_space' o='256' t='__u32 [32]'/>
<mbr r='user_i387_struct::xmm_space' o='1280' t='__u32 [64]'/>
<mbr r='user_i387_struct::padding' o='3328' t='__u32 [24]'/>
