<dec f='linux-4.18.y/fs/ext4/ext4.h' l='2977' type='int ext4_da_write_inline_data_begin(struct address_space * mapping, struct inode * inode, loff_t pos, unsigned int len, unsigned int flags, struct page ** pagep, void ** fsdata)'/>
<def f='linux-4.18.y/fs/ext4/inline.c' l='855' ll='940' type='int ext4_da_write_inline_data_begin(struct address_space * mapping, struct inode * inode, loff_t pos, unsigned int len, unsigned int flags, struct page ** pagep, void ** fsdata)'/>
<doc f='linux-4.18.y/fs/ext4/inline.c' l='847'>/*
 * Prepare the write for the inline data.
 * If the the data can be written into the inode, we just read
 * the page and make it uptodate, and start the journal.
 * Otherwise read the page, makes it dirty so that it can be
 * handle in writepages(the i_disksize update is left to the
 * normal ext4_da_write_end).
 */</doc>
<use f='linux-4.18.y/fs/ext4/inode.c' l='3030' u='c' c='ext4_da_write_begin'/>
