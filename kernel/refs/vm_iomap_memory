<dec f='linux-4.14.y/include/linux/mm.h' l='2356' type='int vm_iomap_memory(struct vm_area_struct * vma, phys_addr_t start, unsigned long len)'/>
<use f='linux-4.14.y/drivers/char/hpet.c' l='397' u='c' c='hpet_mmap'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbmem.c' l='1439' u='c' c='fb_mmap'/>
<def f='linux-4.14.y/mm/memory.c' l='2116' ll='2147' type='int vm_iomap_memory(struct vm_area_struct * vma, phys_addr_t start, unsigned long len)'/>
<dec f='linux-4.14.y/mm/memory.c' l='2148' type='int vm_iomap_memory(struct vm_area_struct * , phys_addr_t , unsigned long )'/>
<use f='linux-4.14.y/mm/memory.c' l='2148' c='vm_iomap_memory'/>
<use f='linux-4.14.y/mm/memory.c' l='2148' u='a'/>
<use f='linux-4.14.y/mm/memory.c' l='2148' u='a'/>
<doc f='linux-4.14.y/mm/memory.c' l='2103'>/**
 * vm_iomap_memory - remap memory to userspace
 * @vma: user vma to map to
 * @start: start of area
 * @len: size of area
 *
 * This is a simplified io_remap_pfn_range() for common driver use. The
 * driver just needs to give us the physical memory range to be mapped,
 * we&apos;ll figure out the rest from the vma information.
 *
 * NOTE! Some drivers might want to tweak vma-&gt;vm_page_prot first to get
 * whatever write-combining details or similar.
 */</doc>
