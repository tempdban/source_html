<def f='linux-4.14.y/include/uapi/linux/sync_file.h' l='60' ll='68'/>
<size>56</size>
<doc f='linux-4.14.y/include/uapi/linux/sync_file.h' l='50'>/**
 * struct sync_file_info - data returned from fence info ioctl
 * @name:	name of fence
 * @status:	status of fence. 1: signaled 0:active &lt;0:error
 * @flags:	sync_file_info flags
 * @num_fences	number of fences in the sync_file
 * @pad:	padding for 64-bit alignment, should always be zero
 * @sync_fence_info: pointer to array of structs sync_fence_info with all
 *		 fences in the sync_file
 */</doc>
<mbr r='sync_file_info::name' o='0' t='char [32]'/>
<mbr r='sync_file_info::status' o='256' t='__s32'/>
<mbr r='sync_file_info::flags' o='288' t='__u32'/>
<mbr r='sync_file_info::num_fences' o='320' t='__u32'/>
<mbr r='sync_file_info::pad' o='352' t='__u32'/>
<mbr r='sync_file_info::sync_fence_info' o='384' t='__u64'/>
<def f='linux-4.14.y/include/uapi/linux/sync_file.h' l='60' ll='68'/>
<size>56</size>
<doc f='linux-4.14.y/include/uapi/linux/sync_file.h' l='50'>/**
 * struct sync_file_info - data returned from fence info ioctl
 * @name:	name of fence
 * @status:	status of fence. 1: signaled 0:active &lt;0:error
 * @flags:	sync_file_info flags
 * @num_fences	number of fences in the sync_file
 * @pad:	padding for 64-bit alignment, should always be zero
 * @sync_fence_info: pointer to array of structs sync_fence_info with all
 *		 fences in the sync_file
 */</doc>
<mbr r='sync_file_info::name' o='0' t='char [32]'/>
<mbr r='sync_file_info::status' o='256' t='__s32'/>
<mbr r='sync_file_info::flags' o='288' t='__u32'/>
<mbr r='sync_file_info::num_fences' o='320' t='__u32'/>
<mbr r='sync_file_info::pad' o='352' t='__u32'/>
<mbr r='sync_file_info::sync_fence_info' o='384' t='__u64'/>
