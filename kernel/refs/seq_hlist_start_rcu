<dec f='linux-4.14.y/include/linux/seq_file.h' l='211' type='struct hlist_node * seq_hlist_start_rcu(struct hlist_head * head, loff_t pos)'/>
<def f='linux-4.14.y/fs/seq_file.c' l='930' ll='939' type='struct hlist_node * seq_hlist_start_rcu(struct hlist_head * head, loff_t pos)'/>
<dec f='linux-4.14.y/fs/seq_file.c' l='940' type='struct hlist_node * seq_hlist_start_rcu(struct hlist_head * , loff_t )'/>
<use f='linux-4.14.y/fs/seq_file.c' l='940' c='seq_hlist_start_rcu'/>
<use f='linux-4.14.y/fs/seq_file.c' l='940' u='a'/>
<use f='linux-4.14.y/fs/seq_file.c' l='940' u='a'/>
<use f='linux-4.14.y/fs/seq_file.c' l='960' u='c' c='seq_hlist_start_head_rcu'/>
<doc f='linux-4.14.y/fs/seq_file.c' l='919'>/**
 * seq_hlist_start_rcu - start an iteration of a hlist protected by RCU
 * @head: the head of the hlist
 * @pos:  the start position of the sequence
 *
 * Called at seq_file-&gt;op-&gt;start().
 *
 * This list-traversal primitive may safely run concurrently with
 * the _rcu list-mutation primitives such as hlist_add_head_rcu()
 * as long as the traversal is guarded by rcu_read_lock().
 */</doc>
<dec f='linux-4.14.y/include/linux/seq_file.h' l='211' type='struct hlist_node * seq_hlist_start_rcu(struct hlist_head * head, loff_t pos)'/>
<def f='linux-4.14.y/fs/seq_file.c' l='930' ll='939' type='struct hlist_node * seq_hlist_start_rcu(struct hlist_head * head, loff_t pos)'/>
<dec f='linux-4.14.y/fs/seq_file.c' l='940' type='struct hlist_node * seq_hlist_start_rcu(struct hlist_head * , loff_t )'/>
<use f='linux-4.14.y/fs/seq_file.c' l='940' c='seq_hlist_start_rcu'/>
<use f='linux-4.14.y/fs/seq_file.c' l='940' u='a'/>
<use f='linux-4.14.y/fs/seq_file.c' l='940' u='a'/>
<use f='linux-4.14.y/fs/seq_file.c' l='960' u='c' c='seq_hlist_start_head_rcu'/>
<doc f='linux-4.14.y/fs/seq_file.c' l='919'>/**
 * seq_hlist_start_rcu - start an iteration of a hlist protected by RCU
 * @head: the head of the hlist
 * @pos:  the start position of the sequence
 *
 * Called at seq_file-&gt;op-&gt;start().
 *
 * This list-traversal primitive may safely run concurrently with
 * the _rcu list-mutation primitives such as hlist_add_head_rcu()
 * as long as the traversal is guarded by rcu_read_lock().
 */</doc>
