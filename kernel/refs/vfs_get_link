<dec f='linux-4.18.y/include/linux/fs.h' l='3122' type='const char * vfs_get_link(struct dentry * , struct delayed_call * )'/>
<def f='linux-4.18.y/fs/namei.c' l='4779' ll='4790' type='const char * vfs_get_link(struct dentry * dentry, struct delayed_call * done)'/>
<dec f='linux-4.18.y/fs/namei.c' l='4791' type='const char * vfs_get_link(struct dentry * , struct delayed_call * )'/>
<use f='linux-4.18.y/fs/namei.c' l='4791' c='vfs_get_link'/>
<use f='linux-4.18.y/fs/namei.c' l='4791' u='a'/>
<use f='linux-4.18.y/fs/namei.c' l='4791' u='a'/>
<doc f='linux-4.18.y/fs/namei.c' l='4768'>/**
 * vfs_get_link - get symlink body
 * @dentry: dentry on which to get symbolic link
 * @done: caller needs to free returned data with this
 *
 * Calls security hook and i_op-&gt;get_link() on the supplied inode.
 *
 * It does not touch atime.  That&apos;s up to the caller if necessary.
 *
 * Does not work on &quot;special&quot; symlinks like /proc/$$/fd/N
 */</doc>
<use f='linux-4.18.y/fs/overlayfs/copy_up.c' l='718' u='c' c='ovl_copy_up_one'/>
<use f='linux-4.18.y/fs/overlayfs/inode.c' l='261' u='c' c='ovl_get_link'/>
