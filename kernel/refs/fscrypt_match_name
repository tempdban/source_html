<def f='linux-4.14.y/include/linux/fscrypt_notsupp.h' l='151' ll='158' type='bool fscrypt_match_name(const struct fscrypt_name * fname, const u8 * de_name, u32 de_name_len)'/>
<use f='linux-4.14.y/fs/ext4/namei.c' l='1271' u='c' c='ext4_match'/>
<def f='linux-4.14.y/include/linux/fscrypt_supp.h' l='121' ll='138' type='bool fscrypt_match_name(const struct fscrypt_name * fname, const u8 * de_name, u32 de_name_len)'/>
<doc f='linux-4.14.y/include/linux/fscrypt_supp.h' l='107'>/**
 * fscrypt_match_name() - test whether the given name matches a directory entry
 * @fname: the name being searched for
 * @de_name: the name from the directory entry
 * @de_name_len: the length of @de_name in bytes
 *
 * Normally @fname-&gt;disk_name will be set, and in that case we simply compare
 * that to the name stored in the directory entry.  The only exception is that
 * if we don&apos;t have the key for an encrypted directory and a filename in it is
 * very long, then we won&apos;t have the full disk_name and we&apos;ll instead need to
 * match against the fscrypt_digested_name.
 *
 * Return: %true if the name matches, otherwise %false.
 */</doc>
<use f='linux-4.14.y/fs/ext4/namei.c' l='1271' u='c' c='ext4_match'/>
<use f='linux-4.14.y/fs/f2fs/dir.c' l='132' u='c' c='find_target_dentry'/>
