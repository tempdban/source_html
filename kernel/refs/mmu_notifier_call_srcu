<dec f='linux-4.14.y/include/linux/mmu_notifier.h' l='398' type='void mmu_notifier_call_srcu(struct callback_head * rcu, void (*)(struct callback_head *) func)'/>
<def f='linux-4.14.y/mm/mmu_notifier.c' l='31' ll='35' type='void mmu_notifier_call_srcu(struct callback_head * rcu, void (*)(struct callback_head *) func)'/>
<dec f='linux-4.14.y/mm/mmu_notifier.c' l='36' type='void mmu_notifier_call_srcu(struct callback_head * , void (*)(struct callback_head *) )'/>
<use f='linux-4.14.y/mm/mmu_notifier.c' l='36' c='mmu_notifier_call_srcu'/>
<use f='linux-4.14.y/mm/mmu_notifier.c' l='36' u='a'/>
<use f='linux-4.14.y/mm/mmu_notifier.c' l='36' u='a'/>
<doc f='linux-4.14.y/mm/mmu_notifier.c' l='26'>/*
 * This function allows mmu_notifier::release callback to delay a call to
 * a function that will free appropriate resources. The function must be
 * quick and must not block.
 */</doc>
<dec f='linux-4.14.y/include/linux/mmu_notifier.h' l='398' type='void mmu_notifier_call_srcu(struct callback_head * rcu, void (*)(struct callback_head *) func)'/>
<def f='linux-4.14.y/mm/mmu_notifier.c' l='31' ll='35' type='void mmu_notifier_call_srcu(struct callback_head * rcu, void (*)(struct callback_head *) func)'/>
<dec f='linux-4.14.y/mm/mmu_notifier.c' l='36' type='void mmu_notifier_call_srcu(struct callback_head * , void (*)(struct callback_head *) )'/>
<use f='linux-4.14.y/mm/mmu_notifier.c' l='36' c='mmu_notifier_call_srcu'/>
<use f='linux-4.14.y/mm/mmu_notifier.c' l='36' u='a'/>
<use f='linux-4.14.y/mm/mmu_notifier.c' l='36' u='a'/>
<doc f='linux-4.14.y/mm/mmu_notifier.c' l='26'>/*
 * This function allows mmu_notifier::release callback to delay a call to
 * a function that will free appropriate resources. The function must be
 * quick and must not block.
 */</doc>
