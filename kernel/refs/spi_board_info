<def f='linux-4.14.y/include/linux/spi/spi.h' l='1276' ll='1314'/>
<size>72</size>
<doc f='linux-4.14.y/include/linux/spi/spi.h' l='1244'>/**
 * struct spi_board_info - board-specific template for a SPI device
 * @modalias: Initializes spi_device.modalias; identifies the driver.
 * @platform_data: Initializes spi_device.platform_data; the particular
 *	data stored there is driver-specific.
 * @properties: Additional device properties for the device.
 * @controller_data: Initializes spi_device.controller_data; some
 *	controllers need hints about hardware setup, e.g. for DMA.
 * @irq: Initializes spi_device.irq; depends on how the board is wired.
 * @max_speed_hz: Initializes spi_device.max_speed_hz; based on limits
 *	from the chip datasheet and board-specific signal quality issues.
 * @bus_num: Identifies which spi_controller parents the spi_device; unused
 *	by spi_new_device(), and otherwise depends on board wiring.
 * @chip_select: Initializes spi_device.chip_select; depends on how
 *	the board is wired.
 * @mode: Initializes spi_device.mode; based on the chip datasheet, board
 *	wiring (some devices support both 3WIRE and standard modes), and
 *	possibly presence of an inverter in the chipselect path.
 *
 * When adding new SPI devices to the device tree, these structures serve
 * as a partial device template.  They hold information which can&apos;t always
 * be determined by drivers.  Information that probe() can establish (such
 * as the default transfer wordsize) is not included here.
 *
 * These structures are used in two places.  Their primary role is to
 * be stored in tables of board-specific device descriptors, which are
 * declared early in board initialization and then used (much later) to
 * populate a controller&apos;s device tree after the that controller&apos;s driver
 * initializes.  A secondary (and atypical) role is as a parameter to
 * spi_new_device() call, which happens after those controller drivers
 * are active in some dynamic board configuration models.
 */</doc>
<mbr r='spi_board_info::modalias' o='0' t='char [32]'/>
<mbr r='spi_board_info::platform_data' o='256' t='const void *'/>
<mbr r='spi_board_info::properties' o='320' t='const struct property_entry *'/>
<mbr r='spi_board_info::controller_data' o='384' t='void *'/>
<mbr r='spi_board_info::irq' o='448' t='int'/>
<mbr r='spi_board_info::max_speed_hz' o='480' t='u32'/>
<mbr r='spi_board_info::bus_num' o='512' t='u16'/>
<mbr r='spi_board_info::chip_select' o='528' t='u16'/>
<mbr r='spi_board_info::mode' o='544' t='u16'/>
