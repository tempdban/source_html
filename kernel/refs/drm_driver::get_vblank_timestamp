<dec f='linux-4.14.y/include/drm/drm_drv.h' l='326' type='bool (*)(struct drm_device *, unsigned int, int *, struct timeval *, bool)'/>
<offset>640</offset>
<doc f='linux-4.14.y/include/drm/drm_drv.h' l='283'>/**
	 * @get_vblank_timestamp:
	 *
	 * Called by drm_get_last_vbltimestamp(). Should return a precise
	 * timestamp when the most recent VBLANK interval ended or will end.
	 *
	 * Specifically, the timestamp in @vblank_time should correspond as
	 * closely as possible to the time when the first video scanline of
	 * the video frame after the end of VBLANK will start scanning out,
	 * the time immediately after end of the VBLANK interval. If the
	 * @crtc is currently inside VBLANK, this will be a time in the future.
	 * If the @crtc is currently scanning out a frame, this will be the
	 * past start time of the current scanout. This is meant to adhere
	 * to the OpenML OML_sync_control extension specification.
	 *
	 * Paramters:
	 *
	 * dev:
	 *     dev DRM device handle.
	 * pipe:
	 *     crtc for which timestamp should be returned.
	 * max_error:
	 *     Maximum allowable timestamp error in nanoseconds.
	 *     Implementation should strive to provide timestamp
	 *     with an error of at most max_error nanoseconds.
	 *     Returns true upper bound on error for timestamp.
	 * vblank_time:
	 *     Target location for returned vblank timestamp.
	 * in_vblank_irq:
	 *     True when called from drm_crtc_handle_vblank().  Some drivers
	 *     need to apply some workarounds for gpu-specific vblank irq quirks
	 *     if flag is set.
	 *
	 * Returns:
	 *
	 * True on success, false on failure, which means the core should
	 * fallback to a simple timestamp taken in drm_crtc_handle_vblank().
	 *
	 * FIXME:
	 *
	 * We should move this hook to &amp;struct drm_crtc_funcs like all the other
	 * vblank hooks.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='314' u='r' c='drm_crtc_accurate_vblank_count'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='459' u='r' c='drm_vblank_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='465' u='r' c='drm_vblank_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='739' u='r' c='drm_get_last_vbltimestamp'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='740' u='r' c='drm_get_last_vbltimestamp'/>
<dec f='linux-4.14.y/include/drm/drm_drv.h' l='326' type='bool (*)(struct drm_device *, unsigned int, int *, struct timeval *, bool)'/>
<offset>640</offset>
<doc f='linux-4.14.y/include/drm/drm_drv.h' l='283'>/**
	 * @get_vblank_timestamp:
	 *
	 * Called by drm_get_last_vbltimestamp(). Should return a precise
	 * timestamp when the most recent VBLANK interval ended or will end.
	 *
	 * Specifically, the timestamp in @vblank_time should correspond as
	 * closely as possible to the time when the first video scanline of
	 * the video frame after the end of VBLANK will start scanning out,
	 * the time immediately after end of the VBLANK interval. If the
	 * @crtc is currently inside VBLANK, this will be a time in the future.
	 * If the @crtc is currently scanning out a frame, this will be the
	 * past start time of the current scanout. This is meant to adhere
	 * to the OpenML OML_sync_control extension specification.
	 *
	 * Paramters:
	 *
	 * dev:
	 *     dev DRM device handle.
	 * pipe:
	 *     crtc for which timestamp should be returned.
	 * max_error:
	 *     Maximum allowable timestamp error in nanoseconds.
	 *     Implementation should strive to provide timestamp
	 *     with an error of at most max_error nanoseconds.
	 *     Returns true upper bound on error for timestamp.
	 * vblank_time:
	 *     Target location for returned vblank timestamp.
	 * in_vblank_irq:
	 *     True when called from drm_crtc_handle_vblank().  Some drivers
	 *     need to apply some workarounds for gpu-specific vblank irq quirks
	 *     if flag is set.
	 *
	 * Returns:
	 *
	 * True on success, false on failure, which means the core should
	 * fallback to a simple timestamp taken in drm_crtc_handle_vblank().
	 *
	 * FIXME:
	 *
	 * We should move this hook to &amp;struct drm_crtc_funcs like all the other
	 * vblank hooks.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='314' u='r' c='drm_crtc_accurate_vblank_count'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='459' u='r' c='drm_vblank_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='465' u='r' c='drm_vblank_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='739' u='r' c='drm_get_last_vbltimestamp'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='740' u='r' c='drm_get_last_vbltimestamp'/>
