<dec f='linux-4.18.y/include/drm/drm_vblank.h' l='192' type='void drm_crtc_vblank_put(struct drm_crtc * crtc)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1001' u='c' c='disable_outputs'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1364' u='c' c='drm_atomic_helper_wait_for_vblanks'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1549' u='c' c='drm_fb_helper_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='987' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='995' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='1116' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane_helper.c' l='413' u='c' c='drm_plane_helper_commit'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1048' ll='1051' type='void drm_crtc_vblank_put(struct drm_crtc * crtc)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1052' type='void drm_crtc_vblank_put(struct drm_crtc * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1052' c='drm_crtc_vblank_put'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1052' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1052' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1804' u='c' c='drm_crtc_get_sequence_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1897' u='c' c='drm_crtc_queue_sequence_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1911' u='c' c='drm_crtc_queue_sequence_ioctl'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1041'>/**
 * drm_crtc_vblank_put - give up ownership of vblank events
 * @crtc: which counter to give up
 *
 * Release ownership of a given vblank counter, turning off interrupts
 * if possible. Disable interrupts after drm_vblank_offdelay milliseconds.
 */</doc>
