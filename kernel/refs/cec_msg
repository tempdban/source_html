<def f='linux-4.18.y/include/uapi/linux/cec.h' l='57' ll='72'/>
<size>56</size>
<doc f='linux-4.18.y/include/uapi/linux/cec.h' l='16'>/**
 * struct cec_msg - CEC message structure.
 * @tx_ts:	Timestamp in nanoseconds using CLOCK_MONOTONIC. Set by the
 *		driver when the message transmission has finished.
 * @rx_ts:	Timestamp in nanoseconds using CLOCK_MONOTONIC. Set by the
 *		driver when the message was received.
 * @len:	Length in bytes of the message.
 * @timeout:	The timeout (in ms) that is used to timeout CEC_RECEIVE.
 *		Set to 0 if you want to wait forever. This timeout can also be
 *		used with CEC_TRANSMIT as the timeout for waiting for a reply.
 *		If 0, then it will use a 1 second timeout instead of waiting
 *		forever as is done with CEC_RECEIVE.
 * @sequence:	The framework assigns a sequence number to messages that are
 *		sent. This can be used to track replies to previously sent
 *		messages.
 * @flags:	Set to 0.
 * @msg:	The message payload.
 * @reply:	This field is ignored with CEC_RECEIVE and is only used by
 *		CEC_TRANSMIT. If non-zero, then wait for a reply with this
 *		opcode. Set to CEC_MSG_FEATURE_ABORT if you want to wait for
 *		a possible ABORT reply. If there was an error when sending the
 *		msg or FeatureAbort was returned, then reply is set to 0.
 *		If reply is non-zero upon return, then len/msg are set to
 *		the received message.
 *		If reply is zero upon return and status has the
 *		CEC_TX_STATUS_FEATURE_ABORT bit set, then len/msg are set to
 *		the received feature abort message.
 *		If reply is zero upon return and status has the
 *		CEC_TX_STATUS_MAX_RETRIES bit set, then no reply was seen at
 *		all. If reply is non-zero for CEC_TRANSMIT and the message is a
 *		broadcast, then -EINVAL is returned.
 *		if reply is non-zero, then timeout is set to 1000 (the required
 *		maximum response time).
 * @rx_status:	The message receive status bits. Set by the driver.
 * @tx_status:	The message transmit status bits. Set by the driver.
 * @tx_arb_lost_cnt: The number of &apos;Arbitration Lost&apos; events. Set by the driver.
 * @tx_nack_cnt: The number of &apos;Not Acknowledged&apos; events. Set by the driver.
 * @tx_low_drive_cnt: The number of &apos;Low Drive Detected&apos; events. Set by the
 *		driver.
 * @tx_error_cnt: The number of &apos;Error&apos; events. Set by the driver.
 */</doc>
<mbr r='cec_msg::tx_ts' o='0' t='__u64'/>
<mbr r='cec_msg::rx_ts' o='64' t='__u64'/>
<mbr r='cec_msg::len' o='128' t='__u32'/>
<mbr r='cec_msg::timeout' o='160' t='__u32'/>
<mbr r='cec_msg::sequence' o='192' t='__u32'/>
<mbr r='cec_msg::flags' o='224' t='__u32'/>
<mbr r='cec_msg::msg' o='256' t='__u8 [16]'/>
<mbr r='cec_msg::reply' o='384' t='__u8'/>
<mbr r='cec_msg::rx_status' o='392' t='__u8'/>
<mbr r='cec_msg::tx_status' o='400' t='__u8'/>
<mbr r='cec_msg::tx_arb_lost_cnt' o='408' t='__u8'/>
<mbr r='cec_msg::tx_nack_cnt' o='416' t='__u8'/>
<mbr r='cec_msg::tx_low_drive_cnt' o='424' t='__u8'/>
<mbr r='cec_msg::tx_error_cnt' o='432' t='__u8'/>
