<dec f='linux-4.14.y/include/linux/refcount.h' l='98' type='bool refcount_dec_not_one(refcount_t * r)'/>
<use f='linux-4.14.y/kernel/cgroup/cgroup-internal.h' l='142' u='c' c='put_css_set'/>
<def f='linux-4.14.y/lib/refcount.c' l='268' ll='288' type='bool refcount_dec_not_one(refcount_t * r)'/>
<dec f='linux-4.14.y/lib/refcount.c' l='289' type='bool refcount_dec_not_one(refcount_t * )'/>
<use f='linux-4.14.y/lib/refcount.c' l='289' c='refcount_dec_not_one'/>
<use f='linux-4.14.y/lib/refcount.c' l='289' u='a'/>
<use f='linux-4.14.y/lib/refcount.c' l='289' u='a'/>
<use f='linux-4.14.y/lib/refcount.c' l='309' u='c' c='refcount_dec_and_mutex_lock'/>
<use f='linux-4.14.y/lib/refcount.c' l='340' u='c' c='refcount_dec_and_lock'/>
<doc f='linux-4.14.y/lib/refcount.c' l='257'>/**
 * refcount_dec_not_one - decrement a refcount if it is not 1
 * @r: the refcount
 *
 * No atomic_t counterpart, it decrements unless the value is 1, in which case
 * it will return false.
 *
 * Was often done like: atomic_add_unless(&amp;var, -1, 1)
 *
 * Return: true if the decrement operation was successful, false otherwise
 */</doc>
