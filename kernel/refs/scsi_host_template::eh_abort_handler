<dec f='linux-4.18.y/include/scsi/scsi_host.h' l='133' type='int (*)(struct scsi_cmnd *)'/>
<offset>384</offset>
<doc f='linux-4.18.y/include/scsi/scsi_host.h' l='115'>/*
	 * This is an error handling strategy routine.  You don&apos;t need to
	 * define one of these if you don&apos;t want to - there is a default
	 * routine that is present that should work in most cases.  For those
	 * driver authors that have the inclination and ability to write their
	 * own strategy routine, this is where it is specified.  Note - the
	 * strategy routine is *ALWAYS* run in the context of the kernel eh
	 * thread.  Thus you are guaranteed to *NOT* be in an interrupt
	 * handler when you execute this, and you are also guaranteed to
	 * *NOT* have any other commands being queued while you are in the
	 * strategy routine. When you return from this function, operations
	 * return to normal.
	 *
	 * See scsi_error.c scsi_unjam_host for additional comments about
	 * what this function should and should not be attempting to do.
	 *
	 * Status: REQUIRED	(at least one of them)
	 */</doc>
<use f='linux-4.18.y/drivers/message/fusion/mptsas.c' l='1986' u='w'/>
<use f='linux-4.18.y/drivers/message/fusion/mptspi.c' l='841' u='w'/>
<use f='linux-4.18.y/drivers/scsi/megaraid.c' l='4151' u='w'/>
<use f='linux-4.18.y/drivers/scsi/megaraid/megaraid_mbox.c' l='343' u='w'/>
<use f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='3168' u='w'/>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='10440' u='w'/>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='10479' u='w'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='926' u='r' c='scsi_try_to_abort_cmd'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='929' u='r' c='scsi_try_to_abort_cmd'/>
<use f='linux-4.18.y/drivers/scsi/virtio_scsi.c' l='744' u='w'/>
<use f='linux-4.18.y/drivers/scsi/vmw_pvscsi.c' l='1012' u='w'/>
<use f='linux-4.18.y/drivers/usb/storage/scsiglue.c' l='605' u='w'/>
