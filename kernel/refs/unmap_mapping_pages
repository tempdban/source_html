<dec f='linux-4.18.y/include/linux/mm.h' l='1419' type='void unmap_mapping_pages(struct address_space * mapping, unsigned long start, unsigned long nr, bool even_cows)'/>
<def f='linux-4.18.y/mm/memory.c' l='2856' ll='2871' type='void unmap_mapping_pages(struct address_space * mapping, unsigned long start, unsigned long nr, bool even_cows)'/>
<use f='linux-4.18.y/mm/memory.c' l='2904' u='c' c='unmap_mapping_range'/>
<doc f='linux-4.18.y/mm/memory.c' l='2844'>/**
 * unmap_mapping_pages() - Unmap pages from processes.
 * @mapping: The address space containing pages to be unmapped.
 * @start: Index of first page to be unmapped.
 * @nr: Number of pages to be unmapped.  0 to unmap to end of file.
 * @even_cows: Whether to unmap even private COWed pages.
 *
 * Unmap the pages in this address space from any userspace process which
 * has them mmaped.  Generally, you want to remove COWed pages as well when
 * a file is being truncated, but not when invalidating pages from the page
 * cache.
 */</doc>
<use f='linux-4.18.y/mm/truncate.c' l='183' u='c' c='truncate_cleanup_page'/>
<use f='linux-4.18.y/mm/truncate.c' l='714' u='c' c='invalidate_inode_pages2_range'/>
<use f='linux-4.18.y/mm/truncate.c' l='721' u='c' c='invalidate_inode_pages2_range'/>
<use f='linux-4.18.y/mm/truncate.c' l='748' u='c' c='invalidate_inode_pages2_range'/>
