<dec f='linux-4.18.y/drivers/gpu/drm/drm_legacy.h' l='68' type='int drm_legacy_addmap_ioctl(struct drm_device * d, void * v, struct drm_file * f)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_bufs.c' l='389' ll='421' type='int drm_legacy_addmap_ioctl(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_bufs.c' l='378'>/**
 * Ioctl to specify a range of memory that is available for mapping by a
 * non-root process.
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg pointer to a drm_map structure.
 * \return zero on success or a negative value on error.
 *
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioc32.c' l='212' u='r' c='compat_drm_addmap'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='561'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='561'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='561'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='561'/>
