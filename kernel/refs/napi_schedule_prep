<dec f='linux-4.18.y/include/linux/netdevice.h' l='421' type='bool napi_schedule_prep(struct napi_struct * n)'/>
<use f='linux-4.18.y/include/linux/netdevice.h' l='432' u='c' c='napi_schedule'/>
<use f='linux-4.18.y/include/linux/netdevice.h' l='444' u='c' c='napi_schedule_irqoff'/>
<use f='linux-4.18.y/include/linux/netdevice.h' l='451' u='c' c='napi_reschedule'/>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-drv.c' l='513' u='c' c='xgbe_isr_task'/>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-drv.c' l='625' u='c' c='xgbe_dma_isr'/>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-drv.c' l='655' u='c' c='xgbe_tx_timer'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e100.c' l='2212' u='c' c='e100_intr'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000/e1000_main.c' l='3778' u='c' c='e1000_intr'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1803' u='c' c='e1000_intr_msi'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1883' u='c' c='e1000_intr'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1954' u='c' c='e1000_intr_msix_rx'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igbvf/netdev.c' l='910' u='c' c='igbvf_intr_msix_rx'/>
<use f='linux-4.18.y/drivers/net/ethernet/realtek/8139cp.c' l='599' u='c' c='cp_interrupt'/>
<use f='linux-4.18.y/drivers/net/ethernet/realtek/8139too.c' l='2191' u='c' c='rtl8139_interrupt'/>
<use f='linux-4.18.y/drivers/net/virtio_net.c' l='293' u='c' c='virtqueue_napi_schedule'/>
<def f='linux-4.18.y/net/core/dev.c' l='5431' ll='5452' type='bool napi_schedule_prep(struct napi_struct * n)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='5453' type='bool napi_schedule_prep(struct napi_struct * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='5453' c='napi_schedule_prep'/>
<use f='linux-4.18.y/net/core/dev.c' l='5453' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='5453' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='5422'>/**
 *	napi_schedule_prep - check if napi can be scheduled
 *	@n: napi context
 *
 * Test if NAPI routine is already running, and if not mark
 * it as running.  This is used as a condition variable
 * insure only one NAPI poll instance runs.  We also make
 * sure there is no pending NAPI disable.
 */</doc>
