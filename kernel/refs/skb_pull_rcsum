<dec f='linux-4.14.y/include/linux/skbuff.h' l='3117' type='void * skb_pull_rcsum(struct sk_buff * skb, unsigned int len)'/>
<use f='linux-4.14.y/include/net/udp.h' l='166' u='c' c='udp_csum_pull_header'/>
<use f='linux-4.14.y/net/802/psnap.c' l='66' u='c' c='snap_rcv'/>
<use f='linux-4.14.y/net/bridge/br_netfilter_hooks.c' l='189' u='c' c='nf_bridge_pull_encap_header_rcsum'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='3450' ll='3458' type='void * skb_pull_rcsum(struct sk_buff * skb, unsigned int len)'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='3459' type='void * skb_pull_rcsum(struct sk_buff * , unsigned int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='3459' c='skb_pull_rcsum'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='3459' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='3459' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4725' u='c' c='skb_checksum_trimmed'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4980' u='c' c='skb_vlan_untag'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='3439'>/**
 *	skb_pull_rcsum - pull skb and update receive checksum
 *	@skb: buffer to update
 *	@len: length of data pulled
 *
 *	This function performs an skb_pull on the packet and updates
 *	the CHECKSUM_COMPLETE checksum.  It should be used on
 *	receive path processing instead of skb_pull unless you know
 *	that the checksum difference is zero (e.g., a valid IP header)
 *	or you are setting ip_summed to CHECKSUM_NONE.
 */</doc>
<use f='linux-4.14.y/net/ipv4/ip_tunnel_core.c' l='104' u='c' c='__iptunnel_pull_header'/>
<use f='linux-4.14.y/net/openvswitch/actions.c' l='347' u='c' c='pop_eth'/>
<use f='linux-4.14.y/net/openvswitch/conntrack.c' l='719' u='c' c='ovs_ct_nat_execute'/>
<use f='linux-4.14.y/net/openvswitch/conntrack.c' l='1142' u='c' c='ovs_ct_execute'/>
