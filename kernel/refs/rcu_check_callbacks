<dec f='linux-4.14.y/include/linux/rcupdate.h' l='109' type='void rcu_check_callbacks(int user)'/>
<def f='linux-4.14.y/kernel/rcu/tree.c' l='2742' ll='2780' type='void rcu_check_callbacks(int user)'/>
<doc f='linux-4.14.y/kernel/rcu/tree.c' l='2734'>/*
 * Check to see if this CPU is in a non-context-switch quiescent state
 * (user mode or idle loop for rcu, non-softirq execution for rcu_bh).
 * Also schedule RCU core processing.
 *
 * This function must be called from hardirq context.  It is normally
 * invoked from the scheduling-clock interrupt.
 */</doc>
<use f='linux-4.14.y/kernel/time/timer.c' l='1588' u='c' c='update_process_times'/>
<dec f='linux-4.14.y/include/linux/rcupdate.h' l='109' type='void rcu_check_callbacks(int user)'/>
<def f='linux-4.14.y/kernel/rcu/tree.c' l='2742' ll='2780' type='void rcu_check_callbacks(int user)'/>
<doc f='linux-4.14.y/kernel/rcu/tree.c' l='2734'>/*
 * Check to see if this CPU is in a non-context-switch quiescent state
 * (user mode or idle loop for rcu, non-softirq execution for rcu_bh).
 * Also schedule RCU core processing.
 *
 * This function must be called from hardirq context.  It is normally
 * invoked from the scheduling-clock interrupt.
 */</doc>
<use f='linux-4.14.y/kernel/time/timer.c' l='1588' u='c' c='update_process_times'/>
