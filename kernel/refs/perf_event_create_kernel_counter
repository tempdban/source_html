<dec f='linux-4.18.y/include/linux/perf_event.h' l='884' type='struct perf_event * perf_event_create_kernel_counter(struct perf_event_attr * attr, int cpu, struct task_struct * task, perf_overflow_handler_t callback, void * context)'/>
<use f='linux-4.18.y/arch/x86/kvm/pmu.c' l='130' u='c' c='pmc_reprogram_counter'/>
<def f='linux-4.18.y/kernel/events/core.c' l='10826' ll='10897' type='struct perf_event * perf_event_create_kernel_counter(struct perf_event_attr * attr, int cpu, struct task_struct * task, perf_overflow_handler_t overflow_handler, void * context)'/>
<dec f='linux-4.18.y/kernel/events/core.c' l='10898' type='struct perf_event * perf_event_create_kernel_counter(struct perf_event_attr * , int , struct task_struct * , perf_overflow_handler_t , void * )'/>
<use f='linux-4.18.y/kernel/events/core.c' l='10898' c='perf_event_create_kernel_counter'/>
<use f='linux-4.18.y/kernel/events/core.c' l='10898' u='a'/>
<use f='linux-4.18.y/kernel/events/core.c' l='10898' u='a'/>
<doc f='linux-4.18.y/kernel/events/core.c' l='10819'>/**
 * perf_event_create_kernel_counter
 *
 * @attr: attributes of the counter to create
 * @cpu: cpu in which the counter is bound
 * @task: task to profile (NULL for percpu)
 */</doc>
<use f='linux-4.18.y/kernel/events/hw_breakpoint.c' l='454' u='c' c='register_user_hw_breakpoint'/>
<use f='linux-4.18.y/kernel/events/hw_breakpoint.c' l='555' u='c' c='register_wide_hw_breakpoint'/>
