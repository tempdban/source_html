<dec f='linux-4.18.y/include/linux/mmzone.h' l='1119' type='unsigned long'/>
<use f='linux-4.18.y/include/linux/mmzone.h' l='1188' u='r' c='__section_mem_map_addr'/>
<use f='linux-4.18.y/include/linux/mmzone.h' l='1195' u='r' c='present_section'/>
<use f='linux-4.18.y/include/linux/mmzone.h' l='1205' u='r' c='valid_section'/>
<use f='linux-4.18.y/include/linux/mmzone.h' l='1215' u='r' c='online_section'/>
<offset>0</offset>
<doc f='linux-4.18.y/include/linux/mmzone.h' l='1107'>/*
	 * This is, logically, a pointer to an array of struct
	 * pages.  However, it is stored with some other magic.
	 * (see sparse.c::sparse_init_one_section())
	 *
	 * Additionally during early boot we encode node id of
	 * the location of the section here to guide allocation.
	 * (see sparse.c::memory_present())
	 *
	 * Making it a UL at least makes someone do a cast
	 * before using it wrong.
	 */</doc>
<use f='linux-4.18.y/mm/sparse-vmemmap.c' l='306' u='w' c='sparse_mem_maps_populate_node'/>
<use f='linux-4.18.y/mm/sparse.c' l='138' u='r' c='sparse_early_nid'/>
<use f='linux-4.18.y/mm/sparse.c' l='184' u='w' c='section_mark_present'/>
<use f='linux-4.18.y/mm/sparse.c' l='228' u='r' c='memory_present'/>
<use f='linux-4.18.y/mm/sparse.c' l='229' u='w' c='memory_present'/>
<use f='linux-4.18.y/mm/sparse.c' l='267' u='w' c='sparse_init_one_section'/>
<use f='linux-4.18.y/mm/sparse.c' l='268' u='w' c='sparse_init_one_section'/>
