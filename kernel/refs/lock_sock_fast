<dec f='linux-4.18.y/include/net/sock.h' l='1486' type='bool lock_sock_fast(struct sock * sk)'/>
<use f='linux-4.18.y/net/core/datagram.c' l='343' u='c' c='__skb_free_datagram_locked'/>
<def f='linux-4.18.y/net/core/sock.c' l='2879' ll='2899' type='bool lock_sock_fast(struct sock * sk)'/>
<dec f='linux-4.18.y/net/core/sock.c' l='2900' type='bool lock_sock_fast(struct sock * )'/>
<use f='linux-4.18.y/net/core/sock.c' l='2900' c='lock_sock_fast'/>
<use f='linux-4.18.y/net/core/sock.c' l='2900' u='a'/>
<use f='linux-4.18.y/net/core/sock.c' l='2900' u='a'/>
<doc f='linux-4.18.y/net/core/sock.c' l='2866'>/**
 * lock_sock_fast - fast version of lock_sock
 * @sk: socket
 *
 * This version should be used for very small section, where process wont block
 * return false if fast path is taken:
 *
 *   sk_lock.slock locked, owned = 0, BH disabled
 *
 * return true if slow path is taken:
 *
 *   sk_lock.slock unlocked, owned = 1, BH enabled
 */</doc>
<use f='linux-4.18.y/net/ipv4/tcp.c' l='616' u='c' c='tcp_ioctl'/>
<use f='linux-4.18.y/net/ipv4/tcp.c' l='3140' u='c' c='tcp_get_info'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='1460' u='c' c='skb_consume_udp'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='2386' u='c' c='udp_destroy_sock'/>
