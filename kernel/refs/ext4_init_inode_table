<dec f='linux-4.14.y/fs/ext4/ext4.h' l='2428' type='int ext4_init_inode_table(struct super_block * sb, ext4_group_t group, int barrier)'/>
<def f='linux-4.14.y/fs/ext4/ialloc.c' l='1352' ll='1448' type='int ext4_init_inode_table(struct super_block * sb, ext4_group_t group, int barrier)'/>
<doc f='linux-4.14.y/fs/ext4/ialloc.c' l='1344'>/*
 * Zeroes not yet zeroed inode table - just write zeroes through the whole
 * inode table. Must be called without any spinlock held. The only place
 * where it is called from on active part of filesystem is ext4lazyinit
 * thread, so we do not need any special locks, however we have to prevent
 * inode allocation from the current group, so we take alloc_sem lock, to
 * block ext4_new_inode() until we are finished.
 */</doc>
<use f='linux-4.14.y/fs/ext4/super.c' l='2898' u='c' c='ext4_run_li_request'/>
<dec f='linux-4.14.y/fs/ext4/ext4.h' l='2428' type='int ext4_init_inode_table(struct super_block * sb, ext4_group_t group, int barrier)'/>
<def f='linux-4.14.y/fs/ext4/ialloc.c' l='1352' ll='1448' type='int ext4_init_inode_table(struct super_block * sb, ext4_group_t group, int barrier)'/>
<doc f='linux-4.14.y/fs/ext4/ialloc.c' l='1344'>/*
 * Zeroes not yet zeroed inode table - just write zeroes through the whole
 * inode table. Must be called without any spinlock held. The only place
 * where it is called from on active part of filesystem is ext4lazyinit
 * thread, so we do not need any special locks, however we have to prevent
 * inode allocation from the current group, so we take alloc_sem lock, to
 * block ext4_new_inode() until we are finished.
 */</doc>
<use f='linux-4.14.y/fs/ext4/super.c' l='2898' u='c' c='ext4_run_li_request'/>
