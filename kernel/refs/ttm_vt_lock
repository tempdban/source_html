<dec f='linux-4.18.y/include/drm/ttm/ttm_lock.h' l='188' type='int ttm_vt_lock(struct ttm_lock * lock, bool interruptible, struct ttm_object_file * tfile)'/>
<def f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_lock.c' l='231' ll='264' type='int ttm_vt_lock(struct ttm_lock * lock, bool interruptible, struct ttm_object_file * tfile)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_lock.c' l='265' type='int ttm_vt_lock(struct ttm_lock * , bool , struct ttm_object_file * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_lock.c' l='265' c='ttm_vt_lock'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_lock.c' l='265' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_lock.c' l='265' u='a'/>
<doc f='linux-4.18.y/include/drm/ttm/ttm_lock.h' l='176'>/**
 * ttm_vt_lock
 *
 * @lock: Pointer to a struct ttm_lock
 * @interruptible: Interruptible sleeping while waiting for a lock.
 * @tfile: Pointer to a struct ttm_object_file to register the lock with.
 *
 * Takes the lock in vt mode.
 * Returns:
 * -ERESTARTSYS If interrupted by a signal and interruptible is true.
 * -ENOMEM: Out of memory when locking.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1231' u='c' c='vmw_master_set'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1266' u='c' c='vmw_master_drop'/>
