<dec f='linux-4.18.y/include/linux/libata.h' l='1099' type='int sata_link_resume(struct ata_link * link, const unsigned long * params, unsigned long deadline)'/>
<def f='linux-4.18.y/drivers/ata/libata-core.c' l='3875' ll='3925' type='int sata_link_resume(struct ata_link * link, const unsigned long * params, unsigned long deadline)'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='4030' u='c' c='ata_std_prereset'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='4113' u='c' c='sata_link_hardreset'/>
<dec f='linux-4.18.y/drivers/ata/libata-core.c' l='7330' type='int sata_link_resume(struct ata_link * , const unsigned long * , unsigned long )'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7330' c='sata_link_resume'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7330' u='a'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7330' u='a'/>
<doc f='linux-4.18.y/drivers/ata/libata-core.c' l='3861'>/**
 *	sata_link_resume - resume SATA link
 *	@link: ATA link to resume SATA
 *	@params: timing parameters { interval, duration, timeout } in msec
 *	@deadline: deadline jiffies for the operation
 *
 *	Resume SATA phy @link and debounce it.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 *
 *	RETURNS:
 *	0 on success, -errno on failure.
 */</doc>
