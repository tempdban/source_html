<def f='linux-4.18.y/include/drm/drm_atomic.h' l='212' ll='225'/>
<size>16</size>
<doc f='linux-4.18.y/include/drm/drm_atomic.h' l='201'>/**
 * struct drm_private_obj - base struct for driver private atomic object
 *
 * A driver private object is initialized by calling
 * drm_atomic_private_obj_init() and cleaned up by calling
 * drm_atomic_private_obj_fini().
 *
 * Currently only tracks the state update functions and the opaque driver
 * private state itself, but in the future might also track which
 * &amp;drm_modeset_lock is required to duplicate and update this object&apos;s state.
 */</doc>
<mbr r='drm_private_obj::state' o='0' t='struct drm_private_state *'/>
<mbr r='drm_private_obj::funcs' o='64' t='const struct drm_private_state_funcs *'/>
