<def f='linux-4.18.y/drivers/usb/gadget/function/u_serial.h' l='34' ll='50'/>
<size>272</size>
<doc f='linux-4.18.y/drivers/usb/gadget/function/u_serial.h' l='22'>/*
 * One non-multiplexed &quot;serial&quot; I/O port ... there can be several of these
 * on any given USB peripheral device, if it provides enough endpoints.
 *
 * The &quot;u_serial&quot; utility component exists to do one thing:  manage TTY
 * style I/O using the USB peripheral endpoints listed here, including
 * hookups to sysfs and /dev for each logical &quot;tty&quot; device.
 *
 * REVISIT at least ACM could support tiocmget() if needed.
 *
 * REVISIT someday, allow multiplexing several TTYs over these endpoints.
 */</doc>
<mbr r='gserial::func' o='0' t='struct usb_function'/>
<mbr r='gserial::ioport' o='1728' t='struct gs_port *'/>
<mbr r='gserial::in' o='1792' t='struct usb_ep *'/>
<mbr r='gserial::out' o='1856' t='struct usb_ep *'/>
<mbr r='gserial::port_line_coding' o='1920' t='struct usb_cdc_line_coding'/>
<mbr r='gserial::connect' o='1984' t='void (*)(struct gserial *)'/>
<mbr r='gserial::disconnect' o='2048' t='void (*)(struct gserial *)'/>
<mbr r='gserial::send_break' o='2112' t='int (*)(struct gserial *, int)'/>
