<dec f='linux-4.14.y/include/linux/skbuff.h' l='3263' type='int skb_store_bits(struct sk_buff * skb, int offset, const void * from, int len)'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='2379' ll='2453' type='int skb_store_bits(struct sk_buff * skb, int offset, const void * from, int len)'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2438' u='c' c='skb_store_bits'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='2454' type='int skb_store_bits(struct sk_buff * , int , const void * , int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2454' c='skb_store_bits'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2454' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2454' u='a'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='2367'>/**
 *	skb_store_bits - store bits from kernel buffer to skb
 *	@skb: destination buffer
 *	@offset: offset in destination
 *	@from: source buffer
 *	@len: number of bytes to copy
 *
 *	Copy the specified number of bytes from the source buffer to the
 *	destination skb.  This function handles all the messy bits of
 *	traversing fragment lists and such.
 */</doc>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='247' u='c' c='nft_payload_l4csum_update'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='263' u='c' c='nft_payload_csum_inet'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='316' u='c' c='nft_payload_set_eval'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='2519' u='c' c='tpacket_fill_skb'/>
