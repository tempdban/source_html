<def f='linux-4.14.y/include/linux/writeback.h' l='174' ll='180' type='void wb_domain_size_changed(struct wb_domain * dom)'/>
<doc f='linux-4.14.y/include/linux/writeback.h' l='162'>/**
 * wb_domain_size_changed - memory available to a wb_domain has changed
 * @dom: wb_domain of interest
 *
 * This function should be called when the amount of memory available to
 * @dom has changed.  It resets @dom&apos;s dirty limit parameters to prevent
 * the past values which don&apos;t match the current configuration from skewing
 * dirty throttling.  Without this, when memory size of a wb_domain is
 * greatly reduced, the dirty throttling logic may allow too many pages to
 * be dirtied leading to consecutive unnecessary OOMs and may get stuck in
 * that situation.
 */</doc>
<def f='linux-4.14.y/include/linux/writeback.h' l='174' ll='180' type='void wb_domain_size_changed(struct wb_domain * dom)'/>
<doc f='linux-4.14.y/include/linux/writeback.h' l='162'>/**
 * wb_domain_size_changed - memory available to a wb_domain has changed
 * @dom: wb_domain of interest
 *
 * This function should be called when the amount of memory available to
 * @dom has changed.  It resets @dom&apos;s dirty limit parameters to prevent
 * the past values which don&apos;t match the current configuration from skewing
 * dirty throttling.  Without this, when memory size of a wb_domain is
 * greatly reduced, the dirty throttling logic may allow too many pages to
 * be dirtied leading to consecutive unnecessary OOMs and may get stuck in
 * that situation.
 */</doc>
