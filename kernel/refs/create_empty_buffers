<dec f='linux-4.18.y/include/linux/buffer_head.h' l='163' type='void create_empty_buffers(struct page * , unsigned long , unsigned long b_state)'/>
<def f='linux-4.18.y/fs/buffer.c' l='1504' ll='1531' type='void create_empty_buffers(struct page * page, unsigned long blocksize, unsigned long b_state)'/>
<dec f='linux-4.18.y/fs/buffer.c' l='1532' type='void create_empty_buffers(struct page * , unsigned long , unsigned long )'/>
<use f='linux-4.18.y/fs/buffer.c' l='1532' c='create_empty_buffers'/>
<use f='linux-4.18.y/fs/buffer.c' l='1532' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='1532' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='1626' u='c' c='create_page_buffers'/>
<use f='linux-4.18.y/fs/buffer.c' l='2860' u='c' c='block_truncate_page'/>
<doc f='linux-4.18.y/fs/buffer.c' l='1499'>/*
 * We attach and possibly dirty the buffers atomically wrt
 * __set_page_dirty_buffers() via private_lock.  try_to_free_buffers
 * is already excluded via the page lock.
 */</doc>
<use f='linux-4.18.y/fs/ext4/inode.c' l='1174' u='c' c='ext4_block_write_begin'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='4000' u='c' c='__ext4_block_zero_page_range'/>
<use f='linux-4.18.y/fs/ext4/move_extent.c' l='184' u='c' c='mext_page_mkuptodate'/>
<use f='linux-4.18.y/fs/ext4/move_extent.c' l='377' u='c' c='move_extent_per_page'/>
<use f='linux-4.18.y/fs/mpage.c' l='120' u='c' c='map_buffer_to_page'/>
<use f='linux-4.18.y/fs/ntfs/aops.c' l='213' u='c' c='ntfs_read_block'/>
<use f='linux-4.18.y/fs/ntfs/aops.c' l='582' u='c' c='ntfs_write_block'/>
<use f='linux-4.18.y/fs/ntfs/file.c' l='634' u='c' c='ntfs_prepare_pages_for_non_resident_write'/>
