<dec f='linux-4.18.y/include/linux/xattr.h' l='41' type='const char * xattr_full_name(const struct xattr_handler * , const char * )'/>
<use f='linux-4.18.y/fs/kernfs/inode.c' l='312' u='c' c='kernfs_xattr_get'/>
<use f='linux-4.18.y/fs/kernfs/inode.c' l='328' u='c' c='kernfs_xattr_set'/>
<def f='linux-4.18.y/fs/xattr.c' l='798' ll='804' type='const char * xattr_full_name(const struct xattr_handler * handler, const char * name)'/>
<dec f='linux-4.18.y/fs/xattr.c' l='805' type='const char * xattr_full_name(const struct xattr_handler * , const char * )'/>
<use f='linux-4.18.y/fs/xattr.c' l='805' c='xattr_full_name'/>
<use f='linux-4.18.y/fs/xattr.c' l='805' u='a'/>
<use f='linux-4.18.y/fs/xattr.c' l='805' u='a'/>
<doc f='linux-4.18.y/fs/xattr.c' l='783'>/**
 * xattr_full_name  -  Compute full attribute name from suffix
 *
 * @handler:	handler of the xattr_handler operation
 * @name:	name passed to the xattr_handler operation
 *
 * The get and set xattr handler operations are called with the remainder of
 * the attribute name after skipping the handler&apos;s prefix: for example, &quot;foo&quot;
 * is passed to the get operation of a handler with prefix &quot;user.&quot; to get
 * attribute &quot;user.foo&quot;.  The full name is still &quot;there&quot; in the name though.
 *
 * Note: the list xattr handler operation when called from the vfs is passed a
 * NULL name; some file systems use this operation internally, with varying
 * semantics.
 */</doc>
<use f='linux-4.18.y/mm/shmem.c' l='3144' u='c' c='shmem_xattr_handler_get'/>
<use f='linux-4.18.y/mm/shmem.c' l='3155' u='c' c='shmem_xattr_handler_set'/>
