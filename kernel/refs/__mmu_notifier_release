<dec f='linux-4.14.y/include/linux/mmu_notifier.h' l='202' type='void __mmu_notifier_release(struct mm_struct * mm)'/>
<use f='linux-4.14.y/include/linux/mmu_notifier.h' l='223' u='c' c='mmu_notifier_release'/>
<def f='linux-4.14.y/mm/mmu_notifier.c' l='57' ll='103' type='void __mmu_notifier_release(struct mm_struct * mm)'/>
<doc f='linux-4.14.y/mm/mmu_notifier.c' l='45'>/*
 * This function can&apos;t run concurrently against mmu_notifier_register
 * because mm-&gt;mm_users &gt; 0 during mmu_notifier_register and exit_mmap
 * runs with mm_users == 0. Other tasks may still invoke mmu notifiers
 * in parallel despite there being no task using this mm any more,
 * through the vmas outside of the exit_mmap context, such as with
 * vmtruncate. This serializes against mmu_notifier_unregister with
 * the mmu_notifier_mm-&gt;lock in addition to SRCU and it serializes
 * against the other mmu notifiers with SRCU. struct mmu_notifier_mm
 * can&apos;t go away from under us as exit_mmap holds an mm_count pin
 * itself.
 */</doc>
<dec f='linux-4.14.y/include/linux/mmu_notifier.h' l='202' type='void __mmu_notifier_release(struct mm_struct * mm)'/>
<use f='linux-4.14.y/include/linux/mmu_notifier.h' l='223' u='c' c='mmu_notifier_release'/>
<def f='linux-4.14.y/mm/mmu_notifier.c' l='57' ll='103' type='void __mmu_notifier_release(struct mm_struct * mm)'/>
<doc f='linux-4.14.y/mm/mmu_notifier.c' l='45'>/*
 * This function can&apos;t run concurrently against mmu_notifier_register
 * because mm-&gt;mm_users &gt; 0 during mmu_notifier_register and exit_mmap
 * runs with mm_users == 0. Other tasks may still invoke mmu notifiers
 * in parallel despite there being no task using this mm any more,
 * through the vmas outside of the exit_mmap context, such as with
 * vmtruncate. This serializes against mmu_notifier_unregister with
 * the mmu_notifier_mm-&gt;lock in addition to SRCU and it serializes
 * against the other mmu notifiers with SRCU. struct mmu_notifier_mm
 * can&apos;t go away from under us as exit_mmap holds an mm_count pin
 * itself.
 */</doc>
