<dec f='linux-4.14.y/include/net/bond_3ad.h' l='298' type='void bond_3ad_state_machine_handler(struct work_struct * )'/>
<def f='linux-4.14.y/drivers/net/bonding/bond_3ad.c' l='2261' ll='2342' type='void bond_3ad_state_machine_handler(struct work_struct * work)'/>
<doc f='linux-4.14.y/drivers/net/bonding/bond_3ad.c' l='2248'>/**
 * bond_3ad_state_machine_handler - handle state machines timeout
 * @bond: bonding struct to work on
 *
 * The state machine handling concept in this module is to check every tick
 * which state machine should operate any function. The execution order is
 * round robin, so when we have an interaction between state machines, the
 * reply of one to each other might be delayed until next tick.
 *
 * This function also complete the initialization when the agg_select_timer
 * times out, and it selects an aggregator for the ports that are yet not
 * related to any aggregator, and selects the active aggregator for a bond.
 */</doc>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='3275' u='r' c='bond_work_init_all'/>
