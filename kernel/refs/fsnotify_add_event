<dec f='linux-4.14.y/include/linux/fsnotify_backend.h' l='328' type='int fsnotify_add_event(struct fsnotify_group * group, struct fsnotify_event * event, int (*)(struct list_head *, struct fsnotify_event *) merge)'/>
<doc f='linux-4.14.y/include/linux/fsnotify_backend.h' l='327'>/* attach the event to the group notification queue */</doc>
<use f='linux-4.14.y/fs/notify/fanotify/fanotify.c' l='217' u='c' c='fanotify_handle_event'/>
<use f='linux-4.14.y/fs/notify/inotify/inotify_fsnotify.c' l='113' u='c' c='inotify_handle_event'/>
<def f='linux-4.14.y/fs/notify/notification.c' l='97' ll='141' type='int fsnotify_add_event(struct fsnotify_group * group, struct fsnotify_event * event, int (*)(struct list_head *, struct fsnotify_event *) merge)'/>
<doc f='linux-4.14.y/fs/notify/notification.c' l='90'>/*
 * Add an event to the group notification queue.  The group can later pull this
 * event off the queue to deal with.  The function returns 0 if the event was
 * added to the queue, 1 if the event was merged with some other queued event,
 * 2 if the event was not queued - either the queue of events has overflown
 * or the group is shutting down.
 */</doc>
<dec f='linux-4.14.y/include/linux/fsnotify_backend.h' l='328' type='int fsnotify_add_event(struct fsnotify_group * group, struct fsnotify_event * event, int (*)(struct list_head *, struct fsnotify_event *) merge)'/>
<doc f='linux-4.14.y/include/linux/fsnotify_backend.h' l='327'>/* attach the event to the group notification queue */</doc>
<use f='linux-4.14.y/fs/notify/fanotify/fanotify.c' l='217' u='c' c='fanotify_handle_event'/>
<use f='linux-4.14.y/fs/notify/inotify/inotify_fsnotify.c' l='113' u='c' c='inotify_handle_event'/>
<def f='linux-4.14.y/fs/notify/notification.c' l='97' ll='141' type='int fsnotify_add_event(struct fsnotify_group * group, struct fsnotify_event * event, int (*)(struct list_head *, struct fsnotify_event *) merge)'/>
<doc f='linux-4.14.y/fs/notify/notification.c' l='90'>/*
 * Add an event to the group notification queue.  The group can later pull this
 * event off the queue to deal with.  The function returns 0 if the event was
 * added to the queue, 1 if the event was merged with some other queued event,
 * 2 if the event was not queued - either the queue of events has overflown
 * or the group is shutting down.
 */</doc>
