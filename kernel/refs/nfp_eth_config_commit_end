<dec f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp.h' l='261' type='int nfp_eth_config_commit_end(struct nfp_nsp * nsp)'/>
<def f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp_eth.c' l='408' ll='422' type='int nfp_eth_config_commit_end(struct nfp_nsp * nsp)'/>
<use f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp_eth.c' l='462' u='c' c='nfp_eth_set_mod_enable'/>
<use f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp_eth.c' l='511' u='c' c='nfp_eth_set_configured'/>
<use f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp_eth.c' l='618' u='c' c='nfp_eth_set_fec'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp_eth.c' l='394'>/*
 * nfp_eth_config_commit_end() - perform recorded configuration changes
 * @nsp:	NFP NSP handle returned from nfp_eth_config_start()
 *
 * Perform the configuration which was requested with __nfp_eth_set_*()
 * helpers and recorded in @nsp state.  If device was already configured
 * as requested or no __nfp_eth_set_*() operations were made no NSP command
 * will be performed.
 *
 * Return:
 * 0 - configuration successful;
 * 1 - no changes were needed;
 * -ERRNO - configuration failed.
 */</doc>
