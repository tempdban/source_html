<dec f='linux-4.18.y/include/linux/jbd2.h' l='1262' type='struct buffer_head * jbd2_journal_get_descriptor_buffer(transaction_t * , int )'/>
<doc f='linux-4.18.y/include/linux/jbd2.h' l='1261'>/* Log buffer allocation */</doc>
<use f='linux-4.18.y/fs/jbd2/commit.c' l='131' u='c' c='journal_submit_commit_record'/>
<use f='linux-4.18.y/fs/jbd2/commit.c' l='592' u='c' c='jbd2_journal_commit_transaction'/>
<def f='linux-4.18.y/fs/jbd2/journal.c' l='845' ll='872' type='struct buffer_head * jbd2_journal_get_descriptor_buffer(transaction_t * transaction, int type)'/>
<doc f='linux-4.18.y/fs/jbd2/journal.c' l='835'>/*
 * We play buffer_head aliasing tricks to write data/metadata blocks to
 * the journal without copying their contents, but for journal
 * descriptor blocks we do need to generate bona fide buffers.
 *
 * After the caller of jbd2_journal_get_descriptor_buffer() has finished modifying
 * the buffer&apos;s contents they really should run flush_dcache_page(bh-&gt;b_page).
 * But we don&apos;t bother doing that, so there will be coherency problems with
 * mmaps of blockdevs which hold live JBD-controlled filesystems.
 */</doc>
<use f='linux-4.18.y/fs/jbd2/revoke.c' l='596' u='c' c='write_one_revoke_record'/>
