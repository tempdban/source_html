<dec f='linux-4.14.y/include/linux/rbtree_augmented.h' l='44' type='void __rb_insert_augmented(struct rb_node * node, struct rb_root * root, bool newleft, struct rb_node ** leftmost, void (*)(struct rb_node *, struct rb_node *) augment_rotate)'/>
<use f='linux-4.14.y/include/linux/rbtree_augmented.h' l='62' u='c' c='rb_insert_augmented'/>
<use f='linux-4.14.y/include/linux/rbtree_augmented.h' l='70' u='c' c='rb_insert_augmented_cached'/>
<def f='linux-4.14.y/lib/rbtree.c' l='491' ll='496' type='void __rb_insert_augmented(struct rb_node * node, struct rb_root * root, bool newleft, struct rb_node ** leftmost, void (*)(struct rb_node *, struct rb_node *) augment_rotate)'/>
<dec f='linux-4.14.y/lib/rbtree.c' l='497' type='void __rb_insert_augmented(struct rb_node * , struct rb_root * , bool , struct rb_node ** , void (*)(struct rb_node *, struct rb_node *) )'/>
<use f='linux-4.14.y/lib/rbtree.c' l='497' c='__rb_insert_augmented'/>
<use f='linux-4.14.y/lib/rbtree.c' l='497' u='a'/>
<use f='linux-4.14.y/lib/rbtree.c' l='497' u='a'/>
<doc f='linux-4.14.y/lib/rbtree.c' l='484'>/*
 * Augmented rbtree manipulation functions.
 *
 * This instantiates the same __always_inline functions as in the non-augmented
 * case, but this time with user-defined callbacks.
 */</doc>
