<dec f='linux-4.14.y/include/drm/drm_framebuffer.h' l='68' type='int (*)(struct drm_framebuffer *, struct drm_file *, unsigned int *)'/>
<offset>64</offset>
<doc f='linux-4.14.y/include/drm/drm_framebuffer.h' l='50'>/**
	 * @create_handle:
	 *
	 * Create a buffer handle in the driver-specific buffer manager (either
	 * GEM or TTM) valid for the passed-in &amp;struct drm_file. This is used by
	 * the core to implement the GETFB IOCTL, which returns (for
	 * sufficiently priviledged user) also a native buffer handle. This can
	 * be used for seamless transitions between modesetting clients by
	 * copying the current screen contents to a private buffer and blending
	 * between that and the new contents.
	 *
	 * GEM based drivers should call drm_gem_handle_create() to create the
	 * handle.
	 *
	 * RETURNS:
	 *
	 * 0 on success or a negative error code on failure.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='472' u='r' c='drm_mode_getfb'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='475' u='r' c='drm_mode_getfb'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='191' u='w'/>
