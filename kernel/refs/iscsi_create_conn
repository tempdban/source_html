<dec f='linux-4.14.y/include/scsi/scsi_transport_iscsi.h' l='437' type='struct iscsi_cls_conn * iscsi_create_conn(struct iscsi_cls_session * sess, int dd_size, uint32_t cid)'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2228' ll='2274' type='struct iscsi_cls_conn * iscsi_create_conn(struct iscsi_cls_session * session, int dd_size, uint32_t cid)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2276' type='struct iscsi_cls_conn * iscsi_create_conn(struct iscsi_cls_session * , int , uint32_t )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2276' c='iscsi_create_conn'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2276' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2276' u='a'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2213'>/**
 * iscsi_create_conn - create iscsi class connection
 * @session: iscsi cls session
 * @dd_size: private driver data size
 * @cid: connection id
 *
 * This can be called from a LLD or iscsi_transport. The connection
 * is child of the session so cid must be unique for all connections
 * on the session.
 *
 * Since we do not support MCS, cid will normally be zero. In some cases
 * for software iscsi we could be trying to preallocate a connection struct
 * in which case there could be two connection structs and cid would be
 * non-zero.
 */</doc>
