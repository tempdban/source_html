<dec f='linux-4.14.y/include/net/inet_connection_sock.h' l='267' type='int inet_csk_get_port(struct sock * sk, unsigned short snum)'/>
<def f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='283' ll='375' type='int inet_csk_get_port(struct sock * sk, unsigned short snum)'/>
<dec f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' type='int inet_csk_get_port(struct sock * , unsigned short )'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' c='inet_csk_get_port'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' u='a'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' u='a'/>
<doc f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='279'>/* Obtain a reference to a local port for the given sock,
 * if snum is zero it means select any available local port.
 * We try to allocate an odd port (and leave even ports for connect())
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp_ipv4.c' l='2420'/>
<use f='linux-4.14.y/net/ipv4/tcp_ipv4.c' l='2420'/>
<dec f='linux-4.14.y/include/net/inet_connection_sock.h' l='267' type='int inet_csk_get_port(struct sock * sk, unsigned short snum)'/>
<def f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='283' ll='375' type='int inet_csk_get_port(struct sock * sk, unsigned short snum)'/>
<dec f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' type='int inet_csk_get_port(struct sock * , unsigned short )'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' c='inet_csk_get_port'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' u='a'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='376' u='a'/>
<doc f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='279'>/* Obtain a reference to a local port for the given sock,
 * if snum is zero it means select any available local port.
 * We try to allocate an odd port (and leave even ports for connect())
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp_ipv4.c' l='2420'/>
<use f='linux-4.14.y/net/ipv4/tcp_ipv4.c' l='2420'/>
