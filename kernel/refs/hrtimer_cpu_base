<def f='linux-4.14.y/include/linux/hrtimer.h' l='174' ll='195'/>
<size>320</size>
<doc f='linux-4.14.y/include/linux/hrtimer.h' l='147'>/*
 * struct hrtimer_cpu_base - the per cpu clock bases
 * @lock:		lock protecting the base and associated clock bases
 *			and timers
 * @seq:		seqcount around __run_hrtimer
 * @running:		pointer to the currently running hrtimer
 * @cpu:		cpu number
 * @active_bases:	Bitfield to mark bases with active timers
 * @clock_was_set_seq:	Sequence counter of clock was set events
 * @migration_enabled:	The migration of hrtimers to other cpus is enabled
 * @nohz_active:	The nohz functionality is enabled
 * @expires_next:	absolute time of the next event which was scheduled
 *			via clock_set_next_event()
 * @next_timer:		Pointer to the first expiring timer
 * @in_hrtirq:		hrtimer_interrupt() is currently executing
 * @hres_active:	State of high resolution mode
 * @hang_detected:	The last hrtimer interrupt detected a hang
 * @nr_events:		Total number of hrtimer interrupt events
 * @nr_retries:		Total number of hrtimer interrupt retries
 * @nr_hangs:		Total number of hrtimer interrupt hangs
 * @max_hang_time:	Maximum time spent in hrtimer_interrupt
 * @clock_base:		array of clock bases for this cpu
 *
 * Note: next_timer is just an optimization for __remove_hrtimer().
 *	 Do not dereference the pointer because it is not reliable on
 *	 cross cpu removals.
 */</doc>
<mbr r='hrtimer_cpu_base::lock' o='0' t='raw_spinlock_t'/>
<mbr r='hrtimer_cpu_base::seq' o='32' t='seqcount_t'/>
<mbr r='hrtimer_cpu_base::running' o='64' t='struct hrtimer *'/>
<mbr r='hrtimer_cpu_base::cpu' o='128' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::active_bases' o='160' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::clock_was_set_seq' o='192' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::migration_enabled' o='224' t='bool'/>
<mbr r='hrtimer_cpu_base::nohz_active' o='232' t='bool'/>
<mbr r='hrtimer_cpu_base::in_hrtirq' o='240' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::hres_active' o='241' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::hang_detected' o='242' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::expires_next' o='256' t='ktime_t'/>
<mbr r='hrtimer_cpu_base::next_timer' o='320' t='struct hrtimer *'/>
<mbr r='hrtimer_cpu_base::nr_events' o='384' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::nr_retries' o='416' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::nr_hangs' o='448' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::max_hang_time' o='480' t='unsigned int'/>
<mbr r='hrtimer_cpu_base::clock_base' o='512' t='struct hrtimer_clock_base [4]'/>
