<dec f='linux-4.18.y/include/linux/spi/spi.h' l='1028' type='int spi_sync(struct spi_device * spi, struct spi_message * message)'/>
<use f='linux-4.18.y/include/linux/spi/spi.h' l='1054' u='c' c='spi_sync_transfer'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap-spi.c' l='54' u='c' c='regmap_spi_gather_write'/>
<doc f='linux-4.18.y/include/linux/spi/spi.h' l='1023'>/* All these synchronous SPI transfer routines are utilities layered
 * over the core async transfer primitive.  Here, &quot;synchronous&quot; means
 * they will sleep uninterruptibly until the async transfer completes.
 */</doc>
<def f='linux-4.18.y/drivers/spi/spi.c' l='3156' ll='3165' type='int spi_sync(struct spi_device * spi, struct spi_message * message)'/>
<dec f='linux-4.18.y/drivers/spi/spi.c' l='3166' type='int spi_sync(struct spi_device * , struct spi_message * )'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='3166' c='spi_sync'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='3166' u='a'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='3166' u='a'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='3311' u='c' c='spi_write_then_read'/>
<doc f='linux-4.18.y/drivers/spi/spi.c' l='3135'>/**
 * spi_sync - blocking/synchronous SPI data transfers
 * @spi: device with which data will be exchanged
 * @message: describes the data transfers
 * Context: can sleep
 *
 * This call may only be used from a context that may sleep.  The sleep
 * is non-interruptible, and has no timeout.  Low-overhead controller
 * drivers may DMA directly into and out of the message buffers.
 *
 * Note that the SPI device&apos;s chip select is active during the message,
 * and then is normally disabled between messages.  Drivers for some
 * frequently-used devices may want to minimize costs of selecting a chip,
 * by leaving it selected in anticipation that the next message will go
 * to the same chip.  (That may increase power usage.)
 *
 * Also, the caller is guaranteeing that the memory associated with the
 * message will not be freed before this call returns.
 *
 * Return: zero on success, else a negative error code.
 */</doc>
