<def f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='36' ll='42'/>
<size>520</size>
<doc f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='24'>/**
 * struct usb_udc - describes one usb device controller
 * @driver - the gadget driver pointer. For use by the class code
 * @dev - the child device to the actual controller
 * @gadget - the gadget. For use by the class code
 * @list - for use by the udc class driver
 * @vbus - for udcs who care about vbus status, this value is real vbus status;
 * for udcs who do not care about vbus status, this value is always true
 *
 * This represents the internal data structure which is used by the UDC-class
 * to hold information about udc driver and gadget together.
 */</doc>
<mbr r='usb_udc::driver' o='0' t='struct usb_gadget_driver *'/>
<mbr r='usb_udc::gadget' o='64' t='struct usb_gadget *'/>
<mbr r='usb_udc::dev' o='128' t='struct device'/>
<mbr r='usb_udc::list' o='3968' t='struct list_head'/>
<mbr r='usb_udc::vbus' o='4096' t='bool'/>
