<dec f='linux-4.14.y/include/acpi/acpixf.h' l='760' type='acpi_status acpi_mark_gpe_for_wake(acpi_handle gpe_device, u32 gpe_number)'/>
<def f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='321' ll='344' type='acpi_status acpi_mark_gpe_for_wake(acpi_handle gpe_device, u32 gpe_number)'/>
<dec f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' type='acpi_status acpi_mark_gpe_for_wake(acpi_handle , u32 )'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' c='acpi_mark_gpe_for_wake'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' u='a'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' u='a'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='301'>/*******************************************************************************
 *
 * FUNCTION:    acpi_mark_gpe_for_wake
 *
 * PARAMETERS:  gpe_device          - Parent GPE Device. NULL for GPE0/GPE1
 *              gpe_number          - GPE level within the GPE block
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Mark a GPE as having the ability to wake the system. Simply
 *              sets the ACPI_GPE_CAN_WAKE flag.
 *
 * Some potential callers of acpi_setup_gpe_for_wake may know in advance that
 * there won&apos;t be any notify handlers installed for device wake notifications
 * from the given GPE (one example is a button GPE in Linux). For these cases,
 * acpi_mark_gpe_for_wake should be used instead of acpi_setup_gpe_for_wake.
 * This will set the ACPI_GPE_CAN_WAKE flag for the GPE without trying to
 * setup implicit wake notification for it (since there&apos;s no handler method).
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/scan.c' l='867' u='c' c='acpi_wakeup_gpe_init'/>
<dec f='linux-4.14.y/include/acpi/acpixf.h' l='760' type='acpi_status acpi_mark_gpe_for_wake(acpi_handle gpe_device, u32 gpe_number)'/>
<def f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='321' ll='344' type='acpi_status acpi_mark_gpe_for_wake(acpi_handle gpe_device, u32 gpe_number)'/>
<dec f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' type='acpi_status acpi_mark_gpe_for_wake(acpi_handle , u32 )'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' c='acpi_mark_gpe_for_wake'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' u='a'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='346' u='a'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='301'>/*******************************************************************************
 *
 * FUNCTION:    acpi_mark_gpe_for_wake
 *
 * PARAMETERS:  gpe_device          - Parent GPE Device. NULL for GPE0/GPE1
 *              gpe_number          - GPE level within the GPE block
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Mark a GPE as having the ability to wake the system. Simply
 *              sets the ACPI_GPE_CAN_WAKE flag.
 *
 * Some potential callers of acpi_setup_gpe_for_wake may know in advance that
 * there won&apos;t be any notify handlers installed for device wake notifications
 * from the given GPE (one example is a button GPE in Linux). For these cases,
 * acpi_mark_gpe_for_wake should be used instead of acpi_setup_gpe_for_wake.
 * This will set the ACPI_GPE_CAN_WAKE flag for the GPE without trying to
 * setup implicit wake notification for it (since there&apos;s no handler method).
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/scan.c' l='867' u='c' c='acpi_wakeup_gpe_init'/>
