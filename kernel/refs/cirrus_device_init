<dec f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_drv.h' l='183' type='int cirrus_device_init(struct cirrus_device * cdev, struct drm_device * ddev, struct pci_dev * pdev, uint32_t flags)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_drv.h' l='182'>/* cirrus_main.c */</doc>
<def f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_main.c' l='128' ll='162' type='int cirrus_device_init(struct cirrus_device * cdev, struct drm_device * ddev, struct pci_dev * pdev, uint32_t flags)'/>
<use f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_main.c' l='185' u='c' c='cirrus_driver_load'/>
<doc f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_main.c' l='121'>/*
 * Our emulated hardware has two sets of memory. One is video RAM and can
 * simply be used as a linear framebuffer - the other provides mmio access
 * to the display registers. The latter can also be accessed via IO port
 * access, but we map the range and use mmio to program them instead
 */</doc>
