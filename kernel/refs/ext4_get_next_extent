<dec f='linux-4.14.y/fs/ext4/ext4.h' l='2514' type='int ext4_get_next_extent(struct inode * inode, ext4_lblk_t lblk, unsigned int map_len, struct extent_status * result)'/>
<use f='linux-4.14.y/fs/ext4/file.c' l='586' u='c' c='ext4_seek_data'/>
<use f='linux-4.14.y/fs/ext4/file.c' l='649' u='c' c='ext4_seek_hole'/>
<def f='linux-4.14.y/fs/ext4/inode.c' l='6141' ll='6198' type='int ext4_get_next_extent(struct inode * inode, ext4_lblk_t lblk, unsigned int map_len, struct extent_status * result)'/>
<doc f='linux-4.14.y/fs/ext4/inode.c' l='6133'>/*
 * Find the first extent at or after @lblk in an inode that is not a hole.
 * Search for @map_len blocks at most. The extent is returned in @result.
 *
 * The function returns 1 if we found an extent. The function returns 0 in
 * case there is no extent at or after @lblk and in that case also sets
 * @result-&gt;es_len to 0. In case of error, the error code is returned.
 */</doc>
