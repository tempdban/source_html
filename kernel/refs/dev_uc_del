<dec f='linux-4.14.y/include/linux/netdevice.h' l='3757' type='int dev_uc_del(struct net_device * dev, const unsigned char * addr)'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='657' u='c' c='macvlan_open'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='694' u='c' c='macvlan_stop'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='721' u='c' c='macvlan_sync_address'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='1004' u='c' c='macvlan_fdb_del'/>
<use f='linux-4.14.y/net/bridge/br_fdb.c' l='152' u='c' c='fdb_add_hw_addr'/>
<use f='linux-4.14.y/net/bridge/br_fdb.c' l='169' u='c' c='fdb_del_hw_addr'/>
<use f='linux-4.14.y/net/bridge/br_fdb.c' l='1045' u='c' c='br_fdb_sync_static'/>
<use f='linux-4.14.y/net/bridge/br_fdb.c' l='1064' u='c' c='br_fdb_unsync_static'/>
<def f='linux-4.14.y/net/core/dev_addr_lists.c' l='510' ll='521' type='int dev_uc_del(struct net_device * dev, const unsigned char * addr)'/>
<dec f='linux-4.14.y/net/core/dev_addr_lists.c' l='522' type='int dev_uc_del(struct net_device * , const unsigned char * )'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='522' c='dev_uc_del'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='522' u='a'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='522' u='a'/>
<doc f='linux-4.14.y/net/core/dev_addr_lists.c' l='502'>/**
 *	dev_uc_del - Release secondary unicast address.
 *	@dev: device
 *	@addr: address to delete
 *
 *	Release reference to a secondary unicast address and remove it
 *	from the device if the reference count drops to zero.
 */</doc>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3138' u='c' c='ndo_dflt_fdb_del'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3503' u='c' c='packet_dev_mc'/>
