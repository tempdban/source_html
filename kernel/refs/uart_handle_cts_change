<dec f='linux-4.14.y/include/linux/serial_core.h' l='456' type='void uart_handle_cts_change(struct uart_port * uport, unsigned int status)'/>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_port.c' l='1840' u='c' c='serial8250_modem_status'/>
<def f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2970' ll='2991' type='void uart_handle_cts_change(struct uart_port * uport, unsigned int status)'/>
<dec f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' type='void uart_handle_cts_change(struct uart_port * , unsigned int )'/>
<use f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' c='uart_handle_cts_change'/>
<use f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' u='a'/>
<use f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' u='a'/>
<doc f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2963'>/**
 *	uart_handle_cts_change - handle a change of clear-to-send state
 *	@uport: uart_port structure for the open port
 *	@status: new clear to send status, nonzero if active
 *
 *	Caller must hold uport-&gt;lock
 */</doc>
<dec f='linux-4.14.y/include/linux/serial_core.h' l='456' type='void uart_handle_cts_change(struct uart_port * uport, unsigned int status)'/>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_port.c' l='1840' u='c' c='serial8250_modem_status'/>
<def f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2970' ll='2991' type='void uart_handle_cts_change(struct uart_port * uport, unsigned int status)'/>
<dec f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' type='void uart_handle_cts_change(struct uart_port * , unsigned int )'/>
<use f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' c='uart_handle_cts_change'/>
<use f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' u='a'/>
<use f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2992' u='a'/>
<doc f='linux-4.14.y/drivers/tty/serial/serial_core.c' l='2963'>/**
 *	uart_handle_cts_change - handle a change of clear-to-send state
 *	@uport: uart_port structure for the open port
 *	@status: new clear to send status, nonzero if active
 *
 *	Caller must hold uport-&gt;lock
 */</doc>
