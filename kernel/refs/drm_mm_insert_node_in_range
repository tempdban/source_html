<dec f='linux-4.14.y/include/drm/drm_mm.h' l='371' type='int drm_mm_insert_node_in_range(struct drm_mm * mm, struct drm_mm_node * node, u64 size, u64 alignment, unsigned long color, u64 start, u64 end, enum drm_mm_insert_mode mode)'/>
<use f='linux-4.14.y/include/drm/drm_mm.h' l='403' u='c' c='drm_mm_insert_node_generic'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='444' ll='533' type='int drm_mm_insert_node_in_range(struct drm_mm *const mm, struct drm_mm_node *const node, u64 size, u64 alignment, unsigned long color, u64 range_start, u64 range_end, enum drm_mm_insert_mode mode)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' type='int drm_mm_insert_node_in_range(struct drm_mm * , struct drm_mm_node * , u64 , u64 , unsigned long , u64 , u64 , enum drm_mm_insert_mode )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' c='drm_mm_insert_node_in_range'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='428'>/**
 * drm_mm_insert_node_in_range - ranged search for space and insert @node
 * @mm: drm_mm to allocate from
 * @node: preallocate node to insert
 * @size: size of the allocation
 * @alignment: alignment of the allocation
 * @color: opaque tag value to use for this node
 * @range_start: start of the allowed range for this node
 * @range_end: end of the allowed range for this node
 * @mode: fine-tune the allocation search and placement
 *
 * The preallocated @node must be cleared to 0.
 *
 * Returns:
 * 0 on success, -ENOSPC if there&apos;s no suitable hole.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_bo_manager.c' l='75' u='c' c='ttm_bo_man_get_node'/>
<dec f='linux-4.14.y/include/drm/drm_mm.h' l='371' type='int drm_mm_insert_node_in_range(struct drm_mm * mm, struct drm_mm_node * node, u64 size, u64 alignment, unsigned long color, u64 start, u64 end, enum drm_mm_insert_mode mode)'/>
<use f='linux-4.14.y/include/drm/drm_mm.h' l='403' u='c' c='drm_mm_insert_node_generic'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='444' ll='533' type='int drm_mm_insert_node_in_range(struct drm_mm *const mm, struct drm_mm_node *const node, u64 size, u64 alignment, unsigned long color, u64 range_start, u64 range_end, enum drm_mm_insert_mode mode)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' type='int drm_mm_insert_node_in_range(struct drm_mm * , struct drm_mm_node * , u64 , u64 , unsigned long , u64 , u64 , enum drm_mm_insert_mode )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' c='drm_mm_insert_node_in_range'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='534' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='428'>/**
 * drm_mm_insert_node_in_range - ranged search for space and insert @node
 * @mm: drm_mm to allocate from
 * @node: preallocate node to insert
 * @size: size of the allocation
 * @alignment: alignment of the allocation
 * @color: opaque tag value to use for this node
 * @range_start: start of the allowed range for this node
 * @range_end: end of the allowed range for this node
 * @mode: fine-tune the allocation search and placement
 *
 * The preallocated @node must be cleared to 0.
 *
 * Returns:
 * 0 on success, -ENOSPC if there&apos;s no suitable hole.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_bo_manager.c' l='75' u='c' c='ttm_bo_man_get_node'/>
