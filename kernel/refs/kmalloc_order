<dec f='linux-4.18.y/include/linux/slab.h' l='432' type='void * kmalloc_order(size_t size, gfp_t flags, unsigned int order)'/>
<def f='linux-4.18.y/mm/slab_common.c' l='1177' ll='1188' type='void * kmalloc_order(size_t size, gfp_t flags, unsigned int order)'/>
<dec f='linux-4.18.y/mm/slab_common.c' l='1189' type='void * kmalloc_order(size_t , gfp_t , unsigned int )'/>
<use f='linux-4.18.y/mm/slab_common.c' l='1189' c='kmalloc_order'/>
<use f='linux-4.18.y/mm/slab_common.c' l='1189' u='a'/>
<use f='linux-4.18.y/mm/slab_common.c' l='1189' u='a'/>
<use f='linux-4.18.y/mm/slab_common.c' l='1194' u='c' c='kmalloc_order_trace'/>
<doc f='linux-4.18.y/mm/slab_common.c' l='1172'>/*
 * To avoid unnecessary overhead, we pass through large allocation requests
 * directly to the page allocator. We use __GFP_COMP, because we will need to
 * know the allocation order to free the pages properly in kfree.
 */</doc>
