<dec f='linux-4.18.y/include/drm/ttm/ttm_object.h' l='328' type='int ttm_prime_object_init(struct ttm_object_file * tfile, size_t size, struct ttm_prime_object * prime, bool shareable, enum ttm_object_type type, void (*)(struct ttm_base_object **) refcount_release, void (*)(struct ttm_base_object *, enum ttm_ref_type) ref_obj_release)'/>
<def f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='758' ll='774' type='int ttm_prime_object_init(struct ttm_object_file * tfile, size_t size, struct ttm_prime_object * prime, bool shareable, enum ttm_object_type type, void (*)(struct ttm_base_object **) refcount_release, void (*)(struct ttm_base_object *, enum ttm_ref_type) ref_obj_release)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='775' type='int ttm_prime_object_init(struct ttm_object_file * , size_t , struct ttm_prime_object * , bool , enum ttm_object_type , void (*)(struct ttm_base_object **) , void (*)(struct ttm_base_object *, enum ttm_ref_type) )'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='775' c='ttm_prime_object_init'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='775' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='775' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='744'>/**
 * ttm_prime_object_init - Initialize a ttm_prime_object
 *
 * @tfile: struct ttm_object_file identifying the caller
 * @size: The size of the dma_bufs we export.
 * @prime: The object to be initialized.
 * @shareable: See ttm_base_object_init
 * @type: See ttm_base_object_init
 * @refcount_release: See ttm_base_object_init
 * @ref_obj_release: See ttm_base_object_init
 *
 * Initializes an object which is compatible with the drm_prime model
 * for data sharing between processes and devices.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='465' u='c' c='vmw_user_dmabuf_alloc'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='858' u='c' c='vmw_surface_define_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='1349' u='c' c='vmw_gb_surface_define_ioctl'/>
