<def f='linux-4.14.y/drivers/android/binder.c' l='446' ll='458'/>
<size>104</size>
<doc f='linux-4.14.y/drivers/android/binder.c' l='429'>/**
 * struct binder_ref - struct to track references on nodes
 * @data:        binder_ref_data containing id, handle, and current refcounts
 * @rb_node_desc: node for lookup by @data.desc in proc&apos;s rb_tree
 * @rb_node_node: node for lookup by @node in proc&apos;s rb_tree
 * @node_entry:  list entry for node-&gt;refs list in target node
 *               (protected by @node-&gt;lock)
 * @proc:        binder_proc containing ref
 * @node:        binder_node of target node. When cleaning up a
 *               ref for deletion in binder_cleanup_ref, a non-NULL
 *               @node indicates the node must be freed
 * @death:       pointer to death notification (ref_death) if requested
 *               (protected by @node-&gt;lock)
 *
 * Structure to track references from procA to target node (on procB). This
 * structure is unsafe to access without holding @proc-&gt;outer_lock.
 */</doc>
