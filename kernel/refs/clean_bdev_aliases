<dec f='linux-4.18.y/include/linux/buffer_head.h' l='175' type='void clean_bdev_aliases(struct block_device * bdev, sector_t block, sector_t len)'/>
<use f='linux-4.18.y/include/linux/buffer_head.h' l='179' u='c' c='clean_bdev_bh_alias'/>
<def f='linux-4.18.y/fs/buffer.c' l='1554' ll='1605' type='void clean_bdev_aliases(struct block_device * bdev, sector_t block, sector_t len)'/>
<dec f='linux-4.18.y/fs/buffer.c' l='1606' type='void clean_bdev_aliases(struct block_device * , sector_t , sector_t )'/>
<use f='linux-4.18.y/fs/buffer.c' l='1606' c='clean_bdev_aliases'/>
<use f='linux-4.18.y/fs/buffer.c' l='1606' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='1606' u='a'/>
<doc f='linux-4.18.y/fs/buffer.c' l='1534'>/**
 * clean_bdev_aliases: clean a range of buffers in block device
 * @bdev: Block device to clean buffers in
 * @block: Start of a range of blocks to clean
 * @len: Number of blocks to clean
 *
 * We are taking a range of blocks for data and we don&apos;t want writeback of any
 * buffer-cache aliases starting from return from this function and until the
 * moment when something will explicitly mark the buffer dirty (hopefully that
 * will not happen until we will free that block ;-) We don&apos;t even need to mark
 * it not-uptodate - nobody can expect anything from a newly allocated buffer
 * anyway. We used to use unmap_buffer() for such invalidation, but that was
 * wrong. We definitely don&apos;t want to mark the alias unmapped, for example - it
 * would confuse anyone who might pick it with bread() afterwards...
 *
 * Also..  Note that bforget() doesn&apos;t lock the buffer.  So there can be
 * writeout I/O going on against recently-freed buffers.  We don&apos;t wait on that
 * I/O in bforget() - it&apos;s more efficient to wait on the I/O only if we really
 * need to.  That happens here.
 */</doc>
<use f='linux-4.18.y/fs/direct-io.c' l='1014' u='c' c='do_direct_IO'/>
<use f='linux-4.18.y/fs/ext4/extents.c' l='4105' u='c' c='ext4_ext_handle_unwritten_extents'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='681' u='c' c='ext4_map_blocks'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='2464' u='c' c='mpage_map_one_extent'/>
