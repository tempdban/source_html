<dec f='linux-4.14.y/include/drm/drm_plane_helper.h' l='77' type='int drm_plane_helper_disable(struct drm_plane * plane)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='594' ll='619' type='int drm_plane_helper_disable(struct drm_plane * plane)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='620' type='int drm_plane_helper_disable(struct drm_plane * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='620' c='drm_plane_helper_disable'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='620' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='620' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='581'>/**
 * drm_plane_helper_disable() - Transitional helper for plane disable
 * @plane: plane to disable
 *
 * Provides a default plane disable handler using the atomic plane update
 * functions. It is fully left to the driver to check plane constraints and
 * handle corner-cases like a fully occluded or otherwise invisible plane.
 *
 * This is useful for piecewise transitioning of a driver to the atomic helpers.
 *
 * RETURNS:
 * Zero on success, error code on failure
 */</doc>
