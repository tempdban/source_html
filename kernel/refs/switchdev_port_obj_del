<dec f='linux-4.18.y/include/net/switchdev.h' l='176' type='int switchdev_port_obj_del(struct net_device * dev, const struct switchdev_obj * obj)'/>
<use f='linux-4.18.y/net/bridge/br_mdb.c' l='320' u='c' c='br_mdb_switchdev_host_port'/>
<use f='linux-4.18.y/net/bridge/br_mdb.c' l='371' u='c' c='__br_mdb_notify'/>
<use f='linux-4.18.y/net/bridge/br_switchdev.c' l='162' u='c' c='br_switchdev_port_vlan_del'/>
<def f='linux-4.18.y/net/switchdev/switchdev.c' l='527' ll='534' type='int switchdev_port_obj_del(struct net_device * dev, const struct switchdev_obj * obj)'/>
<dec f='linux-4.18.y/net/switchdev/switchdev.c' l='535' type='int switchdev_port_obj_del(struct net_device * , const struct switchdev_obj * )'/>
<use f='linux-4.18.y/net/switchdev/switchdev.c' l='535' c='switchdev_port_obj_del'/>
<use f='linux-4.18.y/net/switchdev/switchdev.c' l='535' u='a'/>
<use f='linux-4.18.y/net/switchdev/switchdev.c' l='535' u='a'/>
<doc f='linux-4.18.y/net/switchdev/switchdev.c' l='517'>/**
 *	switchdev_port_obj_del - Delete port object
 *
 *	@dev: port device
 *	@id: object ID
 *	@obj: object to delete
 *
 *	rtnl_lock must be held and must not be in atomic section,
 *	in case SWITCHDEV_F_DEFER flag is not set.
 */</doc>
