<def f='linux-4.18.y/include/crypto/internal/scompress.h' l='33' ll='43'/>
<size>448</size>
<doc f='linux-4.18.y/include/crypto/internal/scompress.h' l='24'>/**
 * struct scomp_alg - synchronous compression algorithm
 *
 * @alloc_ctx:	Function allocates algorithm specific context
 * @free_ctx:	Function frees context allocated with alloc_ctx
 * @compress:	Function performs a compress operation
 * @decompress:	Function performs a de-compress operation
 * @base:	Common crypto API algorithm data structure
 */</doc>
<mbr r='scomp_alg::alloc_ctx' o='0' t='void *(*)(struct crypto_scomp *)'/>
<mbr r='scomp_alg::free_ctx' o='64' t='void (*)(struct crypto_scomp *, void *)'/>
<mbr r='scomp_alg::compress' o='128' t='int (*)(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *)'/>
<mbr r='scomp_alg::decompress' o='192' t='int (*)(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *)'/>
<mbr r='scomp_alg::base' o='256' t='struct crypto_alg'/>
