<dec f='linux-4.14.y/include/linux/libata.h' l='1156' type='void ata_msleep(struct ata_port * ap, unsigned int msecs)'/>
<use f='linux-4.14.y/drivers/ata/ahci.c' l='806' u='c' c='ahci_avn_hardreset'/>
<use f='linux-4.14.y/drivers/ata/libahci.c' l='785' u='c' c='ahci_set_lpm'/>
<use f='linux-4.14.y/drivers/ata/libahci.c' l='1428' u='c' c='ahci_do_softreset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3763' u='c' c='ata_wait_ready'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3784' u='c' c='ata_wait_after_reset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3832' u='c' c='sata_link_debounce'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3898' u='c' c='sata_link_resume'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4107' u='c' c='sata_link_hardreset'/>
<def f='linux-4.14.y/drivers/ata/libata-core.c' l='7050' ll='7066' type='void ata_msleep(struct ata_port * ap, unsigned int msecs)'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7107' u='c' c='ata_wait_register'/>
<dec f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' type='void ata_msleep(struct ata_port * , unsigned int )'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' c='ata_msleep'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' u='a'/>
<doc f='linux-4.14.y/drivers/ata/libata-core.c' l='7036'>/**
 *	ata_msleep - ATA EH owner aware msleep
 *	@ap: ATA port to attribute the sleep to
 *	@msecs: duration to sleep in milliseconds
 *
 *	Sleeps @msecs.  If the current task is owner of @ap&apos;s EH, the
 *	ownership is released before going to sleep and reacquired
 *	after the sleep is complete.  IOW, other ports sharing the
 *	@ap-&gt;host will be allowed to own the EH while this task is
 *	sleeping.
 *
 *	LOCKING:
 *	Might sleep.
 */</doc>
<use f='linux-4.14.y/drivers/ata/libata-eh.c' l='863' u='c' c='ata_port_wait_eh'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='226' u='c' c='ata_sff_busy_sleep'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='238' u='c' c='ata_sff_busy_sleep'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='364' u='c' c='ata_dev_select'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1344' u='c' c='ata_sff_pio_task'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1928' u='c' c='ata_sff_wait_after_reset'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1957' u='c' c='ata_sff_wait_after_reset'/>
<dec f='linux-4.14.y/include/linux/libata.h' l='1156' type='void ata_msleep(struct ata_port * ap, unsigned int msecs)'/>
<use f='linux-4.14.y/drivers/ata/ahci.c' l='806' u='c' c='ahci_avn_hardreset'/>
<use f='linux-4.14.y/drivers/ata/libahci.c' l='785' u='c' c='ahci_set_lpm'/>
<use f='linux-4.14.y/drivers/ata/libahci.c' l='1428' u='c' c='ahci_do_softreset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3763' u='c' c='ata_wait_ready'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3784' u='c' c='ata_wait_after_reset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3832' u='c' c='sata_link_debounce'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3898' u='c' c='sata_link_resume'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4107' u='c' c='sata_link_hardreset'/>
<def f='linux-4.14.y/drivers/ata/libata-core.c' l='7050' ll='7066' type='void ata_msleep(struct ata_port * ap, unsigned int msecs)'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7107' u='c' c='ata_wait_register'/>
<dec f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' type='void ata_msleep(struct ata_port * , unsigned int )'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' c='ata_msleep'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='7292' u='a'/>
<doc f='linux-4.14.y/drivers/ata/libata-core.c' l='7036'>/**
 *	ata_msleep - ATA EH owner aware msleep
 *	@ap: ATA port to attribute the sleep to
 *	@msecs: duration to sleep in milliseconds
 *
 *	Sleeps @msecs.  If the current task is owner of @ap&apos;s EH, the
 *	ownership is released before going to sleep and reacquired
 *	after the sleep is complete.  IOW, other ports sharing the
 *	@ap-&gt;host will be allowed to own the EH while this task is
 *	sleeping.
 *
 *	LOCKING:
 *	Might sleep.
 */</doc>
<use f='linux-4.14.y/drivers/ata/libata-eh.c' l='863' u='c' c='ata_port_wait_eh'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='226' u='c' c='ata_sff_busy_sleep'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='238' u='c' c='ata_sff_busy_sleep'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='364' u='c' c='ata_dev_select'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1344' u='c' c='ata_sff_pio_task'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1928' u='c' c='ata_sff_wait_after_reset'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1957' u='c' c='ata_sff_wait_after_reset'/>
