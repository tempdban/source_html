<dec f='linux-4.14.y/include/linux/etherdevice.h' l='44' type='void eth_header_cache_update(struct hh_cache * hh, const struct net_device * dev, const unsigned char * haddr)'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='596'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='596'/>
<def f='linux-4.14.y/net/ethernet/eth.c' l='255' ll='261' type='void eth_header_cache_update(struct hh_cache * hh, const struct net_device * dev, const unsigned char * haddr)'/>
<dec f='linux-4.14.y/net/ethernet/eth.c' l='262' type='void eth_header_cache_update(struct hh_cache * , const struct net_device * , const unsigned char * )'/>
<use f='linux-4.14.y/net/ethernet/eth.c' l='262' c='eth_header_cache_update'/>
<use f='linux-4.14.y/net/ethernet/eth.c' l='262' u='a'/>
<use f='linux-4.14.y/net/ethernet/eth.c' l='262' u='a'/>
<use f='linux-4.14.y/net/ethernet/eth.c' l='345'/>
<use f='linux-4.14.y/net/ethernet/eth.c' l='345'/>
<doc f='linux-4.14.y/net/ethernet/eth.c' l='247'>/**
 * eth_header_cache_update - update cache entry
 * @hh: destination cache entry
 * @dev: network device
 * @haddr: new hardware address
 *
 * Called by Address Resolution module to notify changes in address.
 */</doc>
