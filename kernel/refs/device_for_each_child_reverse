<dec f='linux-4.18.y/include/linux/device.h' l='1171' type='int device_for_each_child_reverse(struct device * dev, void * data, int (*)(struct device *, void *) fn)'/>
<def f='linux-4.18.y/drivers/base/core.c' l='2179' ll='2194' type='int device_for_each_child_reverse(struct device * parent, void * data, int (*)(struct device *, void *) fn)'/>
<dec f='linux-4.18.y/drivers/base/core.c' l='2195' type='int device_for_each_child_reverse(struct device * , void * , int (*)(struct device *, void *) )'/>
<use f='linux-4.18.y/drivers/base/core.c' l='2195' c='device_for_each_child_reverse'/>
<use f='linux-4.18.y/drivers/base/core.c' l='2195' u='a'/>
<use f='linux-4.18.y/drivers/base/core.c' l='2195' u='a'/>
<doc f='linux-4.18.y/drivers/base/core.c' l='2167'>/**
 * device_for_each_child_reverse - device child iterator in reversed order.
 * @parent: parent struct device.
 * @fn: function to be called for each device.
 * @data: data for the callback.
 *
 * Iterate over @parent&apos;s child devices, and call @fn for each,
 * passing it @data.
 *
 * We check the return of @fn each time. If it returns anything
 * other than 0, we break out and return that value.
 */</doc>
