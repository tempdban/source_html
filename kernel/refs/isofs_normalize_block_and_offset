<def f='linux-4.14.y/fs/isofs/isofs.h' l='186' ll='197' type='void isofs_normalize_block_and_offset(struct iso_directory_record * de, unsigned long * block, unsigned long * offset)'/>
<doc f='linux-4.14.y/fs/isofs/isofs.h' l='155'>/* Every directory can have many redundant directory entries scattered
 * throughout the directory tree.  First there is the directory entry
 * with the name of the directory stored in the parent directory.
 * Then, there is the &quot;.&quot; directory entry stored in the directory
 * itself.  Finally, there are possibly many &quot;..&quot; directory entries
 * stored in all the subdirectories.
 *
 * In order for the NFS get_parent() method to work and for the
 * general consistency of the dcache, we need to make sure the
 * &quot;i_iget5_block&quot; and &quot;i_iget5_offset&quot; all point to exactly one of
 * the many redundant entries for each directory.  We normalize the
 * block and offset by always making them point to the &quot;.&quot;  directory.
 *
 * Notice that we do not use the entry for the directory with the name
 * that is located in the parent directory.  Even though choosing this
 * first directory is more natural, it is much easier to find the &quot;.&quot;
 * entry in the NFS get_parent() method because it is implicitly
 * encoded in the &quot;extent + ext_attr_length&quot; fields of _all_ the
 * redundant entries for the directory.  Thus, it can always be
 * reached regardless of which directory entry you have in hand.
 *
 * This works because the &quot;.&quot; entry is simply the first directory
 * record when you start reading the file that holds all the directory
 * records, and this file starts at &quot;extent + ext_attr_length&quot; blocks.
 * Because the &quot;.&quot; entry is always the first entry listed in the
 * directories file, the normalized &quot;offset&quot; value is always 0.
 *
 * You should pass the directory entry in &quot;de&quot;.  On return, &quot;block&quot;
 * and &quot;offset&quot; will hold normalized values.  Only directories are
 * affected making it safe to call even for non-directory file
 * types. */</doc>
<use f='linux-4.14.y/fs/isofs/dir.c' l='159' u='c' c='do_isofs_readdir'/>
<use f='linux-4.14.y/fs/isofs/export.c' l='100' u='c' c='isofs_export_get_parent'/>
<use f='linux-4.14.y/fs/isofs/namei.c' l='139' u='c' c='isofs_find_entry'/>
