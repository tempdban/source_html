<def f='linux-4.18.y/include/linux/skbuff.h' l='2960' ll='2972' type='int __skb_put_padto(struct sk_buff * skb, unsigned int len, bool free_on_error)'/>
<use f='linux-4.18.y/include/linux/skbuff.h' l='2986' u='c' c='skb_put_padto'/>
<doc f='linux-4.18.y/include/linux/skbuff.h' l='2949'>/**
 *	skb_put_padto - increase size and pad an skbuff up to a minimal size
 *	@skb: buffer to pad
 *	@len: minimal length
 *	@free_on_error: free buffer on error
 *
 *	Pads up a buffer to ensure the trailing bytes exist and are
 *	blanked. If the buffer already contains sufficient data it
 *	is untouched. Otherwise it is extended. Returns zero on
 *	success. The skb is freed on error if @free_on_error is true.
 */</doc>
