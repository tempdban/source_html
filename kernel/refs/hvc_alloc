<dec f='linux-4.14.y/drivers/tty/hvc/hvc_console.h' l='89' type='struct hvc_struct * hvc_alloc(uint32_t vtermno, int data, const struct hv_ops * ops, int outbuf_size)'/>
<use f='linux-4.14.y/drivers/char/virtio_console.c' l='1264' u='c' c='init_port_console'/>
<doc f='linux-4.14.y/drivers/tty/hvc/hvc_console.h' l='88'>/* register a vterm for hvc tty operation (module_init or hotplug add) */</doc>
<def f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='857' ll='913' type='struct hvc_struct * hvc_alloc(uint32_t vtermno, int data, const struct hv_ops * ops, int outbuf_size)'/>
<dec f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' type='struct hvc_struct * hvc_alloc(uint32_t , int , const struct hv_ops * , int )'/>
<use f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' c='hvc_alloc'/>
<use f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' u='a'/>
<use f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' u='a'/>
<dec f='linux-4.14.y/drivers/tty/hvc/hvc_console.h' l='89' type='struct hvc_struct * hvc_alloc(uint32_t vtermno, int data, const struct hv_ops * ops, int outbuf_size)'/>
<use f='linux-4.14.y/drivers/char/virtio_console.c' l='1264' u='c' c='init_port_console'/>
<doc f='linux-4.14.y/drivers/tty/hvc/hvc_console.h' l='88'>/* register a vterm for hvc tty operation (module_init or hotplug add) */</doc>
<def f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='857' ll='913' type='struct hvc_struct * hvc_alloc(uint32_t vtermno, int data, const struct hv_ops * ops, int outbuf_size)'/>
<dec f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' type='struct hvc_struct * hvc_alloc(uint32_t , int , const struct hv_ops * , int )'/>
<use f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' c='hvc_alloc'/>
<use f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' u='a'/>
<use f='linux-4.14.y/drivers/tty/hvc/hvc_console.c' l='914' u='a'/>
