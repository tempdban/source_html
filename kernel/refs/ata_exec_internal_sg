<dec f='linux-4.18.y/drivers/ata/libata.h' l='69' type='unsigned int ata_exec_internal_sg(struct ata_device * dev, struct ata_taskfile * tf, const u8 * cdb, int dma_dir, struct scatterlist * sg, unsigned int n_elem, unsigned long timeout)'/>
<def f='linux-4.18.y/drivers/ata/libata-core.c' l='1563' ll='1718' type='unsigned int ata_exec_internal_sg(struct ata_device * dev, struct ata_taskfile * tf, const u8 * cdb, int dma_dir, struct scatterlist * sgl, unsigned int n_elem, unsigned long timeout)'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='1754' u='c' c='ata_exec_internal'/>
<doc f='linux-4.18.y/drivers/ata/libata-core.c' l='1541'>/**
 *	ata_exec_internal_sg - execute libata internal command
 *	@dev: Device to which the command is sent
 *	@tf: Taskfile registers for the command and the result
 *	@cdb: CDB for packet command
 *	@dma_dir: Data transfer direction of the command
 *	@sgl: sg list for the data buffer of the command
 *	@n_elem: Number of sg entries
 *	@timeout: Timeout in msecs (0 for default)
 *
 *	Executes libata internal command with timeout.  @tf contains
 *	command on entry and result on return.  Timeout and error
 *	conditions are reported via return value.  No recovery action
 *	is taken after a command times out.  It&apos;s caller&apos;s duty to
 *	clean up after timeout.
 *
 *	LOCKING:
 *	None.  Should be called with kernel context, might sleep.
 *
 *	RETURNS:
 *	Zero on success, AC_ERR_* mask on failure
 */</doc>
