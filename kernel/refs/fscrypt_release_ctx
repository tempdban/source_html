<dec f='linux-4.18.y/include/linux/fscrypt_supp.h' l='64' type='void fscrypt_release_ctx(struct fscrypt_ctx * )'/>
<use f='linux-4.18.y/fs/crypto/bio.c' l='63' u='c' c='completion_pages'/>
<use f='linux-4.18.y/fs/crypto/bio.c' l='152' u='c' c='fscrypt_zeroout_range'/>
<def f='linux-4.18.y/fs/crypto/crypto.c' l='69' ll='85' type='void fscrypt_release_ctx(struct fscrypt_ctx * ctx)'/>
<dec f='linux-4.18.y/fs/crypto/crypto.c' l='86' type='void fscrypt_release_ctx(struct fscrypt_ctx * )'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='86' c='fscrypt_release_ctx'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='86' u='a'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='86' u='a'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='282' u='c' c='fscrypt_encrypt_page'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='367' u='c' c='fscrypt_restore_control_page'/>
<doc f='linux-4.18.y/fs/crypto/crypto.c' l='60'>/**
 * fscrypt_release_ctx() - Releases an encryption context
 * @ctx: The encryption context to release.
 *
 * If the encryption context was allocated from the pre-allocated pool, returns
 * it to that pool. Else, frees it.
 *
 * If there&apos;s a bounce page in the context, this frees that.
 */</doc>
<use f='linux-4.18.y/fs/ext4/readpage.c' l='78' u='c' c='mpage_end_io'/>
<use f='linux-4.18.y/fs/ext4/readpage.c' l='255' u='c' c='ext4_mpage_readpages'/>
