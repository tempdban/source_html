<dec f='linux-4.14.y/include/linux/netdevice.h' l='2423' type='void unregister_netdevice_queue(struct net_device * dev, struct list_head * head)'/>
<use f='linux-4.14.y/include/linux/netdevice.h' l='2427' u='c' c='unregister_netdevice'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4774' u='c' c='bond_net_exit'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='1471' u='c' c='macvlan_dellink'/>
<use f='linux-4.14.y/drivers/net/veth.c' l='484' u='c' c='veth_dellink'/>
<use f='linux-4.14.y/drivers/net/veth.c' l='489' u='c' c='veth_dellink'/>
<use f='linux-4.14.y/net/bridge/br_if.c' l='318' u='c' c='br_dev_delete'/>
<def f='linux-4.14.y/net/core/dev.c' l='8205' ll='8216' type='void unregister_netdevice_queue(struct net_device * dev, struct list_head * head)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='8217' type='void unregister_netdevice_queue(struct net_device * , struct list_head * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='8217' c='unregister_netdevice_queue'/>
<use f='linux-4.14.y/net/core/dev.c' l='8217' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='8217' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='8687' u='c' c='default_device_exit_batch'/>
<doc f='linux-4.14.y/net/core/dev.c' l='8192'>/**
 *	unregister_netdevice_queue - remove device from the kernel
 *	@dev: device
 *	@head: list
 *
 *	This function shuts down a device interface and removes it
 *	from the kernel tables.
 *	If head not NULL, device is queued to be unregistered later.
 *
 *	Callers must hold the rtnl semaphore.  You may want
 *	unregister_netdev() instead of this.
 */</doc>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='305' u='r' c='__rtnl_link_register'/>
