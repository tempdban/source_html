<dec f='linux-4.18.y/drivers/net/e1000/base/e1000_ich8lan.h' l='336' type='s32 e1000_disable_ulp_lpt_lp(struct e1000_hw * hw, bool force)'/>
<def f='linux-4.18.y/drivers/net/e1000/base/e1000_ich8lan.c' l='1297' ll='1479' type='s32 e1000_disable_ulp_lpt_lp(struct e1000_hw * hw, bool force)'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_ich8lan.c' l='1526' u='c' c='e1000_check_for_copper_link_ich8lan'/>
<doc f='linux-4.18.y/drivers/net/e1000/base/e1000_ich8lan.c' l='1276'>/**
 *  e1000_disable_ulp_lpt_lp - unconfigure Ultra Low Power mode for LynxPoint-LP
 *  @hw: pointer to the HW structure
 *  @force: boolean indicating whether or not to force disabling ULP
 *
 *  Un-configure ULP mode when link is up, the system is transitioned from
 *  Sx or the driver is unloaded.  If on a Manageability Engine (ME) enabled
 *  system, poll for an indication from ME that ULP has been un-configured.
 *  If not on an ME enabled system, un-configure the ULP mode by software.
 *
 *  During nominal operation, this function is called when link is acquired
 *  to disable ULP mode (force=false); otherwise, for example when unloading
 *  the driver or during Sx-&gt;S0 transitions, this is called with force=true
 *  to forcibly disable ULP.

 *  When the cable is plugged in while the device is in D0, a Cable Status
 *  Change interrupt is generated which causes this function to be called
 *  to partially disable ULP mode and restart autonegotiation.  This function
 *  is then called again due to the resulting Link Status Change interrupt
 *  to finish cleaning up after the ULP flow.
 */</doc>
