<dec f='linux-4.14.y/include/linux/sysctl.h' l='64' type='int proc_do_large_bitmap(struct ctl_table * , int , void * , size_t * , loff_t * )'/>
<def f='linux-4.14.y/kernel/sysctl.c' l='2968' ll='3090' type='int proc_do_large_bitmap(struct ctl_table * table, int write, void * buffer, size_t * lenp, loff_t * ppos)'/>
<doc f='linux-4.14.y/kernel/sysctl.c' l='2951'>/**
 * proc_do_large_bitmap - read/write from/to a large bitmap
 * @table: the sysctl table
 * @write: %TRUE if this is a write to the sysctl file
 * @buffer: the user buffer
 * @lenp: the size of the user buffer
 * @ppos: file position
 *
 * The bitmap is stored at table-&gt;data and the bitmap length (in bits)
 * in table-&gt;maxlen.
 *
 * We use a range comma separated format (e.g. 1,3-4,10-10) so that
 * large bitmaps may be represented in a compact manner. Writing into
 * the file will clear the bitmap then update it with the given input.
 *
 * Returns 0 on success.
 */</doc>
<use f='linux-4.14.y/net/ipv4/sysctl_net_ipv4.c' l='881'/>
<use f='linux-4.14.y/net/ipv4/sysctl_net_ipv4.c' l='881'/>
<use f='linux-4.14.y/net/ipv4/sysctl_net_ipv4.c' l='881'/>
<use f='linux-4.14.y/net/ipv4/sysctl_net_ipv4.c' l='881'/>
