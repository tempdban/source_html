<dec f='linux-4.18.y/include/linux/kallsyms.h' l='93' type='int sprint_symbol(char * buffer, unsigned long address)'/>
<doc f='linux-4.18.y/include/linux/kallsyms.h' l='92'>/* Look up a kernel symbol and return it in a text buffer. */</doc>
<def f='linux-4.18.y/kernel/kallsyms.c' l='390' ll='393' type='int sprint_symbol(char * buffer, unsigned long address)'/>
<dec f='linux-4.18.y/kernel/kallsyms.c' l='394' type='int sprint_symbol(char * , unsigned long )'/>
<use f='linux-4.18.y/kernel/kallsyms.c' l='394' c='sprint_symbol'/>
<use f='linux-4.18.y/kernel/kallsyms.c' l='394' u='a'/>
<use f='linux-4.18.y/kernel/kallsyms.c' l='394' u='a'/>
<doc f='linux-4.18.y/kernel/kallsyms.c' l='379'>/**
 * sprint_symbol - Look up a kernel symbol and return it in a text buffer
 * @buffer: buffer to be stored
 * @address: address to lookup
 *
 * This function looks up a kernel symbol with @address and stores its name,
 * offset, size and module name to @buffer if possible. If no symbol was found,
 * just saves its @address as is.
 *
 * This function returns the number of bytes stored in @buffer.
 */</doc>
<use f='linux-4.18.y/kernel/trace/trace_output.c' l='368' u='c' c='seq_print_sym_offset'/>
<use f='linux-4.18.y/lib/vsprintf.c' l='696' u='c' c='symbol_string'/>
