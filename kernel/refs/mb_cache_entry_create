<dec f='linux-4.14.y/include/linux/mbcache.h' l='30' type='int mb_cache_entry_create(struct mb_cache * cache, gfp_t mask, u32 key, u64 value, bool reusable)'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='499' u='c' c='ext4_xattr_inode_get'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='1053' u='c' c='ext4_xattr_inode_update_ref'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='1544' u='c' c='ext4_xattr_inode_lookup_create'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='2974' u='c' c='ext4_xattr_block_cache_insert'/>
<def f='linux-4.14.y/fs/mbcache.c' l='73' ll='118' type='int mb_cache_entry_create(struct mb_cache * cache, gfp_t mask, u32 key, u64 value, bool reusable)'/>
<dec f='linux-4.14.y/fs/mbcache.c' l='119' type='int mb_cache_entry_create(struct mb_cache * , gfp_t , u32 , u64 , bool )'/>
<use f='linux-4.14.y/fs/mbcache.c' l='119' c='mb_cache_entry_create'/>
<use f='linux-4.14.y/fs/mbcache.c' l='119' u='a'/>
<use f='linux-4.14.y/fs/mbcache.c' l='119' u='a'/>
<doc f='linux-4.14.y/fs/mbcache.c' l='61'>/*
 * mb_cache_entry_create - create entry in cache
 * @cache - cache where the entry should be created
 * @mask - gfp mask with which the entry should be allocated
 * @key - key of the entry
 * @value - value of the entry
 * @reusable - is the entry reusable by others?
 *
 * Creates entry in @cache with key @key and value @value. The function returns
 * -EBUSY if entry with the same key and value already exists in cache.
 * Otherwise 0 is returned.
 */</doc>
<dec f='linux-4.14.y/include/linux/mbcache.h' l='30' type='int mb_cache_entry_create(struct mb_cache * cache, gfp_t mask, u32 key, u64 value, bool reusable)'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='499' u='c' c='ext4_xattr_inode_get'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='1053' u='c' c='ext4_xattr_inode_update_ref'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='1544' u='c' c='ext4_xattr_inode_lookup_create'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='2974' u='c' c='ext4_xattr_block_cache_insert'/>
<def f='linux-4.14.y/fs/mbcache.c' l='73' ll='118' type='int mb_cache_entry_create(struct mb_cache * cache, gfp_t mask, u32 key, u64 value, bool reusable)'/>
<dec f='linux-4.14.y/fs/mbcache.c' l='119' type='int mb_cache_entry_create(struct mb_cache * , gfp_t , u32 , u64 , bool )'/>
<use f='linux-4.14.y/fs/mbcache.c' l='119' c='mb_cache_entry_create'/>
<use f='linux-4.14.y/fs/mbcache.c' l='119' u='a'/>
<use f='linux-4.14.y/fs/mbcache.c' l='119' u='a'/>
<doc f='linux-4.14.y/fs/mbcache.c' l='61'>/*
 * mb_cache_entry_create - create entry in cache
 * @cache - cache where the entry should be created
 * @mask - gfp mask with which the entry should be allocated
 * @key - key of the entry
 * @value - value of the entry
 * @reusable - is the entry reusable by others?
 *
 * Creates entry in @cache with key @key and value @value. The function returns
 * -EBUSY if entry with the same key and value already exists in cache.
 * Otherwise 0 is returned.
 */</doc>
