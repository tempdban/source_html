<dec f='linux-4.18.y/include/linux/mm.h' l='1537' type='void __set_page_dirty(struct page * , struct address_space * , int warn)'/>
<def f='linux-4.18.y/fs/buffer.c' l='573' ll='586' type='void __set_page_dirty(struct page * page, struct address_space * mapping, int warn)'/>
<dec f='linux-4.18.y/fs/buffer.c' l='587' type='void __set_page_dirty(struct page * , struct address_space * , int )'/>
<use f='linux-4.18.y/fs/buffer.c' l='587' c='__set_page_dirty'/>
<use f='linux-4.18.y/fs/buffer.c' l='587' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='587' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='641' u='c' c='__set_page_dirty_buffers'/>
<use f='linux-4.18.y/fs/buffer.c' l='1103' u='c' c='mark_buffer_dirty'/>
<doc f='linux-4.18.y/fs/buffer.c' l='564'>/*
 * Mark the page dirty, and set it dirty in the radix tree, and mark the inode
 * dirty.
 *
 * If warn is true, then emit a warning if the page is not uptodate and has
 * not been truncated.
 *
 * The caller must hold lock_page_memcg().
 */</doc>
