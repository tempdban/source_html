<dec f='linux-4.14.y/include/linux/skbuff.h' l='2089' type='void * __pskb_pull_tail(struct sk_buff * skb, int delta)'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='2094' u='c' c='__pskb_pull'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='2111' u='c' c='pskb_may_pull'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='3024' u='c' c='__skb_linearize'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000/e1000_main.c' l='3186' u='c' c='e1000_xmit_frame'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='5828' u='c' c='e1000_xmit_frame'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='1867' ll='1987' type='void * __pskb_pull_tail(struct sk_buff * skb, int delta)'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='1988' type='void * __pskb_pull_tail(struct sk_buff * , int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1988' c='__pskb_pull_tail'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1988' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1988' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4058' u='c' c='skb_cow_data'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4437' u='c' c='skb_maybe_pull_tail'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='5447' u='c' c='skb_condense'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='1860'>/* Moves tail of skb head forward, copying data from fragmented part,
 * when it is necessary.
 * 1. It may fail due to malloc failure.
 * 2. It may change skb pointers.
 *
 * It is pretty complicated. Luckily, it is called only in exceptional cases.
 */</doc>
<use f='linux-4.14.y/net/netfilter/core.c' l='512' u='c' c='skb_make_writable'/>
<dec f='linux-4.14.y/include/linux/skbuff.h' l='2089' type='void * __pskb_pull_tail(struct sk_buff * skb, int delta)'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='2094' u='c' c='__pskb_pull'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='2111' u='c' c='pskb_may_pull'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='3024' u='c' c='__skb_linearize'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000/e1000_main.c' l='3186' u='c' c='e1000_xmit_frame'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='5828' u='c' c='e1000_xmit_frame'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='1867' ll='1987' type='void * __pskb_pull_tail(struct sk_buff * skb, int delta)'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='1988' type='void * __pskb_pull_tail(struct sk_buff * , int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1988' c='__pskb_pull_tail'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1988' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1988' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4058' u='c' c='skb_cow_data'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4437' u='c' c='skb_maybe_pull_tail'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='5447' u='c' c='skb_condense'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='1860'>/* Moves tail of skb head forward, copying data from fragmented part,
 * when it is necessary.
 * 1. It may fail due to malloc failure.
 * 2. It may change skb pointers.
 *
 * It is pretty complicated. Luckily, it is called only in exceptional cases.
 */</doc>
<use f='linux-4.14.y/net/netfilter/core.c' l='512' u='c' c='skb_make_writable'/>
