<dec f='linux-4.14.y/fs/eventfd.c' l='36' type='__u64'/>
<use f='linux-4.14.y/fs/eventfd.c' l='59' u='r' c='eventfd_signal'/>
<use f='linux-4.14.y/fs/eventfd.c' l='60' u='r' c='eventfd_signal'/>
<use f='linux-4.14.y/fs/eventfd.c' l='61' u='w' c='eventfd_signal'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='a' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='r' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='a' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='r' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='177' u='r' c='eventfd_ctx_do_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='178' u='w' c='eventfd_ctx_do_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='232' u='r' c='eventfd_ctx_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='238' u='r' c='eventfd_ctx_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='296' u='r' c='eventfd_write'/>
<use f='linux-4.14.y/fs/eventfd.c' l='302' u='r' c='eventfd_write'/>
<use f='linux-4.14.y/fs/eventfd.c' l='318' u='w' c='eventfd_write'/>
<use f='linux-4.14.y/fs/eventfd.c' l='334' u='r' c='eventfd_show_fdinfo'/>
<use f='linux-4.14.y/fs/eventfd.c' l='447' u='w' c='eventfd_file_create'/>
<offset>256</offset>
<doc f='linux-4.14.y/fs/eventfd.c' l='28'>/*
	 * Every time that a write(2) is performed on an eventfd, the
	 * value of the __u64 being written is added to &quot;count&quot; and a
	 * wakeup is performed on &quot;wqh&quot;. A read(2) will return the &quot;count&quot;
	 * value to userspace, and will reset &quot;count&quot; to zero. The kernel
	 * side eventfd_signal() also, adds to the &quot;count&quot; counter and
	 * issue a wakeup.
	 */</doc>
<dec f='linux-4.14.y/fs/eventfd.c' l='36' type='__u64'/>
<use f='linux-4.14.y/fs/eventfd.c' l='59' u='r' c='eventfd_signal'/>
<use f='linux-4.14.y/fs/eventfd.c' l='60' u='r' c='eventfd_signal'/>
<use f='linux-4.14.y/fs/eventfd.c' l='61' u='w' c='eventfd_signal'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='a' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='r' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='a' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='163' u='r' c='eventfd_poll'/>
<use f='linux-4.14.y/fs/eventfd.c' l='177' u='r' c='eventfd_ctx_do_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='178' u='w' c='eventfd_ctx_do_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='232' u='r' c='eventfd_ctx_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='238' u='r' c='eventfd_ctx_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='296' u='r' c='eventfd_write'/>
<use f='linux-4.14.y/fs/eventfd.c' l='302' u='r' c='eventfd_write'/>
<use f='linux-4.14.y/fs/eventfd.c' l='318' u='w' c='eventfd_write'/>
<use f='linux-4.14.y/fs/eventfd.c' l='334' u='r' c='eventfd_show_fdinfo'/>
<use f='linux-4.14.y/fs/eventfd.c' l='447' u='w' c='eventfd_file_create'/>
<offset>256</offset>
<doc f='linux-4.14.y/fs/eventfd.c' l='28'>/*
	 * Every time that a write(2) is performed on an eventfd, the
	 * value of the __u64 being written is added to &quot;count&quot; and a
	 * wakeup is performed on &quot;wqh&quot;. A read(2) will return the &quot;count&quot;
	 * value to userspace, and will reset &quot;count&quot; to zero. The kernel
	 * side eventfd_signal() also, adds to the &quot;count&quot; counter and
	 * issue a wakeup.
	 */</doc>
