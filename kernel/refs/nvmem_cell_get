<dec f='linux-4.18.y/include/linux/nvmem-consumer.h' l='35' type='struct nvmem_cell * nvmem_cell_get(struct device * dev, const char * name)'/>
<def f='linux-4.18.y/drivers/nvmem/core.c' l='929' ll='944' type='struct nvmem_cell * nvmem_cell_get(struct device * dev, const char * cell_id)'/>
<dec f='linux-4.18.y/drivers/nvmem/core.c' l='945' type='struct nvmem_cell * nvmem_cell_get(struct device * , const char * )'/>
<use f='linux-4.18.y/drivers/nvmem/core.c' l='945' c='nvmem_cell_get'/>
<use f='linux-4.18.y/drivers/nvmem/core.c' l='945' u='a'/>
<use f='linux-4.18.y/drivers/nvmem/core.c' l='945' u='a'/>
<use f='linux-4.18.y/drivers/nvmem/core.c' l='970' u='c' c='devm_nvmem_cell_get'/>
<use f='linux-4.18.y/drivers/nvmem/core.c' l='1210' u='c' c='nvmem_cell_read_u32'/>
<doc f='linux-4.18.y/drivers/nvmem/core.c' l='919'>/**
 * nvmem_cell_get() - Get nvmem cell of device form a given cell name
 *
 * @dev: Device that requests the nvmem cell.
 * @cell_id: nvmem cell name to get.
 *
 * Return: Will be an ERR_PTR() on error or a valid pointer
 * to a struct nvmem_cell.  The nvmem_cell will be freed by the
 * nvmem_cell_put().
 */</doc>
<doc f='linux-4.18.y/include/linux/nvmem-consumer.h' l='34'>/* Cell based interface */</doc>
