<def f='linux-4.14.y/include/linux/ftrace.h' l='251' ll='255' type='int ftrace_function_local_disabled(struct ftrace_ops * ops)'/>
<doc f='linux-4.14.y/include/linux/ftrace.h' l='242'>/**
 * ftrace_function_local_disabled - returns ftrace_ops disabled value
 *                                  on current cpu
 *
 * This function returns value of ftrace_ops::disabled on current cpu.
 * It must be called with preemption disabled and only on ftrace_ops
 * registered with FTRACE_OPS_FL_PER_CPU. If called without preemption
 * disabled, this_cpu_ptr will complain when CONFIG_DEBUG_PREEMPT is enabled.
 */</doc>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='6066' u='c' c='__ftrace_ops_list_func'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='6127' u='c' c='ftrace_ops_assist_func'/>
<def f='linux-4.14.y/include/linux/ftrace.h' l='251' ll='255' type='int ftrace_function_local_disabled(struct ftrace_ops * ops)'/>
<doc f='linux-4.14.y/include/linux/ftrace.h' l='242'>/**
 * ftrace_function_local_disabled - returns ftrace_ops disabled value
 *                                  on current cpu
 *
 * This function returns value of ftrace_ops::disabled on current cpu.
 * It must be called with preemption disabled and only on ftrace_ops
 * registered with FTRACE_OPS_FL_PER_CPU. If called without preemption
 * disabled, this_cpu_ptr will complain when CONFIG_DEBUG_PREEMPT is enabled.
 */</doc>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='6066' u='c' c='__ftrace_ops_list_func'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='6127' u='c' c='ftrace_ops_assist_func'/>
