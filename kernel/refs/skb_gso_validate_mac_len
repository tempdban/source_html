<dec f='linux-4.18.y/include/linux/skbuff.h' l='3295' type='bool skb_gso_validate_mac_len(const struct sk_buff * skb, unsigned int len)'/>
<def f='linux-4.18.y/net/core/skbuff.c' l='5050' ll='5053' type='bool skb_gso_validate_mac_len(const struct sk_buff * skb, unsigned int len)'/>
<dec f='linux-4.18.y/net/core/skbuff.c' l='5054' type='bool skb_gso_validate_mac_len(const struct sk_buff * , unsigned int )'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='5054' c='skb_gso_validate_mac_len'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='5054' u='a'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='5054' u='a'/>
<doc f='linux-4.18.y/net/core/skbuff.c' l='5041'>/**
 * skb_gso_validate_mac_len - Will a split GSO skb fit in a given length?
 *
 * @skb: GSO skb
 * @len: length to validate against
 *
 * skb_gso_validate_mac_len validates if a given skb will fit a wanted
 * length once split, including L2, L3 and L4 headers and the payload.
 */</doc>
