<def f='linux-4.14.y/kernel/workqueue.c' l='201' ll='223'/>
<size>256</size>
<doc f='linux-4.14.y/kernel/workqueue.c' l='195'>/*
 * The per-pool workqueue.  While queued, the lower WORK_STRUCT_FLAG_BITS
 * of work_struct-&gt;data are used for flags and the remaining high bits
 * point to the pwq; thus, pwqs need to be aligned at two&apos;s power of the
 * number of flag bits.
 */</doc>
<mbr r='pool_workqueue::pool' o='0' t='struct worker_pool *'/>
<mbr r='pool_workqueue::wq' o='64' t='struct workqueue_struct *'/>
<mbr r='pool_workqueue::work_color' o='128' t='int'/>
<mbr r='pool_workqueue::flush_color' o='160' t='int'/>
<mbr r='pool_workqueue::refcnt' o='192' t='int'/>
<mbr r='pool_workqueue::nr_in_flight' o='224' t='int [15]'/>
<mbr r='pool_workqueue::nr_active' o='704' t='int'/>
<mbr r='pool_workqueue::max_active' o='736' t='int'/>
<mbr r='pool_workqueue::delayed_works' o='768' t='struct list_head'/>
<mbr r='pool_workqueue::pwqs_node' o='896' t='struct list_head'/>
<mbr r='pool_workqueue::mayday_node' o='1024' t='struct list_head'/>
<mbr r='pool_workqueue::unbound_release_work' o='1152' t='struct work_struct'/>
<mbr r='pool_workqueue::rcu' o='1408' t='struct callback_head'/>
