<dec f='linux-4.18.y/include/linux/ahci_platform.h' l='34' type='int ahci_platform_init_host(struct platform_device * pdev, struct ahci_host_priv * hpriv, const struct ata_port_info * pi_template, struct scsi_host_template * sht)'/>
<use f='linux-4.18.y/drivers/ata/ahci_platform.c' l='60' u='c' c='ahci_probe'/>
<def f='linux-4.18.y/drivers/ata/libahci_platform.c' l='505' ll='596' type='int ahci_platform_init_host(struct platform_device * pdev, struct ahci_host_priv * hpriv, const struct ata_port_info * pi_template, struct scsi_host_template * sht)'/>
<dec f='linux-4.18.y/drivers/ata/libahci_platform.c' l='597' type='int ahci_platform_init_host(struct platform_device * , struct ahci_host_priv * , const struct ata_port_info * , struct scsi_host_template * )'/>
<use f='linux-4.18.y/drivers/ata/libahci_platform.c' l='597' c='ahci_platform_init_host'/>
<use f='linux-4.18.y/drivers/ata/libahci_platform.c' l='597' u='a'/>
<use f='linux-4.18.y/drivers/ata/libahci_platform.c' l='597' u='a'/>
<doc f='linux-4.18.y/drivers/ata/libahci_platform.c' l='491'>/**
 * ahci_platform_init_host - Bring up an ahci-platform host
 * @pdev: platform device pointer for the host
 * @hpriv: ahci-host private data for the host
 * @pi_template: template for the ata_port_info to use
 * @sht: scsi_host_template to use when registering
 *
 * This function does all the usual steps needed to bring up an
 * ahci-platform host, note any necessary resources (ie clks, phys, etc.)
 * must be initialized / enabled before calling this.
 *
 * RETURNS:
 * 0 on success otherwise a negative error code
 */</doc>
