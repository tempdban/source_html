<dec f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='1170' type='void (*)(struct drm_plane *, struct drm_plane_state *)'/>
<offset>384</offset>
<doc f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='1142'>/**
	 * @atomic_async_update:
	 *
	 * Drivers should set this function pointer to perform asynchronous
	 * updates of planes, that is, jump ahead of the currently queued
	 * state and update the plane. Here async means &quot;not vblank
	 * synchronized&quot;.
	 *
	 * This hook is called by drm_atomic_helper_async_commit().
	 *
	 * An async update will happen on legacy cursor updates. An async
	 * update won&apos;t happen if there is an outstanding commit modifying
	 * the same plane.
	 *
	 * Note that unlike &amp;drm_plane_helper_funcs.atomic_update this hook
	 * takes the new &amp;drm_plane_state as parameter. When doing async_update
	 * drivers shouldn&apos;t replace the &amp;drm_plane_state but update the
	 * current one with the new plane configurations in the new
	 * plane_state.
	 *
	 * FIXME:
	 *  - It only works for single plane updates
	 *  - Async Pageflips are not supported yet
	 *  - Some hw might still scan out the old buffer until the next
	 *    vblank, however we let go of the fb references as soon as
	 *    we run this hook. For now drivers must implement their own workers
	 *    for deferring if needed, until a common solution is created.
	 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1536' u='r' c='drm_atomic_helper_async_check'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1576' u='r' c='drm_atomic_helper_async_commit'/>
