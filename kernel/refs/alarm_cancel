<dec f='linux-4.14.y/include/linux/alarmtimer.h' l='56' type='int alarm_cancel(struct alarm * alarm)'/>
<use f='linux-4.14.y/fs/timerfd.c' l='223' u='c' c='timerfd_release'/>
<def f='linux-4.14.y/kernel/time/alarmtimer.c' l='433' ll='441' type='int alarm_cancel(struct alarm * alarm)'/>
<dec f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' type='int alarm_cancel(struct alarm * )'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' c='alarm_cancel'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' u='a'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' u='a'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='724' u='c' c='alarmtimer_do_nsleep'/>
<doc f='linux-4.14.y/kernel/time/alarmtimer.c' l='427'>/**
 * alarm_cancel - Spins trying to cancel an alarm timer until it is done
 * @alarm: ptr to alarm to be canceled
 *
 * Returns 1 if the timer was canceled, 0 if it was not active.
 */</doc>
<dec f='linux-4.14.y/include/linux/alarmtimer.h' l='56' type='int alarm_cancel(struct alarm * alarm)'/>
<use f='linux-4.14.y/fs/timerfd.c' l='223' u='c' c='timerfd_release'/>
<def f='linux-4.14.y/kernel/time/alarmtimer.c' l='433' ll='441' type='int alarm_cancel(struct alarm * alarm)'/>
<dec f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' type='int alarm_cancel(struct alarm * )'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' c='alarm_cancel'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' u='a'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='442' u='a'/>
<use f='linux-4.14.y/kernel/time/alarmtimer.c' l='724' u='c' c='alarmtimer_do_nsleep'/>
<doc f='linux-4.14.y/kernel/time/alarmtimer.c' l='427'>/**
 * alarm_cancel - Spins trying to cancel an alarm timer until it is done
 * @alarm: ptr to alarm to be canceled
 *
 * Returns 1 if the timer was canceled, 0 if it was not active.
 */</doc>
