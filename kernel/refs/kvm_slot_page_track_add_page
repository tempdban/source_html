<dec f='linux-4.14.y/arch/x86/include/asm/kvm_page_track.h' l='57' type='void kvm_slot_page_track_add_page(struct kvm * kvm, struct kvm_memory_slot * slot, gfn_t gfn, enum kvm_page_track_mode mode)'/>
<use f='linux-4.14.y/arch/x86/kvm/mmu.c' l='1018' u='c' c='account_shadowed'/>
<def f='linux-4.14.y/arch/x86/kvm/page_track.c' l='91' ll='110' type='void kvm_slot_page_track_add_page(struct kvm * kvm, struct kvm_memory_slot * slot, gfn_t gfn, enum kvm_page_track_mode mode)'/>
<dec f='linux-4.14.y/arch/x86/kvm/page_track.c' l='111' type='void kvm_slot_page_track_add_page(struct kvm * , struct kvm_memory_slot * , gfn_t , enum kvm_page_track_mode )'/>
<use f='linux-4.14.y/arch/x86/kvm/page_track.c' l='111' c='kvm_slot_page_track_add_page'/>
<use f='linux-4.14.y/arch/x86/kvm/page_track.c' l='111' u='a'/>
<use f='linux-4.14.y/arch/x86/kvm/page_track.c' l='111' u='a'/>
<doc f='linux-4.14.y/arch/x86/kvm/page_track.c' l='79'>/*
 * add guest page to the tracking pool so that corresponding access on that
 * page will be intercepted.
 *
 * It should be called under the protection both of mmu-lock and kvm-&gt;srcu
 * or kvm-&gt;slots_lock.
 *
 * @kvm: the guest instance we are interested in.
 * @slot: the @gfn belongs to.
 * @gfn: the guest page.
 * @mode: tracking mode, currently only write track is supported.
 */</doc>
