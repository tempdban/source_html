<dec f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_prototype.h' l='366' type='i40e_status i40e_aq_send_msg_to_pf(struct i40e_hw * hw, enum virtchnl_ops v_opcode, i40e_status v_retval, u8 * msg, u16 msglen, struct i40e_asq_cmd_details * cmd_details)'/>
<dec f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40e_prototype.h' l='69' type='i40e_status i40e_aq_send_msg_to_pf(struct i40e_hw * hw, enum virtchnl_ops v_opcode, i40e_status v_retval, u8 * msg, u16 msglen, struct i40e_asq_cmd_details * cmd_details)'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40e_common.c' l='1105' ll='1133' type='i40e_status i40e_aq_send_msg_to_pf(struct i40e_hw * hw, enum virtchnl_ops v_opcode, i40e_status v_retval, u8 * msg, u16 msglen, struct i40e_asq_cmd_details * cmd_details)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40e_common.c' l='1179' u='c' c='i40e_vf_reset'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40e_common.c' l='1092'>/**
 * i40e_aq_send_msg_to_pf
 * @hw: pointer to the hardware structure
 * @v_opcode: opcodes for VF-PF communication
 * @v_retval: return error code
 * @msg: pointer to the msg buffer
 * @msglen: msg length
 * @cmd_details: pointer to command details
 *
 * Send message to PF driver using admin queue. By default, this message
 * is sent asynchronously, i.e. i40evf_asq_send_command() does not wait for
 * completion before returning.
 **/</doc>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_client.c' l='143' u='c' c='i40evf_client_release_qvlist'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_client.c' l='428' u='c' c='i40evf_client_virtchnl_send'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_client.c' l='477' u='c' c='i40evf_client_setup_qvlist'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c' l='30' u='c' c='i40evf_send_pf_msg'/>
