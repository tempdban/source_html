<def f='linux-4.14.y/include/linux/wait.h' l='124' ll='127' type='int waitqueue_active(struct wait_queue_head * wq_head)'/>
<use f='linux-4.14.y/include/linux/wait.h' l='147' u='c' c='wq_has_sleeper'/>
<doc f='linux-4.14.y/include/linux/wait.h' l='94'>/**
 * waitqueue_active -- locklessly test for waiters on the queue
 * @wq_head: the waitqueue to test for waiters
 *
 * returns true if the wait list is not empty
 *
 * NOTE: this function is lockless and requires care, incorrect usage _will_
 * lead to sporadic and non-obvious failure.
 *
 * Use either while holding wait_queue_head::lock or when used for wakeups
 * with an extra smp_mb() like:
 *
 *      CPU0 - waker                    CPU1 - waiter
 *
 *                                      for (;;) {
 *      @cond = true;                     prepare_to_wait(&amp;wq_head, &amp;wait, state);
 *      smp_mb();                         // smp_mb() from set_current_state()
 *      if (waitqueue_active(wq_head))         if (@cond)
 *        wake_up(wq_head);                      break;
 *                                        schedule();
 *                                      }
 *                                      finish_wait(&amp;wq_head, &amp;wait);
 *
 * Because without the explicit smp_mb() it&apos;s possible for the
 * waitqueue_active() load to get hoisted over the @cond store such that we&apos;ll
 * observe an empty wait list while the waiter might not observe @cond.
 *
 * Also note that this &apos;optimization&apos; trades a spin_lock() for an smp_mb(),
 * which (when the lock is uncontended) are of roughly equal cost.
 */</doc>
<use f='linux-4.14.y/block/blk-core.c' l='1096' u='c' c='__freed_request'/>
<use f='linux-4.14.y/drivers/md/md.c' l='9320' u='c' c='md_exit'/>
<use f='linux-4.14.y/drivers/md/raid1.c' l='1457' u='c' c='raid1_write_request'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='1677' u='c' c='tty_release'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='1681' u='c' c='tty_release'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='1687' u='c' c='tty_release'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='1691' u='c' c='tty_release'/>
<use f='linux-4.14.y/fs/aio.c' l='1205' u='c' c='aio_complete'/>
<use f='linux-4.14.y/fs/eventfd.c' l='62' u='c' c='eventfd_signal'/>
<use f='linux-4.14.y/fs/eventfd.c' l='202' u='c' c='eventfd_ctx_remove_wait_queue'/>
<use f='linux-4.14.y/fs/eventfd.c' l='255' u='c' c='eventfd_ctx_read'/>
<use f='linux-4.14.y/fs/eventfd.c' l='319' u='c' c='eventfd_write'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='752' u='c' c='ep_scan_ready_list'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='754' u='c' c='ep_scan_ready_list'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='827' u='c' c='ep_free'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='1196' u='c' c='ep_poll_callback'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='1215' u='c' c='ep_poll_callback'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='1514' u='c' c='ep_insert'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='1516' u='c' c='ep_insert'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='1622' u='c' c='ep_modify'/>
<use f='linux-4.14.y/fs/eventpoll.c' l='1624' u='c' c='ep_modify'/>
<use f='linux-4.14.y/fs/locks.c' l='342' u='c' c='locks_free_lock'/>
<use f='linux-4.14.y/include/linux/signalfd.h' l='21' u='c' c='signalfd_notify'/>
<use f='linux-4.14.y/fs/signalfd.c' l='44' u='c' c='signalfd_cleanup'/>
<use f='linux-4.14.y/fs/splice.c' l='169' u='c' c='wakeup_pipe_readers'/>
<use f='linux-4.14.y/fs/splice.c' l='458' u='c' c='wakeup_pipe_writers'/>
<use f='linux-4.14.y/kernel/events/uprobes.c' l='1353' u='c' c='xol_free_insn_slot'/>
<use f='linux-4.14.y/kernel/printk/printk.c' l='2710' u='c' c='wake_up_klogd'/>
<use f='linux-4.14.y/kernel/sched/wait_bit.c' l='123' u='c' c='__wake_up_bit'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='2966' u='c' c='__cancel_work_timer'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='414' u='c' c='sbq_wake_ptr'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='492' u='c' c='sbitmap_queue_wake_all'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='526' u='c' c='sbitmap_queue_show'/>
<use f='linux-4.14.y/mm/backing-dev.c' l='989' u='c' c='clear_wb_congested'/>
<use f='linux-4.14.y/mm/filemap.c' l='956' u='c' c='wake_up_page_bit'/>
<use f='linux-4.14.y/mm/vmscan.c' l='2949' u='c' c='allow_direct_reclaim'/>
<use f='linux-4.14.y/mm/vmscan.c' l='3253' u='c' c='prepare_kswapd_sleep'/>
<use f='linux-4.14.y/mm/vmscan.c' l='3410' u='c' c='balance_pgdat'/>
<use f='linux-4.14.y/mm/vmscan.c' l='3649' u='c' c='wakeup_kswapd'/>
<use f='linux-4.14.y/net/core/sock.c' l='2782' u='c' c='release_sock'/>
