<dec f='linux-4.14.y/include/linux/kernfs.h' l='318' type='struct inode * kernfs_get_inode(struct super_block * sb, struct kernfs_node * kn)'/>
<use f='linux-4.14.y/fs/kernfs/dir.c' l='1073' u='c' c='kernfs_iop_lookup'/>
<def f='linux-4.14.y/fs/kernfs/inode.c' l='265' ll='274' type='struct inode * kernfs_get_inode(struct super_block * sb, struct kernfs_node * kn)'/>
<doc f='linux-4.14.y/fs/kernfs/inode.c' l='250'>/**
 *	kernfs_get_inode - get inode for kernfs_node
 *	@sb: super block
 *	@kn: kernfs_node to allocate inode for
 *
 *	Get inode for @kn.  If such inode doesn&apos;t exist, a new inode is
 *	allocated and basics are initialized.  New inode is returned
 *	locked.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep).
 *
 *	RETURNS:
 *	Pointer to allocated inode on success, NULL on failure.
 */</doc>
<use f='linux-4.14.y/fs/kernfs/mount.c' l='100' u='c' c='kernfs_fh_get_inode'/>
<use f='linux-4.14.y/fs/kernfs/mount.c' l='131' u='c' c='kernfs_get_parent_dentry'/>
<use f='linux-4.14.y/fs/kernfs/mount.c' l='241' u='c' c='kernfs_fill_super'/>
<use f='linux-4.14.y/kernel/cgroup/cgroup.c' l='4268' u='c' c='cgroup_procs_write_permission'/>
