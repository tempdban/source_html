<def f='linux-4.14.y/include/linux/rcuwait.h' l='20' ll='22'/>
<size>8</size>
<doc f='linux-4.14.y/include/linux/rcuwait.h' l='7'>/*
 * rcuwait provides a way of blocking and waking up a single
 * task in an rcu-safe manner; where it is forbidden to use
 * after exit_notify(). task_struct is not properly rcu protected,
 * unless dealing with rcu-aware lists, ie: find_task_by_*().
 *
 * Alternatively we have task_rcu_dereference(), but the return
 * semantics have different implications which would break the
 * wakeup side. The only time @task is non-nil is when a user is
 * blocked (or checking if it needs to) on a condition, and reset
 * as soon as we know that the condition has succeeded and are
 * awoken.
 */</doc>
<mbr r='rcuwait::task' o='0' t='struct task_struct *'/>
