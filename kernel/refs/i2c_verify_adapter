<dec f='linux-4.14.y/include/linux/i2c.h' l='258' type='struct i2c_adapter * i2c_verify_adapter(struct device * dev)'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-acpi.c' l='304' u='c' c='i2c_acpi_find_match_adapter'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-acpi.c' l='323' u='c' c='i2c_acpi_find_adapter_by_handle'/>
<def f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1084' ll='1089' type='struct i2c_adapter * i2c_verify_adapter(struct device * dev)'/>
<dec f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1090' type='struct i2c_adapter * i2c_verify_adapter(struct device * )'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1090' c='i2c_verify_adapter'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1090' u='a'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1090' u='a'/>
<doc f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1075'>/**
 * i2c_verify_adapter - return parameter as i2c_adapter or NULL
 * @dev: device, probably from some driver model iterator
 *
 * When traversing the driver model tree, perhaps using driver model
 * iterators like @device_for_each_child(), you can&apos;t assume very much
 * about the nodes you find.  Use this function to avoid oopses caused
 * by wrongly treating some non-I2C device as an i2c_adapter.
 */</doc>
<use f='linux-4.14.y/drivers/input/mouse/psmouse-smbus.c' l='193' u='c' c='psmouse_smbus_create_companion'/>
