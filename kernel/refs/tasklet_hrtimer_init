<dec f='linux-4.18.y/include/linux/interrupt.h' l='633' type='void tasklet_hrtimer_init(struct tasklet_hrtimer * ttimer, enum hrtimer_restart (*)(struct hrtimer *) function, clockid_t which_clock, enum hrtimer_mode mode)'/>
<def f='linux-4.18.y/kernel/softirq.c' l='613' ll='622' type='void tasklet_hrtimer_init(struct tasklet_hrtimer * ttimer, enum hrtimer_restart (*)(struct hrtimer *) function, clockid_t which_clock, enum hrtimer_mode mode)'/>
<dec f='linux-4.18.y/kernel/softirq.c' l='623' type='void tasklet_hrtimer_init(struct tasklet_hrtimer * , enum hrtimer_restart (*)(struct hrtimer *) , clockid_t , enum hrtimer_mode )'/>
<use f='linux-4.18.y/kernel/softirq.c' l='623' c='tasklet_hrtimer_init'/>
<use f='linux-4.18.y/kernel/softirq.c' l='623' u='a'/>
<use f='linux-4.18.y/kernel/softirq.c' l='623' u='a'/>
<doc f='linux-4.18.y/kernel/softirq.c' l='606'>/**
 * tasklet_hrtimer_init - Init a tasklet/hrtimer combo for softirq callbacks
 * @ttimer:	 tasklet_hrtimer which is initialized
 * @function:	 hrtimer callback function which gets called from softirq context
 * @which_clock: clock id (CLOCK_MONOTONIC/CLOCK_REALTIME)
 * @mode:	 hrtimer mode (HRTIMER_MODE_ABS/HRTIMER_MODE_REL)
 */</doc>
