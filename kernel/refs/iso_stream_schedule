<def f='linux-4.14.y/drivers/usb/host/ehci-sched.c' l='1491' ll='1681' type='int iso_stream_schedule(struct ehci_hcd * ehci, struct urb * urb, struct ehci_iso_stream * stream)'/>
<use f='linux-4.14.y/drivers/usb/host/ehci-sched.c' l='1983' u='c' c='itd_submit'/>
<use f='linux-4.14.y/drivers/usb/host/ehci-sched.c' l='2362' u='c' c='sitd_submit'/>
<doc f='linux-4.14.y/drivers/usb/host/ehci-sched.c' l='1480'>/*
 * This scheduler plans almost as far into the future as it has actual
 * periodic schedule slots.  (Affected by TUNE_FLS, which defaults to
 * &quot;as small as possible&quot; to be cache-friendlier.)  That limits the size
 * transfers you can stream reliably; avoid more than 64 msec per urb.
 * Also avoid queue depths of less than ehci&apos;s worst irq latency (affected
 * by the per-urb URB_NO_INTERRUPT hint, the log2_irq_thresh module parameter,
 * and other factors); or more than about 230 msec total (for portability,
 * given EHCI_TUNE_FLS and the slop).  Or, write a smarter scheduler!
 */</doc>
