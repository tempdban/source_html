<dec f='linux-4.18.y/drivers/acpi/acpica/acinterp.h' l='384' type='acpi_status acpi_ex_store(union acpi_operand_object * val_desc, union acpi_operand_object * dest_desc, struct acpi_walk_state * walk_state)'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/acinterp.h' l='380'>/*
 * exstore - Object store support
 */</doc>
<use f='linux-4.18.y/drivers/acpi/acpica/exconfig.c' l='190' u='c' c='acpi_ex_load_table_op'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exconfig.c' l='449' u='c' c='acpi_ex_load_op'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg1.c' l='400' u='c' c='acpi_ex_opcode_1A_1T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg1.c' l='422' u='c' c='acpi_ex_opcode_1A_1T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg1.c' l='525' u='c' c='acpi_ex_opcode_1A_1T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg1.c' l='652' u='c' c='acpi_ex_opcode_1A_0T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg2.c' l='175' u='c' c='acpi_ex_opcode_2A_2T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg2.c' l='180' u='c' c='acpi_ex_opcode_2A_2T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg2.c' l='409' u='c' c='acpi_ex_opcode_2A_1T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg2.c' l='431' u='c' c='acpi_ex_opcode_2A_1T_1R'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg3.c' l='236' u='c' c='acpi_ex_opcode_3A_1T_1R'/>
<def f='linux-4.18.y/drivers/acpi/acpica/exstore.c' l='51' ll='176' type='acpi_status acpi_ex_store(union acpi_operand_object * source_desc, union acpi_operand_object * dest_desc, struct acpi_walk_state * walk_state)'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/exstore.c' l='31'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_store
 *
 * PARAMETERS:  *source_desc        - Value to be stored
 *              *dest_desc          - Where to store it. Must be an NS node
 *                                    or union acpi_operand_object of type
 *                                    Reference;
 *              walk_state          - Current walk state
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Store the value described by source_desc into the location
 *              described by dest_desc. Called by various interpreter
 *              functions to store the result of an operation into
 *              the destination operand -- not just simply the actual &quot;Store&quot;
 *              ASL operator.
 *
 ******************************************************************************/</doc>
