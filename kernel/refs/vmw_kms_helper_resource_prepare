<dec f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.h' l='305' type='int vmw_kms_helper_resource_prepare(struct vmw_resource * res, bool interruptible, struct vmw_validation_ctx * ctx)'/>
<def f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2536' ll='2579' type='int vmw_kms_helper_resource_prepare(struct vmw_resource * res, bool interruptible, struct vmw_validation_ctx * ctx)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2525'>/**
 * vmw_kms_helper_resource_prepare - Reserve and validate a resource before
 * command submission.
 *
 * @res: Pointer to the resource. Typically a surface.
 * @interruptible: Whether to perform waits as interruptible.
 *
 * Reserves and validates also the backup buffer if a guest-backed resource.
 * Returns 0 on success, negative error code on failure. -ERESTARTSYS if
 * interrupted by a signal.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='949' u='c' c='vmw_kms_sou_do_surface_dirty'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='925' u='c' c='vmw_kms_stdu_surface_dirty'/>
