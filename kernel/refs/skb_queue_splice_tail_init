<def f='linux-4.18.y/include/linux/skbuff.h' l='1761' ll='1769' type='void skb_queue_splice_tail_init(struct sk_buff_head * list, struct sk_buff_head * head)'/>
<doc f='linux-4.18.y/include/linux/skbuff.h' l='1753'>/**
 *	skb_queue_splice_tail_init - join two skb lists and reinitialise the emptied list
 *	@list: the new list to add
 *	@head: the place to add it in the first list
 *
 *	Each of the lists is a queue.
 *	The list at @list is reinitialised
 */</doc>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_core.c' l='246' u='c' c='ipvlan_process_multicast'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='308' u='c' c='macvlan_process_broadcast'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='285' u='c' c='tun_napi_receive'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='1579' u='c' c='tun_rx_batched'/>
<use f='linux-4.18.y/net/core/dev.c' l='5395' u='c' c='process_backlog'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='1307' u='c' c='udp_rmem_release'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='1438' u='c' c='udp_destruct_sock'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='1524' u='c' c='first_packet_length'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='1608' u='c' c='__skb_recv_udp'/>
