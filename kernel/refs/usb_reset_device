<dec f='linux-4.14.y/include/linux/usb.h' l='726' type='int usb_reset_device(struct usb_device * dev)'/>
<doc f='linux-4.14.y/include/linux/usb.h' l='725'>/* USB port reset for device reinitialization */</doc>
<use f='linux-4.14.y/drivers/usb/core/devio.c' l='1352' u='c' c='proc_resetdevice'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='5133' u='c' c='port_event'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='5192' u='c' c='hub_event'/>
<def f='linux-4.14.y/drivers/usb/core/hub.c' l='5626' ll='5710' type='int usb_reset_device(struct usb_device * udev)'/>
<dec f='linux-4.14.y/drivers/usb/core/hub.c' l='5711' type='int usb_reset_device(struct usb_device * )'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='5711' c='usb_reset_device'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='5711' u='a'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='5711' u='a'/>
<doc f='linux-4.14.y/drivers/usb/core/hub.c' l='5605'>/**
 * usb_reset_device - warn interface drivers and perform a USB port reset
 * @udev: device to reset (not in SUSPENDED or NOTATTACHED state)
 *
 * Warns all drivers bound to registered interfaces (using their pre_reset
 * method), performs the port reset, and then lets the drivers know that
 * the reset is over (using their post_reset method).
 *
 * Return: The same as for usb_reset_and_verify_device().
 *
 * Note:
 * The caller must own the device lock.  For example, it&apos;s safe to use
 * this from a driver probe() routine after downloading new firmware.
 * For calls that might not occur during probe(), drivers should lock
 * the device using usb_lock_device_for_reset().
 *
 * If an interface is currently being probed or disconnected, we assume
 * its driver knows how to handle resets.  For all other interfaces,
 * if the driver doesn&apos;t have pre_reset and post_reset methods then
 * we attempt to unbind it and rebind afterward.
 */</doc>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1679' u='c' c='__usb_queue_reset_device'/>
<use f='linux-4.14.y/drivers/usb/storage/transport.c' l='1448' u='c' c='usb_stor_port_reset'/>
