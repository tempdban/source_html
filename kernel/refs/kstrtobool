<dec f='linux-4.18.y/include/linux/kernel.h' l='402' type='int kstrtobool(const char * s, bool * res)'/>
<dec f='linux-4.18.y/include/linux/string.h' l='178' type='int kstrtobool(const char * s, bool * res)'/>
<use f='linux-4.18.y/include/linux/string.h' l='181' u='c' c='strtobool'/>
<use f='linux-4.18.y/drivers/input/mouse/trackpoint.c' l='156' u='c' c='trackpoint_set_bit_attr'/>
<use f='linux-4.18.y/drivers/input/serio/i8042.c' l='65' u='c' c='i8042_set_reset'/>
<use f='linux-4.18.y/drivers/iommu/iommu.c' l='121' u='c' c='iommu_set_def_domain_type'/>
<use f='linux-4.18.y/drivers/pci/pci-sysfs.c' l='681' u='c' c='sriov_drivers_autoprobe_store'/>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_ctl.c' l='3520' u='c' c='_ctl_device_ncq_prio_enable_store'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='239' u='c' c='manage_start_stop_store'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='270' u='c' c='allow_restart_store'/>
<use f='linux-4.18.y/drivers/usb/common/roles.c' l='168' u='c' c='role_store'/>
<use f='linux-4.18.y/drivers/usb/typec/class.c' l='265' u='c' c='typec_altmode_active_store'/>
<use f='linux-4.18.y/drivers/usb/typec/class.c' l='1049' u='c' c='vconn_source_store'/>
<use f='linux-4.18.y/kernel/livepatch/core.c' l='465' u='c' c='enabled_store'/>
<use f='linux-4.18.y/kernel/livepatch/core.c' l='535' u='c' c='signal_store'/>
<use f='linux-4.18.y/kernel/livepatch/core.c' l='564' u='c' c='force_store'/>
<use f='linux-4.18.y/kernel/time/hrtimer.c' l='682' u='c' c='setup_hrtimer_hres'/>
<def f='linux-4.18.y/lib/kstrtox.c' l='332' ll='367' type='int kstrtobool(const char * s, bool * res)'/>
<dec f='linux-4.18.y/lib/kstrtox.c' l='368' type='int kstrtobool(const char * , bool * )'/>
<use f='linux-4.18.y/lib/kstrtox.c' l='368' c='kstrtobool'/>
<use f='linux-4.18.y/lib/kstrtox.c' l='368' u='a'/>
<use f='linux-4.18.y/lib/kstrtox.c' l='368' u='a'/>
<use f='linux-4.18.y/lib/kstrtox.c' l='383' u='c' c='kstrtobool_from_user'/>
<doc f='linux-4.18.y/lib/kstrtox.c' l='323'>/**
 * kstrtobool - convert common user inputs into boolean values
 * @s: input string
 * @res: result
 *
 * This routine returns 0 iff the first character is one of &apos;Yy1Nn0&apos;, or
 * [oO][NnFf] for &quot;on&quot; and &quot;off&quot;. Otherwise it will return -EINVAL.  Value
 * pointed to by res is updated upon finding a match.
 */</doc>
