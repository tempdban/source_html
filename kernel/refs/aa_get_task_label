<dec f='linux-4.14.y/security/apparmor/include/context.h' l='55' type='struct aa_label * aa_get_task_label(struct task_struct * task)'/>
<def f='linux-4.14.y/security/apparmor/context.c' l='77' ll='86' type='struct aa_label * aa_get_task_label(struct task_struct * task)'/>
<doc f='linux-4.14.y/security/apparmor/context.c' l='71'>/**
 * aa_get_task_label - Get another task&apos;s label
 * @task: task to query  (NOT NULL)
 *
 * Returns: counted reference to @task&apos;s label
 */</doc>
<use f='linux-4.14.y/security/apparmor/domain.c' l='73' u='c' c='may_change_ptraced_domain'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='112' u='c' c='apparmor_ptrace_access_check'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='127' u='c' c='apparmor_ptrace_traceme'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='731' u='c' c='apparmor_task_kill'/>
<dec f='linux-4.14.y/security/apparmor/include/context.h' l='55' type='struct aa_label * aa_get_task_label(struct task_struct * task)'/>
<def f='linux-4.14.y/security/apparmor/context.c' l='77' ll='86' type='struct aa_label * aa_get_task_label(struct task_struct * task)'/>
<doc f='linux-4.14.y/security/apparmor/context.c' l='71'>/**
 * aa_get_task_label - Get another task&apos;s label
 * @task: task to query  (NOT NULL)
 *
 * Returns: counted reference to @task&apos;s label
 */</doc>
<use f='linux-4.14.y/security/apparmor/domain.c' l='73' u='c' c='may_change_ptraced_domain'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='112' u='c' c='apparmor_ptrace_access_check'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='127' u='c' c='apparmor_ptrace_traceme'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='731' u='c' c='apparmor_task_kill'/>
