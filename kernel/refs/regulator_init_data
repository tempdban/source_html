<def f='linux-4.14.y/include/linux/regulator/machine.h' l='213' ll='224'/>
<size>176</size>
<doc f='linux-4.14.y/include/linux/regulator/machine.h' l='196'>/**
 * struct regulator_init_data - regulator platform initialisation data.
 *
 * Initialisation constraints, our supply and consumers supplies.
 *
 * @supply_regulator: Parent regulator.  Specified using the regulator name
 *                    as it appears in the name field in sysfs, which can
 *                    be explicitly set using the constraints field &apos;name&apos;.
 *
 * @constraints: Constraints.  These must be specified for the regulator to
 *               be usable.
 * @num_consumer_supplies: Number of consumer device supplies.
 * @consumer_supplies: Consumer device supply configuration.
 *
 * @regulator_init: Callback invoked when the regulator has been registered.
 * @driver_data: Data passed to regulator_init.
 */</doc>
<mbr r='regulator_init_data::supply_regulator' o='0' t='const char *'/>
<mbr r='regulator_init_data::constraints' o='64' t='struct regulation_constraints'/>
<mbr r='regulator_init_data::num_consumer_supplies' o='1152' t='int'/>
<mbr r='regulator_init_data::consumer_supplies' o='1216' t='struct regulator_consumer_supply *'/>
<mbr r='regulator_init_data::regulator_init' o='1280' t='int (*)(void *)'/>
<mbr r='regulator_init_data::driver_data' o='1344' t='void *'/>
