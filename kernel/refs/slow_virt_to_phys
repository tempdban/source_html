<dec f='linux-4.14.y/arch/x86/include/asm/pgtable_types.h' l='542' type='phys_addr_t slow_virt_to_phys(void * __address)'/>
<def f='linux-4.14.y/arch/x86/mm/pageattr.c' l='456' ll='487' type='phys_addr_t slow_virt_to_phys(void * __virt_addr)'/>
<dec f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' type='phys_addr_t slow_virt_to_phys(void * )'/>
<use f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' c='slow_virt_to_phys'/>
<use f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' u='a'/>
<use f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' u='a'/>
<doc f='linux-4.14.y/arch/x86/mm/pageattr.c' l='445'>/*
 * This is necessary because __pa() does not work on some
 * kinds of memory, like vmalloc() or the alloc_remap()
 * areas on 32-bit NUMA systems.  The percpu areas can
 * end up in this kind of memory, for instance.
 *
 * This could be optimized, but it is only intended to be
 * used at inititalization time, and keeping it
 * unoptimized should increase the testing coverage for
 * the more obscure platforms.
 */</doc>
<dec f='linux-4.14.y/arch/x86/include/asm/pgtable_types.h' l='542' type='phys_addr_t slow_virt_to_phys(void * __address)'/>
<def f='linux-4.14.y/arch/x86/mm/pageattr.c' l='456' ll='487' type='phys_addr_t slow_virt_to_phys(void * __virt_addr)'/>
<dec f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' type='phys_addr_t slow_virt_to_phys(void * )'/>
<use f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' c='slow_virt_to_phys'/>
<use f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' u='a'/>
<use f='linux-4.14.y/arch/x86/mm/pageattr.c' l='488' u='a'/>
<doc f='linux-4.14.y/arch/x86/mm/pageattr.c' l='445'>/*
 * This is necessary because __pa() does not work on some
 * kinds of memory, like vmalloc() or the alloc_remap()
 * areas on 32-bit NUMA systems.  The percpu areas can
 * end up in this kind of memory, for instance.
 *
 * This could be optimized, but it is only intended to be
 * used at inititalization time, and keeping it
 * unoptimized should increase the testing coverage for
 * the more obscure platforms.
 */</doc>
