<dec f='linux-4.18.y/include/media/rc-core.h' l='341' type='int ir_raw_encode_scancode(enum rc_proto protocol, u32 scancode, struct ir_raw_event * events, unsigned int max)'/>
<def f='linux-4.18.y/drivers/media/rc/rc-ir-raw.c' l='521' ll='541' type='int ir_raw_encode_scancode(enum rc_proto protocol, u32 scancode, struct ir_raw_event * events, unsigned int max)'/>
<dec f='linux-4.18.y/drivers/media/rc/rc-ir-raw.c' l='542' type='int ir_raw_encode_scancode(enum rc_proto , u32 , struct ir_raw_event * , unsigned int )'/>
<use f='linux-4.18.y/drivers/media/rc/rc-ir-raw.c' l='542' c='ir_raw_encode_scancode'/>
<use f='linux-4.18.y/drivers/media/rc/rc-ir-raw.c' l='542' u='a'/>
<use f='linux-4.18.y/drivers/media/rc/rc-ir-raw.c' l='542' u='a'/>
<doc f='linux-4.18.y/drivers/media/rc/rc-ir-raw.c' l='505'>/**
 * ir_raw_encode_scancode() - Encode a scancode as raw events
 *
 * @protocol:		protocol
 * @scancode:		scancode filter describing a single scancode
 * @events:		array of raw events to write into
 * @max:		max number of raw events
 *
 * Attempts to encode the scancode as raw events.
 *
 * Returns:	The number of events written.
 *		-ENOBUFS if there isn&apos;t enough space in the array to fit the
 *		encoding. In this case all @max events will have been written.
 *		-EINVAL if the scancode is ambiguous or invalid, or if no
 *		compatible encoder was found.
 */</doc>
