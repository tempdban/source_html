<dec f='linux-4.14.y/fs/ntfs/ntfs.h' l='117' type='int ntfs_ucsncasecmp(const ntfschar * s1, const ntfschar * s2, size_t n, const ntfschar * upcase, const u32 upcase_size)'/>
<use f='linux-4.14.y/fs/ntfs/unistr.c' l='76' u='c' c='ntfs_are_names_equal'/>
<def f='linux-4.14.y/fs/ntfs/unistr.c' l='185' ll='204' type='int ntfs_ucsncasecmp(const ntfschar * s1, const ntfschar * s2, size_t n, const ntfschar * upcase, const u32 upcase_size)'/>
<doc f='linux-4.14.y/fs/ntfs/unistr.c' l='167'>/**
 * ntfs_ucsncasecmp - compare two little endian Unicode strings, ignoring case
 * @s1:			first string
 * @s2:			second string
 * @n:			maximum unicode characters to compare
 * @upcase:		upcase table
 * @upcase_size:	upcase table size in Unicode characters
 *
 * Compare the first @n characters of the Unicode strings @s1 and @s2,
 * ignoring case. The strings in little endian format and appropriate
 * le16_to_cpu() conversion is performed on non-little endian machines.
 *
 * Each character is uppercased using the @upcase table before the comparison.
 *
 * The function returns an integer less than, equal to, or greater than zero
 * if @s1 (or the first @n Unicode characters thereof) is found, respectively,
 * to be less than, to match, or be greater than @s2.
 */</doc>
