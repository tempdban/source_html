<def f='linux-4.14.y/include/linux/dma-mapping.h' l='79' ll='135'/>
<size>136</size>
<doc f='linux-4.14.y/include/linux/dma-mapping.h' l='73'>/*
 * A dma_addr_t can hold any valid DMA or bus address for the platform.
 * It can be given to a device to use as a DMA source or target.  A CPU cannot
 * reference a dma_addr_t directly because there may be translation between
 * its physical address space and the bus address space.
 */</doc>
<mbr r='dma_map_ops::alloc' o='0' t='void *(*)(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long)'/>
<mbr r='dma_map_ops::free' o='64' t='void (*)(struct device *, size_t, void *, dma_addr_t, unsigned long)'/>
<mbr r='dma_map_ops::mmap' o='128' t='int (*)(struct device *, struct vm_area_struct *, void *, dma_addr_t, size_t, unsigned long)'/>
<mbr r='dma_map_ops::get_sgtable' o='192' t='int (*)(struct device *, struct sg_table *, void *, dma_addr_t, size_t, unsigned long)'/>
<mbr r='dma_map_ops::map_page' o='256' t='dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long)'/>
<mbr r='dma_map_ops::unmap_page' o='320' t='void (*)(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long)'/>
<mbr r='dma_map_ops::map_sg' o='384' t='int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long)'/>
<mbr r='dma_map_ops::unmap_sg' o='448' t='void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long)'/>
<mbr r='dma_map_ops::map_resource' o='512' t='dma_addr_t (*)(struct device *, phys_addr_t, size_t, enum dma_data_direction, unsigned long)'/>
<mbr r='dma_map_ops::unmap_resource' o='576' t='void (*)(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long)'/>
<mbr r='dma_map_ops::sync_single_for_cpu' o='640' t='void (*)(struct device *, dma_addr_t, size_t, enum dma_data_direction)'/>
<mbr r='dma_map_ops::sync_single_for_device' o='704' t='void (*)(struct device *, dma_addr_t, size_t, enum dma_data_direction)'/>
<mbr r='dma_map_ops::sync_sg_for_cpu' o='768' t='void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction)'/>
<mbr r='dma_map_ops::sync_sg_for_device' o='832' t='void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction)'/>
<mbr r='dma_map_ops::mapping_error' o='896' t='int (*)(struct device *, dma_addr_t)'/>
<mbr r='dma_map_ops::dma_supported' o='960' t='int (*)(struct device *, u64)'/>
<mbr r='dma_map_ops::is_phys' o='1024' t='int'/>
