<dec f='linux-4.18.y/include/linux/random.h' l='39' type='int add_random_ready_callback(struct random_ready_callback * rdy)'/>
<use f='linux-4.18.y/crypto/drbg.c' l='1414' u='c' c='drbg_prepare_hrng'/>
<def f='linux-4.18.y/drivers/char/random.c' l='1669' ll='1697' type='int add_random_ready_callback(struct random_ready_callback * rdy)'/>
<dec f='linux-4.18.y/drivers/char/random.c' l='1698' type='int add_random_ready_callback(struct random_ready_callback * )'/>
<use f='linux-4.18.y/drivers/char/random.c' l='1698' c='add_random_ready_callback'/>
<use f='linux-4.18.y/drivers/char/random.c' l='1698' u='a'/>
<use f='linux-4.18.y/drivers/char/random.c' l='1698' u='a'/>
<doc f='linux-4.18.y/drivers/char/random.c' l='1661'>/*
 * Add a callback function that will be invoked when the nonblocking
 * pool is initialised.
 *
 * returns: 0 if callback is successfully added
 *	    -EALREADY if pool is already initialised (callback not called)
 *	    -ENOENT if module for callback is not alive
 */</doc>
<use f='linux-4.18.y/lib/vsprintf.c' l='1678' u='c' c='initialize_ptr_random'/>
