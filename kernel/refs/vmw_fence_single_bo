<dec f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='677' type='void vmw_fence_single_bo(struct ttm_buffer_object * bo, struct vmw_fence_obj * fence)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_context.c' l='427' u='c' c='vmw_gb_context_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_context.c' l='651' u='c' c='vmw_dx_context_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_cotable.c' l='327' u='c' c='vmw_cotable_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_cotable.c' l='370' u='c' c='vmw_cotable_readback'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2510' u='c' c='vmw_kms_helper_buffer_finish'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_mob.c' l='228' u='c' c='vmw_takedown_otable_base'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_mob.c' l='362' u='c' c='vmw_otable_batch_takedown'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_mob.c' l='615' u='c' c='vmw_mob_unbind'/>
<def f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1192' ll='1206' type='void vmw_fence_single_bo(struct ttm_buffer_object * bo, struct vmw_fence_obj * fence)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1347' u='c' c='vmw_query_move_notify'/>
<doc f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1180'>/**
 * vmw_fence_single_bo - Utility function to fence a single TTM buffer
 *                       object without unreserving it.
 *
 * @bo:             Pointer to the struct ttm_buffer_object to fence.
 * @fence:          Pointer to the fence. If NULL, this function will
 *                  insert a fence into the command stream..
 *
 * Contrary to the ttm_eu version of this function, it takes only
 * a single buffer object instead of a list, and it also doesn&apos;t
 * unreserve the buffer object, which needs to be done separately.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_shader.c' l='309' u='c' c='vmw_gb_shader_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_shader.c' l='540' u='c' c='vmw_dx_shader_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='470' u='c' c='vmw_legacy_srf_dma'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='1211' u='c' c='vmw_gb_surface_unbind'/>
<dec f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='677' type='void vmw_fence_single_bo(struct ttm_buffer_object * bo, struct vmw_fence_obj * fence)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_context.c' l='427' u='c' c='vmw_gb_context_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_context.c' l='651' u='c' c='vmw_dx_context_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_cotable.c' l='327' u='c' c='vmw_cotable_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_cotable.c' l='370' u='c' c='vmw_cotable_readback'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2510' u='c' c='vmw_kms_helper_buffer_finish'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_mob.c' l='228' u='c' c='vmw_takedown_otable_base'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_mob.c' l='362' u='c' c='vmw_otable_batch_takedown'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_mob.c' l='615' u='c' c='vmw_mob_unbind'/>
<def f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1192' ll='1206' type='void vmw_fence_single_bo(struct ttm_buffer_object * bo, struct vmw_fence_obj * fence)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1347' u='c' c='vmw_query_move_notify'/>
<doc f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1180'>/**
 * vmw_fence_single_bo - Utility function to fence a single TTM buffer
 *                       object without unreserving it.
 *
 * @bo:             Pointer to the struct ttm_buffer_object to fence.
 * @fence:          Pointer to the fence. If NULL, this function will
 *                  insert a fence into the command stream..
 *
 * Contrary to the ttm_eu version of this function, it takes only
 * a single buffer object instead of a list, and it also doesn&apos;t
 * unreserve the buffer object, which needs to be done separately.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_shader.c' l='309' u='c' c='vmw_gb_shader_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_shader.c' l='540' u='c' c='vmw_dx_shader_unbind'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='470' u='c' c='vmw_legacy_srf_dma'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='1211' u='c' c='vmw_gb_surface_unbind'/>
