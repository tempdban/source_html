<dec f='linux-4.14.y/drivers/gpu/drm/drm_legacy.h' l='69' type='int drm_legacy_rmmap_ioctl(struct drm_device * d, void * v, struct drm_file * f)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_bufs.c' l='589' ll='630' type='int drm_legacy_rmmap_ioctl(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_bufs.c' l='574'>/* The rmmap ioctl appears to be unnecessary.  All mappings are torn down on
 * the last close of the device, and this is necessary for cleanup when things
 * exit uncleanly.  Therefore, having userland manually remove mappings seems
 * like a pointless exercise since they&apos;re going away anyway.
 *
 * One use case might be after addmap is allowed for normal users for SHM and
 * gets used by drivers that the server doesn&apos;t need to care about.  This seems
 * unlikely.
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg pointer to a struct drm_map structure.
 * \return zero on success or a negative value on error.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioc32.c' l='240' u='r' c='compat_drm_rmmap'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='559'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='559'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='559'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='559'/>
