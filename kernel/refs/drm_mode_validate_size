<dec f='linux-4.14.y/include/drm/drm_modes.h' l='505' type='enum drm_mode_status drm_mode_validate_size(const struct drm_display_mode * mode, int maxX, int maxY)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1072' ll='1083' type='enum drm_mode_status drm_mode_validate_size(const struct drm_display_mode * mode, int maxX, int maxY)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' type='enum drm_mode_status drm_mode_validate_size(const struct drm_display_mode * , int , int )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' c='drm_mode_validate_size'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1058'>/**
 * drm_mode_validate_size - make sure modes adhere to size constraints
 * @mode: mode to check
 * @maxX: maximum width
 * @maxY: maximum height
 *
 * This function is a helper which can be used to validate modes against size
 * limitations of the DRM device/connector. If a mode is too big its status
 * member is updated with the appropriate validation failure code. The list
 * itself is not changed.
 *
 * Returns:
 * The mode status
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='523' u='c' c='drm_helper_probe_single_connector_modes'/>
<dec f='linux-4.14.y/include/drm/drm_modes.h' l='505' type='enum drm_mode_status drm_mode_validate_size(const struct drm_display_mode * mode, int maxX, int maxY)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1072' ll='1083' type='enum drm_mode_status drm_mode_validate_size(const struct drm_display_mode * mode, int maxX, int maxY)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' type='enum drm_mode_status drm_mode_validate_size(const struct drm_display_mode * , int , int )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' c='drm_mode_validate_size'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1084' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1058'>/**
 * drm_mode_validate_size - make sure modes adhere to size constraints
 * @mode: mode to check
 * @maxX: maximum width
 * @maxY: maximum height
 *
 * This function is a helper which can be used to validate modes against size
 * limitations of the DRM device/connector. If a mode is too big its status
 * member is updated with the appropriate validation failure code. The list
 * itself is not changed.
 *
 * Returns:
 * The mode status
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='523' u='c' c='drm_helper_probe_single_connector_modes'/>
