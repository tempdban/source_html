<dec f='linux-4.18.y/include/linux/rcutree.h' l='96' type='void rcu_all_qs()'/>
<def f='linux-4.18.y/kernel/rcu/tree.c' l='474' ll='498' type='void rcu_all_qs()'/>
<dec f='linux-4.18.y/kernel/rcu/tree.c' l='499' type='void rcu_all_qs()'/>
<use f='linux-4.18.y/kernel/rcu/tree.c' l='499' c='rcu_all_qs'/>
<use f='linux-4.18.y/kernel/rcu/tree.c' l='499' u='a'/>
<use f='linux-4.18.y/kernel/rcu/tree.c' l='499' u='a'/>
<use f='linux-4.18.y/kernel/rcu/tree.c' l='2649' macro='1' u='c'/>
<doc f='linux-4.18.y/kernel/rcu/tree.c' l='461'>/*
 * Register a quiescent state for all RCU flavors.  If there is an
 * emergency, invoke rcu_momentary_dyntick_idle() to do a heavy-weight
 * dyntick-idle quiescent state visible to other CPUs (but only for those
 * RCU flavors in desperate need of a quiescent state, which will normally
 * be none of them).  Either way, do a lightweight quiescent state for
 * all RCU flavors.
 *
 * The barrier() calls are redundant in the common case when this is
 * called externally, but just in case this is called from within this
 * file.
 *
 */</doc>
<use f='linux-4.18.y/kernel/sched/core.c' l='4994' u='c' c='_cond_resched'/>
