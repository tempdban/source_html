<dec f='linux-4.18.y/include/linux/perf_event.h' l='868' type='void perf_event_free_task(struct task_struct * task)'/>
<def f='linux-4.18.y/kernel/events/core.c' l='11169' ll='11199' type='void perf_event_free_task(struct task_struct * task)'/>
<use f='linux-4.18.y/kernel/events/core.c' l='11554' u='c' c='perf_event_init_task'/>
<doc f='linux-4.18.y/kernel/events/core.c' l='11162'>/*
 * Free an unexposed, unused context as created by inheritance by
 * perf_event_init_task below, used by fork() in case of fail.
 *
 * Not all locks are strictly required, but take them anyway to be nice and
 * help out with the lockdep assertions.
 */</doc>
<use f='linux-4.18.y/kernel/fork.c' l='2044' u='c' c='copy_process'/>
