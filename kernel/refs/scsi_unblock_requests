<dec f='linux-4.18.y/include/scsi/scsi_host.h' l='787' type='void scsi_unblock_requests(struct Scsi_Host * )'/>
<use f='linux-4.18.y/drivers/scsi/libsas/sas_init.c' l='435' u='c' c='sas_resume_ha'/>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='10970' u='c' c='scsih_pci_resume'/>
<def f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2387' ll='2391' type='void scsi_unblock_requests(struct Scsi_Host * shost)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2392' type='void scsi_unblock_requests(struct Scsi_Host * )'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2392' c='scsi_unblock_requests'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2392' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2392' u='a'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2367'>/*
 * Function:    scsi_unblock_requests()
 *
 * Purpose:     Utility function used by low-level drivers to allow further
 *		commands from being queued to the device.
 *
 * Arguments:   shost       - Host in question
 *
 * Returns:     Nothing
 *
 * Lock status: No locks are assumed held.
 *
 * Notes:       There is no timer nor any other means by which the requests
 *		get unblocked other than the low-level driver calling
 *		scsi_unblock_requests().
 *
 *		This is done as an API function so that changes to the
 *		internals of the scsi mid-layer won&apos;t require wholesale
 *		changes to drivers that use this feature.
 */</doc>
