<dec f='linux-4.18.y/include/drm/drm_prime.h' l='103' type='int drm_gem_dmabuf_mmap(struct dma_buf * dma_buf, struct vm_area_struct * vma)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='504' ll='513' type='int drm_gem_dmabuf_mmap(struct dma_buf * dma_buf, struct vm_area_struct * vma)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='514' type='int drm_gem_dmabuf_mmap(struct dma_buf * , struct vm_area_struct * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='514' c='drm_gem_dmabuf_mmap'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='514' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='514' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='526'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='526'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='494'>/**
 * drm_gem_dmabuf_mmap - dma_buf mmap implementation for GEM
 * @dma_buf: buffer to be mapped
 * @vma: virtual address range
 *
 * Provides memory mapping for the buffer. This can be used as the
 * &amp;dma_buf_ops.mmap callback.
 *
 * Returns 0 on success or a negative error code on failure.
 */</doc>
