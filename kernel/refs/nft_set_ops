<def f='linux-4.14.y/include/net/netfilter/nf_tables.h' l='322' ll='369'/>
<size>112</size>
<doc f='linux-4.14.y/include/net/netfilter/nf_tables.h' l='306'>/**
 *	struct nft_set_ops - nf_tables set operations
 *
 *	@lookup: look up an element within the set
 *	@insert: insert new element into set
 *	@activate: activate new element in the next generation
 *	@deactivate: lookup for element and deactivate it in the next generation
 *	@flush: deactivate element in the next generation
 *	@remove: remove element from set
 *	@walk: iterate over all set elemeennts
 *	@privsize: function to return size of set private data
 *	@init: initialize private data of new set instance
 *	@destroy: destroy private data of set instance
 *	@elemsize: element private size
 *	@features: features supported by the implementation
 */</doc>
<mbr r='nft_set_ops::lookup' o='0' t='bool (*)(const struct net *, const struct nft_set *, const u32 *, const struct nft_set_ext **)'/>
<mbr r='nft_set_ops::update' o='64' t='bool (*)(struct nft_set *, const u32 *, void *(*)(struct nft_set *, const struct nft_expr *, struct nft_regs *), const struct nft_expr *, struct nft_regs *, const struct nft_set_ext **)'/>
<mbr r='nft_set_ops::insert' o='128' t='int (*)(const struct net *, const struct nft_set *, const struct nft_set_elem *, struct nft_set_ext **)'/>
<mbr r='nft_set_ops::activate' o='192' t='void (*)(const struct net *, const struct nft_set *, const struct nft_set_elem *)'/>
<mbr r='nft_set_ops::deactivate' o='256' t='void *(*)(const struct net *, const struct nft_set *, const struct nft_set_elem *)'/>
<mbr r='nft_set_ops::flush' o='320' t='bool (*)(const struct net *, const struct nft_set *, void *)'/>
<mbr r='nft_set_ops::remove' o='384' t='void (*)(const struct net *, const struct nft_set *, const struct nft_set_elem *)'/>
<mbr r='nft_set_ops::walk' o='448' t='void (*)(const struct nft_ctx *, struct nft_set *, struct nft_set_iter *)'/>
<mbr r='nft_set_ops::privsize' o='512' t='unsigned int (*)(const struct nlattr *const *, const struct nft_set_desc *)'/>
<mbr r='nft_set_ops::estimate' o='576' t='bool (*)(const struct nft_set_desc *, u32, struct nft_set_estimate *)'/>
<mbr r='nft_set_ops::init' o='640' t='int (*)(const struct nft_set *, const struct nft_set_desc *, const struct nlattr *const *)'/>
<mbr r='nft_set_ops::destroy' o='704' t='void (*)(const struct nft_set *)'/>
<mbr r='nft_set_ops::elemsize' o='768' t='unsigned int'/>
<mbr r='nft_set_ops::features' o='800' t='u32'/>
<mbr r='nft_set_ops::type' o='832' t='const struct nft_set_type *'/>
