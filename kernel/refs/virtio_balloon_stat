<def f='linux-4.18.y/include/uapi/linux/virtio_balloon.h' l='98' ll='101'/>
<size>10</size>
<doc f='linux-4.18.y/include/uapi/linux/virtio_balloon.h' l='75'>/*
 * Memory statistics structure.
 * Driver fills an array of these structures and passes to device.
 *
 * NOTE: fields are laid out in a way that would make compiler add padding
 * between and after fields, so we have to use compiler-specific attributes to
 * pack it, to disable this padding. This also often causes compiler to
 * generate suboptimal code.
 *
 * We maintain this statistics structure format for backwards compatibility,
 * but don&apos;t follow this example.
 *
 * If implementing a similar structure, do something like the below instead:
 *     struct virtio_balloon_stat {
 *         __virtio16 tag;
 *         __u8 reserved[6];
 *         __virtio64 val;
 *     };
 *
 * In other words, add explicit reserved fields to align field and
 * structure boundaries at field size, avoiding compiler padding
 * without the packed attribute.
 */</doc>
<mbr r='virtio_balloon_stat::tag' o='0' t='__virtio16'/>
<mbr r='virtio_balloon_stat::val' o='16' t='__virtio64'/>
