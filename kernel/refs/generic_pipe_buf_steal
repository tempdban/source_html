<dec f='linux-4.18.y/include/linux/pipe_fs_i.h' l='183' type='int generic_pipe_buf_steal(struct pipe_inode_info * , struct pipe_buffer * )'/>
<def f='linux-4.18.y/fs/pipe.c' l='163' ll='179' type='int generic_pipe_buf_steal(struct pipe_inode_info * pipe, struct pipe_buffer * buf)'/>
<dec f='linux-4.18.y/fs/pipe.c' l='180' type='int generic_pipe_buf_steal(struct pipe_inode_info * , struct pipe_buffer * )'/>
<use f='linux-4.18.y/fs/pipe.c' l='180' c='generic_pipe_buf_steal'/>
<use f='linux-4.18.y/fs/pipe.c' l='180' u='a'/>
<use f='linux-4.18.y/fs/pipe.c' l='180' u='a'/>
<doc f='linux-4.18.y/fs/pipe.c' l='151'>/**
 * generic_pipe_buf_steal - attempt to take ownership of a &amp;pipe_buffer
 * @pipe:	the pipe that the buffer belongs to
 * @buf:	the buffer to attempt to steal
 *
 * Description:
 *	This function attempts to steal the &amp;struct page attached to
 *	@buf. If successful, this function returns 0 and returns with
 *	the page locked. The caller may then reuse the page for whatever
 *	he wishes; the typical use is insertion into a different file
 *	page cache.
 */</doc>
<use f='linux-4.18.y/fs/splice.c' l='155' u='c' c='user_page_pipe_buf_steal'/>
<use f='linux-4.18.y/fs/splice.c' l='332'/>
<use f='linux-4.18.y/fs/splice.c' l='332'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='5808'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='5808'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='6828'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='6828'/>
