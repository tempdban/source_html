<dec f='linux-4.14.y/include/drm/drm_dp_mst_helper.h' l='614' type='int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr * mgr)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1792' ll='1864' type='int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr * mgr)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' type='int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' c='drm_dp_update_payload_part1'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='3013' u='c' c='drm_dp_destroy_connector_work'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1779'>/**
 * drm_dp_update_payload_part1() - Execute payload update part 1
 * @mgr: manager to use.
 *
 * This iterates over all proposed virtual channels, and tries to
 * allocate space in the link for them. For 0-&gt;slots transitions,
 * this step just writes the VCPI to the MST device. For slots-&gt;0
 * transitions, this writes the updated VCPIs and removes the
 * remote VC payloads.
 *
 * after calling this the driver should generate ACT and payload
 * packets.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_dp_mst_helper.h' l='614' type='int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr * mgr)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1792' ll='1864' type='int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr * mgr)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' type='int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' c='drm_dp_update_payload_part1'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1865' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='3013' u='c' c='drm_dp_destroy_connector_work'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1779'>/**
 * drm_dp_update_payload_part1() - Execute payload update part 1
 * @mgr: manager to use.
 *
 * This iterates over all proposed virtual channels, and tries to
 * allocate space in the link for them. For 0-&gt;slots transitions,
 * this step just writes the VCPI to the MST device. For slots-&gt;0
 * transitions, this writes the updated VCPIs and removes the
 * remote VC payloads.
 *
 * after calling this the driver should generate ACT and payload
 * packets.
 */</doc>
