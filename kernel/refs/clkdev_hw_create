<dec f='linux-4.18.y/include/linux/clkdev.h' l='46' type='struct clk_lookup * clkdev_hw_create(struct clk_hw * hw, const char * con_id, const char * dev_fmt)'/>
<def f='linux-4.18.y/drivers/clk/clkdev.c' l='350' ll='361' type='struct clk_lookup * clkdev_hw_create(struct clk_hw * hw, const char * con_id, const char * dev_fmt)'/>
<dec f='linux-4.18.y/drivers/clk/clkdev.c' l='362' type='struct clk_lookup * clkdev_hw_create(struct clk_hw * , const char * , const char * )'/>
<use f='linux-4.18.y/drivers/clk/clkdev.c' l='362' c='clkdev_hw_create'/>
<use f='linux-4.18.y/drivers/clk/clkdev.c' l='362' u='a'/>
<use f='linux-4.18.y/drivers/clk/clkdev.c' l='362' u='a'/>
<doc f='linux-4.18.y/drivers/clk/clkdev.c' l='341'>/**
 * clkdev_hw_create - allocate and add a clkdev lookup structure
 * @hw: struct clk_hw to associate with all clk_lookups
 * @con_id: connection ID string on device
 * @dev_fmt: format string describing device name
 *
 * Returns a clk_lookup structure, which can be later unregistered and
 * freed.
 */</doc>
<use f='linux-4.18.y/drivers/clk/x86/clk-pmc-atom.c' l='202' u='c' c='plt_clk_register'/>
<use f='linux-4.18.y/drivers/clk/x86/clk-pmc-atom.c' l='234' u='c' c='plt_clk_register_fixed_rate'/>
<use f='linux-4.18.y/drivers/clk/x86/clk-pmc-atom.c' l='348' u='c' c='plt_clk_probe'/>
