<dec f='linux-4.14.y/include/drm/ttm/ttm_lock.h' l='126' type='int ttm_read_trylock(struct ttm_lock * lock, bool interruptible)'/>
<def f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_lock.c' l='120' ll='137' type='int ttm_read_trylock(struct ttm_lock * lock, bool interruptible)'/>
<doc f='linux-4.14.y/include/drm/ttm/ttm_lock.h' l='111'>/**
 * ttm_read_trylock
 *
 * @lock: Pointer to a struct ttm_lock
 * @interruptible: Interruptible sleeping while waiting for a lock.
 *
 * Tries to take the lock in read mode. If the lock is already held
 * in write mode, the function will return -EBUSY. If the lock is held
 * in vt or suspend mode, the function will sleep until these modes
 * are unlocked.
 *
 * Returns:
 * -EBUSY The lock was already held in write mode.
 * -ERESTARTSYS If interrupted by a signal and interruptible is true.
 */</doc>
