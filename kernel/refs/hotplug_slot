<def f='linux-4.14.y/include/linux/pci_hotplug.h' l='102' ll='111'/>
<size>56</size>
<doc f='linux-4.14.y/include/linux/pci_hotplug.h' l='92'>/**
 * struct hotplug_slot - used to register a physical slot with the hotplug pci core
 * @ops: pointer to the &amp;struct hotplug_slot_ops to be used for this slot
 * @info: pointer to the &amp;struct hotplug_slot_info for the initial values for
 * this slot.
 * @release: called during pci_hp_deregister to free memory allocated in a
 * hotplug_slot structure.
 * @private: used by the hotplug pci controller driver to store whatever it
 * needs.
 */</doc>
<mbr r='hotplug_slot::ops' o='0' t='struct hotplug_slot_ops *'/>
<mbr r='hotplug_slot::info' o='64' t='struct hotplug_slot_info *'/>
<mbr r='hotplug_slot::release' o='128' t='void (*)(struct hotplug_slot *)'/>
<mbr r='hotplug_slot::private' o='192' t='void *'/>
<mbr r='hotplug_slot::slot_list' o='256' t='struct list_head'/>
<mbr r='hotplug_slot::pci_slot' o='384' t='struct pci_slot *'/>
<def f='linux-4.14.y/include/linux/pci_hotplug.h' l='102' ll='111'/>
<size>56</size>
<doc f='linux-4.14.y/include/linux/pci_hotplug.h' l='92'>/**
 * struct hotplug_slot - used to register a physical slot with the hotplug pci core
 * @ops: pointer to the &amp;struct hotplug_slot_ops to be used for this slot
 * @info: pointer to the &amp;struct hotplug_slot_info for the initial values for
 * this slot.
 * @release: called during pci_hp_deregister to free memory allocated in a
 * hotplug_slot structure.
 * @private: used by the hotplug pci controller driver to store whatever it
 * needs.
 */</doc>
<mbr r='hotplug_slot::ops' o='0' t='struct hotplug_slot_ops *'/>
<mbr r='hotplug_slot::info' o='64' t='struct hotplug_slot_info *'/>
<mbr r='hotplug_slot::release' o='128' t='void (*)(struct hotplug_slot *)'/>
<mbr r='hotplug_slot::private' o='192' t='void *'/>
<mbr r='hotplug_slot::slot_list' o='256' t='struct list_head'/>
<mbr r='hotplug_slot::pci_slot' o='384' t='struct pci_slot *'/>
