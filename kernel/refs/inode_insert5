<dec f='linux-4.18.y/include/linux/fs.h' l='2902' type='struct inode * inode_insert5(struct inode * inode, unsigned long hashval, int (*)(struct inode *, void *) test, int (*)(struct inode *, void *) set, void * data)'/>
<def f='linux-4.18.y/fs/inode.c' l='1026' ll='1067' type='struct inode * inode_insert5(struct inode * inode, unsigned long hashval, int (*)(struct inode *, void *) test, int (*)(struct inode *, void *) set, void * data)'/>
<dec f='linux-4.18.y/fs/inode.c' l='1068' type='struct inode * inode_insert5(struct inode * , unsigned long , int (*)(struct inode *, void *) , int (*)(struct inode *, void *) , void * )'/>
<use f='linux-4.18.y/fs/inode.c' l='1068' c='inode_insert5'/>
<use f='linux-4.18.y/fs/inode.c' l='1068' u='a'/>
<use f='linux-4.18.y/fs/inode.c' l='1068' u='a'/>
<use f='linux-4.18.y/fs/inode.c' l='1100' u='c' c='iget5_locked'/>
<use f='linux-4.18.y/fs/inode.c' l='1446' u='c' c='insert_inode_locked4'/>
<doc f='linux-4.18.y/fs/inode.c' l='1006'>/**
 * inode_insert5 - obtain an inode from a mounted file system
 * @inode:	pre-allocated inode to use for insert to cache
 * @hashval:	hash value (usually inode number) to get
 * @test:	callback used for comparisons between inodes
 * @set:	callback used to initialize a new struct inode
 * @data:	opaque data pointer to pass to @test and @set
 *
 * Search for the inode specified by @hashval and @data in the inode cache,
 * and if present it is return it with an increased reference count. This is
 * a variant of iget5_locked() for callers that don&apos;t want to fail on memory
 * allocation of inode.
 *
 * If the inode is not in cache, insert the pre-allocated inode to cache and
 * return it locked, hashed, and with the I_NEW flag set. The file system gets
 * to fill it in before unlocking it via unlock_new_inode().
 *
 * Note both @test and @set are called with the inode_hash_lock held, so can&apos;t
 * sleep.
 */</doc>
<use f='linux-4.18.y/fs/overlayfs/inode.c' l='755' u='c' c='ovl_iget5'/>
