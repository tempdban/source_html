<dec f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe.h' l='877' type='void ixgbe_write_eitr(struct ixgbe_q_vector * )'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c' l='2403' u='c' c='ixgbe_set_coalesce'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='2463' u='c' c='ixgbe_configure_msix'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='2686' ll='2713' type='void ixgbe_write_eitr(struct ixgbe_q_vector * q_vector)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='2733' u='c' c='ixgbe_set_itr'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='3452' u='c' c='ixgbe_configure_msi_and_legacy'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='2678'>/**
 * ixgbe_write_eitr - write EITR register in hardware specific way
 * @q_vector: structure containing interrupt and ring information
 *
 * This function is made to be called by ethtool and by the driver
 * when it needs to update EITR registers at runtime.  Hardware
 * specific quirks/differences are taken care of here.
 */</doc>
