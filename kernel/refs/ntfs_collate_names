<dec f='linux-4.14.y/fs/ntfs/ntfs.h' l='112' type='int ntfs_collate_names(const ntfschar * name1, const u32 name1_len, const ntfschar * name2, const u32 name2_len, const int err_val, const IGNORE_CASE_BOOL ic, const ntfschar * upcase, const u32 upcase_len)'/>
<use f='linux-4.14.y/fs/ntfs/attrib.c' l='633' u='c' c='ntfs_attr_find'/>
<use f='linux-4.14.y/fs/ntfs/attrib.c' l='647' u='c' c='ntfs_attr_find'/>
<use f='linux-4.14.y/fs/ntfs/attrib.c' l='932' u='c' c='ntfs_external_attr_find'/>
<use f='linux-4.14.y/fs/ntfs/attrib.c' l='952' u='c' c='ntfs_external_attr_find'/>
<use f='linux-4.14.y/fs/ntfs/dir.c' l='247' u='c' c='ntfs_lookup_inode_by_name'/>
<use f='linux-4.14.y/fs/ntfs/dir.c' l='266' u='c' c='ntfs_lookup_inode_by_name'/>
<use f='linux-4.14.y/fs/ntfs/dir.c' l='509' u='c' c='ntfs_lookup_inode_by_name'/>
<use f='linux-4.14.y/fs/ntfs/dir.c' l='528' u='c' c='ntfs_lookup_inode_by_name'/>
<def f='linux-4.14.y/fs/ntfs/unistr.c' l='97' ll='133' type='int ntfs_collate_names(const ntfschar * name1, const u32 name1_len, const ntfschar * name2, const u32 name2_len, const int err_val, const IGNORE_CASE_BOOL ic, const ntfschar * upcase, const u32 upcase_len)'/>
<use f='linux-4.14.y/fs/ntfs/unistr.c' l='229' u='c' c='ntfs_file_compare_values'/>
<doc f='linux-4.14.y/fs/ntfs/unistr.c' l='79'>/**
 * ntfs_collate_names - collate two Unicode names
 * @name1:	first Unicode name to compare
 * @name2:	second Unicode name to compare
 * @err_val:	if @name1 contains an invalid character return this value
 * @ic:		either CASE_SENSITIVE or IGNORE_CASE
 * @upcase:	upcase table (ignored if @ic is CASE_SENSITIVE)
 * @upcase_len:	upcase table size (ignored if @ic is CASE_SENSITIVE)
 *
 * ntfs_collate_names collates two Unicode names and returns:
 *
 *  -1 if the first name collates before the second one,
 *   0 if the names match,
 *   1 if the second name collates before the first one, or
 * @err_val if an invalid character is found in @name1 during the comparison.
 *
 * The following characters are considered invalid: &apos;&quot;&apos;, &apos;*&apos;, &apos;&lt;&apos;, &apos;&gt;&apos; and &apos;?&apos;.
 */</doc>
