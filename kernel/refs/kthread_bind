<dec f='linux-4.14.y/include/linux/kthread.h' l='53' type='void kthread_bind(struct task_struct * k, unsigned int cpu)'/>
<def f='linux-4.14.y/kernel/kthread.c' l='401' ll='404' type='void kthread_bind(struct task_struct * p, unsigned int cpu)'/>
<dec f='linux-4.14.y/kernel/kthread.c' l='405' type='void kthread_bind(struct task_struct * , unsigned int )'/>
<use f='linux-4.14.y/kernel/kthread.c' l='405' c='kthread_bind'/>
<use f='linux-4.14.y/kernel/kthread.c' l='405' u='a'/>
<use f='linux-4.14.y/kernel/kthread.c' l='405' u='a'/>
<use f='linux-4.14.y/kernel/kthread.c' l='428' u='c' c='kthread_create_on_cpu'/>
<use f='linux-4.14.y/kernel/kthread.c' l='669' u='c' c='__kthread_create_worker'/>
<doc f='linux-4.14.y/kernel/kthread.c' l='392'>/**
 * kthread_bind - bind a just-created kthread to a cpu.
 * @p: thread created by kthread_create().
 * @cpu: cpu (might not be online, must be possible) for @k to run on.
 *
 * Description: This function is equivalent to set_cpus_allowed(),
 * except that @cpu doesn&apos;t need to be online, and the thread must be
 * stopped (i.e., just returned from kthread_create()).
 */</doc>
<dec f='linux-4.14.y/include/linux/kthread.h' l='53' type='void kthread_bind(struct task_struct * k, unsigned int cpu)'/>
<def f='linux-4.14.y/kernel/kthread.c' l='401' ll='404' type='void kthread_bind(struct task_struct * p, unsigned int cpu)'/>
<dec f='linux-4.14.y/kernel/kthread.c' l='405' type='void kthread_bind(struct task_struct * , unsigned int )'/>
<use f='linux-4.14.y/kernel/kthread.c' l='405' c='kthread_bind'/>
<use f='linux-4.14.y/kernel/kthread.c' l='405' u='a'/>
<use f='linux-4.14.y/kernel/kthread.c' l='405' u='a'/>
<use f='linux-4.14.y/kernel/kthread.c' l='428' u='c' c='kthread_create_on_cpu'/>
<use f='linux-4.14.y/kernel/kthread.c' l='669' u='c' c='__kthread_create_worker'/>
<doc f='linux-4.14.y/kernel/kthread.c' l='392'>/**
 * kthread_bind - bind a just-created kthread to a cpu.
 * @p: thread created by kthread_create().
 * @cpu: cpu (might not be online, must be possible) for @k to run on.
 *
 * Description: This function is equivalent to set_cpus_allowed(),
 * except that @cpu doesn&apos;t need to be online, and the thread must be
 * stopped (i.e., just returned from kthread_create()).
 */</doc>
