<def f='linux-4.14.y/include/drm/drm_file.h' l='65' ll='76'/>
<size>80</size>
<doc f='linux-4.14.y/include/drm/drm_file.h' l='56'>/**
 * struct drm_minor - DRM device minor structure
 *
 * This structure represents a DRM minor number for device nodes in /dev.
 * Entirely opaque to drivers and should never be inspected directly by drivers.
 * Drivers instead should only interact with &amp;struct drm_file and of course
 * &amp;struct drm_device, which is also where driver-private data and resources can
 * be attached to.
 */</doc>
<mbr r='drm_minor::index' o='0' t='int'/>
<mbr r='drm_minor::type' o='32' t='int'/>
<mbr r='drm_minor::kdev' o='64' t='struct device *'/>
<mbr r='drm_minor::dev' o='128' t='struct drm_device *'/>
<mbr r='drm_minor::debugfs_root' o='192' t='struct dentry *'/>
<mbr r='drm_minor::debugfs_list' o='256' t='struct list_head'/>
<mbr r='drm_minor::debugfs_lock' o='384' t='struct mutex'/>
<def f='linux-4.14.y/include/drm/drm_file.h' l='65' ll='76'/>
<size>80</size>
<doc f='linux-4.14.y/include/drm/drm_file.h' l='56'>/**
 * struct drm_minor - DRM device minor structure
 *
 * This structure represents a DRM minor number for device nodes in /dev.
 * Entirely opaque to drivers and should never be inspected directly by drivers.
 * Drivers instead should only interact with &amp;struct drm_file and of course
 * &amp;struct drm_device, which is also where driver-private data and resources can
 * be attached to.
 */</doc>
<mbr r='drm_minor::index' o='0' t='int'/>
<mbr r='drm_minor::type' o='32' t='int'/>
<mbr r='drm_minor::kdev' o='64' t='struct device *'/>
<mbr r='drm_minor::dev' o='128' t='struct drm_device *'/>
<mbr r='drm_minor::debugfs_root' o='192' t='struct dentry *'/>
<mbr r='drm_minor::debugfs_list' o='256' t='struct list_head'/>
<mbr r='drm_minor::debugfs_lock' o='384' t='struct mutex'/>
