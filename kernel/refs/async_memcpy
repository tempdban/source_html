<dec f='linux-4.18.y/include/linux/async_tx.h' l='184' type='struct dma_async_tx_descriptor * async_memcpy(struct page * dest, struct page * src, unsigned int dest_offset, unsigned int src_offset, size_t len, struct async_submit_ctl * submit)'/>
<def f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='44' ll='105' type='struct dma_async_tx_descriptor * async_memcpy(struct page * dest, struct page * src, unsigned int dest_offset, unsigned int src_offset, size_t len, struct async_submit_ctl * submit)'/>
<dec f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='106' type='struct dma_async_tx_descriptor * async_memcpy(struct page * , struct page * , unsigned int , unsigned int , size_t , struct async_submit_ctl * )'/>
<use f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='106' c='async_memcpy'/>
<use f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='106' u='a'/>
<use f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='106' u='a'/>
<doc f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='33'>/**
 * async_memcpy - attempt to copy memory with a dma engine.
 * @dest: destination page
 * @src: src page
 * @dest_offset: offset into &apos;dest&apos; to start transaction
 * @src_offset: offset into &apos;src&apos; to start transaction
 * @len: length in bytes
 * @submit: submission / completion modifiers
 *
 * honored flags: ASYNC_TX_ACK
 */</doc>
<use f='linux-4.18.y/crypto/async_tx/async_raid6_recov.c' l='236' u='c' c='__2data_recov_5'/>
<use f='linux-4.18.y/crypto/async_tx/async_raid6_recov.c' l='492' u='c' c='async_raid6_datap_recov'/>
<use f='linux-4.18.y/drivers/md/raid5-ppl.c' l='203' u='c' c='ops_run_partial_parity'/>
<use f='linux-4.18.y/drivers/md/raid5.c' l='1281' u='c' c='async_copy_data'/>
<use f='linux-4.18.y/drivers/md/raid5.c' l='1284' u='c' c='async_copy_data'/>
<use f='linux-4.18.y/drivers/md/raid5.c' l='1445' u='c' c='ops_run_compute5'/>
<use f='linux-4.18.y/drivers/md/raid5.c' l='1926' u='c' c='ops_run_reconstruct5'/>
<use f='linux-4.18.y/drivers/md/raid5.c' l='4325' u='c' c='handle_stripe_expansion'/>
