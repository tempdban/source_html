<def f='linux-4.18.y/include/net/netfilter/nf_tables.h' l='1080' ll='1094'/>
<size>48</size>
<doc f='linux-4.18.y/include/net/netfilter/nf_tables.h' l='1071'>/**
 *	struct nft_object_ops - stateful object operations
 *
 *	@eval: stateful object evaluation function
 *	@size: stateful object size
 *	@init: initialize object from netlink attributes
 *	@destroy: release existing stateful object
 *	@dump: netlink dump stateful object
 */</doc>
<mbr r='nft_object_ops::eval' o='0' t='void (*)(struct nft_object *, struct nft_regs *, const struct nft_pktinfo *)'/>
<mbr r='nft_object_ops::size' o='64' t='unsigned int'/>
<mbr r='nft_object_ops::init' o='128' t='int (*)(const struct nft_ctx *, const struct nlattr *const *, struct nft_object *)'/>
<mbr r='nft_object_ops::destroy' o='192' t='void (*)(const struct nft_ctx *, struct nft_object *)'/>
<mbr r='nft_object_ops::dump' o='256' t='int (*)(struct sk_buff *, struct nft_object *, bool)'/>
<mbr r='nft_object_ops::type' o='320' t='const struct nft_object_type *'/>
