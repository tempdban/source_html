<dec f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.h' l='3078' type='int rte_eth_dev_udp_tunnel_port_delete(uint16_t port_id, struct rte_eth_udp_tunnel * tunnel_udp)'/>
<doc f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.h' l='3058'>/**
 * Delete UDP tunneling port a specific type of tunnel.
 * The packets with this UDP port will not be identified as this type of tunnel
 * any more.
 * Before enabling any offloading function for a tunnel, users can call this API
 * to delete a UDP port for the tunnel. So the offloading function will not take
 * effect on the packets with the specific UDP port.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param tunnel_udp
 *   UDP tunneling configuration.
 *
 * @return
 *   - (0) if successful.
 *   - (-ENODEV) if port identifier is invalid.
 *   - (-EIO) if device is removed.
 *   - (-ENOTSUP) if hardware doesn&apos;t support tunnel type.
 */</doc>
<use f='linux-4.18.y/app/test-pmd/cmdline.c' l='8751' u='c' c='cmd_tunnel_udp_config_parsed'/>
<use f='linux-4.18.y/app/test-pmd/cmdline.c' l='8822' u='c' c='cmd_cfg_tunnel_udp_port_parsed'/>
<def f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.c' l='2879' ll='2901' type='int rte_eth_dev_udp_tunnel_port_delete(uint16_t port_id, struct rte_eth_udp_tunnel * udp_tunnel)'/>
