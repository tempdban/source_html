<dec f='linux-4.18.y/include/linux/pagemap.h' l='353' type='unsigned int find_get_pages_range(struct address_space * mapping, unsigned long * start, unsigned long end, unsigned int nr_pages, struct page ** pages)'/>
<use f='linux-4.18.y/include/linux/pagemap.h' l='360' u='c' c='find_get_pages'/>
<use f='linux-4.18.y/mm/filemap.c' l='504' u='c' c='filemap_range_has_page'/>
<def f='linux-4.18.y/mm/filemap.c' l='1701' ll='1773' type='unsigned int find_get_pages_range(struct address_space * mapping, unsigned long * start, unsigned long end, unsigned int nr_pages, struct page ** pages)'/>
<doc f='linux-4.18.y/mm/filemap.c' l='1680'>/**
 * find_get_pages_range - gang pagecache lookup
 * @mapping:	The address_space to search
 * @start:	The starting page index
 * @end:	The final page index (inclusive)
 * @nr_pages:	The maximum number of pages
 * @pages:	Where the resulting pages are placed
 *
 * find_get_pages_range() will search for and return a group of up to @nr_pages
 * pages in the mapping starting at index @start and up to index @end
 * (inclusive).  The pages are placed at @pages.  find_get_pages_range() takes
 * a reference against the returned pages.
 *
 * The search returns a group of mapping-contiguous pages with ascending
 * indexes.  There may be holes in the indices due to not-present pages.
 * We also update @start to index the next page for the traversal.
 *
 * find_get_pages_range() returns the number of pages which were found. If this
 * number is smaller than @nr_pages, the end of specified range has been
 * reached.
 */</doc>
<use f='linux-4.18.y/mm/swap.c' l='997' u='c' c='pagevec_lookup_range'/>
