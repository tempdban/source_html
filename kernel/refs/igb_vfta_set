<dec f='linux-4.18.y/drivers/net/ethernet/intel/igb/e1000_mac.h' l='40' type='s32 igb_vfta_set(struct e1000_hw * hw, u32 vid, u32 vind, bool vlan_on, bool vlvf_bypass)'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/igb/e1000_mac.c' l='173' ll='273' type='s32 igb_vfta_set(struct e1000_hw * hw, u32 vlan, u32 vind, bool vlan_on, bool vlvf_bypass)'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/igb/e1000_mac.c' l='163'>/**
 *  igb_vfta_set - enable or disable vlan in VLAN filter table
 *  @hw: pointer to the HW structure
 *  @vlan: VLAN id to add or remove
 *  @vind: VMDq output index that maps queue to VLAN id
 *  @vlan_on: if true add filter, if false remove
 *
 *  Sets or clears a bit in the VLAN filter table array based on VLAN id
 *  and if we are adding or removing the filter
 **/</doc>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='1549' u='c' c='igb_update_mng_vlan'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='1559' u='c' c='igb_update_mng_vlan'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='6862' u='c' c='igb_set_vf_vlan'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='6867' u='c' c='igb_set_vf_vlan'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='8539' u='c' c='igb_vlan_rx_add_vid'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='8555' u='c' c='igb_vlan_rx_kill_vid'/>
