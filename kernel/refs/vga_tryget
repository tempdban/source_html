<dec f='linux-4.14.y/include/linux/vgaarb.h' l='113' type='int vga_tryget(struct pci_dev * pdev, unsigned int rsrc)'/>
<def f='linux-4.14.y/drivers/gpu/vga/vgaarb.c' l='483' ll='507' type='int vga_tryget(struct pci_dev * pdev, unsigned int rsrc)'/>
<dec f='linux-4.14.y/drivers/gpu/vga/vgaarb.c' l='508' type='int vga_tryget(struct pci_dev * , unsigned int )'/>
<use f='linux-4.14.y/drivers/gpu/vga/vgaarb.c' l='508' c='vga_tryget'/>
<use f='linux-4.14.y/drivers/gpu/vga/vgaarb.c' l='508' u='a'/>
<use f='linux-4.14.y/drivers/gpu/vga/vgaarb.c' l='508' u='a'/>
<use f='linux-4.14.y/drivers/gpu/vga/vgaarb.c' l='1158' u='c' c='vga_arb_write'/>
<doc f='linux-4.14.y/drivers/gpu/vga/vgaarb.c' l='468'>/**
 * vga_tryget - try to acquire &amp; lock legacy VGA resources
 * @pdev: pci devivce of VGA card or NULL for system default
 * @rsrc: bit mask of resources to acquire and lock
 *
 * This function performs the same operation as vga_get(), but will return an
 * error (-EBUSY) instead of blocking if the resources are already locked by
 * another card. It can be called in any context
 *
 * On success, release the VGA resource again with vga_put().
 *
 * Returns:
 *
 * 0 on success, negative error code on failure.
 */</doc>
