<dec f='linux-4.14.y/drivers/ata/libata.h' l='73' type='int ata_wait_ready(struct ata_link * link, unsigned long deadline, int (*)(struct ata_link *) check_ready)'/>
<def f='linux-4.14.y/drivers/ata/libata-core.c' l='3700' ll='3765' type='int ata_wait_ready(struct ata_link * link, unsigned long deadline, int (*)(struct ata_link *) check_ready)'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3786' u='c' c='ata_wait_after_reset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4134' u='c' c='sata_link_hardreset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4142' u='c' c='sata_link_hardreset'/>
<doc f='linux-4.14.y/drivers/ata/libata-core.c' l='3680'>/**
 *	ata_wait_ready - wait for link to become ready
 *	@link: link to be waited on
 *	@deadline: deadline jiffies for the operation
 *	@check_ready: callback to check link readiness
 *
 *	Wait for @link to become ready.  @check_ready should return
 *	positive number if @link is ready, 0 if it isn&apos;t, -ENODEV if
 *	link doesn&apos;t seem to be occupied, other errno for other error
 *	conditions.
 *
 *	Transient -ENODEV conditions are allowed for
 *	ATA_TMOUT_FF_WAIT.
 *
 *	LOCKING:
 *	EH context.
 *
 *	RETURNS:
 *	0 if @link is ready before @deadline; otherwise, -errno.
 */</doc>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='279' u='c' c='ata_sff_wait_ready'/>
<dec f='linux-4.14.y/drivers/ata/libata.h' l='73' type='int ata_wait_ready(struct ata_link * link, unsigned long deadline, int (*)(struct ata_link *) check_ready)'/>
<def f='linux-4.14.y/drivers/ata/libata-core.c' l='3700' ll='3765' type='int ata_wait_ready(struct ata_link * link, unsigned long deadline, int (*)(struct ata_link *) check_ready)'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='3786' u='c' c='ata_wait_after_reset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4134' u='c' c='sata_link_hardreset'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4142' u='c' c='sata_link_hardreset'/>
<doc f='linux-4.14.y/drivers/ata/libata-core.c' l='3680'>/**
 *	ata_wait_ready - wait for link to become ready
 *	@link: link to be waited on
 *	@deadline: deadline jiffies for the operation
 *	@check_ready: callback to check link readiness
 *
 *	Wait for @link to become ready.  @check_ready should return
 *	positive number if @link is ready, 0 if it isn&apos;t, -ENODEV if
 *	link doesn&apos;t seem to be occupied, other errno for other error
 *	conditions.
 *
 *	Transient -ENODEV conditions are allowed for
 *	ATA_TMOUT_FF_WAIT.
 *
 *	LOCKING:
 *	EH context.
 *
 *	RETURNS:
 *	0 if @link is ready before @deadline; otherwise, -errno.
 */</doc>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='279' u='c' c='ata_sff_wait_ready'/>
