<dec f='linux-4.18.y/include/linux/if_bridge.h' l='63' type='int br_multicast_list_adjacent(struct net_device * dev, struct list_head * br_ip_list)'/>
<def f='linux-4.18.y/net/bridge/br_multicast.c' l='2362' ll='2399' type='int br_multicast_list_adjacent(struct net_device * dev, struct list_head * br_ip_list)'/>
<dec f='linux-4.18.y/net/bridge/br_multicast.c' l='2400' type='int br_multicast_list_adjacent(struct net_device * , struct list_head * )'/>
<use f='linux-4.18.y/net/bridge/br_multicast.c' l='2400' c='br_multicast_list_adjacent'/>
<use f='linux-4.18.y/net/bridge/br_multicast.c' l='2400' u='a'/>
<use f='linux-4.18.y/net/bridge/br_multicast.c' l='2400' u='a'/>
<doc f='linux-4.18.y/net/bridge/br_multicast.c' l='2345'>/**
 * br_multicast_list_adjacent - Returns snooped multicast addresses
 * @dev:	The bridge port adjacent to which to retrieve addresses
 * @br_ip_list:	The list to store found, snooped multicast IP addresses in
 *
 * Creates a list of IP addresses (struct br_ip_list) sensed by the multicast
 * snooping feature on all bridge ports of dev&apos;s bridge device, excluding
 * the addresses from dev itself.
 *
 * Returns the number of items added to br_ip_list.
 *
 * Notes:
 * - br_ip_list needs to be initialized by caller
 * - br_ip_list might contain duplicates in the end
 *   (needs to be taken care of by caller)
 * - br_ip_list needs to be freed by caller
 */</doc>
