<dec f='linux-4.14.y/arch/x86/include/asm/debugreg.h' l='93' type='void aout_dump_debugregs(struct user * dump)'/>
<def f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='375' ll='400' type='void aout_dump_debugregs(struct user * dump)'/>
<dec f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' type='void aout_dump_debugregs(struct user * )'/>
<use f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' c='aout_dump_debugregs'/>
<use f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' u='a'/>
<use f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' u='a'/>
<doc f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='367'>/*
 * Dump the debug register contents to the user.
 * We can&apos;t dump our per cpu values because it
 * may contain cpu wide breakpoint, something that
 * doesn&apos;t belong to the current task.
 *
 * TODO: include non-ptrace user breakpoints (perf)
 */</doc>
<dec f='linux-4.14.y/arch/x86/include/asm/debugreg.h' l='93' type='void aout_dump_debugregs(struct user * dump)'/>
<def f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='375' ll='400' type='void aout_dump_debugregs(struct user * dump)'/>
<dec f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' type='void aout_dump_debugregs(struct user * )'/>
<use f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' c='aout_dump_debugregs'/>
<use f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' u='a'/>
<use f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='401' u='a'/>
<doc f='linux-4.14.y/arch/x86/kernel/hw_breakpoint.c' l='367'>/*
 * Dump the debug register contents to the user.
 * We can&apos;t dump our per cpu values because it
 * may contain cpu wide breakpoint, something that
 * doesn&apos;t belong to the current task.
 *
 * TODO: include non-ptrace user breakpoints (perf)
 */</doc>
