<dec f='linux-4.14.y/include/drm/drm_dp_dual_mode_helper.h' l='67' type='ssize_t drm_dp_dual_mode_read(struct i2c_adapter * adapter, u8 offset, void * buffer, size_t size)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='60' ll='86' type='ssize_t drm_dp_dual_mode_read(struct i2c_adapter * adapter, u8 offset, void * buffer, size_t size)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='87' type='ssize_t drm_dp_dual_mode_read(struct i2c_adapter * , u8 , void * , size_t )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='87' c='drm_dp_dual_mode_read'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='87' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='87' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='199' u='c' c='drm_dp_dual_mode_detect'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='218' u='c' c='drm_dp_dual_mode_detect'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='281' u='c' c='drm_dp_dual_mode_max_tmds_clock'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='320' u='c' c='drm_dp_dual_mode_get_tmds_output'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='374' u='c' c='drm_dp_dual_mode_set_tmds_output'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='450' u='c' c='drm_lspcon_get_mode'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='47'>/**
 * drm_dp_dual_mode_read - Read from the DP dual mode adaptor register(s)
 * @adapter: I2C adapter for the DDC bus
 * @offset: register offset
 * @buffer: buffer for return data
 * @size: sizo of the buffer
 *
 * Reads @size bytes from the DP dual mode adaptor registers
 * starting at @offset.
 *
 * Returns:
 * 0 on success, negative error code on failure
 */</doc>
