<dec f='linux-4.18.y/include/linux/fs.h' l='3080' type='int vfs_getattr(const struct path * , struct kstat * , u32 , unsigned int )'/>
<use f='linux-4.18.y/drivers/base/devtmpfs.c' l='313' u='c' c='handle_remove'/>
<use f='linux-4.18.y/drivers/block/loop.c' l='1237' u='c' c='loop_get_status'/>
<use f='linux-4.18.y/fs/overlayfs/copy_up.c' l='696' u='c' c='ovl_copy_up_one'/>
<use f='linux-4.18.y/fs/overlayfs/copy_up.c' l='706' u='c' c='ovl_copy_up_one'/>
<use f='linux-4.18.y/fs/overlayfs/dir.c' l='352' u='c' c='ovl_clear_empty'/>
<use f='linux-4.18.y/fs/overlayfs/inode.c' l='139' u='c' c='ovl_getattr'/>
<use f='linux-4.18.y/fs/overlayfs/inode.c' l='160' u='c' c='ovl_getattr'/>
<use f='linux-4.18.y/fs/overlayfs/readdir.c' l='506' u='c' c='ovl_cache_update_ino'/>
<use f='linux-4.18.y/fs/overlayfs/readdir.c' l='706' u='c' c='ovl_iterate_real'/>
<def f='linux-4.18.y/fs/stat.c' l='108' ll='117' type='int vfs_getattr(const struct path * path, struct kstat * stat, u32 request_mask, unsigned int query_flags)'/>
<dec f='linux-4.18.y/fs/stat.c' l='118' type='int vfs_getattr(const struct path * , struct kstat * , u32 , unsigned int )'/>
<use f='linux-4.18.y/fs/stat.c' l='118' c='vfs_getattr'/>
<use f='linux-4.18.y/fs/stat.c' l='118' u='a'/>
<use f='linux-4.18.y/fs/stat.c' l='118' u='a'/>
<use f='linux-4.18.y/fs/stat.c' l='143' u='c' c='vfs_statx_fd'/>
<use f='linux-4.18.y/fs/stat.c' l='189' u='c' c='vfs_statx'/>
<doc f='linux-4.18.y/fs/stat.c' l='87'>/*
 * vfs_getattr - Get the enhanced basic attributes of a file
 * @path: The file of interest
 * @stat: Where to return the statistics
 * @request_mask: STATX_xxx flags indicating what the caller wants
 * @query_flags: Query mode (KSTAT_QUERY_FLAGS)
 *
 * Ask the filesystem for a file&apos;s attributes.  The caller must indicate in
 * request_mask and query_flags to indicate what they want.
 *
 * If the file is remote, the filesystem can be forced to update the attributes
 * from the backing store by passing AT_STATX_FORCE_SYNC in query_flags or can
 * suppress the update by passing AT_STATX_DONT_SYNC.
 *
 * Bits must have been set in request_mask to indicate which attributes the
 * caller wants retrieving.  Any such attribute not requested may be returned
 * anyway, but the value may be approximate, and, if remote, may not have been
 * synchronised with the server.
 *
 * 0 will be returned on success, and a -ve error code if unsuccessful.
 */</doc>
