<dec f='linux-4.14.y/arch/x86/include/asm/spec-ctrl.h' l='16' type='void x86_virt_spec_ctrl(u64 guest_spec_ctrl, u64 guest_virt_spec_ctrl, bool guest)'/>
<use f='linux-4.14.y/arch/x86/include/asm/spec-ctrl.h' l='29' u='c' c='x86_spec_ctrl_set_guest'/>
<use f='linux-4.14.y/arch/x86/include/asm/spec-ctrl.h' l='43' u='c' c='x86_spec_ctrl_restore_host'/>
<doc f='linux-4.14.y/arch/x86/include/asm/spec-ctrl.h' l='8'>/*
 * On VMENTER we must preserve whatever view of the SPEC_CTRL MSR
 * the guest has, while on VMEXIT we restore the host view. This
 * would be easier if SPEC_CTRL were architecturally maskable or
 * shadowable for guests but this is not (currently) the case.
 * Takes the guest view of SPEC_CTRL MSR as a parameter and also
 * the guest&apos;s version of VIRT_SPEC_CTRL, if emulated.
 */</doc>
<def f='linux-4.14.y/arch/x86/kernel/cpu/bugs.c' l='140' ll='195' type='void x86_virt_spec_ctrl(u64 guest_spec_ctrl, u64 guest_virt_spec_ctrl, bool setguest)'/>
<dec f='linux-4.14.y/arch/x86/kernel/cpu/bugs.c' l='196' type='void x86_virt_spec_ctrl(u64 , u64 , bool )'/>
<use f='linux-4.14.y/arch/x86/kernel/cpu/bugs.c' l='196' c='x86_virt_spec_ctrl'/>
<use f='linux-4.14.y/arch/x86/kernel/cpu/bugs.c' l='196' u='a'/>
<use f='linux-4.14.y/arch/x86/kernel/cpu/bugs.c' l='196' u='a'/>
