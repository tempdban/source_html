<dec f='linux-4.18.y/include/linux/firmware.h' l='99' type='int firmware_request_cache(struct device * device, const char * name)'/>
<def f='linux-4.18.y/drivers/base/firmware_loader/main.c' l='698' ll='707' type='int firmware_request_cache(struct device * device, const char * name)'/>
<dec f='linux-4.18.y/drivers/base/firmware_loader/main.c' l='708' type='int firmware_request_cache(struct device * , const char * )'/>
<use f='linux-4.18.y/drivers/base/firmware_loader/main.c' l='708' c='firmware_request_cache'/>
<use f='linux-4.18.y/drivers/base/firmware_loader/main.c' l='708' u='a'/>
<use f='linux-4.18.y/drivers/base/firmware_loader/main.c' l='708' u='a'/>
<doc f='linux-4.18.y/drivers/base/firmware_loader/main.c' l='686'>/**
 * firmware_request_cache() - cache firmware for suspend so resume can use it
 * @name: name of firmware file
 * @device: device for which firmware should be cached for
 *
 * There are some devices with an optimization that enables the device to not
 * require loading firmware on system reboot. This optimization may still
 * require the firmware present on resume from suspend. This routine can be
 * used to ensure the firmware is present on resume from suspend in these
 * situations. This helper is not compatible with drivers which use
 * request_firmware_into_buf() or request_firmware_nowait() with no uevent set.
 **/</doc>
