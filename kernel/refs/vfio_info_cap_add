<dec f='linux-4.14.y/include/linux/vfio.h' l='143' type='struct vfio_info_cap_header * vfio_info_cap_add(struct vfio_info_cap * caps, size_t size, u16 id, u16 version)'/>
<def f='linux-4.14.y/drivers/vfio/vfio.c' l='1817' ll='1847' type='struct vfio_info_cap_header * vfio_info_cap_add(struct vfio_info_cap * caps, size_t size, u16 id, u16 version)'/>
<dec f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' type='struct vfio_info_cap_header * vfio_info_cap_add(struct vfio_info_cap * , size_t , u16 , u16 )'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' c='vfio_info_cap_add'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' u='a'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' u='a'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1867' u='c' c='sparse_mmap_cap'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1885' u='c' c='region_type_cap'/>
<doc f='linux-4.14.y/drivers/vfio/vfio.c' l='1808'>/*
 * Helper for managing a buffer of info chain capabilities, allocate or
 * reallocate a buffer with additional @size, filling in @id and @version
 * of the capability.  A pointer to the new capability is returned.
 *
 * NB. The chain is based at the head of the buffer, so new entries are
 * added to the tail, vfio_info_cap_shift() should be called to fixup the
 * next offsets prior to copying to the user buffer.
 */</doc>
<dec f='linux-4.14.y/include/linux/vfio.h' l='143' type='struct vfio_info_cap_header * vfio_info_cap_add(struct vfio_info_cap * caps, size_t size, u16 id, u16 version)'/>
<def f='linux-4.14.y/drivers/vfio/vfio.c' l='1817' ll='1847' type='struct vfio_info_cap_header * vfio_info_cap_add(struct vfio_info_cap * caps, size_t size, u16 id, u16 version)'/>
<dec f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' type='struct vfio_info_cap_header * vfio_info_cap_add(struct vfio_info_cap * , size_t , u16 , u16 )'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' c='vfio_info_cap_add'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' u='a'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1848' u='a'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1867' u='c' c='sparse_mmap_cap'/>
<use f='linux-4.14.y/drivers/vfio/vfio.c' l='1885' u='c' c='region_type_cap'/>
<doc f='linux-4.14.y/drivers/vfio/vfio.c' l='1808'>/*
 * Helper for managing a buffer of info chain capabilities, allocate or
 * reallocate a buffer with additional @size, filling in @id and @version
 * of the capability.  A pointer to the new capability is returned.
 *
 * NB. The chain is based at the head of the buffer, so new entries are
 * added to the tail, vfio_info_cap_shift() should be called to fixup the
 * next offsets prior to copying to the user buffer.
 */</doc>
