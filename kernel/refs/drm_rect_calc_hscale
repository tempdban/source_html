<dec f='linux-4.14.y/include/drm/drm_rect.h' l='180' type='int drm_rect_calc_hscale(const struct drm_rect * src, const struct drm_rect * dst, int min_hscale, int max_hscale)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='159' u='c' c='drm_plane_helper_check_state'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_rect.c' l='127' ll='142' type='int drm_rect_calc_hscale(const struct drm_rect * src, const struct drm_rect * dst, int min_hscale, int max_hscale)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_rect.c' l='143' type='int drm_rect_calc_hscale(const struct drm_rect * , const struct drm_rect * , int , int )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_rect.c' l='143' c='drm_rect_calc_hscale'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_rect.c' l='143' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_rect.c' l='143' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_rect.c' l='114'>/**
 * drm_rect_calc_hscale - calculate the horizontal scaling factor
 * @src: source window rectangle
 * @dst: destination window rectangle
 * @min_hscale: minimum allowed horizontal scaling factor
 * @max_hscale: maximum allowed horizontal scaling factor
 *
 * Calculate the horizontal scaling factor as
 * (@src width) / (@dst width).
 *
 * RETURNS:
 * The horizontal scaling factor, or errno of out of limits.
 */</doc>
