<dec f='linux-4.14.y/include/linux/usb/gadget.h' l='715' type='int usb_add_gadget_udc_release(struct device * parent, struct usb_gadget * gadget, void (*)(struct device *) release)'/>
<def f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1145' ll='1216' type='int usb_add_gadget_udc_release(struct device * parent, struct usb_gadget * gadget, void (*)(struct device *) release)'/>
<dec f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1217' type='int usb_add_gadget_udc_release(struct device * , struct usb_gadget * , void (*)(struct device *) )'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1217' c='usb_add_gadget_udc_release'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1217' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1217' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1259' u='c' c='usb_add_gadget_udc'/>
<doc f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1135'>/**
 * usb_add_gadget_udc_release - adds a new gadget to the udc class driver list
 * @parent: the parent device to this udc. Usually the controller driver&apos;s
 * device.
 * @gadget: the gadget to be added to the list.
 * @release: a gadget release function.
 *
 * Returns zero on success, negative errno otherwise.
 * Calls the gadget release function in the latter case.
 */</doc>
