<dec f='linux-4.14.y/kernel/trace/trace.h' l='1259' type='void trace_buffered_event_enable()'/>
<def f='linux-4.14.y/kernel/trace/trace.c' l='2166' ll='2199' type='void trace_buffered_event_enable()'/>
<doc f='linux-4.14.y/kernel/trace/trace.c' l='2152'>/**
 * trace_buffered_event_enable - enable buffering events
 *
 * When events are being filtered, it is quicker to use a temporary
 * buffer to write the event data into if there&apos;s a likely chance
 * that it will not be committed. The discard of the ring buffer
 * is not as fast as committing, and is much slower than copying
 * a commit.
 *
 * When an event is to be filtered, allocate per cpu buffers to
 * write the event data into, and if the event is filtered and discarded
 * it is simply dropped, otherwise, the entire data is to be committed
 * in one shot.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace_events.c' l='478' u='c' c='__ftrace_event_enable_disable'/>
<use f='linux-4.14.y/kernel/trace/trace_events_filter.c' l='1746' u='c' c='event_set_filtered_flag'/>
