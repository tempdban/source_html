<dec f='linux-4.18.y/include/linux/bootmem.h' l='86' type='void * __alloc_bootmem_nopanic(unsigned long size, unsigned long align, unsigned long goal)'/>
<use f='linux-4.18.y/arch/x86/kernel/setup_percpu.c' l='122' u='c' c='pcpu_alloc_bootmem'/>
<def f='linux-4.18.y/mm/nobootmem.c' l='261' ll='267' type='void * __alloc_bootmem_nopanic(unsigned long size, unsigned long align, unsigned long goal)'/>
<doc f='linux-4.18.y/mm/nobootmem.c' l='248'>/**
 * __alloc_bootmem_nopanic - allocate boot memory without panicking
 * @size: size of the request in bytes
 * @align: alignment of the region
 * @goal: preferred starting address of the region
 *
 * The goal is dropped if it can not be satisfied and the allocation will
 * fall back to memory below @goal.
 *
 * Allocation may happen on any node in the system.
 *
 * Returns NULL on failure.
 */</doc>
