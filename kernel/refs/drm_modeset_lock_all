<dec f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='122' type='void drm_modeset_lock_all(struct drm_device * dev)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc.c' l='132' u='c' c='drm_crtc_force_disable_all'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='217' u='c' c='drm_helper_disable_unused_functions'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='948' u='c' c='drm_helper_resume_force_mode'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='440' u='c' c='restore_fbdev_mode_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='609' u='c' c='dpms_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1240' u='c' c='setcmap_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1660' u='c' c='pan_display_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='865' u='c' c='legacy_remove_fb'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mode_object.c' l='359' u='c' c='drm_mode_obj_get_properties_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mode_object.c' l='406' u='c' c='set_property_legacy'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='85' ll='121' type='void drm_modeset_lock_all(struct drm_device * dev)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='122' type='void drm_modeset_lock_all(struct drm_device * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='122' c='drm_modeset_lock_all'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='122' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='122' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='70'>/**
 * drm_modeset_lock_all - take all modeset locks
 * @dev: DRM device
 *
 * This function takes all modeset locks, suitable where a more fine-grained
 * scheme isn&apos;t (yet) implemented. Locks must be dropped by calling the
 * drm_modeset_unlock_all() function.
 *
 * This function is deprecated. It allocates a lock acquisition context and
 * stores it in &amp;drm_device.mode_config. This facilitate conversion of
 * existing code because it removes the need to manually deal with the
 * acquisition context, but it is also brittle because the context is global
 * and care must be taken not to nest calls. New code should use the
 * drm_modeset_lock_all_ctx() function and pass in the context explicitly.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='183' u='c' c='qxl_display_read_client_monitors_config'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='330' u='c' c='qxl_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='619' u='c' c='vmw_fb_set_par'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='740' u='c' c='vmw_fb_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='887' u='c' c='vmw_fb_off'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c' l='287' u='c' c='vmw_present_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c' l='370' u='c' c='vmw_present_readback_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='240' u='c' c='vmw_kms_legacy_hotspot_clear'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='888' u='c' c='vmw_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='1089' u='c' c='vmw_framebuffer_dmabuf_dirty'/>
