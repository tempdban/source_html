<dec f='linux-4.18.y/arch/x86/include/asm/processor.h' l='419' type='void save_fsgs_for_kvm()'/>
<doc f='linux-4.18.y/arch/x86/include/asm/processor.h' l='418'>/* Save actual FS/GS selectors and bases to current-&gt;thread */</doc>
<def f='linux-4.18.y/arch/x86/kernel/process_64.c' l='223' ll='226' type='void save_fsgs_for_kvm()'/>
<dec f='linux-4.18.y/arch/x86/kernel/process_64.c' l='227' type='void save_fsgs_for_kvm()'/>
<use f='linux-4.18.y/arch/x86/kernel/process_64.c' l='227' c='save_fsgs_for_kvm'/>
<use f='linux-4.18.y/arch/x86/kernel/process_64.c' l='227' u='a'/>
<use f='linux-4.18.y/arch/x86/kernel/process_64.c' l='227' u='a'/>
<doc f='linux-4.18.y/arch/x86/kernel/process_64.c' l='217'>/*
 * While a process is running,current-&gt;thread.fsbase and current-&gt;thread.gsbase
 * may not match the corresponding CPU registers (see save_base_legacy()). KVM
 * wants an efficient way to save and restore FSBASE and GSBASE.
 * When FSGSBASE extensions are enabled, this will have to use RD{FS,GS}BASE.
 */</doc>
<use f='linux-4.18.y/arch/x86/kvm/vmx.c' l='2771' u='c' c='vmx_save_host_state'/>
