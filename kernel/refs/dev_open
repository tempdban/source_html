<dec f='linux-4.18.y/include/linux/netdevice.h' l='2535' type='int dev_open(struct net_device * dev)'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='1538' u='c' c='bond_enslave'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='44' u='c' c='net_failover_open'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='51' u='c' c='net_failover_open'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='520' u='c' c='net_failover_slave_register'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='680' u='c' c='net_failover_slave_name_change'/>
<def f='linux-4.18.y/net/core/dev.c' l='1421' ll='1436' type='int dev_open(struct net_device * dev)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='1437' type='int dev_open(struct net_device * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='1437' c='dev_open'/>
<use f='linux-4.18.y/net/core/dev.c' l='1437' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='1437' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='1409'>/**
 *	dev_open	- prepare an interface for use.
 *	@dev:	device to open
 *
 *	Takes a device from down to up state. The device&apos;s private open
 *	function is invoked and then the multicast lists are loaded. Finally
 *	the device is moved into the up state and a %NETDEV_UP message is
 *	sent to the netdev notifier chain.
 *
 *	Calling this function on an active interface is a nop. On a failure
 *	a negative errno code is returned.
 */</doc>
