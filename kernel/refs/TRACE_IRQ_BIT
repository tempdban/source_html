<dec f='linux-4.14.y/kernel/trace/trace.h' l='506' type='13'/>
<use f='linux-4.14.y/kernel/trace/trace.h' l='860' u='r' c='ftrace_graph_addr'/>
<use f='linux-4.14.y/kernel/trace/trace.h' l='862' u='r' c='ftrace_graph_addr'/>
<doc f='linux-4.14.y/kernel/trace/trace.h' l='499'>/*
 * Abuse of the trace_recursion.
 * As we need a way to maintain state if we are tracing the function
 * graph in irq because we want to trace a particular function that
 * was called in irq context but we have irq tracing off. Since this
 * can only be modified by current, we can reuse trace_recursion.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='369' u='r' c='ftrace_graph_ignore_irqs'/>
<dec f='linux-4.14.y/kernel/trace/trace.h' l='506' type='13'/>
<use f='linux-4.14.y/kernel/trace/trace.h' l='860' u='r' c='ftrace_graph_addr'/>
<use f='linux-4.14.y/kernel/trace/trace.h' l='862' u='r' c='ftrace_graph_addr'/>
<doc f='linux-4.14.y/kernel/trace/trace.h' l='499'>/*
 * Abuse of the trace_recursion.
 * As we need a way to maintain state if we are tracing the function
 * graph in irq because we want to trace a particular function that
 * was called in irq context but we have irq tracing off. Since this
 * can only be modified by current, we can reuse trace_recursion.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='369' u='r' c='ftrace_graph_ignore_irqs'/>
