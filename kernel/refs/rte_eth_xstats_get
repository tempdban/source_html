<dec f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.h' l='2023' type='int rte_eth_xstats_get(uint16_t port_id, struct rte_eth_xstat * xstats, unsigned int n)'/>
<doc f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.h' l='1994'>/**
 * Retrieve extended statistics of an Ethernet device.
 *
 * There is an assumption that &apos;xstat_names&apos; and &apos;xstats&apos; arrays are matched
 * by array index:
 *  xstats_names[i].name =&gt; xstats[i].value
 *
 * And the array index is same with id field of &apos;struct rte_eth_xstat&apos;:
 *  xstats[i].id == i
 *
 * This assumption makes key-value pair matching less flexible but simpler.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param xstats
 *   A pointer to a table of structure of type *rte_eth_xstat*
 *   to be filled with device statistics ids and values.
 *   This parameter can be set to NULL if n is 0.
 * @param n
 *   The size of the xstats array (number of elements).
 * @return
 *   - A positive value lower or equal to n: success. The return value
 *     is the number of entries filled in the stats table.
 *   - A positive value higher than n: error, the given statistics table
 *     is too small. The return value corresponds to the size that should
 *     be given to succeed. The entries in the table are not valid and
 *     shall not be used by the caller.
 *   - A negative value on error (invalid port id).
 */</doc>
<use f='linux-4.18.y/app/test-pmd/config.c' l='250' u='c' c='nic_xstats_display'/>
<use f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.c' l='2251' u='c' c='rte_eth_xstats_get_by_id'/>
<def f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.c' l='2275' ll='2325' type='int rte_eth_xstats_get(uint16_t port_id, struct rte_eth_xstat * xstats, unsigned int n)'/>
