<dec f='linux-4.14.y/include/linux/workqueue.h' l='454' type='void drain_workqueue(struct workqueue_struct * wq)'/>
<use f='linux-4.14.y/drivers/scsi/libsas/sas_event.c' l='75' u='c' c='__sas_drain_work'/>
<def f='linux-4.14.y/kernel/workqueue.c' l='2766' ll='2807' type='void drain_workqueue(struct workqueue_struct * wq)'/>
<dec f='linux-4.14.y/kernel/workqueue.c' l='2808' type='void drain_workqueue(struct workqueue_struct * )'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='2808' c='drain_workqueue'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='2808' u='a'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='2808' u='a'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='4088' u='c' c='destroy_workqueue'/>
<doc f='linux-4.14.y/kernel/workqueue.c' l='2755'>/**
 * drain_workqueue - drain a workqueue
 * @wq: workqueue to drain
 *
 * Wait until the workqueue becomes empty.  While draining is in progress,
 * only chain queueing is allowed.  IOW, only currently pending or running
 * work items on @wq can queue further work items on it.  @wq is flushed
 * repeatedly until it becomes empty.  The number of flushing is determined
 * by the depth of chaining and should be relatively short.  Whine if it
 * takes too long.
 */</doc>
<dec f='linux-4.14.y/include/linux/workqueue.h' l='454' type='void drain_workqueue(struct workqueue_struct * wq)'/>
<use f='linux-4.14.y/drivers/scsi/libsas/sas_event.c' l='75' u='c' c='__sas_drain_work'/>
<def f='linux-4.14.y/kernel/workqueue.c' l='2766' ll='2807' type='void drain_workqueue(struct workqueue_struct * wq)'/>
<dec f='linux-4.14.y/kernel/workqueue.c' l='2808' type='void drain_workqueue(struct workqueue_struct * )'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='2808' c='drain_workqueue'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='2808' u='a'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='2808' u='a'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='4088' u='c' c='destroy_workqueue'/>
<doc f='linux-4.14.y/kernel/workqueue.c' l='2755'>/**
 * drain_workqueue - drain a workqueue
 * @wq: workqueue to drain
 *
 * Wait until the workqueue becomes empty.  While draining is in progress,
 * only chain queueing is allowed.  IOW, only currently pending or running
 * work items on @wq can queue further work items on it.  @wq is flushed
 * repeatedly until it becomes empty.  The number of flushing is determined
 * by the depth of chaining and should be relatively short.  Whine if it
 * takes too long.
 */</doc>
