<def f='linux-4.18.y/include/uapi/linux/ethtool.h' l='436' ll='460'/>
<size>92</size>
<doc f='linux-4.18.y/include/uapi/linux/ethtool.h' l='363'>/**
 * struct ethtool_coalesce - coalescing parameters for IRQs and stats updates
 * @cmd: ETHTOOL_{G,S}COALESCE
 * @rx_coalesce_usecs: How many usecs to delay an RX interrupt after
 *	a packet arrives.
 * @rx_max_coalesced_frames: Maximum number of packets to receive
 *	before an RX interrupt.
 * @rx_coalesce_usecs_irq: Same as @rx_coalesce_usecs, except that
 *	this value applies while an IRQ is being serviced by the host.
 * @rx_max_coalesced_frames_irq: Same as @rx_max_coalesced_frames,
 *	except that this value applies while an IRQ is being serviced
 *	by the host.
 * @tx_coalesce_usecs: How many usecs to delay a TX interrupt after
 *	a packet is sent.
 * @tx_max_coalesced_frames: Maximum number of packets to be sent
 *	before a TX interrupt.
 * @tx_coalesce_usecs_irq: Same as @tx_coalesce_usecs, except that
 *	this value applies while an IRQ is being serviced by the host.
 * @tx_max_coalesced_frames_irq: Same as @tx_max_coalesced_frames,
 *	except that this value applies while an IRQ is being serviced
 *	by the host.
 * @stats_block_coalesce_usecs: How many usecs to delay in-memory
 *	statistics block updates.  Some drivers do not have an
 *	in-memory statistic block, and in such cases this value is
 *	ignored.  This value must not be zero.
 * @use_adaptive_rx_coalesce: Enable adaptive RX coalescing.
 * @use_adaptive_tx_coalesce: Enable adaptive TX coalescing.
 * @pkt_rate_low: Threshold for low packet rate (packets per second).
 * @rx_coalesce_usecs_low: How many usecs to delay an RX interrupt after
 *	a packet arrives, when the packet rate is below @pkt_rate_low.
 * @rx_max_coalesced_frames_low: Maximum number of packets to be received
 *	before an RX interrupt, when the packet rate is below @pkt_rate_low.
 * @tx_coalesce_usecs_low: How many usecs to delay a TX interrupt after
 *	a packet is sent, when the packet rate is below @pkt_rate_low.
 * @tx_max_coalesced_frames_low: Maximum nuumber of packets to be sent before
 *	a TX interrupt, when the packet rate is below @pkt_rate_low.
 * @pkt_rate_high: Threshold for high packet rate (packets per second).
 * @rx_coalesce_usecs_high: How many usecs to delay an RX interrupt after
 *	a packet arrives, when the packet rate is above @pkt_rate_high.
 * @rx_max_coalesced_frames_high: Maximum number of packets to be received
 *	before an RX interrupt, when the packet rate is above @pkt_rate_high.
 * @tx_coalesce_usecs_high: How many usecs to delay a TX interrupt after
 *	a packet is sent, when the packet rate is above @pkt_rate_high.
 * @tx_max_coalesced_frames_high: Maximum number of packets to be sent before
 *	a TX interrupt, when the packet rate is above @pkt_rate_high.
 * @rate_sample_interval: How often to do adaptive coalescing packet rate
 *	sampling, measured in seconds.  Must not be zero.
 *
 * Each pair of (usecs, max_frames) fields specifies that interrupts
 * should be coalesced until
 *	(usecs &gt; 0 &amp;&amp; time_since_first_completion &gt;= usecs) ||
 *	(max_frames &gt; 0 &amp;&amp; completed_frames &gt;= max_frames)
 *
 * It is illegal to set both usecs and max_frames to zero as this
 * would cause interrupts to never be generated.  To disable
 * coalescing, set usecs = 0 and max_frames = 1.
 *
 * Some implementations ignore the value of max_frames and use the
 * condition time_since_first_completion &gt;= usecs
 *
 * This is deprecated.  Drivers for hardware that does not support
 * counting completions should validate that max_frames == !rx_usecs.
 *
 * Adaptive RX/TX coalescing is an algorithm implemented by some
 * drivers to improve latency under low packet rates and improve
 * throughput under high packet rates.  Some drivers only implement
 * one of RX or TX adaptive coalescing.  Anything not implemented by
 * the driver causes these values to be silently ignored.
 *
 * When the packet rate is below @pkt_rate_high but above
 * @pkt_rate_low (both measured in packets per second) the
 * normal {rx,tx}_* coalescing parameters are used.
 */</doc>
<mbr r='ethtool_coalesce::cmd' o='0' t='__u32'/>
<mbr r='ethtool_coalesce::rx_coalesce_usecs' o='32' t='__u32'/>
<mbr r='ethtool_coalesce::rx_max_coalesced_frames' o='64' t='__u32'/>
<mbr r='ethtool_coalesce::rx_coalesce_usecs_irq' o='96' t='__u32'/>
<mbr r='ethtool_coalesce::rx_max_coalesced_frames_irq' o='128' t='__u32'/>
<mbr r='ethtool_coalesce::tx_coalesce_usecs' o='160' t='__u32'/>
<mbr r='ethtool_coalesce::tx_max_coalesced_frames' o='192' t='__u32'/>
<mbr r='ethtool_coalesce::tx_coalesce_usecs_irq' o='224' t='__u32'/>
<mbr r='ethtool_coalesce::tx_max_coalesced_frames_irq' o='256' t='__u32'/>
<mbr r='ethtool_coalesce::stats_block_coalesce_usecs' o='288' t='__u32'/>
<mbr r='ethtool_coalesce::use_adaptive_rx_coalesce' o='320' t='__u32'/>
<mbr r='ethtool_coalesce::use_adaptive_tx_coalesce' o='352' t='__u32'/>
<mbr r='ethtool_coalesce::pkt_rate_low' o='384' t='__u32'/>
<mbr r='ethtool_coalesce::rx_coalesce_usecs_low' o='416' t='__u32'/>
<mbr r='ethtool_coalesce::rx_max_coalesced_frames_low' o='448' t='__u32'/>
<mbr r='ethtool_coalesce::tx_coalesce_usecs_low' o='480' t='__u32'/>
<mbr r='ethtool_coalesce::tx_max_coalesced_frames_low' o='512' t='__u32'/>
<mbr r='ethtool_coalesce::pkt_rate_high' o='544' t='__u32'/>
<mbr r='ethtool_coalesce::rx_coalesce_usecs_high' o='576' t='__u32'/>
<mbr r='ethtool_coalesce::rx_max_coalesced_frames_high' o='608' t='__u32'/>
<mbr r='ethtool_coalesce::tx_coalesce_usecs_high' o='640' t='__u32'/>
<mbr r='ethtool_coalesce::tx_max_coalesced_frames_high' o='672' t='__u32'/>
<mbr r='ethtool_coalesce::rate_sample_interval' o='704' t='__u32'/>
