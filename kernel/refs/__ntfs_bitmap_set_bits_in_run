<dec f='linux-4.14.y/fs/ntfs/bitmap.h' l='32' type='int __ntfs_bitmap_set_bits_in_run(struct inode * vi, const s64 start_bit, const s64 count, const u8 value, const bool is_rollback)'/>
<use f='linux-4.14.y/fs/ntfs/bitmap.h' l='50' u='c' c='ntfs_bitmap_set_bits_in_run'/>
<def f='linux-4.14.y/fs/ntfs/bitmap.c' l='47' ll='191' type='int __ntfs_bitmap_set_bits_in_run(struct inode * vi, const s64 start_bit, const s64 count, const u8 value, const bool is_rollback)'/>
<use f='linux-4.14.y/fs/ntfs/bitmap.c' l='174' u='c' c='__ntfs_bitmap_set_bits_in_run'/>
<doc f='linux-4.14.y/fs/ntfs/bitmap.c' l='31'>/**
 * __ntfs_bitmap_set_bits_in_run - set a run of bits in a bitmap to a value
 * @vi:			vfs inode describing the bitmap
 * @start_bit:		first bit to set
 * @count:		number of bits to set
 * @value:		value to set the bits to (i.e. 0 or 1)
 * @is_rollback:	if &apos;true&apos; this is a rollback operation
 *
 * Set @count bits starting at bit @start_bit in the bitmap described by the
 * vfs inode @vi to @value, where @value is either 0 or 1.
 *
 * @is_rollback should always be &apos;false&apos;, it is for internal use to rollback
 * errors.  You probably want to use ntfs_bitmap_set_bits_in_run() instead.
 *
 * Return 0 on success and -errno on error.
 */</doc>
