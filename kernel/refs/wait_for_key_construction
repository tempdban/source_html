<dec f='linux-4.14.y/include/linux/key.h' l='293' type='int wait_for_key_construction(struct key * key, bool intr)'/>
<use f='linux-4.14.y/security/keys/key.c' l='950' u='c' c='key_create_or_update'/>
<use f='linux-4.14.y/security/keys/keyctl.c' l='222' u='c' c='SYSC_request_key'/>
<use f='linux-4.14.y/security/keys/process_keys.c' l='715' u='c' c='lookup_user_key'/>
<def f='linux-4.14.y/security/keys/request_key.c' l='618' ll='630' type='int wait_for_key_construction(struct key * key, bool intr)'/>
<dec f='linux-4.14.y/security/keys/request_key.c' l='631' type='int wait_for_key_construction(struct key * , bool )'/>
<use f='linux-4.14.y/security/keys/request_key.c' l='631' c='wait_for_key_construction'/>
<use f='linux-4.14.y/security/keys/request_key.c' l='631' u='a'/>
<use f='linux-4.14.y/security/keys/request_key.c' l='631' u='a'/>
<use f='linux-4.14.y/security/keys/request_key.c' l='660' u='c' c='request_key'/>
<use f='linux-4.14.y/security/keys/request_key.c' l='696' u='c' c='request_key_with_auxdata'/>
<doc f='linux-4.14.y/security/keys/request_key.c' l='607'>/**
 * wait_for_key_construction - Wait for construction of a key to complete
 * @key: The key being waited for.
 * @intr: Whether to wait interruptibly.
 *
 * Wait for a key to finish being constructed.
 *
 * Returns 0 if successful; -ERESTARTSYS if the wait was interrupted; -ENOKEY
 * if the key was negated; or -EKEYREVOKED or -EKEYEXPIRED if the key was
 * revoked or expired.
 */</doc>
