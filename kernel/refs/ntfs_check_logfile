<dec f='linux-4.18.y/fs/ntfs/logfile.h' l='299' type='bool ntfs_check_logfile(struct inode * log_vi, RESTART_PAGE_HEADER ** rp)'/>
<def f='linux-4.18.y/fs/ntfs/logfile.c' l='485' ll='658' type='bool ntfs_check_logfile(struct inode * log_vi, RESTART_PAGE_HEADER ** rp)'/>
<doc f='linux-4.18.y/fs/ntfs/logfile.c' l='468'>/**
 * ntfs_check_logfile - check the journal for consistency
 * @log_vi:	struct inode of loaded journal $LogFile to check
 * @rp:		[OUT] on success this is a copy of the current restart page
 *
 * Check the $LogFile journal for consistency and return &apos;true&apos; if it is
 * consistent and &apos;false&apos; if not.  On success, the current restart page is
 * returned in *@rp.  Caller must call ntfs_free(*@rp) when finished with it.
 *
 * At present we only check the two restart pages and ignore the log record
 * pages.
 *
 * Note that the MstProtected flag is not set on the $LogFile inode and hence
 * when reading pages they are not deprotected.  This is because we do not know
 * if the $LogFile was created on a system with a different page size to ours
 * yet and mst deprotection would fail if our page size is smaller.
 */</doc>
<use f='linux-4.18.y/fs/ntfs/super.c' l='1229' u='c' c='load_and_check_logfile'/>
