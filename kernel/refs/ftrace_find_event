<dec f='linux-4.14.y/kernel/trace/trace_output.h' l='24' type='struct trace_event * ftrace_find_event(int type)'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3490' u='c' c='print_trace_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3526' u='c' c='print_raw_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3553' u='c' c='print_hex_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3582' u='c' c='print_bin_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='1216' u='c' c='print_graph_comment'/>
<def f='linux-4.14.y/kernel/trace/trace_output.c' l='667' ll='680' type='struct trace_event * ftrace_find_event(int type)'/>
<use f='linux-4.14.y/kernel/trace/trace_output.c' l='767' u='c' c='register_trace_event'/>
<use f='linux-4.14.y/kernel/trace/trace_output.c' l='778' u='c' c='register_trace_event'/>
<doc f='linux-4.14.y/kernel/trace/trace_output.c' l='660'>/**
 * ftrace_find_event - find a registered event
 * @type: the type of event to look for
 *
 * Returns an event of type @type otherwise NULL
 * Called with trace_event_read_lock() held.
 */</doc>
<dec f='linux-4.14.y/kernel/trace/trace_output.h' l='24' type='struct trace_event * ftrace_find_event(int type)'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3490' u='c' c='print_trace_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3526' u='c' c='print_raw_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3553' u='c' c='print_hex_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3582' u='c' c='print_bin_fmt'/>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='1216' u='c' c='print_graph_comment'/>
<def f='linux-4.14.y/kernel/trace/trace_output.c' l='667' ll='680' type='struct trace_event * ftrace_find_event(int type)'/>
<use f='linux-4.14.y/kernel/trace/trace_output.c' l='767' u='c' c='register_trace_event'/>
<use f='linux-4.14.y/kernel/trace/trace_output.c' l='778' u='c' c='register_trace_event'/>
<doc f='linux-4.14.y/kernel/trace/trace_output.c' l='660'>/**
 * ftrace_find_event - find a registered event
 * @type: the type of event to look for
 *
 * Returns an event of type @type otherwise NULL
 * Called with trace_event_read_lock() held.
 */</doc>
