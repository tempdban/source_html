<dec f='linux-4.18.y/include/drm/drm_atomic_helper.h' l='89' type='void drm_atomic_helper_cleanup_planes(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1433' u='c' c='drm_atomic_helper_commit_tail'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1462' u='c' c='drm_atomic_helper_commit_tail_rpm'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1622' u='c' c='drm_atomic_helper_commit'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1682' u='c' c='drm_atomic_helper_commit'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2417' ll='2442' type='void drm_atomic_helper_cleanup_planes(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2443' type='void drm_atomic_helper_cleanup_planes(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2443' c='drm_atomic_helper_cleanup_planes'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2443' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2443' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2405'>/**
 * drm_atomic_helper_cleanup_planes - cleanup plane resources after commit
 * @dev: DRM device
 * @old_state: atomic state object with old state structures
 *
 * This function cleans up plane state, specifically framebuffers, from the old
 * configuration. Hence the old configuration must be perserved in @old_state to
 * be able to call this function.
 *
 * This function must also be called on the new state when the atomic update
 * fails at any point after calling drm_atomic_helper_prepare_planes().
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='361' u='c' c='vgdev_atomic_commit_tail'/>
