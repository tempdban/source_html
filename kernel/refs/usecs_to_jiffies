<def f='linux-4.18.y/include/linux/jiffies.h' l='410' ll='419' type='unsigned long usecs_to_jiffies(const unsigned int u)'/>
<doc f='linux-4.18.y/include/linux/jiffies.h' l='388'>/**
 * usecs_to_jiffies: - convert microseconds to jiffies
 * @u:	time in microseconds
 *
 * conversion is done as follows:
 *
 * - &apos;too large&apos; values [that would result in larger than
 *   MAX_JIFFY_OFFSET values] mean &apos;infinite timeout&apos; too.
 *
 * - all other values are converted to jiffies by either multiplying
 *   the input value by a factor or dividing it with a factor and
 *   handling any 32-bit overflows as for msecs_to_jiffies.
 *
 * usecs_to_jiffies() checks for the passed in value being a constant
 * via __builtin_constant_p() allowing gcc to eliminate most of the
 * code, __usecs_to_jiffies() is called if the value passed does not
 * allow constant folding and the actual conversion must be done at
 * runtime.
 * the HZ range specific helpers _usecs_to_jiffies() are called both
 * directly here and from __msecs_to_jiffies() in the case where
 * constant folding is not possible.
 */</doc>
<use f='linux-4.18.y/drivers/acpi/ec.c' l='723' u='c' c='ec_guard'/>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-dev.c' l='1650' u='c' c='xgbe_tx_start_xmit'/>
<use f='linux-4.18.y/include/net/tcp.h' l='619' u='c' c='__tcp_set_rto'/>
<use f='linux-4.18.y/kernel/power/qos.c' l='517' u='c' c='pm_qos_update_request_timeout'/>
<use f='linux-4.18.y/net/core/dev.c' l='5818' u='c' c='net_rx_action'/>
<use f='linux-4.18.y/net/ipv4/tcp_htcp.c' l='112' u='c' c='measure_achieved_throughput'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2029' u='c' c='tcp_check_sack_reneging'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2029' u='c' c='tcp_check_sack_reneging'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2029' u='c' c='tcp_check_sack_reneging'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2029' u='c' c='tcp_check_sack_reneging'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2029' u='c' c='tcp_check_sack_reneging'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2029' u='c' c='tcp_check_sack_reneging'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2995' u='c' c='tcp_rearm_rto'/>
<use f='linux-4.18.y/net/ipv4/tcp_ipv4.c' l='548' u='c' c='tcp_v4_err'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='2437' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='2451' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='2451' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='2451' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='2451' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='2451' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='2451' u='c' c='tcp_schedule_loss_probe'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='3552' u='c' c='tcp_send_delayed_ack'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='3552' u='c' c='tcp_send_delayed_ack'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='3552' u='c' c='tcp_send_delayed_ack'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='3552' u='c' c='tcp_send_delayed_ack'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='3552' u='c' c='tcp_send_delayed_ack'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='3552' u='c' c='tcp_send_delayed_ack'/>
<use f='linux-4.18.y/net/ipv4/tcp_recovery.c' l='124' u='c' c='tcp_rack_mark_lost'/>
<use f='linux-4.18.y/net/ipv4/tcp_westwood.c' l='108' u='c' c='tcp_westwood_pkts_acked'/>
