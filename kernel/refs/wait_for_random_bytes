<dec f='linux-4.14.y/include/linux/random.h' l='38' type='int wait_for_random_bytes()'/>
<use f='linux-4.14.y/include/linux/random.h' l='87' u='c' c='get_random_bytes_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_u32_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_u64_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_int_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_long_wait'/>
<def f='linux-4.14.y/drivers/char/random.c' l='1655' ll='1660' type='int wait_for_random_bytes()'/>
<dec f='linux-4.14.y/drivers/char/random.c' l='1661' type='int wait_for_random_bytes()'/>
<use f='linux-4.14.y/drivers/char/random.c' l='1661' c='wait_for_random_bytes'/>
<use f='linux-4.14.y/drivers/char/random.c' l='1661' u='a'/>
<use f='linux-4.14.y/drivers/char/random.c' l='1661' u='a'/>
<use f='linux-4.14.y/drivers/char/random.c' l='2026' u='c' c='SYSC_getrandom'/>
<doc f='linux-4.14.y/drivers/char/random.c' l='1645'>/*
 * Wait for the urandom pool to be seeded and thus guaranteed to supply
 * cryptographically secure random numbers. This applies to: the /dev/urandom
 * device, the get_random_bytes function, and the get_random_{u32,u64,int,long}
 * family of functions. Using any of these functions without first calling
 * this function forfeits the guarantee of security.
 *
 * Returns: 0 if the urandom pool has been seeded.
 *          -ERESTARTSYS if the function was interrupted by a signal.
 */</doc>
<dec f='linux-4.14.y/include/linux/random.h' l='38' type='int wait_for_random_bytes()'/>
<use f='linux-4.14.y/include/linux/random.h' l='87' u='c' c='get_random_bytes_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_u32_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_u64_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_int_wait'/>
<use f='linux-4.14.y/include/linux/random.h' l='96' u='c' c='get_random_long_wait'/>
<def f='linux-4.14.y/drivers/char/random.c' l='1655' ll='1660' type='int wait_for_random_bytes()'/>
<dec f='linux-4.14.y/drivers/char/random.c' l='1661' type='int wait_for_random_bytes()'/>
<use f='linux-4.14.y/drivers/char/random.c' l='1661' c='wait_for_random_bytes'/>
<use f='linux-4.14.y/drivers/char/random.c' l='1661' u='a'/>
<use f='linux-4.14.y/drivers/char/random.c' l='1661' u='a'/>
<use f='linux-4.14.y/drivers/char/random.c' l='2026' u='c' c='SYSC_getrandom'/>
<doc f='linux-4.14.y/drivers/char/random.c' l='1645'>/*
 * Wait for the urandom pool to be seeded and thus guaranteed to supply
 * cryptographically secure random numbers. This applies to: the /dev/urandom
 * device, the get_random_bytes function, and the get_random_{u32,u64,int,long}
 * family of functions. Using any of these functions without first calling
 * this function forfeits the guarantee of security.
 *
 * Returns: 0 if the urandom pool has been seeded.
 *          -ERESTARTSYS if the function was interrupted by a signal.
 */</doc>
