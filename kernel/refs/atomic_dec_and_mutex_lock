<dec f='linux-4.18.y/include/linux/mutex.h' l='199' type='int atomic_dec_and_mutex_lock(atomic_t * cnt, struct mutex * lock)'/>
<use f='linux-4.18.y/arch/x86/events/core.c' l='358' u='c' c='x86_release_hardware'/>
<use f='linux-4.18.y/kernel/events/callchain.c' l='147' u='c' c='put_callchain_buffers'/>
<use f='linux-4.18.y/kernel/events/core.c' l='5450' u='c' c='perf_mmap_close'/>
<use f='linux-4.18.y/kernel/events/core.c' l='5472' u='c' c='perf_mmap_close'/>
<def f='linux-4.18.y/kernel/locking/mutex.c' l='1252' ll='1266' type='int atomic_dec_and_mutex_lock(atomic_t * cnt, struct mutex * lock)'/>
<dec f='linux-4.18.y/kernel/locking/mutex.c' l='1267' type='int atomic_dec_and_mutex_lock(atomic_t * , struct mutex * )'/>
<use f='linux-4.18.y/kernel/locking/mutex.c' l='1267' c='atomic_dec_and_mutex_lock'/>
<use f='linux-4.18.y/kernel/locking/mutex.c' l='1267' u='a'/>
<use f='linux-4.18.y/kernel/locking/mutex.c' l='1267' u='a'/>
<doc f='linux-4.18.y/kernel/locking/mutex.c' l='1245'>/**
 * atomic_dec_and_mutex_lock - return holding mutex if we dec to 0
 * @cnt: the atomic which we are to dec
 * @lock: the mutex to return holding if we dec to 0
 *
 * return true and hold lock if we dec to 0, return false otherwise
 */</doc>
