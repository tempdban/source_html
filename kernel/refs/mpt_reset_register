<dec f='linux-4.14.y/drivers/message/fusion/mptbase.h' l='921' type='int mpt_reset_register(u8 cb_idx, MPT_RESETHANDLER reset_func)'/>
<def f='linux-4.14.y/drivers/message/fusion/mptbase.c' l='794' ll='802' type='int mpt_reset_register(u8 cb_idx, MPT_RESETHANDLER reset_func)'/>
<dec f='linux-4.14.y/drivers/message/fusion/mptbase.c' l='8483' type='int mpt_reset_register(u8 , MPT_RESETHANDLER )'/>
<use f='linux-4.14.y/drivers/message/fusion/mptbase.c' l='8483' c='mpt_reset_register'/>
<use f='linux-4.14.y/drivers/message/fusion/mptbase.c' l='8483' u='a'/>
<use f='linux-4.14.y/drivers/message/fusion/mptbase.c' l='8483' u='a'/>
<use f='linux-4.14.y/drivers/message/fusion/mptbase.c' l='8532' u='c' c='fusion_init'/>
<doc f='linux-4.14.y/drivers/message/fusion/mptbase.c' l='784'>/**
 *	mpt_reset_register - Register protocol-specific IOC reset handler.
 *	@cb_idx: previously registered (via mpt_register) callback handle
 *	@reset_func: reset function
 *
 *	This routine can be called by one or more protocol-specific drivers
 *	if/when they choose to be notified of IOC resets.
 *
 *	Returns 0 for success.
 */</doc>
<use f='linux-4.14.y/drivers/message/fusion/mptsas.c' l='5412' u='c' c='mptsas_init'/>
<use f='linux-4.14.y/drivers/message/fusion/mptspi.c' l='1596' u='c' c='mptspi_init'/>
