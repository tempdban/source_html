<dec f='linux-4.14.y/include/linux/tracepoint.h' l='132'/>
<doc f='linux-4.14.y/include/linux/tracepoint.h' l='122'>/*
 * it_func[0] is never NULL because there is at least one element in the array
 * when the array itself is non NULL.
 *
 * Note, the proto and args passed in includes &quot;__data&quot; as the first parameter.
 * The reason for this is to handle the &quot;void&quot; prototype. If a tracepoint
 * has a &quot;void&quot; prototype, then it is invalid to declare a function
 * as &quot;(void *, void)&quot;. The DECLARE_TRACE_NOARGS() will pass in just
 * &quot;void *data&quot;, where as the DECLARE_TRACE() will pass in &quot;void *data, proto&quot;.
 */</doc>
<dec f='linux-4.14.y/include/linux/tracepoint.h' l='132'/>
<doc f='linux-4.14.y/include/linux/tracepoint.h' l='122'>/*
 * it_func[0] is never NULL because there is at least one element in the array
 * when the array itself is non NULL.
 *
 * Note, the proto and args passed in includes &quot;__data&quot; as the first parameter.
 * The reason for this is to handle the &quot;void&quot; prototype. If a tracepoint
 * has a &quot;void&quot; prototype, then it is invalid to declare a function
 * as &quot;(void *, void)&quot;. The DECLARE_TRACE_NOARGS() will pass in just
 * &quot;void *data&quot;, where as the DECLARE_TRACE() will pass in &quot;void *data, proto&quot;.
 */</doc>
