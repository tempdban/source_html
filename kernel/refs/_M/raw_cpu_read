<dec f='linux-4.14.y/include/linux/percpu-defs.h' l='407'/>
<doc f='linux-4.14.y/include/linux/percpu-defs.h' l='396'>/*
 * Operations for contexts where we do not want to do any checks for
 * preemptions.  Unless strictly necessary, always use [__]this_cpu_*()
 * instead.
 *
 * If there is no other protection through preempt disable and/or disabling
 * interupts then one of these RMW operations can show unexpected behavior
 * because the execution thread was rescheduled on another processor or an
 * interrupt occurred and the same percpu variable was modified from the
 * interrupt context.
 */</doc>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='463' u='c'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='491' u='c'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='501' u='c'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='506' u='c'/>
<dec f='linux-4.14.y/include/linux/percpu-defs.h' l='407'/>
<doc f='linux-4.14.y/include/linux/percpu-defs.h' l='396'>/*
 * Operations for contexts where we do not want to do any checks for
 * preemptions.  Unless strictly necessary, always use [__]this_cpu_*()
 * instead.
 *
 * If there is no other protection through preempt disable and/or disabling
 * interupts then one of these RMW operations can show unexpected behavior
 * because the execution thread was rescheduled on another processor or an
 * interrupt occurred and the same percpu variable was modified from the
 * interrupt context.
 */</doc>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='463' u='c'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='491' u='c'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='501' u='c'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='506' u='c'/>
