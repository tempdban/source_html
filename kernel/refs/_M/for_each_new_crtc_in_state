<dec f='linux-4.18.y/include/drm/drm_atomic.h' l='727'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1718' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1738' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1825' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='2178' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='2267' u='c'/>
<doc f='linux-4.18.y/include/drm/drm_atomic.h' l='716'>/**
 * for_each_new_crtc_in_state - iterate over all CRTCs in an atomic update
 * @__state: &amp;struct drm_atomic_state pointer
 * @crtc: &amp;struct drm_crtc iteration cursor
 * @new_crtc_state: &amp;struct drm_crtc_state iteration cursor for the new state
 * @__i: int iteration cursor, for macro-internal use
 *
 * This iterates over all CRTCs in an atomic update, tracking only the new
 * state. This is useful in enable functions, where we need the new state the
 * hardware should be in when the atomic commit operation has completed.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='377' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='430' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='840' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1068' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1099' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1391' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1519' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2768' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3142' u='c'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='1535' u='c'/>
