<dec f='linux-4.14.y/drivers/video/fbdev/core/fbcon.h' l='211'/>
<doc f='linux-4.14.y/drivers/video/fbdev/core/fbcon.h' l='165'>/* There are several methods fbcon can use to move text around the screen:
 *
 *                     Operation   Pan    Wrap
 *---------------------------------------------
 * SCROLL_MOVE         copyarea    No     No
 * SCROLL_PAN_MOVE     copyarea    Yes    No
 * SCROLL_WRAP_MOVE    copyarea    No     Yes
 * SCROLL_REDRAW       imageblit   No     No
 * SCROLL_PAN_REDRAW   imageblit   Yes    No
 * SCROLL_WRAP_REDRAW  imageblit   No     Yes
 *
 * (SCROLL_WRAP_REDRAW is not implemented yet)
 *
 * In general, fbcon will choose the best scrolling
 * method based on the rule below:
 *
 * Pan/Wrap &gt; accel imageblit &gt; accel copyarea &gt;
 * soft imageblit &gt; (soft copyarea)
 *
 * Exception to the rule: Pan + accel copyarea is
 * preferred over Pan + accel imageblit.
 *
 * The above is typical for PCI/AGP cards. Unless
 * overridden, fbcon will never use soft copyarea.
 *
 * If you need to override the above rule, set the
 * appropriate flags in fb_info-&gt;flags.  For example,
 * to prefer copyarea over imageblit, set
 * FBINFO_READS_FAST.
 *
 * Other notes:
 * + use the hardware engine to move the text
 *    (hw-accelerated copyarea() and fillrect())
 * + use hardware-supported panning on a large virtual screen
 * + amifb can not only pan, but also wrap the display by N lines
 *    (i.e. visible line i = physical line (i+N) % yres).
 * + read what&apos;s already rendered on the screen and
 *     write it in a different place (this is cfb_copyarea())
 * + re-render the text to the screen
 *
 * Whether to use wrapping or panning can only be figured out at
 * runtime (when we know whether our font height is a multiple
 * of the pan/wrap step)
 *
 */</doc>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='1144' u='c'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='1841' u='c'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='1932' u='c'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='2124' u='c'/>
<dec f='linux-4.14.y/drivers/video/fbdev/core/fbcon.h' l='211'/>
<doc f='linux-4.14.y/drivers/video/fbdev/core/fbcon.h' l='165'>/* There are several methods fbcon can use to move text around the screen:
 *
 *                     Operation   Pan    Wrap
 *---------------------------------------------
 * SCROLL_MOVE         copyarea    No     No
 * SCROLL_PAN_MOVE     copyarea    Yes    No
 * SCROLL_WRAP_MOVE    copyarea    No     Yes
 * SCROLL_REDRAW       imageblit   No     No
 * SCROLL_PAN_REDRAW   imageblit   Yes    No
 * SCROLL_WRAP_REDRAW  imageblit   No     Yes
 *
 * (SCROLL_WRAP_REDRAW is not implemented yet)
 *
 * In general, fbcon will choose the best scrolling
 * method based on the rule below:
 *
 * Pan/Wrap &gt; accel imageblit &gt; accel copyarea &gt;
 * soft imageblit &gt; (soft copyarea)
 *
 * Exception to the rule: Pan + accel copyarea is
 * preferred over Pan + accel imageblit.
 *
 * The above is typical for PCI/AGP cards. Unless
 * overridden, fbcon will never use soft copyarea.
 *
 * If you need to override the above rule, set the
 * appropriate flags in fb_info-&gt;flags.  For example,
 * to prefer copyarea over imageblit, set
 * FBINFO_READS_FAST.
 *
 * Other notes:
 * + use the hardware engine to move the text
 *    (hw-accelerated copyarea() and fillrect())
 * + use hardware-supported panning on a large virtual screen
 * + amifb can not only pan, but also wrap the display by N lines
 *    (i.e. visible line i = physical line (i+N) % yres).
 * + read what&apos;s already rendered on the screen and
 *     write it in a different place (this is cfb_copyarea())
 * + re-render the text to the screen
 *
 * Whether to use wrapping or panning can only be figured out at
 * runtime (when we know whether our font height is a multiple
 * of the pan/wrap step)
 *
 */</doc>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='1144' u='c'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='1841' u='c'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='1932' u='c'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fbcon.c' l='2124' u='c'/>
