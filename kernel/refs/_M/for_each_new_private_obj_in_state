<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='864'/>
<doc f='linux-4.14.y/include/drm/drm_atomic.h' l='853'>/**
 * for_each_new_private_obj_in_state - iterate over all private objects in an atomic update
 * @__state: &amp;struct drm_atomic_state pointer
 * @obj: &amp;struct drm_private_obj iteration cursor
 * @new_obj_state: &amp;struct drm_private_state iteration cursor for the new state
 * @__i: int iteration cursor, for macro-internal use
 *
 * This iterates over all private objects in an atomic update, tracking only
 * the new state. This is useful in enable functions, where we need the new state the
 * hardware should be in when the atomic commit operation has completed.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='864'/>
<doc f='linux-4.14.y/include/drm/drm_atomic.h' l='853'>/**
 * for_each_new_private_obj_in_state - iterate over all private objects in an atomic update
 * @__state: &amp;struct drm_atomic_state pointer
 * @obj: &amp;struct drm_private_obj iteration cursor
 * @new_obj_state: &amp;struct drm_private_state iteration cursor for the new state
 * @__i: int iteration cursor, for macro-internal use
 *
 * This iterates over all private objects in an atomic update, tracking only
 * the new state. This is useful in enable functions, where we need the new state the
 * hardware should be in when the atomic commit operation has completed.
 */</doc>
