<dec f='linux-4.14.y/include/linux/rculist_nulls.h' l='115'/>
<doc f='linux-4.14.y/include/linux/rculist_nulls.h' l='103'>/**
 * hlist_nulls_for_each_entry_rcu - iterate over rcu list of given type
 * @tpos:	the type * to use as a loop cursor.
 * @pos:	the &amp;struct hlist_nulls_node to use as a loop cursor.
 * @head:	the head for your list.
 * @member:	the name of the hlist_nulls_node within the struct.
 *
 * The barrier() is needed to make sure compiler doesn&apos;t cache first element [1],
 * as this loop can be restarted [2]
 * [1] Documentation/atomic_ops.txt around line 114
 * [2] Documentation/RCU/rculist_nulls.txt around line 146
 */</doc>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='541' u='c'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='860' u='c'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='901' u='c'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='1008' u='c'/>
<dec f='linux-4.14.y/include/linux/rculist_nulls.h' l='115'/>
<doc f='linux-4.14.y/include/linux/rculist_nulls.h' l='103'>/**
 * hlist_nulls_for_each_entry_rcu - iterate over rcu list of given type
 * @tpos:	the type * to use as a loop cursor.
 * @pos:	the &amp;struct hlist_nulls_node to use as a loop cursor.
 * @head:	the head for your list.
 * @member:	the name of the hlist_nulls_node within the struct.
 *
 * The barrier() is needed to make sure compiler doesn&apos;t cache first element [1],
 * as this loop can be restarted [2]
 * [1] Documentation/atomic_ops.txt around line 114
 * [2] Documentation/RCU/rculist_nulls.txt around line 146
 */</doc>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='541' u='c'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='860' u='c'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='901' u='c'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_core.c' l='1008' u='c'/>
