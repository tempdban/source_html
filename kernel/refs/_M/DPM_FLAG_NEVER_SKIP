<dec f='linux-4.18.y/include/linux/pm.h' l='580'/>
<doc f='linux-4.18.y/include/linux/pm.h' l='553'>/*
 * Driver flags to control system suspend/resume behavior.
 *
 * These flags can be set by device drivers at the probe time.  They need not be
 * cleared by the drivers as the driver core will take care of that.
 *
 * NEVER_SKIP: Do not skip all system suspend/resume callbacks for the device.
 * SMART_PREPARE: Check the return value of the driver&apos;s -&gt;prepare callback.
 * SMART_SUSPEND: No need to resume the device from runtime suspend.
 * LEAVE_SUSPENDED: Avoid resuming the device during system resume if possible.
 *
 * Setting SMART_PREPARE instructs bus types and PM domains which may want
 * system suspend/resume callbacks to be skipped for the device to return 0 from
 * their -&gt;prepare callbacks if the driver&apos;s -&gt;prepare callback returns 0 (in
 * other words, the system suspend/resume callbacks can only be skipped for the
 * device if its driver doesn&apos;t object against that).  This flag has no effect
 * if NEVER_SKIP is set.
 *
 * Setting SMART_SUSPEND instructs bus types and PM domains which may want to
 * runtime resume the device upfront during system suspend that doing so is not
 * necessary from the driver&apos;s perspective.  It also may cause them to skip
 * invocations of the -&gt;suspend_late and -&gt;suspend_noirq callbacks provided by
 * the driver if they decide to leave the device in runtime suspend.
 *
 * Setting LEAVE_SUSPENDED informs the PM core and middle-layer code that the
 * driver prefers the device to be left in suspend after system resume.
 */</doc>
