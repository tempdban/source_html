<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='825'/>
<doc f='linux-4.14.y/include/drm/drm_atomic.h' l='813'>/**
 * for_each_oldnew_private_obj_in_state - iterate over all private objects in an atomic update
 * @__state: &amp;struct drm_atomic_state pointer
 * @obj: &amp;struct drm_private_obj iteration cursor
 * @old_obj_state: &amp;struct drm_private_state iteration cursor for the old state
 * @new_obj_state: &amp;struct drm_private_state iteration cursor for the new state
 * @__i: int iteration cursor, for macro-internal use
 *
 * This iterates over all private objects in an atomic update, tracking both
 * old and new state. This is useful in places where the state delta needs
 * to be considered, for example in atomic check functions.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2355' u='c'/>
