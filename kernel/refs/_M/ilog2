<dec f='linux-4.14.y/include/linux/log2.h' l='79'/>
<use f='linux-4.14.y/include/linux/log2.h' l='200' u='c'/>
<doc f='linux-4.14.y/include/linux/log2.h' l='69'>/**
 * ilog2 - log of base 2 of 32-bit or a 64-bit unsigned value
 * @n - parameter
 *
 * constant-capable log of base 2 calculation
 * - this can be used to initialise global variables from constant data, hence
 *   the massive ternary operator construction
 *
 * selects the appropriately-sized optimised version depending on sizeof(n)
 */</doc>
<use f='linux-4.14.y/include/linux/sched.h' l='1306' u='c'/>
<use f='linux-4.14.y/block/blk-mq.c' l='50' u='c'/>
<use f='linux-4.14.y/block/blk-mq.c' l='911' u='c'/>
<use f='linux-4.14.y/block/blk-mq.c' l='2029' u='c'/>
<use f='linux-4.14.y/include/scsi/scsi_cmnd.h' l='316' u='c'/>
<use f='linux-4.14.y/include/scsi/scsi_cmnd.h' l='358' u='c'/>
<use f='linux-4.14.y/block/genhd.c' l='1533' u='c'/>
<use f='linux-4.14.y/block/genhd.c' l='1534' u='c'/>
<use f='linux-4.14.y/block/genhd.c' l='1538' u='c'/>
<use f='linux-4.14.y/block/genhd.c' l='1539' u='c'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='668' u='c'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_bufs.c' l='101' u='c'/>
<use f='linux-4.14.y/drivers/iommu/intel-iommu.c' l='1580' u='c'/>
<use f='linux-4.14.y/drivers/iommu/intel-svm.c' l='177' u='c'/>
<use f='linux-4.14.y/drivers/iommu/intel_irq_remapping.c' l='117' u='c'/>
<use f='linux-4.14.y/drivers/md/dm-crypt.c' l='489' u='c'/>
<use f='linux-4.14.y/drivers/md/dm-crypt.c' l='1927' u='c'/>
<use f='linux-4.14.y/drivers/md/raid5-ppl.c' l='327' u='c'/>
<use f='linux-4.14.y/drivers/md/raid5-ppl.c' l='328' u='c'/>
<use f='linux-4.14.y/drivers/md/raid5-ppl.c' l='452' u='c'/>
<use f='linux-4.14.y/drivers/pci/msi.c' l='558' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.h' l='175' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.h' l='185' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.h' l='190' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='757' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='758' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='791' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='792' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='821' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='822' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='852' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='853' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='953' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='954' u='c'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='2274' u='c'/>
<use f='linux-4.14.y/fs/buffer.c' l='1687' u='c'/>
<use f='linux-4.14.y/fs/ext4/super.c' l='3867' u='c'/>
<use f='linux-4.14.y/fs/ext4/super.c' l='3868' u='c'/>
<use f='linux-4.14.y/fs/proc/array.c' l='141' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='645' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='646' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='647' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='648' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='649' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='650' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='651' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='652' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='653' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='654' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='655' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='659' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='660' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='661' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='662' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='663' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='664' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='665' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='666' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='667' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='668' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='669' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='670' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='674' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='675' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='676' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='677' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='678' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='679' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='682' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='683' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='684' u='c'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='685' u='c'/>
<use f='linux-4.14.y/kernel/bounds.c' l='22' u='c'/>
<use f='linux-4.14.y/kernel/events/ring_buffer.c' l='598' u='c'/>
<use f='linux-4.14.y/kernel/events/ring_buffer.c' l='622' u='c'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='176' u='c'/>
<use f='linux-4.14.y/kernel/time/timekeeping.c' l='2077' u='c'/>
<use f='linux-4.14.y/kernel/time/timekeeping.c' l='2077' u='c'/>
<use f='linux-4.14.y/kernel/time/timekeeping.c' l='2080' u='c'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='106' u='c'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='181' u='c'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='200' u='c'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='1101' u='c'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='1133' u='c'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='30' u='c'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='1111' u='c'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='1415' u='c'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='1445' u='c'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='1446' u='c'/>
<use f='linux-4.14.y/mm/page_alloc.c' l='7287' u='c'/>
<use f='linux-4.14.y/net/ipv4/tcp_timer.c' l='179' u='c'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='2863' u='c'/>
<dec f='linux-4.14.y/tools/include/linux/log2.h' l='75'/>
<doc f='linux-4.14.y/tools/include/linux/log2.h' l='65'>/**
 * ilog2 - log of base 2 of 32-bit or a 64-bit unsigned value
 * @n - parameter
 *
 * constant-capable log of base 2 calculation
 * - this can be used to initialise global variables from constant data, hence
 *   the massive ternary operator construction
 *
 * selects the appropriately-sized optimised version depending on sizeof(n)
 */</doc>
