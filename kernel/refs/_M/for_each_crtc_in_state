<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='662'/>
<doc f='linux-4.14.y/include/drm/drm_atomic.h' l='645'>/**
 * for_each_crtc_in_state - iterate over all connectors in an atomic update
 * @__state: &amp;struct drm_atomic_state pointer
 * @crtc: &amp;struct drm_crtc iteration cursor
 * @crtc_state: &amp;struct drm_crtc_state iteration cursor
 * @__i: int iteration cursor, for macro-internal use
 *
 * This iterates over all CRTCs in an atomic update. Note that before the
 * software state is committed (by calling drm_atomic_helper_swap_state(), this
 * points to the new state, while afterwards it points to the old state. Due to
 * this tricky confusion this macro is deprecated.
 *
 * FIXME:
 *
 * Replace all usage of this with one of the explicit iterators below and then
 * remove this macro.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='662'/>
<doc f='linux-4.14.y/include/drm/drm_atomic.h' l='645'>/**
 * for_each_crtc_in_state - iterate over all connectors in an atomic update
 * @__state: &amp;struct drm_atomic_state pointer
 * @crtc: &amp;struct drm_crtc iteration cursor
 * @crtc_state: &amp;struct drm_crtc_state iteration cursor
 * @__i: int iteration cursor, for macro-internal use
 *
 * This iterates over all CRTCs in an atomic update. Note that before the
 * software state is committed (by calling drm_atomic_helper_swap_state(), this
 * points to the new state, while afterwards it points to the old state. Due to
 * this tricky confusion this macro is deprecated.
 *
 * FIXME:
 *
 * Replace all usage of this with one of the explicit iterators below and then
 * remove this macro.
 */</doc>
