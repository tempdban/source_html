<dec f='linux-4.18.y/include/acpi/acpixf.h' l='790' type='acpi_status acpi_get_current_resources(acpi_handle device, struct acpi_buffer * ret_buffer)'/>
<def f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='166' ll='184' type='acpi_status acpi_get_current_resources(acpi_handle device_handle, struct acpi_buffer * ret_buffer)'/>
<dec f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='186' type='acpi_status acpi_get_current_resources(acpi_handle , struct acpi_buffer * )'/>
<use f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='186' c='acpi_get_current_resources'/>
<use f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='186' u='a'/>
<use f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='186' u='a'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='143'>/*******************************************************************************
 *
 * FUNCTION:    acpi_get_current_resources
 *
 * PARAMETERS:  device_handle   - Handle to the device object for the
 *                                device we are querying
 *              ret_buffer      - Pointer to a buffer to receive the
 *                                current resources for the device
 *
 * RETURN:      Status
 *
 * DESCRIPTION: This function is called to get the current resources for a
 *              specific device. The caller must first acquire a handle for
 *              the desired device. The resource data is placed in the buffer
 *              pointed to by the ret_buffer variable parameter.
 *
 *              If the function fails an appropriate status will be returned
 *              and the value of ret_buffer is undefined.
 *
 *              This function attempts to execute the _CRS method contained in
 *              the object indicated by the passed device_handle.
 *
 ******************************************************************************/</doc>
