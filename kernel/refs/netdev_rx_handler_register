<dec f='linux-4.14.y/include/linux/netdevice.h' l='3283' type='int netdev_rx_handler_register(struct net_device * dev, rx_handler_func_t * rx_handler, void * rx_handler_data)'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='1671' u='c' c='bond_enslave'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='1179' u='c' c='macvlan_port_create'/>
<use f='linux-4.14.y/drivers/net/macvtap.c' l='101' u='c' c='macvtap_newlink'/>
<use f='linux-4.14.y/net/bridge/br_if.c' l='537' u='c' c='br_add_if'/>
<def f='linux-4.14.y/net/core/dev.c' l='4248' ll='4260' type='int netdev_rx_handler_register(struct net_device * dev, rx_handler_func_t * rx_handler, void * rx_handler_data)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='4261' type='int netdev_rx_handler_register(struct net_device * , rx_handler_func_t * , void * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='4261' c='netdev_rx_handler_register'/>
<use f='linux-4.14.y/net/core/dev.c' l='4261' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='4261' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='4234'>/**
 *	netdev_rx_handler_register - register receive handler
 *	@dev: device to register a handler for
 *	@rx_handler: receive handler to register
 *	@rx_handler_data: data pointer that is used by rx handler
 *
 *	Register a receive handler for a device. This handler will then be
 *	called from __netif_receive_skb. A negative errno code is returned
 *	on a failure.
 *
 *	The caller must hold the rtnl_mutex.
 *
 *	For a general description of rx_handler, see enum rx_handler_result.
 */</doc>
<use f='linux-4.14.y/net/openvswitch/vport-netdev.c' l='115' u='c' c='ovs_netdev_link'/>
