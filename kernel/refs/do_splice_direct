<dec f='linux-4.14.y/include/linux/fs.h' l='2939' type='long do_splice_direct(struct file * in, loff_t * ppos, struct file * out, loff_t * opos, size_t len, unsigned int flags)'/>
<use f='linux-4.14.y/fs/overlayfs/copy_up.c' l='179' u='c' c='ovl_copy_up_data'/>
<use f='linux-4.14.y/fs/read_write.c' l='1434' u='c' c='do_sendfile'/>
<use f='linux-4.14.y/fs/read_write.c' l='1601' u='c' c='vfs_copy_file_range'/>
<def f='linux-4.14.y/fs/splice.c' l='1038' ll='1066' type='long do_splice_direct(struct file * in, loff_t * ppos, struct file * out, loff_t * opos, size_t len, unsigned int flags)'/>
<dec f='linux-4.14.y/fs/splice.c' l='1067' type='long do_splice_direct(struct file * , loff_t * , struct file * , loff_t * , size_t , unsigned int )'/>
<use f='linux-4.14.y/fs/splice.c' l='1067' c='do_splice_direct'/>
<use f='linux-4.14.y/fs/splice.c' l='1067' u='a'/>
<use f='linux-4.14.y/fs/splice.c' l='1067' u='a'/>
<doc f='linux-4.14.y/fs/splice.c' l='1022'>/**
 * do_splice_direct - splices data directly between two files
 * @in:		file to splice from
 * @ppos:	input file offset
 * @out:	file to splice to
 * @opos:	output file offset
 * @len:	number of bytes to splice
 * @flags:	splice modifier flags
 *
 * Description:
 *    For use by do_sendfile(). splice can easily emulate sendfile, but
 *    doing it in the application would incur an extra system call
 *    (splice in + splice out, as compared to just sendfile()). So this helper
 *    can splice directly through a process-private pipe.
 *
 */</doc>
