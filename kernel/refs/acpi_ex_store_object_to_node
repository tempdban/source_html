<dec f='linux-4.18.y/drivers/acpi/acpica/acinterp.h' l='389' type='acpi_status acpi_ex_store_object_to_node(union acpi_operand_object * source_desc, struct acpi_namespace_node * node, struct acpi_walk_state * walk_state, u8 implicit_conversion)'/>
<use f='linux-4.18.y/drivers/acpi/acpica/dsmthdat.c' l='594' u='c' c='acpi_ds_store_object_to_local'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exstore.c' l='75' u='c' c='acpi_ex_store'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exstore.c' l='126' u='c' c='acpi_ex_store'/>
<def f='linux-4.18.y/drivers/acpi/acpica/exstore.c' l='360' ll='542' type='acpi_status acpi_ex_store_object_to_node(union acpi_operand_object * source_desc, struct acpi_namespace_node * node, struct acpi_walk_state * walk_state, u8 implicit_conversion)'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/exstore.c' l='330'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_store_object_to_node
 *
 * PARAMETERS:  source_desc             - Value to be stored
 *              node                    - Named object to receive the value
 *              walk_state              - Current walk state
 *              implicit_conversion     - Perform implicit conversion (yes/no)
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Store the object to the named object.
 *
 * The assignment of an object to a named object is handled here.
 * The value passed in will replace the current value (if any)
 * with the input value.
 *
 * When storing into an object the data is converted to the
 * target object type then stored in the object. This means
 * that the target object type (for an initialized target) will
 * not be changed by a store operation. A copy_object can change
 * the target type, however.
 *
 * The implicit_conversion flag is set to NO/FALSE only when
 * storing to an arg_x -- as per the rules of the ACPI spec.
 *
 * Assumes parameters are already validated.
 *
 ******************************************************************************/</doc>
