<dec f='linux-4.14.y/include/drm/drm_mm.h' l='511' type='bool drm_mm_scan_remove_block(struct drm_mm_scan * scan, struct drm_mm_node * node)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='785' ll='812' type='bool drm_mm_scan_remove_block(struct drm_mm_scan * scan, struct drm_mm_node * node)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' type='bool drm_mm_scan_remove_block(struct drm_mm_scan * , struct drm_mm_node * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' c='drm_mm_scan_remove_block'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='766'>/**
 * drm_mm_scan_remove_block - remove a node from the scan list
 * @scan: the active drm_mm scanner
 * @node: drm_mm_node to remove
 *
 * Nodes **must** be removed in exactly the reverse order from the scan list as
 * they have been added (e.g. using list_add() as they are added and then
 * list_for_each() over that eviction list to remove), otherwise the internal
 * state of the memory manager will be corrupted.
 *
 * When the scan list is empty, the selected memory nodes can be freed. An
 * immediately following drm_mm_insert_node_in_range_generic() or one of the
 * simpler versions of that function with !DRM_MM_SEARCH_BEST will then return
 * the just freed block (because its at the top of the free_stack list).
 *
 * Returns:
 * True if this block should be evicted, false otherwise. Will always
 * return false when no hole has been found.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_mm.h' l='511' type='bool drm_mm_scan_remove_block(struct drm_mm_scan * scan, struct drm_mm_node * node)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='785' ll='812' type='bool drm_mm_scan_remove_block(struct drm_mm_scan * scan, struct drm_mm_node * node)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' type='bool drm_mm_scan_remove_block(struct drm_mm_scan * , struct drm_mm_node * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' c='drm_mm_scan_remove_block'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='813' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_mm.c' l='766'>/**
 * drm_mm_scan_remove_block - remove a node from the scan list
 * @scan: the active drm_mm scanner
 * @node: drm_mm_node to remove
 *
 * Nodes **must** be removed in exactly the reverse order from the scan list as
 * they have been added (e.g. using list_add() as they are added and then
 * list_for_each() over that eviction list to remove), otherwise the internal
 * state of the memory manager will be corrupted.
 *
 * When the scan list is empty, the selected memory nodes can be freed. An
 * immediately following drm_mm_insert_node_in_range_generic() or one of the
 * simpler versions of that function with !DRM_MM_SEARCH_BEST will then return
 * the just freed block (because its at the top of the free_stack list).
 *
 * Returns:
 * True if this block should be evicted, false otherwise. Will always
 * return false when no hole has been found.
 */</doc>
