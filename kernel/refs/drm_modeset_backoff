<dec f='linux-4.18.y/include/drm/drm_modeset_lock.h' l='95' type='int drm_modeset_backoff(struct drm_modeset_acquire_ctx * ctx)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='2454' u='c' c='drm_mode_atomic_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3032' u='c' c='drm_atomic_helper_shutdown'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3096' u='c' c='drm_atomic_helper_suspend'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3187' u='c' c='drm_atomic_helper_resume'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_color_mgmt.c' l='288' u='c' c='drm_mode_gamma_set_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='750' u='c' c='drm_mode_setcrtc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='447' u='c' c='restore_fbdev_mode_atomic'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1459' u='c' c='setcmap_atomic'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_framebuffer.c' l='860' u='c' c='atomic_remove_fb'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_object.c' l='487' u='c' c='set_property_atomic'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='108' u='c' c='drm_modeset_lock_all'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='289' ll='301' type='int drm_modeset_backoff(struct drm_modeset_acquire_ctx * ctx)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='302' type='int drm_modeset_backoff(struct drm_modeset_acquire_ctx * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='302' c='drm_modeset_backoff'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='302' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='302' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='277'>/**
 * drm_modeset_backoff - deadlock avoidance backoff
 * @ctx: the acquire context
 *
 * If deadlock is detected (ie. drm_modeset_lock() returns -EDEADLK),
 * you must call this function to drop all currently held locks and
 * block until the contended lock becomes available.
 *
 * This function returns 0 on success, or -ERESTARTSYS if this context
 * is initialized with %DRM_MODESET_ACQUIRE_INTERRUPTIBLE and the
 * wait has been interrupted.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='691' u='c' c='setplane_internal'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='897' u='c' c='drm_mode_cursor_common'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='1107' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='284' u='c' c='drm_helper_probe_detect_ctx'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='413' u='c' c='drm_helper_probe_single_connector_modes'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='436' u='c' c='drm_helper_probe_single_connector_modes'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='476' u='c' c='vmwgfx_set_config_internal'/>
