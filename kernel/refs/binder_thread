<def f='linux-4.14.y/drivers/android/binder.c' l='598' ll='613'/>
<size>392</size>
<doc f='linux-4.14.y/drivers/android/binder.c' l='564'>/**
 * struct binder_thread - binder thread bookkeeping
 * @proc:                 binder process for this thread
 *                        (invariant after initialization)
 * @rb_node:              element for proc-&gt;threads rbtree
 *                        (protected by @proc-&gt;inner_lock)
 * @waiting_thread_node:  element for @proc-&gt;waiting_threads list
 *                        (protected by @proc-&gt;inner_lock)
 * @pid:                  PID for this thread
 *                        (invariant after initialization)
 * @looper:               bitmap of looping state
 *                        (only accessed by this thread)
 * @looper_needs_return:  looping thread needs to exit driver
 *                        (no lock needed)
 * @transaction_stack:    stack of in-progress transactions for this thread
 *                        (protected by @proc-&gt;inner_lock)
 * @todo:                 list of work to do for this thread
 *                        (protected by @proc-&gt;inner_lock)
 * @return_error:         transaction errors reported by this thread
 *                        (only accessed by this thread)
 * @reply_error:          transaction errors reported by target thread
 *                        (protected by @proc-&gt;inner_lock)
 * @wait:                 wait queue for thread work
 * @stats:                per-thread statistics
 *                        (atomics, no lock needed)
 * @tmp_ref:              temporary reference to indicate thread is in use
 *                        (atomic since @proc-&gt;inner_lock cannot
 *                        always be acquired)
 * @is_dead:              thread is dead and awaiting free
 *                        when outstanding transactions are cleaned up
 *                        (protected by @proc-&gt;inner_lock)
 *
 * Bookkeeping structure for binder threads.
 */</doc>
<mbr r='binder_thread::proc' o='0' t='struct binder_proc *'/>
<mbr r='binder_thread::rb_node' o='64' t='struct rb_node'/>
<mbr r='binder_thread::waiting_thread_node' o='256' t='struct list_head'/>
<mbr r='binder_thread::pid' o='384' t='int'/>
<mbr r='binder_thread::looper' o='416' t='int'/>
<mbr r='binder_thread::looper_need_return' o='448' t='bool'/>
<mbr r='binder_thread::transaction_stack' o='512' t='struct binder_transaction *'/>
<mbr r='binder_thread::todo' o='576' t='struct list_head'/>
<mbr r='binder_thread::return_error' o='704' t='struct binder_error'/>
<mbr r='binder_thread::reply_error' o='960' t='struct binder_error'/>
<mbr r='binder_thread::wait' o='1216' t='wait_queue_head_t'/>
<mbr r='binder_thread::stats' o='1408' t='struct binder_stats'/>
<mbr r='binder_thread::tmp_ref' o='3040' t='atomic_t'/>
<mbr r='binder_thread::is_dead' o='3072' t='bool'/>
