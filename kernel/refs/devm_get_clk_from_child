<dec f='linux-4.14.y/include/linux/clk.h' l='332' type='struct clk * devm_get_clk_from_child(struct device * dev, struct device_node * np, const char * con_id)'/>
<doc f='linux-4.14.y/include/linux/clk.h' l='318'>/**
 * devm_get_clk_from_child - lookup and obtain a managed reference to a
 *			     clock producer from child node.
 * @dev: device for clock &quot;consumer&quot;
 * @np: pointer to clock consumer node
 * @con_id: clock consumer ID
 *
 * This function parses the clocks, and uses them to look up the
 * struct clk from the registered list of clock providers by using
 * @np and @con_id
 *
 * The clock will automatically be freed when the device is unbound
 * from the bus.
 */</doc>
<def f='linux-4.14.y/drivers/clk/clk-devres.c' l='93' ll='111' type='struct clk * devm_get_clk_from_child(struct device * dev, struct device_node * np, const char * con_id)'/>
<dec f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' type='struct clk * devm_get_clk_from_child(struct device * , struct device_node * , const char * )'/>
<use f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' c='devm_get_clk_from_child'/>
<use f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' u='a'/>
<use f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' u='a'/>
<dec f='linux-4.14.y/include/linux/clk.h' l='332' type='struct clk * devm_get_clk_from_child(struct device * dev, struct device_node * np, const char * con_id)'/>
<doc f='linux-4.14.y/include/linux/clk.h' l='318'>/**
 * devm_get_clk_from_child - lookup and obtain a managed reference to a
 *			     clock producer from child node.
 * @dev: device for clock &quot;consumer&quot;
 * @np: pointer to clock consumer node
 * @con_id: clock consumer ID
 *
 * This function parses the clocks, and uses them to look up the
 * struct clk from the registered list of clock providers by using
 * @np and @con_id
 *
 * The clock will automatically be freed when the device is unbound
 * from the bus.
 */</doc>
<def f='linux-4.14.y/drivers/clk/clk-devres.c' l='93' ll='111' type='struct clk * devm_get_clk_from_child(struct device * dev, struct device_node * np, const char * con_id)'/>
<dec f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' type='struct clk * devm_get_clk_from_child(struct device * , struct device_node * , const char * )'/>
<use f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' c='devm_get_clk_from_child'/>
<use f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' u='a'/>
<use f='linux-4.14.y/drivers/clk/clk-devres.c' l='112' u='a'/>
