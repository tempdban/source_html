<def f='linux-4.18.y/include/linux/hwspinlock.h' l='166' ll='169' type='int hwspin_trylock_irq(struct hwspinlock * hwlock)'/>
<doc f='linux-4.18.y/include/linux/hwspinlock.h' l='152'>/**
 * hwspin_trylock_irq() - try to lock an hwspinlock, disable interrupts
 * @hwlock: an hwspinlock which we want to trylock
 *
 * This function attempts to lock the underlying hwspinlock, and will
 * immediately fail if the hwspinlock is already locked.
 *
 * Upon a successful return from this function, preemption and local
 * interrupts are disabled, so the caller must not sleep, and is advised
 * to release the hwspinlock as soon as possible.
 *
 * Returns 0 if we successfully locked the hwspinlock, -EBUSY if
 * the hwspinlock was already taken, and -EINVAL if @hwlock is invalid.
 */</doc>
