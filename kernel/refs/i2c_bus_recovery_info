<def f='linux-4.14.y/include/linux/i2c.h' l='501' ll='514'/>
<size>56</size>
<doc f='linux-4.14.y/include/linux/i2c.h' l='483'>/**
 * struct i2c_bus_recovery_info - I2C bus recovery information
 * @recover_bus: Recover routine. Either pass driver&apos;s recover_bus() routine, or
 *	i2c_generic_scl_recovery() or i2c_generic_gpio_recovery().
 * @get_scl: This gets current value of SCL line. Mandatory for generic SCL
 *      recovery. Used internally for generic GPIO recovery.
 * @set_scl: This sets/clears SCL line. Mandatory for generic SCL recovery. Used
 *      internally for generic GPIO recovery.
 * @get_sda: This gets current value of SDA line. Optional for generic SCL
 *      recovery. Used internally, if sda_gpio is a valid GPIO, for generic GPIO
 *      recovery.
 * @prepare_recovery: This will be called before starting recovery. Platform may
 *	configure padmux here for SDA/SCL line or something else they want.
 * @unprepare_recovery: This will be called after completing recovery. Platform
 *	may configure padmux here for SDA/SCL line or something else they want.
 * @scl_gpio: gpio number of the SCL line. Only required for GPIO recovery.
 * @sda_gpio: gpio number of the SDA line. Only required for GPIO recovery.
 */</doc>
<mbr r='i2c_bus_recovery_info::recover_bus' o='0' t='int (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::get_scl' o='64' t='int (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::set_scl' o='128' t='void (*)(struct i2c_adapter *, int)'/>
<mbr r='i2c_bus_recovery_info::get_sda' o='192' t='int (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::prepare_recovery' o='256' t='void (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::unprepare_recovery' o='320' t='void (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::scl_gpio' o='384' t='int'/>
<mbr r='i2c_bus_recovery_info::sda_gpio' o='416' t='int'/>
<def f='linux-4.14.y/include/linux/i2c.h' l='501' ll='514'/>
<size>56</size>
<doc f='linux-4.14.y/include/linux/i2c.h' l='483'>/**
 * struct i2c_bus_recovery_info - I2C bus recovery information
 * @recover_bus: Recover routine. Either pass driver&apos;s recover_bus() routine, or
 *	i2c_generic_scl_recovery() or i2c_generic_gpio_recovery().
 * @get_scl: This gets current value of SCL line. Mandatory for generic SCL
 *      recovery. Used internally for generic GPIO recovery.
 * @set_scl: This sets/clears SCL line. Mandatory for generic SCL recovery. Used
 *      internally for generic GPIO recovery.
 * @get_sda: This gets current value of SDA line. Optional for generic SCL
 *      recovery. Used internally, if sda_gpio is a valid GPIO, for generic GPIO
 *      recovery.
 * @prepare_recovery: This will be called before starting recovery. Platform may
 *	configure padmux here for SDA/SCL line or something else they want.
 * @unprepare_recovery: This will be called after completing recovery. Platform
 *	may configure padmux here for SDA/SCL line or something else they want.
 * @scl_gpio: gpio number of the SCL line. Only required for GPIO recovery.
 * @sda_gpio: gpio number of the SDA line. Only required for GPIO recovery.
 */</doc>
<mbr r='i2c_bus_recovery_info::recover_bus' o='0' t='int (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::get_scl' o='64' t='int (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::set_scl' o='128' t='void (*)(struct i2c_adapter *, int)'/>
<mbr r='i2c_bus_recovery_info::get_sda' o='192' t='int (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::prepare_recovery' o='256' t='void (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::unprepare_recovery' o='320' t='void (*)(struct i2c_adapter *)'/>
<mbr r='i2c_bus_recovery_info::scl_gpio' o='384' t='int'/>
<mbr r='i2c_bus_recovery_info::sda_gpio' o='416' t='int'/>
