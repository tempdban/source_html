<dec f='linux-4.14.y/include/drm/drm_fb_helper.h' l='291' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * fb_helper, bool suspend)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1171' ll='1198' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * fb_helper, bool suspend)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' c='drm_fb_helper_set_suspend_unlocked'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1155'>/**
 * drm_fb_helper_set_suspend_unlocked - wrapper around fb_set_suspend that also
 *                                      takes the console lock
 * @fb_helper: driver-allocated fbdev helper
 * @suspend: whether to suspend or resume
 *
 * A wrapper around fb_set_suspend() that takes the console lock. If the lock
 * isn&apos;t available on resume, a worker is tasked with waiting for the lock
 * to become available. The console lock can be pretty contented on resume
 * due to all the printk activity.
 *
 * This function can be called multiple times with the same state since
 * &amp;fb_info.state is checked to see if fbdev is running or not before locking.
 *
 * Use drm_fb_helper_set_suspend() if you need to take the lock yourself.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_fb_helper.h' l='291' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * fb_helper, bool suspend)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1171' ll='1198' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * fb_helper, bool suspend)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' c='drm_fb_helper_set_suspend_unlocked'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1199' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1155'>/**
 * drm_fb_helper_set_suspend_unlocked - wrapper around fb_set_suspend that also
 *                                      takes the console lock
 * @fb_helper: driver-allocated fbdev helper
 * @suspend: whether to suspend or resume
 *
 * A wrapper around fb_set_suspend() that takes the console lock. If the lock
 * isn&apos;t available on resume, a worker is tasked with waiting for the lock
 * to become available. The console lock can be pretty contented on resume
 * due to all the printk activity.
 *
 * This function can be called multiple times with the same state since
 * &amp;fb_info.state is checked to see if fbdev is running or not before locking.
 *
 * Use drm_fb_helper_set_suspend() if you need to take the lock yourself.
 */</doc>
