<dec f='linux-4.18.y/include/drm/drm_fb_helper.h' l='301' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * fb_helper, bool suspend)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1242' ll='1269' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * fb_helper, bool suspend)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1270' type='void drm_fb_helper_set_suspend_unlocked(struct drm_fb_helper * , bool )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1270' c='drm_fb_helper_set_suspend_unlocked'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1270' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1270' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='1226'>/**
 * drm_fb_helper_set_suspend_unlocked - wrapper around fb_set_suspend that also
 *                                      takes the console lock
 * @fb_helper: driver-allocated fbdev helper, can be NULL
 * @suspend: whether to suspend or resume
 *
 * A wrapper around fb_set_suspend() that takes the console lock. If the lock
 * isn&apos;t available on resume, a worker is tasked with waiting for the lock
 * to become available. The console lock can be pretty contented on resume
 * due to all the printk activity.
 *
 * This function can be called multiple times with the same state since
 * &amp;fb_info.state is checked to see if fbdev is running or not before locking.
 *
 * Use drm_fb_helper_set_suspend() if you need to take the lock yourself.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='186' u='c' c='drm_mode_config_helper_suspend'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='189' u='c' c='drm_mode_config_helper_suspend'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='229' u='c' c='drm_mode_config_helper_resume'/>
