<dec f='linux-4.18.y/include/linux/dmi.h' l='103' type='const struct dmi_device * dmi_find_device(int type, const char * name, const struct dmi_device * from)'/>
<use f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='244' u='c' c='dmi_save_one_device'/>
<use f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='800' u='c' c='dmi_matches'/>
<def f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='942' ll='958' type='const struct dmi_device * dmi_find_device(int type, const char * name, const struct dmi_device * from)'/>
<dec f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='959' type='const struct dmi_device * dmi_find_device(int , const char * , const struct dmi_device * )'/>
<use f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='959' c='dmi_find_device'/>
<use f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='959' u='a'/>
<use f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='959' u='a'/>
<doc f='linux-4.18.y/drivers/firmware/dmi_scan.c' l='930'>/**
 *	dmi_find_device - find onboard device by type/name
 *	@type: device type or %DMI_DEV_TYPE_ANY to match all device types
 *	@name: device name string or %NULL to match all
 *	@from: previous device found in search, or %NULL for new search.
 *
 *	Iterates through the list of known onboard devices. If a device is
 *	found with a matching @type and @name, a pointer to its device
 *	structure is returned.  Otherwise, %NULL is returned.
 *	A new search is initiated by passing %NULL as the @from argument.
 *	If @from is not %NULL, searches continue from next device.
 */</doc>
<use f='linux-4.18.y/drivers/pci/pci-label.c' l='57' u='c' c='find_smbios_instance_string'/>
