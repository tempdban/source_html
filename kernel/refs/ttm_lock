<def f='linux-4.14.y/include/drm/ttm/ttm_lock.h' l='70' ll='79'/>
<size>136</size>
<doc f='linux-4.14.y/include/drm/ttm/ttm_lock.h' l='57'>/**
 * struct ttm_lock
 *
 * @base: ttm base object used solely to release the lock if the client
 * holding the lock dies.
 * @queue: Queue for processes waiting for lock change-of-status.
 * @lock: Spinlock protecting some lock members.
 * @rw: Read-write lock counter. Protected by @lock.
 * @flags: Lock state. Protected by @lock.
 * @kill_takers: Boolean whether to kill takers of the lock.
 * @signal: Signal to send when kill_takers is true.
 */</doc>
<mbr r='ttm_lock::base' o='0' t='struct ttm_base_object'/>
<mbr r='ttm_lock::queue' o='640' t='wait_queue_head_t'/>
<mbr r='ttm_lock::lock' o='832' t='spinlock_t'/>
<mbr r='ttm_lock::rw' o='864' t='int32_t'/>
<mbr r='ttm_lock::flags' o='896' t='uint32_t'/>
<mbr r='ttm_lock::kill_takers' o='928' t='bool'/>
<mbr r='ttm_lock::signal' o='960' t='int'/>
<mbr r='ttm_lock::vt_holder' o='1024' t='struct ttm_object_file *'/>
