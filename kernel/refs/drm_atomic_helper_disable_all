<dec f='linux-4.18.y/include/drm/drm_atomic_helper.h' l='124' type='int drm_atomic_helper_disable_all(struct drm_device * dev, struct drm_modeset_acquire_ctx * ctx)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3000' ll='3004' type='int drm_atomic_helper_disable_all(struct drm_device * dev, struct drm_modeset_acquire_ctx * ctx)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3005' type='int drm_atomic_helper_disable_all(struct drm_device * , struct drm_modeset_acquire_ctx * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3005' c='drm_atomic_helper_disable_all'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3005' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3005' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3087' u='c' c='drm_atomic_helper_suspend'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2977'>/**
 * drm_atomic_helper_disable_all - disable all currently active outputs
 * @dev: DRM device
 * @ctx: lock acquisition context
 *
 * Loops through all connectors, finding those that aren&apos;t turned off and then
 * turns them off by setting their DPMS mode to OFF and deactivating the CRTC
 * that they are connected to.
 *
 * This is used for example in suspend/resume to disable all currently active
 * functions when suspending. If you just want to shut down everything at e.g.
 * driver unload, look at drm_atomic_helper_shutdown().
 *
 * Note that if callers haven&apos;t already acquired all modeset locks this might
 * return -EDEADLK, which must be handled by calling drm_modeset_backoff().
 *
 * Returns:
 * 0 on success or a negative error code on failure.
 *
 * See also:
 * drm_atomic_helper_suspend(), drm_atomic_helper_resume() and
 * drm_atomic_helper_shutdown().
 */</doc>
