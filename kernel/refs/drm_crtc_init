<dec f='linux-4.18.y/include/drm/drm_modeset_helper.h' l='34' type='int drm_crtc_init(struct drm_device * dev, struct drm_crtc * crtc, const struct drm_crtc_funcs * funcs)'/>
<use f='linux-4.18.y/drivers/gpu/drm/bochs/bochs_kms.c' l='137' u='c' c='bochs_crtc_init'/>
<use f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_mode.c' l='380' u='c' c='cirrus_crtc_init'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='152' ll='160' type='int drm_crtc_init(struct drm_device * dev, struct drm_crtc * crtc, const struct drm_crtc_funcs * funcs)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='161' type='int drm_crtc_init(struct drm_device * , struct drm_crtc * , const struct drm_crtc_funcs * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='161' c='drm_crtc_init'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='161' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='161' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='140'>/**
 * drm_crtc_init - Legacy CRTC initialization function
 * @dev: DRM device
 * @crtc: CRTC object to init
 * @funcs: callbacks for the new CRTC
 *
 * Initialize a CRTC object with a default helper-provided primary plane and no
 * cursor plane.
 *
 * Returns:
 * Zero on success, error code on failure.
 */</doc>
