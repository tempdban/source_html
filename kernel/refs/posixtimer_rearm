<dec f='linux-4.18.y/include/linux/posix-timers.h' l='129' type='void posixtimer_rearm(struct siginfo * info)'/>
<use f='linux-4.18.y/kernel/signal.c' l='646' u='c' c='dequeue_signal'/>
<def f='linux-4.18.y/kernel/time/posix-timers.c' l='310' ll='331' type='void posixtimer_rearm(struct siginfo * info)'/>
<doc f='linux-4.18.y/kernel/time/posix-timers.c' l='299'>/*
 * This function is exported for use by the signal deliver code.  It is
 * called just prior to the info block being released and passes that
 * block to us.  It&apos;s function is to update the overrun entry AND to
 * restart the timer.  It should only be called if the timer is to be
 * restarted (i.e. we have flagged this in the sys_private entry of the
 * info block).
 *
 * To protect against the timer going away while the interrupt is queued,
 * we require that the it_requeue_pending flag be set.
 */</doc>
