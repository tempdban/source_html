<def f='linux-4.14.y/include/net/sock.h' l='1495' ll='1500' type='void sock_owned_by_me(const struct sock * sk)'/>
<use f='linux-4.14.y/include/net/sock.h' l='1504' u='c' c='sock_owned_by_user'/>
<doc f='linux-4.14.y/include/net/sock.h' l='1481'>/* Used by processes to &quot;lock&quot; a socket state, so that
 * interrupts and bottom half handlers won&apos;t change it
 * from under us. It essentially blocks any incoming
 * packets, so that we won&apos;t get any new data or any
 * packets that change the state of the socket.
 *
 * While locked, BH processing will add new packets to
 * the backlog queue.  This queue is processed by the
 * owner of the socket lock right before it is released.
 *
 * Since ~2.3.5 it is also exclusive sleep lock serializing
 * accesses from user process context.
 */</doc>
<use f='linux-4.14.y/include/net/tcp.h' l='2080' u='c' c='tcp_call_bpf'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='3349' u='c' c='tcp_snd_una_update'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='3359' u='c' c='tcp_rcv_nxt_update'/>
<def f='linux-4.14.y/include/net/sock.h' l='1495' ll='1500' type='void sock_owned_by_me(const struct sock * sk)'/>
<use f='linux-4.14.y/include/net/sock.h' l='1504' u='c' c='sock_owned_by_user'/>
<doc f='linux-4.14.y/include/net/sock.h' l='1481'>/* Used by processes to &quot;lock&quot; a socket state, so that
 * interrupts and bottom half handlers won&apos;t change it
 * from under us. It essentially blocks any incoming
 * packets, so that we won&apos;t get any new data or any
 * packets that change the state of the socket.
 *
 * While locked, BH processing will add new packets to
 * the backlog queue.  This queue is processed by the
 * owner of the socket lock right before it is released.
 *
 * Since ~2.3.5 it is also exclusive sleep lock serializing
 * accesses from user process context.
 */</doc>
<use f='linux-4.14.y/include/net/tcp.h' l='2080' u='c' c='tcp_call_bpf'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='3349' u='c' c='tcp_snd_una_update'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='3359' u='c' c='tcp_rcv_nxt_update'/>
