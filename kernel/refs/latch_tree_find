<def f='linux-4.14.y/include/linux/rbtree_latch.h' l='198' ll='211' type='struct latch_tree_node * latch_tree_find(void * key, struct latch_tree_root * root, const struct latch_tree_ops * ops)'/>
<doc f='linux-4.14.y/include/linux/rbtree_latch.h' l='180'>/**
 * latch_tree_find() - find the node matching @key in the trees @root
 * @key: search key
 * @root: trees to search for @key
 * @ops: operators defining the node order
 *
 * Does a lockless lookup in the trees @root for the node matching @key.
 *
 * It is assumed that this is called while holding the appropriate RCU read
 * side lock.
 *
 * If the operators define a partial order on the elements (there are multiple
 * elements which have the same key value) it is undefined which of these
 * elements will be found. Nor is it possible to iterate the tree to find
 * further elements with the same key value.
 *
 * Returns: a pointer to the node matching @key or NULL.
 */</doc>
<use f='linux-4.14.y/kernel/bpf/core.c' l='417' u='c' c='bpf_prog_kallsyms_find'/>
<use f='linux-4.14.y/kernel/module.c' l='205' u='c' c='mod_find'/>
