<dec f='linux-4.14.y/include/scsi/scsi_transport_sas.h' l='214' type='void sas_port_add_phy(struct sas_port * , struct sas_phy * )'/>
<use f='linux-4.14.y/drivers/message/fusion/mptsas.c' l='3184' u='c' c='mptsas_probe_one_phy'/>
<use f='linux-4.14.y/drivers/scsi/libsas/sas_internal.h' l='176' u='c' c='sas_add_parent_port'/>
<use f='linux-4.14.y/drivers/scsi/libsas/sas_expander.c' l='778' u='c' c='sas_ex_get_linkrate'/>
<use f='linux-4.14.y/drivers/scsi/libsas/sas_expander.c' l='909' u='c' c='sas_ex_join_wide_port'/>
<use f='linux-4.14.y/drivers/scsi/libsas/sas_port.c' l='180' u='c' c='sas_form_port'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_transport.c' l='531' u='c' c='_transport_add_phy'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_transport.c' l='725' u='c' c='mpt3sas_transport_port_add'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='1080' ll='1103' type='void sas_port_add_phy(struct sas_port * port, struct sas_phy * phy)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='1104' type='void sas_port_add_phy(struct sas_port * , struct sas_phy * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='1104' c='sas_port_add_phy'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='1104' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='1104' u='a'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='1068'>/**
 * sas_port_add_phy - add another phy to a port to form a wide port
 * @port:	port to add the phy to
 * @phy:	phy to add
 *
 * When a port is initially created, it is empty (has no phys).  All
 * ports must have at least one phy to operated, and all wide ports
 * must have at least two.  The current code makes no difference
 * between ports and wide ports, but the only object that can be
 * connected to a remote device is a port, so ports must be formed on
 * all devices with phys if they&apos;re connected to anything.
 */</doc>
