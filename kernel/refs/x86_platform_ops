<def f='linux-4.14.y/arch/x86/include/asm/x86_init.h' l='245' ll='260'/>
<size>68</size>
<doc f='linux-4.14.y/arch/x86/include/asm/x86_init.h' l='224'>/**
 * struct x86_platform_ops - platform specific runtime functions
 * @calibrate_cpu:		calibrate CPU
 * @calibrate_tsc:		calibrate TSC, if different from CPU
 * @get_wallclock:		get time from HW clock like RTC etc.
 * @set_wallclock:		set time back to HW clock
 * @is_untracked_pat_range	exclude from PAT logic
 * @nmi_init			enable NMI on cpus
 * @save_sched_clock_state:	save state for sched_clock() on suspend
 * @restore_sched_clock_state:	restore state for sched_clock() on resume
 * @apic_post_init:		adjust apic if needed
 * @legacy:			legacy features
 * @set_legacy_features:	override legacy features. Use of this callback
 * 				is highly discouraged. You should only need
 * 				this if your hardware platform requires further
 * 				custom fine tuning far beyond what may be
 * 				possible in x86_early_init_platform_quirks() by
 * 				only using the current x86_hardware_subarch
 * 				semantics.
 * @hyper:			x86 hypervisor specific runtime callbacks
 */</doc>
<mbr r='x86_platform_ops::calibrate_cpu' o='0' t='unsigned long (*)(void)'/>
<mbr r='x86_platform_ops::calibrate_tsc' o='32' t='unsigned long (*)(void)'/>
<mbr r='x86_platform_ops::get_wallclock' o='64' t='void (*)(struct timespec *)'/>
<mbr r='x86_platform_ops::set_wallclock' o='96' t='int (*)(const struct timespec *)'/>
<mbr r='x86_platform_ops::iommu_shutdown' o='128' t='void (*)(void)'/>
<mbr r='x86_platform_ops::is_untracked_pat_range' o='160' t='bool (*)(u64, u64)'/>
<mbr r='x86_platform_ops::nmi_init' o='192' t='void (*)(void)'/>
<mbr r='x86_platform_ops::get_nmi_reason' o='224' t='unsigned char (*)(void)'/>
<mbr r='x86_platform_ops::save_sched_clock_state' o='256' t='void (*)(void)'/>
<mbr r='x86_platform_ops::restore_sched_clock_state' o='288' t='void (*)(void)'/>
<mbr r='x86_platform_ops::apic_post_init' o='320' t='void (*)(void)'/>
<mbr r='x86_platform_ops::legacy' o='352' t='struct x86_legacy_features'/>
<mbr r='x86_platform_ops::set_legacy_features' o='480' t='void (*)(void)'/>
<mbr r='x86_platform_ops::hyper' o='512' t='struct x86_hyper_runtime'/>
<def f='linux-4.14.y/arch/x86/include/asm/x86_init.h' l='245' ll='260'/>
<size>68</size>
<doc f='linux-4.14.y/arch/x86/include/asm/x86_init.h' l='224'>/**
 * struct x86_platform_ops - platform specific runtime functions
 * @calibrate_cpu:		calibrate CPU
 * @calibrate_tsc:		calibrate TSC, if different from CPU
 * @get_wallclock:		get time from HW clock like RTC etc.
 * @set_wallclock:		set time back to HW clock
 * @is_untracked_pat_range	exclude from PAT logic
 * @nmi_init			enable NMI on cpus
 * @save_sched_clock_state:	save state for sched_clock() on suspend
 * @restore_sched_clock_state:	restore state for sched_clock() on resume
 * @apic_post_init:		adjust apic if needed
 * @legacy:			legacy features
 * @set_legacy_features:	override legacy features. Use of this callback
 * 				is highly discouraged. You should only need
 * 				this if your hardware platform requires further
 * 				custom fine tuning far beyond what may be
 * 				possible in x86_early_init_platform_quirks() by
 * 				only using the current x86_hardware_subarch
 * 				semantics.
 * @hyper:			x86 hypervisor specific runtime callbacks
 */</doc>
<mbr r='x86_platform_ops::calibrate_cpu' o='0' t='unsigned long (*)(void)'/>
<mbr r='x86_platform_ops::calibrate_tsc' o='32' t='unsigned long (*)(void)'/>
<mbr r='x86_platform_ops::get_wallclock' o='64' t='void (*)(struct timespec *)'/>
<mbr r='x86_platform_ops::set_wallclock' o='96' t='int (*)(const struct timespec *)'/>
<mbr r='x86_platform_ops::iommu_shutdown' o='128' t='void (*)(void)'/>
<mbr r='x86_platform_ops::is_untracked_pat_range' o='160' t='bool (*)(u64, u64)'/>
<mbr r='x86_platform_ops::nmi_init' o='192' t='void (*)(void)'/>
<mbr r='x86_platform_ops::get_nmi_reason' o='224' t='unsigned char (*)(void)'/>
<mbr r='x86_platform_ops::save_sched_clock_state' o='256' t='void (*)(void)'/>
<mbr r='x86_platform_ops::restore_sched_clock_state' o='288' t='void (*)(void)'/>
<mbr r='x86_platform_ops::apic_post_init' o='320' t='void (*)(void)'/>
<mbr r='x86_platform_ops::legacy' o='352' t='struct x86_legacy_features'/>
<mbr r='x86_platform_ops::set_legacy_features' o='480' t='void (*)(void)'/>
<mbr r='x86_platform_ops::hyper' o='512' t='struct x86_hyper_runtime'/>
