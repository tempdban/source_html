<def f='linux-4.14.y/arch/x86/include/asm/checksum_64.h' l='87' ll='99' type='__wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, __u32 len, __u8 proto, __wsum sum)'/>
<use f='linux-4.14.y/arch/x86/include/asm/checksum_64.h' l='117' u='c' c='csum_tcpudp_magic'/>
<doc f='linux-4.14.y/arch/x86/include/asm/checksum_64.h' l='76'>/**
 * csum_tcpup_nofold - Compute an IPv4 pseudo header checksum.
 * @saddr: source address
 * @daddr: destination address
 * @len: length of packet
 * @proto: ip protocol of packet
 * @sum: initial sum to be added in (32bit unfolded)
 *
 * Returns the pseudo header checksum the input data. Result is
 * 32bit unfolded.
 */</doc>
<use f='linux-4.14.y/include/net/ip.h' l='421' u='c' c='inet_compute_pseudo'/>
<use f='linux-4.14.y/include/net/ip.h' l='443' u='c' c='inet_gro_compute_pseudo'/>
<use f='linux-4.14.y/net/ipv4/netfilter.c' l='149' u='c' c='nf_ip_checksum'/>
<use f='linux-4.14.y/net/ipv4/netfilter.c' l='171' u='c' c='nf_ip_checksum_partial'/>
<use f='linux-4.14.y/net/ipv4/tcp_ipv4.c' l='694' u='c' c='tcp_v4_send_reset'/>
<use f='linux-4.14.y/net/ipv4/tcp_ipv4.c' l='790' u='c' c='tcp_v4_send_ack'/>
