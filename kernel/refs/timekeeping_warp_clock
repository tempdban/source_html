<dec f='linux-4.18.y/kernel/time/timekeeping.h' l='14' type='void timekeeping_warp_clock()'/>
<use f='linux-4.18.y/kernel/time/time.c' l='194' u='c' c='do_sys_settimeofday64'/>
<def f='linux-4.18.y/kernel/time/timekeeping.c' l='1332' ll='1342' type='void timekeeping_warp_clock()'/>
<doc f='linux-4.18.y/kernel/time/timekeeping.c' l='1316'>/*
 * Adjust the time obtained from the CMOS to be UTC time instead of
 * local time.
 *
 * This is ugly, but preferable to the alternatives.  Otherwise we
 * would either need to write a program to do it in /etc/rc (and risk
 * confusion if the program gets run more than once; it would also be
 * hard to make the program warp the clock precisely n hours)  or
 * compile in the timezone information into the kernel.  Bad, bad....
 *
 *						- TYT, 1992-01-01
 *
 * The best thing to do is to keep the CMOS clock in universal time (UTC)
 * as real UNIX machines always do it. This avoids all headaches about
 * daylight saving times and warping kernel clocks.
 */</doc>
