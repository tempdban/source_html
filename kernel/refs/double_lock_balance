<def f='linux-4.14.y/kernel/sched/sched.h' l='1837' ll='1846' type='int double_lock_balance(struct rq * this_rq, struct rq * busiest)'/>
<doc f='linux-4.14.y/kernel/sched/sched.h' l='1834'>/*
 * double_lock_balance - lock the busiest runqueue, this_rq is locked already.
 */</doc>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='523' u='c' c='dl_task_offline_migration'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='1900' u='c' c='find_lock_later_rq'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='2076' u='c' c='pull_dl_task'/>
<use f='linux-4.14.y/kernel/sched/rt.c' l='1724' u='c' c='find_lock_lowest_rq'/>
<use f='linux-4.14.y/kernel/sched/rt.c' l='2090' u='c' c='pull_rt_task'/>
<def f='linux-4.14.y/kernel/sched/sched.h' l='1837' ll='1846' type='int double_lock_balance(struct rq * this_rq, struct rq * busiest)'/>
<doc f='linux-4.14.y/kernel/sched/sched.h' l='1834'>/*
 * double_lock_balance - lock the busiest runqueue, this_rq is locked already.
 */</doc>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='523' u='c' c='dl_task_offline_migration'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='1900' u='c' c='find_lock_later_rq'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='2076' u='c' c='pull_dl_task'/>
<use f='linux-4.14.y/kernel/sched/rt.c' l='1724' u='c' c='find_lock_lowest_rq'/>
<use f='linux-4.14.y/kernel/sched/rt.c' l='2090' u='c' c='pull_rt_task'/>
