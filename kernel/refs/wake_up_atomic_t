<dec f='linux-4.14.y/include/linux/wait_bit.h' l='33' type='void wake_up_atomic_t(atomic_t * p)'/>
<def f='linux-4.14.y/kernel/sched/wait_bit.c' l='232' ll='235' type='void wake_up_atomic_t(atomic_t * p)'/>
<dec f='linux-4.14.y/kernel/sched/wait_bit.c' l='236' type='void wake_up_atomic_t(atomic_t * )'/>
<use f='linux-4.14.y/kernel/sched/wait_bit.c' l='236' c='wake_up_atomic_t'/>
<use f='linux-4.14.y/kernel/sched/wait_bit.c' l='236' u='a'/>
<use f='linux-4.14.y/kernel/sched/wait_bit.c' l='236' u='a'/>
<doc f='linux-4.14.y/kernel/sched/wait_bit.c' l='223'>/**
 * wake_up_atomic_t - Wake up a waiter on a atomic_t
 * @p: The atomic_t being waited on, a kernel virtual address
 *
 * Wake up anyone waiting for the atomic_t to go to zero.
 *
 * Abuse the bit-waker function and its waitqueue hash table set (the atomic_t
 * check is done by the waiter&apos;s wake function, not the by the waker itself).
 */</doc>
