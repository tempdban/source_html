<dec f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='1078' type='int (*)(struct drm_plane *, struct drm_plane_state *)'/>
<offset>128</offset>
<doc f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='1042'>/**
	 * @atomic_check:
	 *
	 * Drivers should check plane specific constraints in this hook.
	 *
	 * When using drm_atomic_helper_check_planes() plane&apos;s @atomic_check
	 * hooks are called before the ones for CRTCs, which allows drivers to
	 * request shared resources that the CRTC controls here. For more
	 * complicated dependencies the driver can call the provided check helpers
	 * multiple times until the computed state has a final configuration and
	 * everything has been checked.
	 *
	 * This function is also allowed to inspect any other object&apos;s state and
	 * can add more state objects to the atomic commit if needed. Care must
	 * be taken though to ensure that state check and compute functions for
	 * these added states are all called, and derived state in other objects
	 * all updated. Again the recommendation is to just call check helpers
	 * until a maximal configuration is reached.
	 *
	 * This callback is used by the atomic modeset helpers and by the
	 * transitional plane helpers, but it is optional.
	 *
	 * NOTE:
	 *
	 * This function is called in the check phase of an atomic update. The
	 * driver is not allowed to change anything outside of the free-standing
	 * state objects passed-in or assembled in the overall &amp;drm_atomic_state
	 * update tracking structure.
	 *
	 * RETURNS:
	 *
	 * 0 on success, -EINVAL if the state or the transition can&apos;t be
	 * supported, -ENOMEM on memory allocation failure and -EDEADLK if an
	 * attempt to obtain another state object ran into a &amp;drm_modeset_lock
	 * deadlock.
	 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='829' u='r' c='drm_atomic_helper_check_planes'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='832' u='r' c='drm_atomic_helper_check_planes'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane_helper.c' l='359' u='r' c='drm_plane_helper_commit'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane_helper.c' l='360' u='r' c='drm_plane_helper_commit'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_simple_kms_helper.c' l='196' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_display.c' l='844' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_plane.c' l='266' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_plane.c' l='271' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='333' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='341' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='591' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='599' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1372' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1380' u='w'/>
