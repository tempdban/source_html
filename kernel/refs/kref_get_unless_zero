<def f='linux-4.18.y/include/linux/kref.h' l='114' ll='117' type='int kref_get_unless_zero(struct kref * kref)'/>
<doc f='linux-4.18.y/include/linux/kref.h' l='98'>/**
 * kref_get_unless_zero - Increment refcount for object unless it is zero.
 * @kref: object.
 *
 * Return non-zero if the increment succeeded. Otherwise return 0.
 *
 * This function is intended to simplify locking around refcounting for
 * objects that can be looked up from a lookup structure, and which are
 * removed from that lookup structure in the object destructor.
 * Operations on such objects require at least a read lock around
 * lookup + kref_get, and a write lock around kref_put + remove from lookup
 * structure. Furthermore, RCU implementations become extremely tricky.
 * With a lookup followed by a kref_get_unless_zero *with return value check*
 * locking in the kref_put path can be deferred to the actual removal from
 * the lookup structure and RCU lookups become trivial.
 */</doc>
<use f='linux-4.18.y/include/linux/tty.h' l='592' u='c' c='tty_port_get'/>
<use f='linux-4.18.y/block/bsg-lib.c' l='144' u='c' c='bsg_job_get'/>
<use f='linux-4.18.y/include/linux/dma-fence.h' l='290' u='c' c='dma_fence_get_rcu'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='606' u='c' c='drm_connector_list_iter_next'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1744' u='c' c='drm_mode_get_tile_group'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='1026' u='c' c='drm_gem_mmap'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_object.c' l='144' u='c' c='__drm_mode_object_find'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_bo_vm.c' l='413' u='c' c='ttm_bo_vm_lookup'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='243' u='c' c='ttm_base_object_lookup'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='265' u='c' c='ttm_base_object_lookup_for_ref'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='347' u='c' c='ttm_ref_object_add'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='70' u='c' c='vmw_resource_reference_unless_doomed'/>
<use f='linux-4.18.y/drivers/scsi/scsi_scan.c' l='482' u='c' c='scsi_alloc_target'/>
<use f='linux-4.18.y/fs/configfs/item.c' l='143' u='c' c='config_item_get_unless_zero'/>
<use f='linux-4.18.y/lib/klist.c' l='286' u='c' c='klist_iter_init_node'/>
<use f='linux-4.18.y/lib/kobject.c' l='604' u='c' c='kobject_get_unless_zero'/>
<use f='linux-4.18.y/security/apparmor/include/label.h' l='378' u='c' c='__aa_get_label'/>
<use f='linux-4.18.y/security/apparmor/include/label.h' l='407' u='c' c='aa_get_label_rcu'/>
<use f='linux-4.18.y/security/apparmor/include/policy.h' l='252' u='c' c='aa_get_profile_not0'/>
<use f='linux-4.18.y/security/apparmor/include/policy.h' l='272' u='c' c='aa_get_profile_rcu'/>
<use f='linux-4.18.y/security/apparmor/include/policy_unpack.h' l='91' u='c' c='__aa_get_loaddata'/>
