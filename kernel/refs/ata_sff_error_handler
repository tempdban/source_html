<dec f='linux-4.14.y/include/linux/libata.h' l='1863' type='void ata_sff_error_handler(struct ata_port * ap)'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='59'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='59'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2170' ll='2202' type='void ata_sff_error_handler(struct ata_port * ap)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' type='void ata_sff_error_handler(struct ata_port * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' c='ata_sff_error_handler'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2931' u='c' c='ata_bmdma_error_handler'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2158'>/**
 *	ata_sff_error_handler - Stock error handler for SFF controller
 *	@ap: port to handle error for
 *
 *	Stock error handler for SFF controller.  It can handle both
 *	PATA and SATA controllers.  Many controllers should be able to
 *	use this EH as-is or with some added handling before and
 *	after.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 */</doc>
<dec f='linux-4.14.y/include/linux/libata.h' l='1863' type='void ata_sff_error_handler(struct ata_port * ap)'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='59'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='59'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2170' ll='2202' type='void ata_sff_error_handler(struct ata_port * ap)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' type='void ata_sff_error_handler(struct ata_port * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' c='ata_sff_error_handler'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2203' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2931' u='c' c='ata_bmdma_error_handler'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2158'>/**
 *	ata_sff_error_handler - Stock error handler for SFF controller
 *	@ap: port to handle error for
 *
 *	Stock error handler for SFF controller.  It can handle both
 *	PATA and SATA controllers.  Many controllers should be able to
 *	use this EH as-is or with some added handling before and
 *	after.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 */</doc>
