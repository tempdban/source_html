<dec f='linux-4.14.y/include/linux/clk.h' l='391' type='void clk_bulk_disable(int num_clks, const struct clk_bulk_data * clks)'/>
<use f='linux-4.14.y/include/linux/clk.h' l='678' u='c' c='clk_bulk_disable_unprepare'/>
<doc f='linux-4.14.y/include/linux/clk.h' l='375'>/**
 * clk_bulk_disable - inform the system when the set of clks is no
 *		      longer required.
 * @num_clks: the number of clk_bulk_data
 * @clks: the clk_bulk_data table of consumer
 *
 * Inform the system that a set of clks is no longer required by
 * a driver and may be shut down.
 *
 * May be called from atomic contexts.
 *
 * Implementation detail: if the set of clks is shared between
 * multiple drivers, clk_bulk_enable() calls must be balanced by the
 * same number of clk_bulk_disable() calls for the clock source to be
 * disabled.
 */</doc>
<def f='linux-4.14.y/drivers/clk/clk-bulk.c' l='121' ll='126' type='void clk_bulk_disable(int num_clks, const struct clk_bulk_data * clks)'/>
<dec f='linux-4.14.y/drivers/clk/clk-bulk.c' l='127' type='void clk_bulk_disable(int , const struct clk_bulk_data * )'/>
<use f='linux-4.14.y/drivers/clk/clk-bulk.c' l='127' c='clk_bulk_disable'/>
<use f='linux-4.14.y/drivers/clk/clk-bulk.c' l='127' u='a'/>
<use f='linux-4.14.y/drivers/clk/clk-bulk.c' l='127' u='a'/>
<use f='linux-4.14.y/drivers/clk/clk-bulk.c' l='154' u='c' c='clk_bulk_enable'/>
<doc f='linux-4.14.y/drivers/clk/clk-bulk.c' l='112'>/**
 * clk_bulk_disable - gate a set of clocks
 * @num_clks: the number of clk_bulk_data
 * @clks: the clk_bulk_data table being gated
 *
 * clk_bulk_disable must not sleep, which differentiates it from
 * clk_bulk_unprepare. clk_bulk_disable must be called before
 * clk_bulk_unprepare.
 */</doc>
