<dec f='linux-4.14.y/include/net/sock.h' l='1308' type='void __sk_mem_reduce_allocated(struct sock * sk, int amount)'/>
<def f='linux-4.14.y/net/core/sock.c' l='2421' ll='2431' type='void __sk_mem_reduce_allocated(struct sock * sk, int amount)'/>
<dec f='linux-4.14.y/net/core/sock.c' l='2432' type='void __sk_mem_reduce_allocated(struct sock * , int )'/>
<use f='linux-4.14.y/net/core/sock.c' l='2432' c='__sk_mem_reduce_allocated'/>
<use f='linux-4.14.y/net/core/sock.c' l='2432' u='a'/>
<use f='linux-4.14.y/net/core/sock.c' l='2432' u='a'/>
<use f='linux-4.14.y/net/core/sock.c' l='2443' u='c' c='__sk_mem_reclaim'/>
<doc f='linux-4.14.y/net/core/sock.c' l='2414'>/**
 *	__sk_mem_reduce_allocated - reclaim memory_allocated
 *	@sk: socket
 *	@amount: number of quanta
 *
 *	Similar to __sk_mem_reclaim(), but does not update sk_forward_alloc
 */</doc>
<use f='linux-4.14.y/net/ipv4/udp.c' l='1236' u='c' c='udp_rmem_release'/>
