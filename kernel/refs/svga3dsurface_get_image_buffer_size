<def f='linux-4.14.y/drivers/gpu/drm/vmwgfx/device_include/svga3d_surfacedefs.h' l='1043' ll='1068' type='u32 svga3dsurface_get_image_buffer_size(const struct svga3d_surface_desc * desc, const struct drm_vmw_size * size, u32 pitch)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/device_include/svga3d_surfacedefs.h' l='1083' u='c' c='svga3dsurface_get_serialized_size'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/device_include/svga3d_surfacedefs.h' l='1138' u='c' c='svga3dsurface_get_image_offset'/>
<doc f='linux-4.14.y/drivers/gpu/drm/vmwgfx/device_include/svga3d_surfacedefs.h' l='1021'>/*
 *-----------------------------------------------------------------------------
 *
 * svga3dsurface_get_image_buffer_size --
 *
 *      Return the number of bytes of buffer space required to store
 *      one image of a surface, optionally using the specified pitch.
 *
 *      If pitch is zero, it is assumed that rows are tightly packed.
 *
 *      This function is overflow-safe. If the result would have
 *      overflowed, instead we return MAX_UINT32.
 *
 * Results:
 *      Byte count.
 *
 * Side effects:
 *      None.
 *
 *-----------------------------------------------------------------------------
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='294' u='c' c='vmw_surface_dma_encode'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='799' u='c' c='vmw_surface_define_ioctl'/>
