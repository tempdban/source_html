<dec f='linux-4.18.y/include/linux/async_tx.h' l='116' type='struct dma_chan * __async_tx_find_channel(struct async_submit_ctl * submit, enum dma_transaction_type tx_type)'/>
<use f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='49' macro='1' u='c'/>
<use f='linux-4.18.y/crypto/async_tx/async_pq.c' l='181' macro='1' u='c'/>
<use f='linux-4.18.y/crypto/async_tx/async_pq.c' l='275' macro='1' u='c'/>
<use f='linux-4.18.y/crypto/async_tx/async_raid6_recov.c' l='35' macro='1' u='c'/>
<use f='linux-4.18.y/crypto/async_tx/async_raid6_recov.c' l='100' macro='1' u='c'/>
<def f='linux-4.18.y/crypto/async_tx/async_tx.c' l='55' ll='66' type='struct dma_chan * __async_tx_find_channel(struct async_submit_ctl * submit, enum dma_transaction_type tx_type)'/>
<dec f='linux-4.18.y/crypto/async_tx/async_tx.c' l='67' type='struct dma_chan * __async_tx_find_channel(struct async_submit_ctl * , enum dma_transaction_type )'/>
<use f='linux-4.18.y/crypto/async_tx/async_tx.c' l='67' c='__async_tx_find_channel'/>
<use f='linux-4.18.y/crypto/async_tx/async_tx.c' l='67' u='a'/>
<use f='linux-4.18.y/crypto/async_tx/async_tx.c' l='67' u='a'/>
<doc f='linux-4.18.y/crypto/async_tx/async_tx.c' l='49'>/**
 * __async_tx_find_channel - find a channel to carry out the operation or let
 *	the transaction execute synchronously
 * @submit: transaction dependency and submission modifiers
 * @tx_type: transaction type
 */</doc>
<use f='linux-4.18.y/crypto/async_tx/async_xor.c' l='176' macro='1' u='c'/>
<use f='linux-4.18.y/crypto/async_tx/async_xor.c' l='248' macro='1' u='c'/>
