<dec f='linux-4.14.y/include/linux/percpu-refcount.h' l='103' type='void percpu_ref_switch_to_atomic_sync(struct percpu_ref * ref)'/>
<use f='linux-4.14.y/drivers/md/md.c' l='2345' u='c' c='set_in_sync'/>
<def f='linux-4.14.y/lib/percpu-refcount.c' l='273' ll='277' type='void percpu_ref_switch_to_atomic_sync(struct percpu_ref * ref)'/>
<dec f='linux-4.14.y/lib/percpu-refcount.c' l='278' type='void percpu_ref_switch_to_atomic_sync(struct percpu_ref * )'/>
<use f='linux-4.14.y/lib/percpu-refcount.c' l='278' c='percpu_ref_switch_to_atomic_sync'/>
<use f='linux-4.14.y/lib/percpu-refcount.c' l='278' u='a'/>
<use f='linux-4.14.y/lib/percpu-refcount.c' l='278' u='a'/>
<doc f='linux-4.14.y/lib/percpu-refcount.c' l='265'>/**
 * percpu_ref_switch_to_atomic_sync - switch a percpu_ref to atomic mode
 * @ref: percpu_ref to switch to atomic mode
 *
 * Schedule switching the ref to atomic mode, and wait for the
 * switch to complete.  Caller must ensure that no other thread
 * will switch back to percpu mode.
 */</doc>
<dec f='linux-4.14.y/include/linux/percpu-refcount.h' l='103' type='void percpu_ref_switch_to_atomic_sync(struct percpu_ref * ref)'/>
<use f='linux-4.14.y/drivers/md/md.c' l='2345' u='c' c='set_in_sync'/>
<def f='linux-4.14.y/lib/percpu-refcount.c' l='273' ll='277' type='void percpu_ref_switch_to_atomic_sync(struct percpu_ref * ref)'/>
<dec f='linux-4.14.y/lib/percpu-refcount.c' l='278' type='void percpu_ref_switch_to_atomic_sync(struct percpu_ref * )'/>
<use f='linux-4.14.y/lib/percpu-refcount.c' l='278' c='percpu_ref_switch_to_atomic_sync'/>
<use f='linux-4.14.y/lib/percpu-refcount.c' l='278' u='a'/>
<use f='linux-4.14.y/lib/percpu-refcount.c' l='278' u='a'/>
<doc f='linux-4.14.y/lib/percpu-refcount.c' l='265'>/**
 * percpu_ref_switch_to_atomic_sync - switch a percpu_ref to atomic mode
 * @ref: percpu_ref to switch to atomic mode
 *
 * Schedule switching the ref to atomic mode, and wait for the
 * switch to complete.  Caller must ensure that no other thread
 * will switch back to percpu mode.
 */</doc>
