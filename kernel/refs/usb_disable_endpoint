<dec f='linux-4.14.y/drivers/usb/core/usb.h' l='27' type='void usb_disable_endpoint(struct usb_device * dev, unsigned int epaddr, bool reset_hardware)'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='4259' u='c' c='usb_ep0_reinit'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='4260' u='c' c='usb_ep0_reinit'/>
<def f='linux-4.14.y/drivers/usb/core/message.c' l='1065' ll='1089' type='void usb_disable_endpoint(struct usb_device * dev, unsigned int epaddr, bool reset_hardware)'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1131' u='c' c='usb_disable_interface'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1200' u='c' c='usb_disable_device'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1201' u='c' c='usb_disable_device'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1210' u='c' c='usb_disable_device'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1211' u='c' c='usb_disable_device'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1460' u='c' c='usb_reset_configuration'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='1461' u='c' c='usb_reset_configuration'/>
<doc f='linux-4.14.y/drivers/usb/core/message.c' l='1053'>/**
 * usb_disable_endpoint -- Disable an endpoint by address
 * @dev: the device whose endpoint is being disabled
 * @epaddr: the endpoint&apos;s address.  Endpoint number for output,
 *	endpoint number + USB_DIR_IN for input
 * @reset_hardware: flag to erase any endpoint state stored in the
 *	controller hardware
 *
 * Disables the endpoint for URB submission and nukes all pending URBs.
 * If @reset_hardware is set then also deallocates hcd/hardware state
 * for the endpoint.
 */</doc>
