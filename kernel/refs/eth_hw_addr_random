<def f='linux-4.18.y/include/linux/etherdevice.h' l='267' ll='271' type='void eth_hw_addr_random(struct net_device * dev)'/>
<doc f='linux-4.18.y/include/linux/etherdevice.h' l='258'>/**
 * eth_hw_addr_random - Generate software assigned random Ethernet and
 * set device flag
 * @dev: pointer to net_device structure
 *
 * Generate a random Ethernet address (MAC) to be used by a net device
 * and set addr_assign_type so the state can be read by sysfs and be
 * used by userspace.
 */</doc>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='1832' u='c' c='bond_enslave'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='1947' u='c' c='__bond_release_one'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='4749' u='c' c='bond_init'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_main.c' l='3535' u='c' c='i40evf_init_task'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igbvf/netdev.c' l='2853' u='c' c='igbvf_probe'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='3039' u='c' c='ixgbevf_sw_init'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='1381' u='c' c='macvlan_common_newlink'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='1425' u='c' c='tun_net_init'/>
<use f='linux-4.18.y/drivers/net/veth.c' l='408' u='c' c='veth_newlink'/>
<use f='linux-4.18.y/drivers/net/veth.c' l='436' u='c' c='veth_newlink'/>
<use f='linux-4.18.y/drivers/net/virtio_net.c' l='2862' u='c' c='virtnet_probe'/>
<use f='linux-4.18.y/net/bridge/br_device.c' l='410' u='c' c='br_dev_setup'/>
<use f='linux-4.18.y/net/openvswitch/vport-internal_dev.c' l='165' u='c' c='do_setup'/>
