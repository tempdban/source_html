<dec f='linux-4.18.y/include/drm/drm_atomic_helper.h' l='72' type='void drm_atomic_helper_update_legacy_modeset_state(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1024' ll='1087' type='void drm_atomic_helper_update_legacy_modeset_state(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1088' type='void drm_atomic_helper_update_legacy_modeset_state(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1088' c='drm_atomic_helper_update_legacy_modeset_state'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1088' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1088' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1169' u='c' c='drm_atomic_helper_commit_modeset_disables'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1005'>/**
 * drm_atomic_helper_update_legacy_modeset_state - update legacy modeset state
 * @dev: DRM device
 * @old_state: atomic state object with old state structures
 *
 * This function updates all the various legacy modeset state pointers in
 * connectors, encoders and crtcs. It also updates the timestamping constants
 * used for precise vblank timestamps by calling
 * drm_calc_timestamping_constants().
 *
 * Drivers can use this for building their own atomic commit if they don&apos;t have
 * a pure helper-based modeset implementation.
 *
 * Since these updates are not synchronized with lockings, only code paths
 * called from &amp;drm_mode_config_helper_funcs.atomic_commit_tail can look at the
 * legacy state filled out by this helper. Defacto this means this helper and
 * the legacy state pointers are only really useful for transitioning an
 * existing driver to the atomic world.
 */</doc>
