<def f='linux-4.18.y/include/linux/etherdevice.h' l='348' ll='362' type='bool ether_addr_equal_64bits(const u8 * addr1, const u8 * addr2)'/>
<use f='linux-4.18.y/include/linux/etherdevice.h' l='469' u='c' c='is_etherdev_addr'/>
<doc f='linux-4.18.y/include/linux/etherdevice.h' l='334'>/**
 * ether_addr_equal_64bits - Compare two Ethernet addresses
 * @addr1: Pointer to an array of 8 bytes
 * @addr2: Pointer to an other array of 8 bytes
 *
 * Compare two Ethernet addresses, returns true if equal, false otherwise.
 *
 * The function doesn&apos;t need any conditional branches and possibly uses
 * word memory accesses on CPU allowing cheap unaligned memory reads.
 * arrays = { byte1, byte2, byte3, byte4, byte5, byte6, pad1, pad2 }
 *
 * Please note that alignment of addr1 &amp; addr2 are only guaranteed to be 16 bits.
 */</doc>
<use f='linux-4.18.y/include/net/bonding.h' l='659' u='c' c='bond_slave_has_mac'/>
<use f='linux-4.18.y/include/net/bonding.h' l='673' u='c' c='bond_slave_has_mac_rcu'/>
<use f='linux-4.18.y/include/net/bonding.h' l='687' u='c' c='bond_slave_has_mac_rx'/>
<use f='linux-4.18.y/include/net/bonding.h' l='694' u='c' c='bond_slave_has_mac_rx'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='__choose_matched'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='__update_selected'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='__update_default_selected'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='__update_ntt'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='ad_rx_machine'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='ad_port_selection_logic'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='ad_port_selection_logic'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='ad_disable_collecting_distributing'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='bond_3ad_initialize'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_3ad.c' l='106' u='c' c='bond_3ad_lacpdu_recv'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='282' u='c' c='rlb_update_entry_from_arp'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='560' u='c' c='rlb_req_update_subnet_clients'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='847' u='c' c='rlb_purge_src_ip'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='1123' u='c' c='alb_change_hw_addr_on_detach'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='1125' u='c' c='alb_change_hw_addr_on_detach'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='1175' u='c' c='alb_handle_addr_collision_on_attach'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='1199' u='c' c='alb_handle_addr_collision_on_attach'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_alb.c' l='1433' u='c' c='bond_alb_xmit'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='1830' u='c' c='bond_enslave'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='1913' u='c' c='__bond_release_one'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='131' u='c' c='macvlan_hash_lookup'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='146' u='c' c='macvlan_hash_lookup_source'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='218' u='c' c='macvlan_addr_busy'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='238' u='c' c='macvlan_broadcast_one'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='417' u='c' c='macvlan_forward_source_one'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='433' u='c' c='macvlan_forward_source'/>
<use f='linux-4.18.y/net/ethernet/eth.c' l='169' u='c' c='eth_type_trans'/>
<use f='linux-4.18.y/net/ethernet/eth.c' l='174' u='c' c='eth_type_trans'/>
