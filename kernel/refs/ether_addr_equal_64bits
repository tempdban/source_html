<def f='linux-4.14.y/include/linux/etherdevice.h' l='347' ll='361' type='bool ether_addr_equal_64bits(const u8 * addr1, const u8 * addr2)'/>
<use f='linux-4.14.y/include/linux/etherdevice.h' l='468' u='c' c='is_etherdev_addr'/>
<doc f='linux-4.14.y/include/linux/etherdevice.h' l='333'>/**
 * ether_addr_equal_64bits - Compare two Ethernet addresses
 * @addr1: Pointer to an array of 8 bytes
 * @addr2: Pointer to an other array of 8 bytes
 *
 * Compare two Ethernet addresses, returns true if equal, false otherwise.
 *
 * The function doesn&apos;t need any conditional branches and possibly uses
 * word memory accesses on CPU allowing cheap unaligned memory reads.
 * arrays = { byte1, byte2, byte3, byte4, byte5, byte6, pad1, pad2 }
 *
 * Please note that alignment of addr1 &amp; addr2 are only guaranteed to be 16 bits.
 */</doc>
<use f='linux-4.14.y/net/ethernet/eth.c' l='169' u='c' c='eth_type_trans'/>
<use f='linux-4.14.y/net/ethernet/eth.c' l='174' u='c' c='eth_type_trans'/>
