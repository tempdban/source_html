<dec f='linux-4.14.y/include/drm/drm_gem_framebuffer_helper.h' l='32' type='struct drm_framebuffer * drm_gem_fbdev_fb_create(struct drm_device * dev, struct drm_fb_helper_surface_size * sizes, unsigned int pitch_align, struct drm_gem_object * obj, const struct drm_framebuffer_funcs * funcs)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='261' ll='282' type='struct drm_framebuffer * drm_gem_fbdev_fb_create(struct drm_device * dev, struct drm_fb_helper_surface_size * sizes, unsigned int pitch_align, struct drm_gem_object * obj, const struct drm_framebuffer_funcs * funcs)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='283' type='struct drm_framebuffer * drm_gem_fbdev_fb_create(struct drm_device * , struct drm_fb_helper_surface_size * , unsigned int , struct drm_gem_object * , const struct drm_framebuffer_funcs * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='283' c='drm_gem_fbdev_fb_create'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='283' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='283' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='248'>/**
 * drm_gem_fbdev_fb_create - Create a drm_framebuffer for fbdev emulation
 * @dev: DRM device
 * @sizes: fbdev size description
 * @pitch_align: optional pitch alignment
 * @obj: GEM object backing the framebuffer
 * @funcs: vtable to be used for the new framebuffer object
 *
 * This function creates a framebuffer for use with fbdev emulation.
 *
 * Returns:
 * Pointer to a drm_framebuffer on success or an error pointer on failure.
 */</doc>
