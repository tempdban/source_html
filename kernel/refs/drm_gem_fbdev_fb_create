<dec f='linux-4.18.y/include/drm/drm_gem_framebuffer_helper.h' l='35' type='struct drm_framebuffer * drm_gem_fbdev_fb_create(struct drm_device * dev, struct drm_fb_helper_surface_size * sizes, unsigned int pitch_align, struct drm_gem_object * obj, const struct drm_framebuffer_funcs * funcs)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='303' ll='327' type='struct drm_framebuffer * drm_gem_fbdev_fb_create(struct drm_device * dev, struct drm_fb_helper_surface_size * sizes, unsigned int pitch_align, struct drm_gem_object * obj, const struct drm_framebuffer_funcs * funcs)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='328' type='struct drm_framebuffer * drm_gem_fbdev_fb_create(struct drm_device * , struct drm_fb_helper_surface_size * , unsigned int , struct drm_gem_object * , const struct drm_framebuffer_funcs * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='328' c='drm_gem_fbdev_fb_create'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='328' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='328' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='287'>/**
 * drm_gem_fbdev_fb_create - Create a GEM backed &amp;drm_framebuffer for fbdev
 *                           emulation
 * @dev: DRM device
 * @sizes: fbdev size description
 * @pitch_align: Optional pitch alignment
 * @obj: GEM object backing the framebuffer
 * @funcs: Optional vtable to be used for the new framebuffer object when the
 *         dirty callback is needed.
 *
 * This function creates a framebuffer from a &amp;drm_fb_helper_surface_size
 * description for use in the &amp;drm_fb_helper_funcs.fb_probe callback.
 *
 * Returns:
 * Pointer to a &amp;drm_framebuffer on success or an error pointer on failure.
 */</doc>
