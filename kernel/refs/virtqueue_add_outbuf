<dec f='linux-4.14.y/include/linux/virtio.h' l='38' type='int virtqueue_add_outbuf(struct virtqueue * vq, struct scatterlist * sg, unsigned int num, void * data, gfp_t gfp)'/>
<use f='linux-4.14.y/drivers/char/virtio_console.c' l='581' u='c' c='__send_control_msg'/>
<use f='linux-4.14.y/drivers/char/virtio_console.c' l='633' u='c' c='__send_to_port'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='410' u='c' c='virtnet_xdp_xmit'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1262' u='c' c='xmit_skb'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='122' u='c' c='tell_host'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='302' u='c' c='stats_handle_request'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='435' u='c' c='init_vqs'/>
<use f='linux-4.14.y/drivers/virtio/virtio_input.c' l='76' u='c' c='virtinput_send_status'/>
<def f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='485' ll='491' type='int virtqueue_add_outbuf(struct virtqueue * vq, struct scatterlist * sg, unsigned int num, void * data, gfp_t gfp)'/>
<dec f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' type='int virtqueue_add_outbuf(struct virtqueue * , struct scatterlist * , unsigned int , void * , gfp_t )'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' c='virtqueue_add_outbuf'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' u='a'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' u='a'/>
<doc f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='472'>/**
 * virtqueue_add_outbuf - expose output buffers to other end
 * @vq: the struct virtqueue we&apos;re talking about.
 * @sg: scatterlist (must be well-formed and terminated!)
 * @num: the number of entries in @sg readable by other side
 * @data: the token identifying the buffer.
 * @gfp: how to do memory allocations (if necessary).
 *
 * Caller must ensure we don&apos;t call this with other virtqueue operations
 * at the same time (except where noted).
 *
 * Returns zero or a negative error (ie. ENOSPC, ENOMEM, EIO).
 */</doc>
<dec f='linux-4.14.y/include/linux/virtio.h' l='38' type='int virtqueue_add_outbuf(struct virtqueue * vq, struct scatterlist * sg, unsigned int num, void * data, gfp_t gfp)'/>
<use f='linux-4.14.y/drivers/char/virtio_console.c' l='581' u='c' c='__send_control_msg'/>
<use f='linux-4.14.y/drivers/char/virtio_console.c' l='633' u='c' c='__send_to_port'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='410' u='c' c='virtnet_xdp_xmit'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1262' u='c' c='xmit_skb'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='122' u='c' c='tell_host'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='302' u='c' c='stats_handle_request'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='435' u='c' c='init_vqs'/>
<use f='linux-4.14.y/drivers/virtio/virtio_input.c' l='76' u='c' c='virtinput_send_status'/>
<def f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='485' ll='491' type='int virtqueue_add_outbuf(struct virtqueue * vq, struct scatterlist * sg, unsigned int num, void * data, gfp_t gfp)'/>
<dec f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' type='int virtqueue_add_outbuf(struct virtqueue * , struct scatterlist * , unsigned int , void * , gfp_t )'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' c='virtqueue_add_outbuf'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' u='a'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='492' u='a'/>
<doc f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='472'>/**
 * virtqueue_add_outbuf - expose output buffers to other end
 * @vq: the struct virtqueue we&apos;re talking about.
 * @sg: scatterlist (must be well-formed and terminated!)
 * @num: the number of entries in @sg readable by other side
 * @data: the token identifying the buffer.
 * @gfp: how to do memory allocations (if necessary).
 *
 * Caller must ensure we don&apos;t call this with other virtqueue operations
 * at the same time (except where noted).
 *
 * Returns zero or a negative error (ie. ENOSPC, ENOMEM, EIO).
 */</doc>
