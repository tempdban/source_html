<def f='linux-4.14.y/include/crypto/rng.h' l='157' ll='161' type='int crypto_rng_get_bytes(struct crypto_rng * tfm, u8 * rdata, unsigned int dlen)'/>
<use f='linux-4.14.y/crypto/aead.c' l='292' u='c' c='aead_init_geniv'/>
<doc f='linux-4.14.y/include/crypto/rng.h' l='146'>/**
 * crypto_rng_get_bytes() - get random number
 * @tfm: cipher handle
 * @rdata: output buffer holding the random numbers
 * @dlen: length of the output buffer
 *
 * This function fills the caller-allocated buffer with random numbers using the
 * random number generator referenced by the cipher handle.
 *
 * Return: 0 function was successful; &lt; 0 if an error occurred
 */</doc>
<use f='linux-4.14.y/crypto/drbg.c' l='1094' u='c' c='drbg_seed'/>
<def f='linux-4.14.y/include/crypto/rng.h' l='157' ll='161' type='int crypto_rng_get_bytes(struct crypto_rng * tfm, u8 * rdata, unsigned int dlen)'/>
<use f='linux-4.14.y/crypto/aead.c' l='292' u='c' c='aead_init_geniv'/>
<doc f='linux-4.14.y/include/crypto/rng.h' l='146'>/**
 * crypto_rng_get_bytes() - get random number
 * @tfm: cipher handle
 * @rdata: output buffer holding the random numbers
 * @dlen: length of the output buffer
 *
 * This function fills the caller-allocated buffer with random numbers using the
 * random number generator referenced by the cipher handle.
 *
 * Return: 0 function was successful; &lt; 0 if an error occurred
 */</doc>
<use f='linux-4.14.y/crypto/drbg.c' l='1094' u='c' c='drbg_seed'/>
