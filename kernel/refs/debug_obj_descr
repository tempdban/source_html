<def f='linux-4.14.y/include/linux/debugobjects.h' l='55' ll='64'/>
<size>64</size>
<doc f='linux-4.14.y/include/linux/debugobjects.h' l='36'>/**
 * struct debug_obj_descr - object type specific debug description structure
 *
 * @name:		name of the object typee
 * @debug_hint:		function returning address, which have associated
 *			kernel symbol, to allow identify the object
 * @is_static_object:	return true if the obj is static, otherwise return false
 * @fixup_init:		fixup function, which is called when the init check
 *			fails. All fixup functions must return true if fixup
 *			was successful, otherwise return false
 * @fixup_activate:	fixup function, which is called when the activate check
 *			fails
 * @fixup_destroy:	fixup function, which is called when the destroy check
 *			fails
 * @fixup_free:		fixup function, which is called when the free check
 *			fails
 * @fixup_assert_init:  fixup function, which is called when the assert_init
 *			check fails
 */</doc>
<mbr r='debug_obj_descr::name' o='0' t='const char *'/>
<mbr r='debug_obj_descr::debug_hint' o='64' t='void *(*)(void *)'/>
<mbr r='debug_obj_descr::is_static_object' o='128' t='bool (*)(void *)'/>
<mbr r='debug_obj_descr::fixup_init' o='192' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_activate' o='256' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_destroy' o='320' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_free' o='384' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_assert_init' o='448' t='bool (*)(void *, enum debug_obj_state)'/>
<def f='linux-4.14.y/include/linux/debugobjects.h' l='55' ll='64'/>
<size>64</size>
<doc f='linux-4.14.y/include/linux/debugobjects.h' l='36'>/**
 * struct debug_obj_descr - object type specific debug description structure
 *
 * @name:		name of the object typee
 * @debug_hint:		function returning address, which have associated
 *			kernel symbol, to allow identify the object
 * @is_static_object:	return true if the obj is static, otherwise return false
 * @fixup_init:		fixup function, which is called when the init check
 *			fails. All fixup functions must return true if fixup
 *			was successful, otherwise return false
 * @fixup_activate:	fixup function, which is called when the activate check
 *			fails
 * @fixup_destroy:	fixup function, which is called when the destroy check
 *			fails
 * @fixup_free:		fixup function, which is called when the free check
 *			fails
 * @fixup_assert_init:  fixup function, which is called when the assert_init
 *			check fails
 */</doc>
<mbr r='debug_obj_descr::name' o='0' t='const char *'/>
<mbr r='debug_obj_descr::debug_hint' o='64' t='void *(*)(void *)'/>
<mbr r='debug_obj_descr::is_static_object' o='128' t='bool (*)(void *)'/>
<mbr r='debug_obj_descr::fixup_init' o='192' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_activate' o='256' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_destroy' o='320' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_free' o='384' t='bool (*)(void *, enum debug_obj_state)'/>
<mbr r='debug_obj_descr::fixup_assert_init' o='448' t='bool (*)(void *, enum debug_obj_state)'/>
