<def f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='333' ll='365'/>
<size>864</size>
<doc f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='306'>/*
 * FC Remote Port Attributes
 *
 * This structure exists for each remote FC port that a LLDD notifies
 * the subsystem of.  A remote FC port may or may not be a SCSI Target,
 * also be a SCSI initiator, IP endpoint, etc. As such, the remote
 * port is considered a separate entity, independent of &quot;role&quot; (such
 * as scsi target).
 *
 * --
 *
 * Attributes are based on HBAAPI V2.0 definitions. Only those
 * attributes that are determinable by the local port (aka Host)
 * are contained.
 *
 * Fixed attributes are not expected to change. The driver is
 * expected to set these values after successfully calling
 * fc_remote_port_add(). The transport fully manages all get functions
 * w/o driver interaction.
 *
 * Dynamic attributes are expected to change. The driver participates
 * in all get/set operations via functions provided by the driver.
 *
 * Private attributes are transport-managed values. They are fully
 * managed by the transport w/o driver interaction.
 */</doc>
<doc f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='333'>/* aka fc_starget_attrs */</doc>
<mbr r='fc_rport::maxframe_size' o='0' t='u32'/>
<mbr r='fc_rport::supported_classes' o='32' t='u32'/>
<mbr r='fc_rport::dev_loss_tmo' o='64' t='u32'/>
<mbr r='fc_rport::node_name' o='128' t='u64'/>
<mbr r='fc_rport::port_name' o='192' t='u64'/>
<mbr r='fc_rport::port_id' o='256' t='u32'/>
<mbr r='fc_rport::roles' o='288' t='u32'/>
<mbr r='fc_rport::port_state' o='320' t='enum fc_port_state'/>
<mbr r='fc_rport::scsi_target_id' o='352' t='u32'/>
<mbr r='fc_rport::fast_io_fail_tmo' o='384' t='u32'/>
<mbr r='fc_rport::dd_data' o='448' t='void *'/>
<mbr r='fc_rport::channel' o='512' t='unsigned int'/>
<mbr r='fc_rport::number' o='544' t='u32'/>
<mbr r='fc_rport::flags' o='576' t='u8'/>
<mbr r='fc_rport::peers' o='640' t='struct list_head'/>
<mbr r='fc_rport::dev' o='768' t='struct device'/>
<mbr r='fc_rport::dev_loss_work' o='4544' t='struct delayed_work'/>
<mbr r='fc_rport::scan_work' o='5312' t='struct work_struct'/>
<mbr r='fc_rport::fail_io_work' o='5568' t='struct delayed_work'/>
<mbr r='fc_rport::stgt_delete_work' o='6336' t='struct work_struct'/>
<mbr r='fc_rport::rport_delete_work' o='6592' t='struct work_struct'/>
<mbr r='fc_rport::rqst_q' o='6848' t='struct request_queue *'/>
<def f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='333' ll='365'/>
<size>864</size>
<doc f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='306'>/*
 * FC Remote Port Attributes
 *
 * This structure exists for each remote FC port that a LLDD notifies
 * the subsystem of.  A remote FC port may or may not be a SCSI Target,
 * also be a SCSI initiator, IP endpoint, etc. As such, the remote
 * port is considered a separate entity, independent of &quot;role&quot; (such
 * as scsi target).
 *
 * --
 *
 * Attributes are based on HBAAPI V2.0 definitions. Only those
 * attributes that are determinable by the local port (aka Host)
 * are contained.
 *
 * Fixed attributes are not expected to change. The driver is
 * expected to set these values after successfully calling
 * fc_remote_port_add(). The transport fully manages all get functions
 * w/o driver interaction.
 *
 * Dynamic attributes are expected to change. The driver participates
 * in all get/set operations via functions provided by the driver.
 *
 * Private attributes are transport-managed values. They are fully
 * managed by the transport w/o driver interaction.
 */</doc>
<doc f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='333'>/* aka fc_starget_attrs */</doc>
<mbr r='fc_rport::maxframe_size' o='0' t='u32'/>
<mbr r='fc_rport::supported_classes' o='32' t='u32'/>
<mbr r='fc_rport::dev_loss_tmo' o='64' t='u32'/>
<mbr r='fc_rport::node_name' o='128' t='u64'/>
<mbr r='fc_rport::port_name' o='192' t='u64'/>
<mbr r='fc_rport::port_id' o='256' t='u32'/>
<mbr r='fc_rport::roles' o='288' t='u32'/>
<mbr r='fc_rport::port_state' o='320' t='enum fc_port_state'/>
<mbr r='fc_rport::scsi_target_id' o='352' t='u32'/>
<mbr r='fc_rport::fast_io_fail_tmo' o='384' t='u32'/>
<mbr r='fc_rport::dd_data' o='448' t='void *'/>
<mbr r='fc_rport::channel' o='512' t='unsigned int'/>
<mbr r='fc_rport::number' o='544' t='u32'/>
<mbr r='fc_rport::flags' o='576' t='u8'/>
<mbr r='fc_rport::peers' o='640' t='struct list_head'/>
<mbr r='fc_rport::dev' o='768' t='struct device'/>
<mbr r='fc_rport::dev_loss_work' o='4544' t='struct delayed_work'/>
<mbr r='fc_rport::scan_work' o='5312' t='struct work_struct'/>
<mbr r='fc_rport::fail_io_work' o='5568' t='struct delayed_work'/>
<mbr r='fc_rport::stgt_delete_work' o='6336' t='struct work_struct'/>
<mbr r='fc_rport::rport_delete_work' o='6592' t='struct work_struct'/>
<mbr r='fc_rport::rqst_q' o='6848' t='struct request_queue *'/>
