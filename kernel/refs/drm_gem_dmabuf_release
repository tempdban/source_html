<dec f='linux-4.18.y/include/drm/drm_prime.h' l='84' type='void drm_gem_dmabuf_release(struct dma_buf * dma_buf)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='386' ll='395' type='void drm_gem_dmabuf_release(struct dma_buf * dma_buf)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='396' type='void drm_gem_dmabuf_release(struct dma_buf * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='396' c='drm_gem_dmabuf_release'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='396' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='396' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='521'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='521'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_prime.c' l='377'>/**
 * drm_gem_dmabuf_release - dma_buf release implementation for GEM
 * @dma_buf: buffer to be released
 *
 * Generic release function for dma_bufs exported as PRIME buffers. GEM drivers
 * must use this in their dma_buf ops structure as the release callback.
 * drm_gem_dmabuf_release() should be used in conjunction with
 * drm_gem_dmabuf_export().
 */</doc>
