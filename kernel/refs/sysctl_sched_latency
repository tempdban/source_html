<dec f='linux-4.14.y/include/linux/sched/sysctl.h' l='22' type='unsigned int'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<def f='linux-4.14.y/kernel/sched/fair.c' l='54' type='unsigned int'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='190' macro='1' u='w'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='629' u='r' c='sched_proc_update_handler'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='635' macro='1' u='r'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='667' u='r' c='__sched_period'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='3588' u='r' c='check_spread'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='3609' u='r' c='place_entity'/>
<doc f='linux-4.14.y/kernel/sched/fair.c' l='41'>/*
 * Targeted preemption latency for CPU-bound tasks:
 *
 * NOTE: this latency value is not the same as the concept of
 * &apos;timeslice length&apos; - timeslices in CFS are of variable length
 * and have no persistent notion like in traditional, time-slice
 * based scheduling concepts.
 *
 * (to see the precise effective timeslice length of your workload,
 *  run vmstat and monitor the context-switches (cs) field)
 *
 * (default: 6ms * (1 + ilog(ncpus)), units: nanoseconds)
 */</doc>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
<dec f='linux-4.14.y/include/linux/sched/sysctl.h' l='22' type='unsigned int'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='757' u='r' c='sched_debug_header'/>
<def f='linux-4.14.y/kernel/sched/fair.c' l='54' type='unsigned int'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='190' macro='1' u='w'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='629' u='r' c='sched_proc_update_handler'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='635' macro='1' u='r'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='667' u='r' c='__sched_period'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='3588' u='r' c='check_spread'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='3609' u='r' c='place_entity'/>
<doc f='linux-4.14.y/kernel/sched/fair.c' l='41'>/*
 * Targeted preemption latency for CPU-bound tasks:
 *
 * NOTE: this latency value is not the same as the concept of
 * &apos;timeslice length&apos; - timeslices in CFS are of variable length
 * and have no persistent notion like in traditional, time-slice
 * based scheduling concepts.
 *
 * (to see the precise effective timeslice length of your workload,
 *  run vmstat and monitor the context-switches (cs) field)
 *
 * (default: 6ms * (1 + ilog(ncpus)), units: nanoseconds)
 */</doc>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
<use f='linux-4.14.y/kernel/sysctl.c' l='324' u='a'/>
