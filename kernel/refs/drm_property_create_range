<dec f='linux-4.18.y/include/drm/drm_property.h' l='252' type='struct drm_property * drm_property_create_range(struct drm_device * dev, u32 flags, const char * name, uint64_t min, uint64_t max)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_blend.c' l='132' u='c' c='drm_plane_create_alpha_property'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_blend.c' l='284' u='c' c='drm_plane_create_zpos_property'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_blend.c' l='322' u='c' c='drm_plane_create_zpos_immutable_property'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1046' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1051' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1056' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1061' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1076' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1081' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1086' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1091' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1096' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1101' u='c' c='drm_mode_create_tv_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1275' u='c' c='drm_mode_create_suggested_offset_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1278' u='c' c='drm_mode_create_suggested_offset_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='224' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='230' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='236' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='242' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='260' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='266' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='284' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='316' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='337' u='c' c='drm_mode_create_standard_properties'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='272' ll='278' type='struct drm_property * drm_property_create_range(struct drm_device * dev, u32 flags, const char * name, uint64_t min, uint64_t max)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='279' type='struct drm_property * drm_property_create_range(struct drm_device * , u32 , const char * , uint64_t , uint64_t )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='279' c='drm_property_create_range'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='279' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='279' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='367' u='c' c='drm_property_create_bool'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='253'>/**
 * drm_property_create_range - create a new unsigned ranged property type
 * @dev: drm device
 * @flags: flags specifying the property type
 * @name: name of the property
 * @min: minimum value of the property
 * @max: maximum value of the property
 *
 * This creates a new generic drm property which can then be attached to a drm
 * object with drm_object_attach_property(). The returned property object must
 * be freed with drm_property_destroy(), which is done automatically when
 * calling drm_mode_config_cleanup().
 *
 * Userspace is allowed to set any unsigned integer value in the (min, max)
 * range inclusive.
 *
 * Returns:
 * A pointer to the newly created property on success, NULL on failure.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_display.c' l='1059' u='c' c='qxl_mode_create_hotplug_mode_update_property'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='1619' u='c' c='vmw_kms_create_hotplug_mode_update_property'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2842' u='c' c='vmw_kms_create_implicit_placement_property'/>
