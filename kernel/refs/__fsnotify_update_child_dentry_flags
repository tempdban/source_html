<dec f='linux-4.14.y/fs/notify/fsnotify.h' l='47' type='void __fsnotify_update_child_dentry_flags(struct inode * inode)'/>
<def f='linux-4.14.y/fs/notify/fsnotify.c' l='108' ll='143' type='void __fsnotify_update_child_dentry_flags(struct inode * inode)'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='162' u='c' c='__fsnotify_parent'/>
<doc f='linux-4.14.y/fs/notify/fsnotify.c' l='101'>/*
 * Given an inode, first check if we care what happens to our children.  Inotify
 * and dnotify both tell their parents about events.  If we care about any event
 * on a child we run all of our children and set a dentry flag saying that the
 * parent cares.  Thus when an event happens on a child it can quickly tell if
 * if there is a need to find a parent and send the event to the parent.
 */</doc>
<doc f='linux-4.14.y/fs/notify/fsnotify.h' l='43'>/*
 * update the dentry-&gt;d_flags of all of inode&apos;s children to indicate if inode cares
 * about events that happen to its children.
 */</doc>
<use f='linux-4.14.y/fs/notify/mark.c' l='143' u='c' c='fsnotify_recalc_mask'/>
