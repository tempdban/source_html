<dec f='linux-4.18.y/drivers/net/qede/base/ecore_init_fw_funcs.h' l='87' type='int ecore_qm_pf_rt_init(struct ecore_hwfn * p_hwfn, struct ecore_ptt * p_ptt, u8 pf_id, u8 max_phys_tcs_per_port, bool is_pf_loading, u32 num_pf_cids, u32 num_vf_cids, u32 num_tids, u16 start_pq, u16 num_pf_pqs, u16 num_vf_pqs, u8 start_vport, u8 num_vports, u16 pf_wfq, u32 pf_rl, u32 link_speed, struct init_qm_pq_params * pq_params, struct init_qm_vport_params * vport_params)'/>
<use f='linux-4.18.y/drivers/net/qede/base/ecore_cxt.c' l='1444' u='c' c='ecore_qm_init_pf'/>
<doc f='linux-4.18.y/drivers/net/qede/base/ecore_init_fw_funcs.h' l='57'>/**
 * @brief ecore_qm_pf_rt_init  Prepare QM runtime init values for the PF phase
 *
 * @param p_hwfn
 * @param p_ptt			- ptt window used for writing the registers
 * @param pf_id			- PF ID
 * @param max_phys_tcs_per_port	- max number of physical TCs per port in HW
 * @param is_pf_loading -	  indicates if the PF is currently loading,
 *				  i.e. it has no allocated QM resources.
 * @param num_pf_cids		- number of connections used by this PF
 * @param num_vf_cids		- number of connections used by VFs of this PF
 * @param num_tids		- number of tasks used by this PF
 * @param start_pq		- first Tx PQ ID associated with this PF
 * @param num_pf_pqs		- number of Tx PQs associated with this PF
 *                                (non-VF)
 * @param num_vf_pqs		- number of Tx PQs associated with a VF
 * @param start_vport		- first VPORT ID associated with this PF
 * @param num_vports - number of VPORTs associated with this PF
 * @param pf_wfq - WFQ weight. if PF WFQ is globally disabled, the weight must
 *		   be 0. otherwise, the weight must be non-zero.
 * @param pf_rl - rate limit in Mb/sec units. a value of 0 means don&apos;t
 *                configure. ignored if PF RL is globally disabled.
 * @param link_speed -		  link speed in Mbps.
 * @param pq_params - array of size (num_pf_pqs+num_vf_pqs) with parameters for
 *                    each Tx PQ associated with the specified PF.
 * @param vport_params - array of size num_vports with parameters for each
 *                       associated VPORT.
 *
 * @return 0 on success, -1 on error.
 */</doc>
<def f='linux-4.18.y/drivers/net/qede/base/ecore_init_fw_funcs.c' l='838' ll='901' type='int ecore_qm_pf_rt_init(struct ecore_hwfn * p_hwfn, struct ecore_ptt * p_ptt, u8 pf_id, u8 max_phys_tcs_per_port, bool is_pf_loading, u32 num_pf_cids, u32 num_vf_cids, u32 num_tids, u16 start_pq, u16 num_pf_pqs, u16 num_vf_pqs, u8 start_vport, u8 num_vports, u16 pf_wfq, u32 pf_rl, u32 link_speed, struct init_qm_pq_params * pq_params, struct init_qm_vport_params * vport_params)'/>
