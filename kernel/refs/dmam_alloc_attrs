<dec f='linux-4.18.y/include/linux/dma-mapping.h' l='777' type='void * dmam_alloc_attrs(struct device * dev, size_t size, dma_addr_t * dma_handle, gfp_t gfp, unsigned long attrs)'/>
<def f='linux-4.18.y/kernel/dma/mapping.c' l='119' ll='143' type='void * dmam_alloc_attrs(struct device * dev, size_t size, dma_addr_t * dma_handle, gfp_t gfp, unsigned long attrs)'/>
<dec f='linux-4.18.y/kernel/dma/mapping.c' l='144' type='void * dmam_alloc_attrs(struct device * , size_t , dma_addr_t * , gfp_t , unsigned long )'/>
<use f='linux-4.18.y/kernel/dma/mapping.c' l='144' c='dmam_alloc_attrs'/>
<use f='linux-4.18.y/kernel/dma/mapping.c' l='144' u='a'/>
<use f='linux-4.18.y/kernel/dma/mapping.c' l='144' u='a'/>
<doc f='linux-4.18.y/kernel/dma/mapping.c' l='105'>/**
 * dmam_alloc_attrs - Managed dma_alloc_attrs()
 * @dev: Device to allocate non_coherent memory for
 * @size: Size of allocation
 * @dma_handle: Out argument for allocated DMA handle
 * @gfp: Allocation flags
 * @attrs: Flags in the DMA_ATTR_* namespace.
 *
 * Managed dma_alloc_attrs().  Memory allocated using this function will be
 * automatically released on driver detach.
 *
 * RETURNS:
 * Pointer to allocated memory on success, NULL on failure.
 */</doc>
