<dec f='linux-4.14.y/include/linux/usb/composite.h' l='333' type='int usb_add_config(struct usb_composite_dev * , struct usb_configuration * , int (*)(struct usb_configuration *) )'/>
<def f='linux-4.14.y/drivers/usb/gadget/composite.c' l='893' ll='959' type='int usb_add_config(struct usb_composite_dev * cdev, struct usb_configuration * config, int (*)(struct usb_configuration *) bind)'/>
<dec f='linux-4.14.y/drivers/usb/gadget/composite.c' l='960' type='int usb_add_config(struct usb_composite_dev * , struct usb_configuration * , int (*)(struct usb_configuration *) )'/>
<use f='linux-4.14.y/drivers/usb/gadget/composite.c' l='960' c='usb_add_config'/>
<use f='linux-4.14.y/drivers/usb/gadget/composite.c' l='960' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/composite.c' l='960' u='a'/>
<doc f='linux-4.14.y/drivers/usb/gadget/composite.c' l='878'>/**
 * usb_add_config() - add a configuration to a device.
 * @cdev: wraps the USB gadget
 * @config: the configuration, with bConfigurationValue assigned
 * @bind: the configuration&apos;s bind function
 * Context: single threaded during gadget setup
 *
 * One of the main tasks of a composite @bind() routine is to
 * add each of the configurations it supports, using this routine.
 *
 * This function returns the value of the configuration&apos;s @bind(), which
 * is zero for success else a negative errno value.  Binding configurations
 * assigns global resources including string IDs, and per-configuration
 * resources such as interface IDs and endpoints.
 */</doc>
