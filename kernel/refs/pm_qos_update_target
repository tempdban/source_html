<dec f='linux-4.18.y/include/linux/pm_qos.h' l='120' type='int pm_qos_update_target(struct pm_qos_constraints * c, struct plist_node * node, enum pm_qos_req_action action, int value)'/>
<def f='linux-4.18.y/kernel/power/qos.c' l='272' ll='323' type='int pm_qos_update_target(struct pm_qos_constraints * c, struct plist_node * node, enum pm_qos_req_action action, int value)'/>
<use f='linux-4.18.y/kernel/power/qos.c' l='414' u='c' c='__pm_qos_update_request'/>
<use f='linux-4.18.y/kernel/power/qos.c' l='460' u='c' c='pm_qos_add_request'/>
<use f='linux-4.18.y/kernel/power/qos.c' l='513' u='c' c='pm_qos_update_request_timeout'/>
<use f='linux-4.18.y/kernel/power/qos.c' l='542' u='c' c='pm_qos_remove_request'/>
<doc f='linux-4.18.y/kernel/power/qos.c' l='261'>/**
 * pm_qos_update_target - manages the constraints list and calls the notifiers
 *  if needed
 * @c: constraints data struct
 * @node: request to add to the list, to update or to remove
 * @action: action to take on the constraints list
 * @value: value of the request to add or update
 *
 * This function returns 1 if the aggregated constraint value has changed, 0
 *  otherwise.
 */</doc>
