<dec f='linux-4.14.y/include/net/udp.h' l='268' type='bool udp_sk_rx_dst_set(struct sock * sk, struct dst_entry * dst)'/>
<def f='linux-4.14.y/net/ipv4/udp.c' l='1938' ll='1948' type='bool udp_sk_rx_dst_set(struct sock * sk, struct dst_entry * dst)'/>
<dec f='linux-4.14.y/net/ipv4/udp.c' l='1949' type='bool udp_sk_rx_dst_set(struct sock * , struct dst_entry * )'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='1949' c='udp_sk_rx_dst_set'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='1949' u='a'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='1949' u='a'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='2096' u='c' c='__udp4_lib_rcv'/>
<doc f='linux-4.14.y/net/ipv4/udp.c' l='1935'>/* For TCP sockets, sk_rx_dst is protected by socket lock
 * For UDP, we use xchg() to guard against concurrent changes.
 */</doc>
<dec f='linux-4.14.y/include/net/udp.h' l='268' type='bool udp_sk_rx_dst_set(struct sock * sk, struct dst_entry * dst)'/>
<def f='linux-4.14.y/net/ipv4/udp.c' l='1938' ll='1948' type='bool udp_sk_rx_dst_set(struct sock * sk, struct dst_entry * dst)'/>
<dec f='linux-4.14.y/net/ipv4/udp.c' l='1949' type='bool udp_sk_rx_dst_set(struct sock * , struct dst_entry * )'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='1949' c='udp_sk_rx_dst_set'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='1949' u='a'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='1949' u='a'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='2096' u='c' c='__udp4_lib_rcv'/>
<doc f='linux-4.14.y/net/ipv4/udp.c' l='1935'>/* For TCP sockets, sk_rx_dst is protected by socket lock
 * For UDP, we use xchg() to guard against concurrent changes.
 */</doc>
