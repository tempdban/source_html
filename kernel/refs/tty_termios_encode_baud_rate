<dec f='linux-4.18.y/include/linux/tty.h' l='510' type='void tty_termios_encode_baud_rate(struct ktermios * termios, speed_t ibaud, speed_t obaud)'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_port.c' l='2754' u='c' c='serial8250_do_set_termios'/>
<use f='linux-4.18.y/drivers/tty/serial/kgdb_nmi.c' l='345' u='c' c='kgdb_register_nmi_console'/>
<use f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='437' u='c' c='uart_get_baud_rate'/>
<use f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='449' u='c' c='uart_get_baud_rate'/>
<use f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='452' u='c' c='uart_get_baud_rate'/>
<use f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='2005' u='c' c='uart_set_options'/>
<def f='linux-4.18.y/drivers/tty/tty_baudrate.c' l='145' ll='223' type='void tty_termios_encode_baud_rate(struct ktermios * termios, speed_t ibaud, speed_t obaud)'/>
<dec f='linux-4.18.y/drivers/tty/tty_baudrate.c' l='224' type='void tty_termios_encode_baud_rate(struct ktermios * , speed_t , speed_t )'/>
<use f='linux-4.18.y/drivers/tty/tty_baudrate.c' l='224' c='tty_termios_encode_baud_rate'/>
<use f='linux-4.18.y/drivers/tty/tty_baudrate.c' l='224' u='a'/>
<use f='linux-4.18.y/drivers/tty/tty_baudrate.c' l='224' u='a'/>
<use f='linux-4.18.y/drivers/tty/tty_baudrate.c' l='238' u='c' c='tty_encode_baud_rate'/>
<doc f='linux-4.18.y/drivers/tty/tty_baudrate.c' l='123'>/**
 *	tty_termios_encode_baud_rate
 *	@termios: ktermios structure holding user requested state
 *	@ispeed: input speed
 *	@ospeed: output speed
 *
 *	Encode the speeds set into the passed termios structure. This is
 *	used as a library helper for drivers so that they can report back
 *	the actual speed selected when it differs from the speed requested
 *
 *	For maximal back compatibility with legacy SYS5/POSIX *nix behaviour
 *	we need to carefully set the bits when the user does not get the
 *	desired speed. We allow small margins and preserve as much of possible
 *	of the input intent to keep compatibility.
 *
 *	Locking: Caller should hold termios lock. This is already held
 *	when calling this function from the driver termios handler.
 *
 *	The ifdefs deal with platforms whose owners have yet to update them
 *	and will all go away once this is done.
 */</doc>
