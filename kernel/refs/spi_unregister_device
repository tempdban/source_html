<dec f='linux-4.18.y/include/linux/spi/spi.h' l='1301' type='void spi_unregister_device(struct spi_device * spi)'/>
<def f='linux-4.18.y/drivers/spi/spi.c' l='643' ll='655' type='void spi_unregister_device(struct spi_device * spi)'/>
<dec f='linux-4.18.y/drivers/spi/spi.c' l='656' type='void spi_unregister_device(struct spi_device * )'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='656' c='spi_unregister_device'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='656' u='a'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='656' u='a'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2286' u='c' c='__unregister'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='3478' u='c' c='acpi_spi_notify'/>
<doc f='linux-4.18.y/drivers/spi/spi.c' l='636'>/**
 * spi_unregister_device - unregister a single SPI device
 * @spi: spi_device to unregister
 *
 * Start making the passed SPI device vanish. Normally this would be handled
 * by spi_unregister_controller().
 */</doc>
