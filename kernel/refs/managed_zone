<def f='linux-4.18.y/include/linux/mmzone.h' l='833' ll='836' type='bool managed_zone(struct zone * zone)'/>
<doc f='linux-4.18.y/include/linux/mmzone.h' l='827'>/*
 * Returns true if a zone has pages managed by the buddy allocator.
 * All the reclaim decisions have to use this function rather than
 * populated_zone(). If the whole zone is reserved then we can easily
 * end up with populated_zone() &amp;&amp; !managed_zone().
 */</doc>
<use f='linux-4.18.y/mm/page_alloc.c' l='5066' u='c' c='build_zonerefs_node'/>
<use f='linux-4.18.y/mm/vmscan.c' l='288' u='c' c='lruvec_lru_size'/>
<use f='linux-4.18.y/mm/vmscan.c' l='2178' u='c' c='get_scan_count'/>
<use f='linux-4.18.y/mm/vmscan.c' l='2500' u='c' c='should_continue_reclaim'/>
<use f='linux-4.18.y/mm/vmscan.c' l='2931' u='c' c='allow_direct_reclaim'/>
<use f='linux-4.18.y/mm/vmscan.c' l='3204' u='c' c='pgdat_balanced'/>
<use f='linux-4.18.y/mm/vmscan.c' l='3285' u='c' c='kswapd_shrink_node'/>
<use f='linux-4.18.y/mm/vmscan.c' l='3362' u='c' c='balance_pgdat'/>
<use f='linux-4.18.y/mm/vmscan.c' l='3650' u='c' c='wakeup_kswapd'/>
