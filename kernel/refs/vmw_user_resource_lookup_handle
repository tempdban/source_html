<dec f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='624' type='int vmw_user_resource_lookup_handle(struct vmw_private * dev_priv, struct ttm_object_file * tfile, uint32_t handle, const struct vmw_user_resource_conv * converter, struct vmw_resource ** p_res)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c' l='780' u='c' c='vmw_cmd_res_check'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c' l='4042' u='c' c='vmw_execbuf_tie_context'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c' l='301' u='c' c='vmw_present_ioctl'/>
<def f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='251' ll='287' type='int vmw_user_resource_lookup_handle(struct vmw_private * dev_priv, struct ttm_object_file * tfile, uint32_t handle, const struct vmw_user_resource_conv * converter, struct vmw_resource ** p_res)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='305' u='c' c='vmw_user_lookup_handle'/>
<doc f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='237'>/**
 * vmw_user_resource_lookup_handle - lookup a struct resource from a
 * TTM user-space handle and perform basic type checks
 *
 * @dev_priv:     Pointer to a device private struct
 * @tfile:        Pointer to a struct ttm_object_file identifying the caller
 * @handle:       The TTM user-space handle
 * @converter:    Pointer to an object describing the resource type
 * @p_res:        On successful return the location pointed to will contain
 *                a pointer to a refcounted struct vmw_resource.
 *
 * If the handle can&apos;t be found or is associated with an incorrect resource
 * type, -EINVAL will be returned.
 */</doc>
<dec f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='624' type='int vmw_user_resource_lookup_handle(struct vmw_private * dev_priv, struct ttm_object_file * tfile, uint32_t handle, const struct vmw_user_resource_conv * converter, struct vmw_resource ** p_res)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c' l='780' u='c' c='vmw_cmd_res_check'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c' l='4042' u='c' c='vmw_execbuf_tie_context'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c' l='301' u='c' c='vmw_present_ioctl'/>
<def f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='251' ll='287' type='int vmw_user_resource_lookup_handle(struct vmw_private * dev_priv, struct ttm_object_file * tfile, uint32_t handle, const struct vmw_user_resource_conv * converter, struct vmw_resource ** p_res)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='305' u='c' c='vmw_user_lookup_handle'/>
<doc f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='237'>/**
 * vmw_user_resource_lookup_handle - lookup a struct resource from a
 * TTM user-space handle and perform basic type checks
 *
 * @dev_priv:     Pointer to a device private struct
 * @tfile:        Pointer to a struct ttm_object_file identifying the caller
 * @handle:       The TTM user-space handle
 * @converter:    Pointer to an object describing the resource type
 * @p_res:        On successful return the location pointed to will contain
 *                a pointer to a refcounted struct vmw_resource.
 *
 * If the handle can&apos;t be found or is associated with an incorrect resource
 * type, -EINVAL will be returned.
 */</doc>
