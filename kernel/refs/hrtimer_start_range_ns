<dec f='linux-4.14.y/include/linux/hrtimer.h' l='364' type='void hrtimer_start_range_ns(struct hrtimer * timer, ktime_t tim, u64 range_ns, const enum hrtimer_mode mode)'/>
<use f='linux-4.14.y/include/linux/hrtimer.h' l='377' u='c' c='hrtimer_start'/>
<use f='linux-4.14.y/include/linux/hrtimer.h' l='391' u='c' c='hrtimer_start_expires'/>
<doc f='linux-4.14.y/include/linux/hrtimer.h' l='363'>/* Basic timer operations: */</doc>
<use f='linux-4.14.y/fs/aio.c' l='1346' macro='1' u='c'/>
<def f='linux-4.14.y/kernel/time/hrtimer.c' l='945' ll='983' type='void hrtimer_start_range_ns(struct hrtimer * timer, ktime_t tim, u64 delta_ns, const enum hrtimer_mode mode)'/>
<dec f='linux-4.14.y/kernel/time/hrtimer.c' l='984' type='void hrtimer_start_range_ns(struct hrtimer * , ktime_t , u64 , const enum hrtimer_mode )'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='984' c='hrtimer_start_range_ns'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='984' u='a'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='984' u='a'/>
<doc f='linux-4.14.y/kernel/time/hrtimer.c' l='937'>/**
 * hrtimer_start_range_ns - (re)start an hrtimer on the current CPU
 * @timer:	the timer to be added
 * @tim:	expiry time
 * @delta_ns:	&quot;slack&quot; range for the timer
 * @mode:	expiry mode: absolute (HRTIMER_MODE_ABS) or
 *		relative (HRTIMER_MODE_REL)
 */</doc>
