<def f='linux-4.14.y/include/uapi/linux/ethtool.h' l='280' ll='285'/>
<size>12</size>
<doc f='linux-4.14.y/include/uapi/linux/ethtool.h' l='265'>/**
 * struct ethtool_regs - hardware register dump
 * @cmd: Command number = %ETHTOOL_GREGS
 * @version: Dump format version.  This is driver-specific and may
 *	distinguish different chips/revisions.  Drivers must use new
 *	version numbers whenever the dump format changes in an
 *	incompatible way.
 * @len: On entry, the real length of @data.  On return, the number of
 *	bytes used.
 * @data: Buffer for the register dump
 *
 * Users should use %ETHTOOL_GDRVINFO to find the maximum length of
 * a register dump for the interface.  They must allocate the buffer
 * immediately following this structure.
 */</doc>
<mbr r='ethtool_regs::cmd' o='0' t='__u32'/>
<mbr r='ethtool_regs::version' o='32' t='__u32'/>
<mbr r='ethtool_regs::len' o='64' t='__u32'/>
<mbr r='ethtool_regs::data' o='96' t='__u8 [0]'/>
<def f='linux-4.14.y/include/uapi/linux/ethtool.h' l='280' ll='285'/>
<size>12</size>
<doc f='linux-4.14.y/include/uapi/linux/ethtool.h' l='265'>/**
 * struct ethtool_regs - hardware register dump
 * @cmd: Command number = %ETHTOOL_GREGS
 * @version: Dump format version.  This is driver-specific and may
 *	distinguish different chips/revisions.  Drivers must use new
 *	version numbers whenever the dump format changes in an
 *	incompatible way.
 * @len: On entry, the real length of @data.  On return, the number of
 *	bytes used.
 * @data: Buffer for the register dump
 *
 * Users should use %ETHTOOL_GDRVINFO to find the maximum length of
 * a register dump for the interface.  They must allocate the buffer
 * immediately following this structure.
 */</doc>
<mbr r='ethtool_regs::cmd' o='0' t='__u32'/>
<mbr r='ethtool_regs::version' o='32' t='__u32'/>
<mbr r='ethtool_regs::len' o='64' t='__u32'/>
<mbr r='ethtool_regs::data' o='96' t='__u8 [0]'/>
