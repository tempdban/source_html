<dec f='linux-4.18.y/include/linux/trace_events.h' l='434' type='enum event_trigger_type event_triggers_call(struct trace_event_file * file, void * rec, struct ring_buffer_event * event)'/>
<use f='linux-4.18.y/include/linux/trace_events.h' l='458' u='c' c='trace_trigger_soft_disabled'/>
<use f='linux-4.18.y/kernel/trace/trace.h' l='1299' u='c' c='__event_trigger_test_discard'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='6133' u='c' c='tracing_mark_write'/>
<def f='linux-4.18.y/kernel/trace/trace_events_trigger.c' l='65' ll='93' type='enum event_trigger_type event_triggers_call(struct trace_event_file * file, void * rec, struct ring_buffer_event * event)'/>
<dec f='linux-4.18.y/kernel/trace/trace_events_trigger.c' l='94' type='enum event_trigger_type event_triggers_call(struct trace_event_file * , void * , struct ring_buffer_event * )'/>
<use f='linux-4.18.y/kernel/trace/trace_events_trigger.c' l='94' c='event_triggers_call'/>
<use f='linux-4.18.y/kernel/trace/trace_events_trigger.c' l='94' u='a'/>
<use f='linux-4.18.y/kernel/trace/trace_events_trigger.c' l='94' u='a'/>
<doc f='linux-4.18.y/kernel/trace/trace_events_trigger.c' l='41'>/**
 * event_triggers_call - Call triggers associated with a trace event
 * @file: The trace_event_file associated with the event
 * @rec: The trace entry for the event, NULL for unconditional invocation
 *
 * For each trigger associated with an event, invoke the trigger
 * function registered with the associated trigger command.  If rec is
 * non-NULL, it means that the trigger requires further processing and
 * shouldn&apos;t be unconditionally invoked.  If rec is non-NULL and the
 * trigger has a filter associated with it, rec will checked against
 * the filter and if the record matches the trigger will be invoked.
 * If the trigger is a &apos;post_trigger&apos;, meaning it shouldn&apos;t be invoked
 * in any case until the current event is written, the trigger
 * function isn&apos;t invoked but the bit associated with the deferred
 * trigger is set in the return value.
 *
 * Returns an enum event_trigger_type value containing a set bit for
 * any trigger that should be deferred, ETT_NONE if nothing to defer.
 *
 * Called from tracepoint handlers (with rcu_read_lock_sched() held).
 *
 * Return: an enum event_trigger_type value containing a set bit for
 * any trigger that should be deferred, ETT_NONE if nothing to defer.
 */</doc>
