<def f='linux-4.14.y/include/uapi/linux/dcbnl.h' l='119' ll='132'/>
<size>360</size>
<doc f='linux-4.14.y/include/uapi/linux/dcbnl.h' l='89'>/* This structure contains the IEEE 802.1Qau QCN managed object.
 *
 *@rpg_enable: enable QCN RP
 *@rppp_max_rps: maximum number of RPs allowed for this CNPV on this port
 *@rpg_time_reset: time between rate increases if no CNMs received.
 *		   given in u-seconds
 *@rpg_byte_reset: transmitted data between rate increases if no CNMs received.
 *		   given in Bytes
 *@rpg_threshold: The number of times rpByteStage or rpTimeStage can count
 *		   before RP rate control state machine advances states
 *@rpg_max_rate: the maxinun rate, in Mbits per second,
 *		 at which an RP can transmit
 *@rpg_ai_rate: The rate, in Mbits per second,
 *		used to increase rpTargetRate in the RPR_ACTIVE_INCREASE
 *@rpg_hai_rate: The rate, in Mbits per second,
 *		 used to increase rpTargetRate in the RPR_HYPER_INCREASE state
 *@rpg_gd: Upon CNM receive, flow rate is limited to (Fb/Gd)*CurrentRate.
 *	   rpgGd is given as log2(Gd), where Gd may only be powers of 2
 *@rpg_min_dec_fac: The minimum factor by which the current transmit rate
 *		    can be changed by reception of a CNM.
 *		    value is given as percentage (1-100)
 *@rpg_min_rate: The minimum value, in bits per second, for rate to limit
 *@cndd_state_machine: The state of the congestion notification domain
 *		       defense state machine, as defined by IEEE 802.3Qau
 *		       section 32.1.1. In the interior ready state,
 *		       the QCN capable hardware may add CN-TAG TLV to the
 *		       outgoing traffic, to specifically identify outgoing
 *		       flows.
 */</doc>
<mbr r='ieee_qcn::rpg_enable' o='0' t='__u8 [8]'/>
<mbr r='ieee_qcn::rppp_max_rps' o='64' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_time_reset' o='320' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_byte_reset' o='576' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_threshold' o='832' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_max_rate' o='1088' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_ai_rate' o='1344' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_hai_rate' o='1600' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_gd' o='1856' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_min_dec_fac' o='2112' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_min_rate' o='2368' t='__u32 [8]'/>
<mbr r='ieee_qcn::cndd_state_machine' o='2624' t='__u32 [8]'/>
<def f='linux-4.14.y/include/uapi/linux/dcbnl.h' l='119' ll='132'/>
<size>360</size>
<doc f='linux-4.14.y/include/uapi/linux/dcbnl.h' l='89'>/* This structure contains the IEEE 802.1Qau QCN managed object.
 *
 *@rpg_enable: enable QCN RP
 *@rppp_max_rps: maximum number of RPs allowed for this CNPV on this port
 *@rpg_time_reset: time between rate increases if no CNMs received.
 *		   given in u-seconds
 *@rpg_byte_reset: transmitted data between rate increases if no CNMs received.
 *		   given in Bytes
 *@rpg_threshold: The number of times rpByteStage or rpTimeStage can count
 *		   before RP rate control state machine advances states
 *@rpg_max_rate: the maxinun rate, in Mbits per second,
 *		 at which an RP can transmit
 *@rpg_ai_rate: The rate, in Mbits per second,
 *		used to increase rpTargetRate in the RPR_ACTIVE_INCREASE
 *@rpg_hai_rate: The rate, in Mbits per second,
 *		 used to increase rpTargetRate in the RPR_HYPER_INCREASE state
 *@rpg_gd: Upon CNM receive, flow rate is limited to (Fb/Gd)*CurrentRate.
 *	   rpgGd is given as log2(Gd), where Gd may only be powers of 2
 *@rpg_min_dec_fac: The minimum factor by which the current transmit rate
 *		    can be changed by reception of a CNM.
 *		    value is given as percentage (1-100)
 *@rpg_min_rate: The minimum value, in bits per second, for rate to limit
 *@cndd_state_machine: The state of the congestion notification domain
 *		       defense state machine, as defined by IEEE 802.3Qau
 *		       section 32.1.1. In the interior ready state,
 *		       the QCN capable hardware may add CN-TAG TLV to the
 *		       outgoing traffic, to specifically identify outgoing
 *		       flows.
 */</doc>
<mbr r='ieee_qcn::rpg_enable' o='0' t='__u8 [8]'/>
<mbr r='ieee_qcn::rppp_max_rps' o='64' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_time_reset' o='320' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_byte_reset' o='576' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_threshold' o='832' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_max_rate' o='1088' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_ai_rate' o='1344' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_hai_rate' o='1600' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_gd' o='1856' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_min_dec_fac' o='2112' t='__u32 [8]'/>
<mbr r='ieee_qcn::rpg_min_rate' o='2368' t='__u32 [8]'/>
<mbr r='ieee_qcn::cndd_state_machine' o='2624' t='__u32 [8]'/>
