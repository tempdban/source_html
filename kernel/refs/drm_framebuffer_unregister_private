<dec f='linux-4.14.y/include/drm/drm_framebuffer.h' l='211' type='void drm_framebuffer_unregister_private(struct drm_framebuffer * fb)'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_fbdev.c' l='151' u='c' c='bochs_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_fbdev.c' l='260' u='c' c='cirrus_fbdev_destroy'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='728' ll='739' type='void drm_framebuffer_unregister_private(struct drm_framebuffer * fb)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='740' type='void drm_framebuffer_unregister_private(struct drm_framebuffer * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='740' c='drm_framebuffer_unregister_private'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='740' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='740' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='714'>/**
 * drm_framebuffer_unregister_private - unregister a private fb from the lookup idr
 * @fb: fb to unregister
 *
 * Drivers need to call this when cleaning up driver-private framebuffers, e.g.
 * those used for fbdev. Note that the caller must hold a reference of it&apos;s own,
 * i.e. the object may not be destroyed through this call (since it&apos;ll lead to a
 * locking inversion).
 *
 * NOTE: This function is deprecated. For driver-private framebuffers it is not
 * recommended to embed a framebuffer struct info fbdev struct, instead, a
 * framebuffer pointer is preferred and drm_framebuffer_put() should be called
 * when the framebuffer is to be cleaned up.
 */</doc>
