<dec f='linux-4.14.y/security/smack/smack.h' l='319' type='int smk_netlbl_mls(int , char * , struct netlbl_lsm_secattr * , int )'/>
<def f='linux-4.14.y/security/smack/smack_access.c' l='489' ll='515' type='int smk_netlbl_mls(int level, char * catset, struct netlbl_lsm_secattr * sap, int len)'/>
<use f='linux-4.14.y/security/smack/smack_access.c' l='560' u='c' c='smk_import_entry'/>
<use f='linux-4.14.y/security/smack/smack_access.c' l='563' u='c' c='smk_import_entry'/>
<doc f='linux-4.14.y/security/smack/smack_access.c' l='481'>/**
 * smk_netlbl_mls - convert a catset to netlabel mls categories
 * @catset: the Smack categories
 * @sap: where to put the netlabel categories
 *
 * Allocates and fills attr.mls
 * Returns 0 on success, error code on failure.
 */</doc>
<use f='linux-4.14.y/security/smack/smackfs.c' l='933' u='c' c='smk_set_cipso'/>
<use f='linux-4.14.y/security/smack/smackfs.c' l='2955' u='c' c='smk_preset_netlabel'/>
<dec f='linux-4.14.y/security/smack/smack.h' l='319' type='int smk_netlbl_mls(int , char * , struct netlbl_lsm_secattr * , int )'/>
<def f='linux-4.14.y/security/smack/smack_access.c' l='489' ll='515' type='int smk_netlbl_mls(int level, char * catset, struct netlbl_lsm_secattr * sap, int len)'/>
<use f='linux-4.14.y/security/smack/smack_access.c' l='560' u='c' c='smk_import_entry'/>
<use f='linux-4.14.y/security/smack/smack_access.c' l='563' u='c' c='smk_import_entry'/>
<doc f='linux-4.14.y/security/smack/smack_access.c' l='481'>/**
 * smk_netlbl_mls - convert a catset to netlabel mls categories
 * @catset: the Smack categories
 * @sap: where to put the netlabel categories
 *
 * Allocates and fills attr.mls
 * Returns 0 on success, error code on failure.
 */</doc>
<use f='linux-4.14.y/security/smack/smackfs.c' l='933' u='c' c='smk_set_cipso'/>
<use f='linux-4.14.y/security/smack/smackfs.c' l='2955' u='c' c='smk_preset_netlabel'/>
