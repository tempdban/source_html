<dec f='linux-4.14.y/include/linux/usb/hcd.h' l='494' type='void usb_hcd_end_port_resume(struct usb_bus * bus, int portnum)'/>
<def f='linux-4.14.y/drivers/usb/core/hcd.c' l='1165' ll='1173' type='void usb_hcd_end_port_resume(struct usb_bus * bus, int portnum)'/>
<dec f='linux-4.14.y/drivers/usb/core/hcd.c' l='1174' type='void usb_hcd_end_port_resume(struct usb_bus * , int )'/>
<use f='linux-4.14.y/drivers/usb/core/hcd.c' l='1174' c='usb_hcd_end_port_resume'/>
<use f='linux-4.14.y/drivers/usb/core/hcd.c' l='1174' u='a'/>
<use f='linux-4.14.y/drivers/usb/core/hcd.c' l='1174' u='a'/>
<doc f='linux-4.14.y/drivers/usb/core/hcd.c' l='1154'>/*
 * usb_hcd_end_port_resume - a root-hub port has stopped sending a resume signal
 * @bus: the bus which the root hub belongs to
 * @portnum: the port which is being resumed
 *
 * HCDs should call this function when they know that a resume signal has
 * stopped being sent to a root-hub port.  The root hub will be allowed to
 * autosuspend again.
 *
 * The bus&apos;s private lock must be held by the caller.
 */</doc>
<use f='linux-4.14.y/drivers/usb/host/ehci-hub.c' l='1062' u='c' c='ehci_hub_control'/>
<use f='linux-4.14.y/drivers/usb/host/ehci-hub.c' l='1138' u='c' c='ehci_hub_control'/>
