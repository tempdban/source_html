<dec f='linux-4.18.y/include/linux/fs.h' l='1098' type='int vfs_setlease(struct file * , long , struct file_lock ** , void ** )'/>
<def f='linux-4.18.y/fs/locks.c' l='1876' ll='1883' type='int vfs_setlease(struct file * filp, long arg, struct file_lock ** lease, void ** priv)'/>
<dec f='linux-4.18.y/fs/locks.c' l='1884' type='int vfs_setlease(struct file * , long , struct file_lock ** , void ** )'/>
<use f='linux-4.18.y/fs/locks.c' l='1884' c='vfs_setlease'/>
<use f='linux-4.18.y/fs/locks.c' l='1884' u='a'/>
<use f='linux-4.18.y/fs/locks.c' l='1884' u='a'/>
<use f='linux-4.18.y/fs/locks.c' l='1903' u='c' c='do_fcntl_add_lease'/>
<use f='linux-4.18.y/fs/locks.c' l='1924' u='c' c='fcntl_setlease'/>
<doc f='linux-4.18.y/fs/locks.c' l='1859'>/**
 * vfs_setlease        -       sets a lease on an open file
 * @filp:	file pointer
 * @arg:	type of lease to obtain
 * @lease:	file_lock to use when adding a lease
 * @priv:	private info for lm_setup when adding a lease (may be
 * 		NULL if lm_setup doesn&apos;t require it)
 *
 * Call this to establish a lease on the file. The &quot;lease&quot; argument is not
 * used for F_UNLCK requests and may be NULL. For commands that set or alter
 * an existing lease, the ``(*lease)-&gt;fl_lmops-&gt;lm_break`` operation must be
 * set; if not, this function will return -ENOLCK (and generate a scary-looking
 * stack trace).
 *
 * The &quot;priv&quot; pointer is passed directly to the lm_setup function as-is. It
 * may be NULL if the lm_setup operation doesn&apos;t require it.
 */</doc>
