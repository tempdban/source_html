<dec f='linux-4.14.y/include/linux/hardirq.h' l='26' type='void rcu_nmi_enter()'/>
<use f='linux-4.14.y/arch/x86/kernel/nmi.c' l='516' macro='1' u='c'/>
<use f='linux-4.14.y/arch/x86/kernel/traps.c' l='105' u='c' c='ist_enter'/>
<use f='linux-4.14.y/kernel/extable.c' l='142' u='c' c='kernel_text_address'/>
<def f='linux-4.14.y/kernel/rcu/tree.c' l='1059' ll='1081' type='void rcu_nmi_enter()'/>
<doc f='linux-4.14.y/kernel/rcu/tree.c' l='1050'>/**
 * rcu_nmi_enter - inform RCU of entry to NMI context
 *
 * If the CPU was idle from RCU&apos;s viewpoint, update rdtp-&gt;dynticks and
 * rdtp-&gt;dynticks_nmi_nesting to let the RCU grace-period handling know
 * that the CPU is active.  This implementation permits nested NMIs, as
 * long as the nesting level does not overflow an int.  (You will probably
 * run out of stack space first.)
 */</doc>
