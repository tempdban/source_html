<dec f='linux-4.14.y/include/linux/audit.h' l='153' type='void audit_log_secctx(struct audit_buffer * ab, u32 secid)'/>
<def f='linux-4.14.y/kernel/audit.c' l='2356' ll='2367' type='void audit_log_secctx(struct audit_buffer * ab, u32 secid)'/>
<dec f='linux-4.14.y/kernel/audit.c' l='2368' type='void audit_log_secctx(struct audit_buffer * , u32 )'/>
<use f='linux-4.14.y/kernel/audit.c' l='2368' c='audit_log_secctx'/>
<use f='linux-4.14.y/kernel/audit.c' l='2368' u='a'/>
<use f='linux-4.14.y/kernel/audit.c' l='2368' u='a'/>
<doc f='linux-4.14.y/kernel/audit.c' l='2346'>/**
 * audit_log_secctx - Converts and logs SELinux context
 * @ab: audit_buffer
 * @secid: security number
 *
 * This is a helper function that calls security_secid_to_secctx to convert
 * secid to secctx and then adds the (converted) SELinux context to the audit
 * log by calling audit_log_format, thus also preventing leak of internal secid
 * to userspace. If secid cannot be converted audit_panic is called.
 */</doc>
<dec f='linux-4.14.y/include/linux/audit.h' l='153' type='void audit_log_secctx(struct audit_buffer * ab, u32 secid)'/>
<def f='linux-4.14.y/kernel/audit.c' l='2356' ll='2367' type='void audit_log_secctx(struct audit_buffer * ab, u32 secid)'/>
<dec f='linux-4.14.y/kernel/audit.c' l='2368' type='void audit_log_secctx(struct audit_buffer * , u32 )'/>
<use f='linux-4.14.y/kernel/audit.c' l='2368' c='audit_log_secctx'/>
<use f='linux-4.14.y/kernel/audit.c' l='2368' u='a'/>
<use f='linux-4.14.y/kernel/audit.c' l='2368' u='a'/>
<doc f='linux-4.14.y/kernel/audit.c' l='2346'>/**
 * audit_log_secctx - Converts and logs SELinux context
 * @ab: audit_buffer
 * @secid: security number
 *
 * This is a helper function that calls security_secid_to_secctx to convert
 * secid to secctx and then adds the (converted) SELinux context to the audit
 * log by calling audit_log_format, thus also preventing leak of internal secid
 * to userspace. If secid cannot be converted audit_panic is called.
 */</doc>
