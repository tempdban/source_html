<dec f='linux-4.14.y/include/net/llc.h' l='109' type='struct llc_sap * llc_sap_open(unsigned char lsap, int (*)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) rcv)'/>
<use f='linux-4.14.y/net/802/p8022.c' l='48' u='c' c='register_8022_client'/>
<use f='linux-4.14.y/net/802/psnap.c' l='104' u='c' c='snap_init'/>
<use f='linux-4.14.y/net/802/stp.c' l='71' u='c' c='stp_proto_register'/>
<def f='linux-4.14.y/net/llc/llc_core.c' l='91' ll='111' type='struct llc_sap * llc_sap_open(unsigned char lsap, int (*)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) func)'/>
<dec f='linux-4.14.y/net/llc/llc_core.c' l='163' type='struct llc_sap * llc_sap_open(unsigned char , int (*)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) )'/>
<use f='linux-4.14.y/net/llc/llc_core.c' l='163' c='llc_sap_open'/>
<use f='linux-4.14.y/net/llc/llc_core.c' l='163' u='a'/>
<use f='linux-4.14.y/net/llc/llc_core.c' l='163' u='a'/>
<doc f='linux-4.14.y/net/llc/llc_core.c' l='82'>/**
 *	llc_sap_open - open interface to the upper layers.
 *	@lsap: SAP number.
 *	@func: rcv func for datalink protos
 *
 *	Interface function to upper layer. Each one who wants to get a SAP
 *	(for example NetBEUI) should call this function. Returns the opened
 *	SAP for success, NULL for failure.
 */</doc>
