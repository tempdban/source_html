<dec f='linux-4.14.y/include/net/netfilter/nf_tables.h' l='999' type='int nft_register_afinfo(struct net * , struct nft_af_info * )'/>
<use f='linux-4.14.y/net/ipv4/netfilter/nf_tables_ipv4.c' l='70' u='c' c='nf_tables_ipv4_init_net'/>
<def f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='36' ll='43' type='int nft_register_afinfo(struct net * net, struct nft_af_info * afi)'/>
<dec f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' type='int nft_register_afinfo(struct net * , struct nft_af_info * )'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' c='nft_register_afinfo'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' u='a'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' u='a'/>
<doc f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='28'>/**
 *	nft_register_afinfo - register nf_tables address family info
 *
 *	@afi: address family info to register
 *
 *	Register the address family for use with nf_tables. Returns zero on
 *	success or a negative errno code otherwise.
 */</doc>
<use f='linux-4.14.y/net/netfilter/nf_tables_netdev.c' l='58' u='c' c='nf_tables_netdev_init_net'/>
<dec f='linux-4.14.y/include/net/netfilter/nf_tables.h' l='999' type='int nft_register_afinfo(struct net * , struct nft_af_info * )'/>
<use f='linux-4.14.y/net/ipv4/netfilter/nf_tables_ipv4.c' l='70' u='c' c='nf_tables_ipv4_init_net'/>
<def f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='36' ll='43' type='int nft_register_afinfo(struct net * net, struct nft_af_info * afi)'/>
<dec f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' type='int nft_register_afinfo(struct net * , struct nft_af_info * )'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' c='nft_register_afinfo'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' u='a'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='44' u='a'/>
<doc f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='28'>/**
 *	nft_register_afinfo - register nf_tables address family info
 *
 *	@afi: address family info to register
 *
 *	Register the address family for use with nf_tables. Returns zero on
 *	success or a negative errno code otherwise.
 */</doc>
<use f='linux-4.14.y/net/netfilter/nf_tables_netdev.c' l='58' u='c' c='nf_tables_netdev_init_net'/>
