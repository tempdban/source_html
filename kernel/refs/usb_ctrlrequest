<def f='linux-4.14.y/include/uapi/linux/usb/ch9.h' l='209' ll='215'/>
<size>8</size>
<doc f='linux-4.14.y/include/uapi/linux/usb/ch9.h' l='192'>/**
 * struct usb_ctrlrequest - SETUP data for a USB device control request
 * @bRequestType: matches the USB bmRequestType field
 * @bRequest: matches the USB bRequest field
 * @wValue: matches the USB wValue field (le16 byte order)
 * @wIndex: matches the USB wIndex field (le16 byte order)
 * @wLength: matches the USB wLength field (le16 byte order)
 *
 * This structure is used to send control requests to a USB device.  It matches
 * the different fields of the USB 2.0 Spec section 9.3, table 9-2.  See the
 * USB spec for a fuller description of the different fields, and what they are
 * used for.
 *
 * Note that the driver for any interface can issue control requests.
 * For most devices, interfaces don&apos;t coordinate with each other, so
 * such requests may be made at any time.
 */</doc>
<mbr r='usb_ctrlrequest::bRequestType' o='0' t='__u8'/>
<mbr r='usb_ctrlrequest::bRequest' o='8' t='__u8'/>
<mbr r='usb_ctrlrequest::wValue' o='16' t='__le16'/>
<mbr r='usb_ctrlrequest::wIndex' o='32' t='__le16'/>
<mbr r='usb_ctrlrequest::wLength' o='48' t='__le16'/>
