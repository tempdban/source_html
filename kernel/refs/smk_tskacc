<dec f='linux-4.18.y/security/smack/smack.h' l='314' type='int smk_tskacc(struct task_smack * , struct smack_known * , u32 , struct smk_audit_info * )'/>
<def f='linux-4.18.y/security/smack/smack_access.c' l='223' ll='262' type='int smk_tskacc(struct task_smack * tsp, struct smack_known * obj_known, u32 mode, struct smk_audit_info * a)'/>
<use f='linux-4.18.y/security/smack/smack_access.c' l='280' u='c' c='smk_curacc'/>
<doc f='linux-4.18.y/security/smack/smack_access.c' l='211'>/**
 * smk_tskacc - determine if a task has a specific access to an object
 * @tsp: a pointer to the subject&apos;s task
 * @obj_known: a pointer to the object&apos;s label entry
 * @mode: the access requested, in &quot;MAY&quot; format
 * @a : common audit data
 *
 * This function checks the subject task&apos;s label/object label pair
 * in the access rule list and returns 0 if the access is permitted,
 * non zero otherwise. It allows that the task may have the capability
 * to override the rules.
 */</doc>
<use f='linux-4.18.y/security/smack/smack_lsm.c' l='456' u='c' c='smk_ptrace_rule_check'/>
<use f='linux-4.18.y/security/smack/smack_lsm.c' l='1939' u='c' c='smack_file_open'/>
