<dec f='linux-4.18.y/include/drm/drm_property.h' l='255' type='struct drm_property * drm_property_create_signed_range(struct drm_device * dev, u32 flags, const char * name, int64_t min, int64_t max)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='248' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='254' u='c' c='drm_mode_create_standard_properties'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='278' u='c' c='drm_mode_create_standard_properties'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='300' ll='306' type='struct drm_property * drm_property_create_signed_range(struct drm_device * dev, u32 flags, const char * name, int64_t min, int64_t max)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='307' type='struct drm_property * drm_property_create_signed_range(struct drm_device * , u32 , const char * , int64_t , int64_t )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='307' c='drm_property_create_signed_range'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='307' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='307' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='281'>/**
 * drm_property_create_signed_range - create a new signed ranged property type
 * @dev: drm device
 * @flags: flags specifying the property type
 * @name: name of the property
 * @min: minimum value of the property
 * @max: maximum value of the property
 *
 * This creates a new generic drm property which can then be attached to a drm
 * object with drm_object_attach_property(). The returned property object must
 * be freed with drm_property_destroy(), which is done automatically when
 * calling drm_mode_config_cleanup().
 *
 * Userspace is allowed to set any signed integer value in the (min, max)
 * range inclusive.
 *
 * Returns:
 * A pointer to the newly created property on success, NULL on failure.
 */</doc>
