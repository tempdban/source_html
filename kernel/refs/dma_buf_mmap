<dec f='linux-4.18.y/include/linux/dma-buf.h' l='403' type='int dma_buf_mmap(struct dma_buf * , struct vm_area_struct * , unsigned long )'/>
<def f='linux-4.18.y/drivers/dma-buf/dma-buf.c' l='947' ll='982' type='int dma_buf_mmap(struct dma_buf * dmabuf, struct vm_area_struct * vma, unsigned long pgoff)'/>
<dec f='linux-4.18.y/drivers/dma-buf/dma-buf.c' l='983' type='int dma_buf_mmap(struct dma_buf * , struct vm_area_struct * , unsigned long )'/>
<use f='linux-4.18.y/drivers/dma-buf/dma-buf.c' l='983' c='dma_buf_mmap'/>
<use f='linux-4.18.y/drivers/dma-buf/dma-buf.c' l='983' u='a'/>
<use f='linux-4.18.y/drivers/dma-buf/dma-buf.c' l='983' u='a'/>
<doc f='linux-4.18.y/drivers/dma-buf/dma-buf.c' l='933'>/**
 * dma_buf_mmap - Setup up a userspace mmap with the given vma
 * @dmabuf:	[in]	buffer that should back the vma
 * @vma:	[in]	vma for the mmap
 * @pgoff:	[in]	offset in pages where this mmap should start within the
 *			dma-buf buffer.
 *
 * This function adjusts the passed in vma so that it points at the file of the
 * dma_buf operation. It also adjusts the starting pgoff and does bounds
 * checking on the size of the vma. Then it calls the exporters mmap function to
 * set up the mapping.
 *
 * Can return negative error values, returns 0 on success.
 */</doc>
