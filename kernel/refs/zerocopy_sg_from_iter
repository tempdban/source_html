<dec f='linux-4.14.y/include/linux/skbuff.h' l='3253' type='int zerocopy_sg_from_iter(struct sk_buff * skb, struct iov_iter * frm)'/>
<use f='linux-4.14.y/drivers/net/tap.c' l='700' u='c' c='tap_get_user'/>
<use f='linux-4.14.y/drivers/net/tun.c' l='1497' u='c' c='tun_get_user'/>
<def f='linux-4.14.y/net/core/datagram.c' l='638' ll='647' type='int zerocopy_sg_from_iter(struct sk_buff * skb, struct iov_iter * from)'/>
<dec f='linux-4.14.y/net/core/datagram.c' l='648' type='int zerocopy_sg_from_iter(struct sk_buff * , struct iov_iter * )'/>
<use f='linux-4.14.y/net/core/datagram.c' l='648' c='zerocopy_sg_from_iter'/>
<use f='linux-4.14.y/net/core/datagram.c' l='648' u='a'/>
<use f='linux-4.14.y/net/core/datagram.c' l='648' u='a'/>
<doc f='linux-4.14.y/net/core/datagram.c' l='628'>/**
 *	zerocopy_sg_from_iter - Build a zerocopy datagram from an iov_iter
 *	@skb: buffer to copy
 *	@from: the source to copy from
 *
 *	The function will first copy up to headlen, and then pin the userspace
 *	pages and build frags through them.
 *
 *	Returns 0, -EFAULT or -EMSGSIZE.
 */</doc>
