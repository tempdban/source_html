<dec f='linux-4.14.y/drivers/acpi/acpica/acutils.h' l='389' type='acpi_status acpi_ut_execute_STA(struct acpi_namespace_node * device_node, u32 * status_flags)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/nsinit.c' l='565' u='c' c='acpi_ns_init_one_device'/>
<use f='linux-4.14.y/drivers/acpi/acpica/nsxfeval.c' l='758' u='c' c='acpi_ns_get_device_callback'/>
<use f='linux-4.14.y/drivers/acpi/acpica/nsxfname.c' l='386' u='c' c='acpi_get_object_info'/>
<def f='linux-4.14.y/drivers/acpi/acpica/uteval.c' l='249' ll='285' type='acpi_status acpi_ut_execute_STA(struct acpi_namespace_node * device_node, u32 * flags)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/uteval.c' l='232'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ut_execute_STA
 *
 * PARAMETERS:  device_node         - Node for the device
 *              flags               - Where the status flags are returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Executes _STA for selected device and stores results in
 *              *Flags. If _STA does not exist, then the device is assumed
 *              to be present/functional/enabled (as per the ACPI spec).
 *
 *              NOTE: Internal function, no parameter validation
 *
 ******************************************************************************/</doc>
<dec f='linux-4.14.y/drivers/acpi/acpica/acutils.h' l='389' type='acpi_status acpi_ut_execute_STA(struct acpi_namespace_node * device_node, u32 * status_flags)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/nsinit.c' l='565' u='c' c='acpi_ns_init_one_device'/>
<use f='linux-4.14.y/drivers/acpi/acpica/nsxfeval.c' l='758' u='c' c='acpi_ns_get_device_callback'/>
<use f='linux-4.14.y/drivers/acpi/acpica/nsxfname.c' l='386' u='c' c='acpi_get_object_info'/>
<def f='linux-4.14.y/drivers/acpi/acpica/uteval.c' l='249' ll='285' type='acpi_status acpi_ut_execute_STA(struct acpi_namespace_node * device_node, u32 * flags)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/uteval.c' l='232'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ut_execute_STA
 *
 * PARAMETERS:  device_node         - Node for the device
 *              flags               - Where the status flags are returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Executes _STA for selected device and stores results in
 *              *Flags. If _STA does not exist, then the device is assumed
 *              to be present/functional/enabled (as per the ACPI spec).
 *
 *              NOTE: Internal function, no parameter validation
 *
 ******************************************************************************/</doc>
