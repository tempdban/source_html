<def f='linux-4.14.y/arch/x86/include/asm/msr.h' l='187' ll='194' type='unsigned long long rdtsc()'/>
<use f='linux-4.14.y/arch/x86/include/asm/msr.h' l='218' u='c' c='rdtsc_ordered'/>
<use f='linux-4.14.y/arch/x86/include/asm/tsc.h' l='30' u='c' c='get_cycles'/>
<doc f='linux-4.14.y/arch/x86/include/asm/msr.h' l='178'>/**
 * rdtsc() - returns the current TSC without ordering constraints
 *
 * rdtsc() returns the result of RDTSC as a 64-bit integer.  The
 * only ordering constraint it supplies is the ordering implied by
 * &quot;asm volatile&quot;: it will put the RDTSC in the place you expect.  The
 * CPU can and will speculatively execute that RDTSC, though, so the
 * results can be non-monotonic if compared on different CPUs.
 */</doc>
<use f='linux-4.14.y/arch/x86/kernel/apic/apic.c' l='476' u='c' c='lapic_next_deadline'/>
<use f='linux-4.14.y/arch/x86/kernel/apic/apic.c' l='730' u='c' c='lapic_cal_handler'/>
<use f='linux-4.14.y/arch/x86/kernel/apic/apic.c' l='1337' u='c' c='setup_local_APIC'/>
<use f='linux-4.14.y/arch/x86/kernel/apic/apic.c' l='1421' u='c' c='setup_local_APIC'/>
<use f='linux-4.14.y/arch/x86/kernel/espfix_64.c' l='113' u='c' c='init_espfix_random'/>
<use f='linux-4.14.y/arch/x86/kernel/hpet.c' l='873' u='c' c='hpet_clocksource_register'/>
<use f='linux-4.14.y/arch/x86/kernel/hpet.c' l='883' u='c' c='hpet_clocksource_register'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc.c' l='196' u='c' c='native_sched_clock'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc.c' l='949' u='c' c='time_cpufreq_notifier'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc.c' l='1327' u='c' c='tsc_init'/>
<use f='linux-4.14.y/arch/x86/lib/delay.c' l='153' u='c' c='read_current_timer'/>
<use f='linux-4.14.y/drivers/cpufreq/intel_pstate.c' l='1410' u='c' c='intel_pstate_sample'/>
