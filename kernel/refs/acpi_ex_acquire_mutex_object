<dec f='linux-4.18.y/drivers/acpi/acpica/acinterp.h' l='245' type='acpi_status acpi_ex_acquire_mutex_object(u16 timeout, union acpi_operand_object * obj_desc, u64 thread_id)'/>
<use f='linux-4.18.y/drivers/acpi/acpica/evxface.c' l='1038' u='c' c='acpi_acquire_global_lock'/>
<def f='linux-4.18.y/drivers/acpi/acpica/exmutex.c' l='125' ll='174' type='acpi_status acpi_ex_acquire_mutex_object(u16 timeout, union acpi_operand_object * obj_desc, u64 thread_id)'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exmutex.c' l='233' u='c' c='acpi_ex_acquire_mutex'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/exmutex.c' l='102'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_acquire_mutex_object
 *
 * PARAMETERS:  timeout             - Timeout in milliseconds
 *              obj_desc            - Mutex object
 *              thread_id           - Current thread state
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Acquire an AML mutex, low-level interface. Provides a common
 *              path that supports multiple acquires by the same thread.
 *
 * MUTEX:       Interpreter must be locked
 *
 * NOTE: This interface is called from three places:
 * 1) From acpi_ex_acquire_mutex, via an AML Acquire() operator
 * 2) From acpi_ex_acquire_global_lock when an AML Field access requires the
 *    global lock
 * 3) From the external interface, acpi_acquire_global_lock
 *
 ******************************************************************************/</doc>
<use f='linux-4.18.y/drivers/acpi/acpica/exutils.c' l='182' u='c' c='acpi_ex_acquire_global_lock'/>
