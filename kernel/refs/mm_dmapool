<def f='linux-4.14.y/drivers/scsi/megaraid/megaraid_ioctl.h' l='235' ll='242'/>
<size>40</size>
<doc f='linux-4.14.y/drivers/scsi/megaraid/megaraid_ioctl.h' l='225'>/**
 * mm_dmapool_t	: Represents one dma pool with just one buffer
 *
 * @vaddr	: Virtual address
 * @paddr	: DMA physicall address
 * @bufsize	: In KB - 4 = 4k, 8 = 8k etc.
 * @handle	: Handle to the dma pool
 * @lock	: lock to synchronize access to the pool
 * @in_use	: If pool already in use, attach new block
 */</doc>
<mbr r='mm_dmapool::vaddr' o='0' t='caddr_t'/>
<mbr r='mm_dmapool::paddr' o='64' t='dma_addr_t'/>
<mbr r='mm_dmapool::buf_size' o='128' t='uint32_t'/>
<mbr r='mm_dmapool::handle' o='192' t='struct dma_pool *'/>
<mbr r='mm_dmapool::lock' o='256' t='spinlock_t'/>
<mbr r='mm_dmapool::in_use' o='288' t='uint8_t'/>
<def f='linux-4.14.y/drivers/scsi/megaraid/megaraid_ioctl.h' l='235' ll='242'/>
<size>40</size>
<doc f='linux-4.14.y/drivers/scsi/megaraid/megaraid_ioctl.h' l='225'>/**
 * mm_dmapool_t	: Represents one dma pool with just one buffer
 *
 * @vaddr	: Virtual address
 * @paddr	: DMA physicall address
 * @bufsize	: In KB - 4 = 4k, 8 = 8k etc.
 * @handle	: Handle to the dma pool
 * @lock	: lock to synchronize access to the pool
 * @in_use	: If pool already in use, attach new block
 */</doc>
<mbr r='mm_dmapool::vaddr' o='0' t='caddr_t'/>
<mbr r='mm_dmapool::paddr' o='64' t='dma_addr_t'/>
<mbr r='mm_dmapool::buf_size' o='128' t='uint32_t'/>
<mbr r='mm_dmapool::handle' o='192' t='struct dma_pool *'/>
<mbr r='mm_dmapool::lock' o='256' t='spinlock_t'/>
<mbr r='mm_dmapool::in_use' o='288' t='uint8_t'/>
