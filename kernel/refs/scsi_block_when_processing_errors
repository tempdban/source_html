<dec f='linux-4.18.y/include/scsi/scsi_eh.h' l='17' type='int scsi_block_when_processing_errors(struct scsi_device * )'/>
<def f='linux-4.18.y/drivers/scsi/scsi_error.c' l='333' ll='345' type='int scsi_block_when_processing_errors(struct scsi_device * sdev)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi_error.c' l='346' type='int scsi_block_when_processing_errors(struct scsi_device * )'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='346' c='scsi_block_when_processing_errors'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='346' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='346' u='a'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_error.c' l='322'>/**
 * scsi_block_when_processing_errors - Prevent cmds from being queued.
 * @sdev:	Device on which we are performing recovery.
 *
 * Description:
 *     We block until the host is out of error recovery, and then check to
 *     see whether the host or the device is offline.
 *
 * Return value:
 *     0 when dev was taken offline by error recovery. 1 OK to proceed.
 */</doc>
<use f='linux-4.18.y/drivers/scsi/scsi_ioctl.c' l='286' u='c' c='scsi_ioctl_block_when_processing_errors'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='1333' u='c' c='sd_open'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='1365' u='c' c='sd_open'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='1397' u='c' c='sd_release'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='1570' u='c' c='sd_check_events'/>
<use f='linux-4.18.y/drivers/scsi/sg.c' l='321' u='c' c='sg_open'/>
<use f='linux-4.18.y/drivers/scsi/sg.c' l='632' u='c' c='sg_write'/>
<use f='linux-4.18.y/drivers/scsi/sg.c' l='923' u='c' c='sg_ioctl'/>
<use f='linux-4.18.y/drivers/scsi/sr.c' l='662' u='c' c='sr_open'/>
<use f='linux-4.18.y/drivers/scsi/sr_ioctl.c' l='199' u='c' c='sr_do_ioctl'/>
<use f='linux-4.18.y/drivers/scsi/st.c' l='1285' u='c' c='st_open'/>
<use f='linux-4.18.y/drivers/scsi/st.c' l='1486' u='c' c='rw_checks'/>
