<def f='linux-4.18.y/drivers/md/raid10.h' l='18' ll='26'/>
<size>32</size>
<doc f='linux-4.18.y/drivers/md/raid10.h' l='5'>/* Note: raid10_info.rdev can be set to NULL asynchronously by
 * raid10_remove_disk.
 * There are three safe ways to access raid10_info.rdev.
 * 1/ when holding mddev-&gt;reconfig_mutex
 * 2/ when resync/recovery/reshape is known to be happening - i.e. in code
 *    that is called as part of performing resync/recovery/reshape.
 * 3/ while holding rcu_read_lock(), use rcu_dereference to get the pointer
 *    and if it is non-NULL, increment rdev-&gt;nr_pending before dropping the
 *    RCU lock.
 * When .rdev is set to NULL, the nr_pending count checked again and if it has
 * been incremented, the pointer is put back in .rdev.
 */</doc>
<mbr r='raid10_info::rdev' o='0' t='struct md_rdev *'/>
<mbr r='raid10_info::replacement' o='64' t='struct md_rdev *'/>
<mbr r='raid10_info::head_position' o='128' t='sector_t'/>
<mbr r='raid10_info::recovery_disabled' o='192' t='int'/>
