<dec f='linux-4.14.y/include/linux/rtnetlink.h' l='106' type='int ndo_dflt_fdb_dump(struct sk_buff * skb, struct netlink_callback * cb, struct net_device * dev, struct net_device * filter_dev, int * idx)'/>
<def f='linux-4.14.y/net/core/rtnetlink.c' l='3259' ll='3275' type='int ndo_dflt_fdb_dump(struct sk_buff * skb, struct netlink_callback * cb, struct net_device * dev, struct net_device * filter_dev, int * idx)'/>
<dec f='linux-4.14.y/net/core/rtnetlink.c' l='3276' type='int ndo_dflt_fdb_dump(struct sk_buff * , struct netlink_callback * , struct net_device * , struct net_device * , int * )'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3276' c='ndo_dflt_fdb_dump'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3276' u='a'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3276' u='a'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3359' u='c' c='rtnl_fdb_dump'/>
<doc f='linux-4.14.y/net/core/rtnetlink.c' l='3251'>/**
 * ndo_dflt_fdb_dump - default netdevice operation to dump an FDB table.
 * @nlh: netlink message header
 * @dev: netdevice
 *
 * Default netdevice operation to dump the existing unicast address list.
 * Returns number of addresses from list put in skb.
 */</doc>
