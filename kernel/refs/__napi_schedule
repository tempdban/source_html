<dec f='linux-4.14.y/include/linux/netdevice.h' l='411' type='void __napi_schedule(struct napi_struct * n)'/>
<use f='linux-4.14.y/include/linux/netdevice.h' l='431' u='c' c='napi_schedule'/>
<use f='linux-4.14.y/include/linux/netdevice.h' l='450' u='c' c='napi_reschedule'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-drv.c' l='666' u='c' c='xgbe_tx_timer'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e100.c' l='2240' u='c' c='e100_intr'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000/e1000_main.c' l='3808' u='c' c='e1000_intr'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1822' u='c' c='e1000_intr_msi'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1902' u='c' c='e1000_intr'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1924' u='c' c='e1000_msix_other'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1981' u='c' c='e1000_intr_msix_rx'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igbvf/netdev.c' l='936' u='c' c='igbvf_intr_msix_rx'/>
<use f='linux-4.14.y/drivers/net/ethernet/realtek/8139cp.c' l='601' u='c' c='cp_interrupt'/>
<use f='linux-4.14.y/drivers/net/ethernet/realtek/8139too.c' l='2195' u='c' c='rtl8139_interrupt'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='257' u='c' c='virtqueue_napi_schedule'/>
<def f='linux-4.14.y/net/core/dev.c' l='5210' ll='5217' type='void __napi_schedule(struct napi_struct * n)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='5218' type='void __napi_schedule(struct napi_struct * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='5218' c='__napi_schedule'/>
<use f='linux-4.14.y/net/core/dev.c' l='5218' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='5218' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='5314' u='c' c='napi_complete_done'/>
<use f='linux-4.14.y/net/core/dev.c' l='5364' u='c' c='busy_poll_stop'/>
<doc f='linux-4.14.y/net/core/dev.c' l='5203'>/**
 * __napi_schedule - schedule for receive
 * @n: entry to schedule
 *
 * The entry&apos;s receive function will be scheduled to run.
 * Consider using __napi_schedule_irqoff() if hard irqs are masked.
 */</doc>
