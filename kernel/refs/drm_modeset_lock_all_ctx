<dec f='linux-4.18.y/include/drm/drm_modeset_lock.h' l='130' type='int drm_modeset_lock_all_ctx(struct drm_device * dev, struct drm_modeset_acquire_ctx * ctx)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3025' u='c' c='drm_atomic_helper_shutdown'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3077' u='c' c='drm_atomic_helper_suspend'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='3178' u='c' c='drm_atomic_helper_resume'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_color_mgmt.c' l='260' u='c' c='drm_mode_gamma_set_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='594' u='c' c='drm_mode_setcrtc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_framebuffer.c' l='802' u='c' c='atomic_remove_fb'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='105' u='c' c='drm_modeset_lock_all'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='388' ll='412' type='int drm_modeset_lock_all_ctx(struct drm_device * dev, struct drm_modeset_acquire_ctx * ctx)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='413' type='int drm_modeset_lock_all_ctx(struct drm_device * , struct drm_modeset_acquire_ctx * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='413' c='drm_modeset_lock_all_ctx'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='413' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='413' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_modeset_lock.c' l='370'>/**
 * drm_modeset_lock_all_ctx - take all modeset locks
 * @dev: DRM device
 * @ctx: lock acquisition context
 *
 * This function takes all modeset locks, suitable where a more fine-grained
 * scheme isn&apos;t (yet) implemented.
 *
 * Unlike drm_modeset_lock_all(), it doesn&apos;t take the &amp;drm_mode_config.mutex
 * since that lock isn&apos;t required for modeset state changes. Callers which
 * need to grab that lock too need to do so outside of the acquire context
 * @ctx.
 *
 * Locks acquired with this function should be released by calling the
 * drm_modeset_drop_locks() function on @ctx.
 *
 * Returns: 0 on success or a negative error-code on failure.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='682' u='c' c='setplane_internal'/>
