<dec f='linux-4.14.y/include/drm/drm_plane.h' l='407' type='bool (*)(struct drm_plane *, uint32_t, uint64_t)'/>
<offset>768</offset>
<doc f='linux-4.14.y/include/drm/drm_plane.h' l='394'>/**
	 * @format_mod_supported:
	 *
	 * This optional hook is used for the DRM to determine if the given
	 * format/modifier combination is valid for the plane. This allows the
	 * DRM to generate the correct format bitmask (which formats apply to
	 * which modifier).
	 *
	 * Returns:
	 *
	 * True if the given modifier is valid for that format on the plane.
	 * False otherwise.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='119' u='r' c='create_in_format_blob'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='125' u='r' c='create_in_format_blob'/>
<dec f='linux-4.14.y/include/drm/drm_plane.h' l='407' type='bool (*)(struct drm_plane *, uint32_t, uint64_t)'/>
<offset>768</offset>
<doc f='linux-4.14.y/include/drm/drm_plane.h' l='394'>/**
	 * @format_mod_supported:
	 *
	 * This optional hook is used for the DRM to determine if the given
	 * format/modifier combination is valid for the plane. This allows the
	 * DRM to generate the correct format bitmask (which formats apply to
	 * which modifier).
	 *
	 * Returns:
	 *
	 * True if the given modifier is valid for that format on the plane.
	 * False otherwise.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='119' u='r' c='create_in_format_blob'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='125' u='r' c='create_in_format_blob'/>
