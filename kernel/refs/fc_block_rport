<dec f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='807' type='int fc_block_rport(struct fc_rport * rport)'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3284' ll='3302' type='int fc_block_rport(struct fc_rport * rport)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' type='int fc_block_rport(struct fc_rport * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' c='fc_block_rport'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3326' u='c' c='fc_block_scsi_eh'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3270'>/**
 * fc_block_rport() - Block SCSI eh thread for blocked fc_rport.
 * @rport: Remote port that scsi_eh is trying to recover.
 *
 * This routine can be called from a FC LLD scsi_eh callback. It
 * blocks the scsi_eh thread until the fc_rport leaves the
 * FC_PORTSTATE_BLOCKED, or the fast_io_fail_tmo fires. This is
 * necessary to avoid the scsi_eh failing recovery actions for blocked
 * rports which would lead to offlined SCSI devices.
 *
 * Returns: 0 if the fc_rport left the state FC_PORTSTATE_BLOCKED.
 *	    FAST_IO_FAIL if the fast_io_fail_tmo fired, this should be
 *	    passed back to scsi_eh.
 */</doc>
<dec f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='807' type='int fc_block_rport(struct fc_rport * rport)'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3284' ll='3302' type='int fc_block_rport(struct fc_rport * rport)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' type='int fc_block_rport(struct fc_rport * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' c='fc_block_rport'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3303' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3326' u='c' c='fc_block_scsi_eh'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3270'>/**
 * fc_block_rport() - Block SCSI eh thread for blocked fc_rport.
 * @rport: Remote port that scsi_eh is trying to recover.
 *
 * This routine can be called from a FC LLD scsi_eh callback. It
 * blocks the scsi_eh thread until the fc_rport leaves the
 * FC_PORTSTATE_BLOCKED, or the fast_io_fail_tmo fires. This is
 * necessary to avoid the scsi_eh failing recovery actions for blocked
 * rports which would lead to offlined SCSI devices.
 *
 * Returns: 0 if the fc_rport left the state FC_PORTSTATE_BLOCKED.
 *	    FAST_IO_FAIL if the fast_io_fail_tmo fired, this should be
 *	    passed back to scsi_eh.
 */</doc>
