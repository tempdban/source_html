<dec f='linux-4.14.y/include/acpi/pcc.h' l='17' type='struct mbox_chan * pcc_mbox_request_channel(struct mbox_client * cl, int subspace_id)'/>
<use f='linux-4.14.y/drivers/acpi/cppc_acpi.c' l='545' u='c' c='register_pcc_channel'/>
<def f='linux-4.14.y/drivers/mailbox/pcc.c' l='240' ll='287' type='struct mbox_chan * pcc_mbox_request_channel(struct mbox_client * cl, int subspace_id)'/>
<dec f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' type='struct mbox_chan * pcc_mbox_request_channel(struct mbox_client * , int )'/>
<use f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' c='pcc_mbox_request_channel'/>
<use f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' u='a'/>
<doc f='linux-4.14.y/drivers/mailbox/pcc.c' l='227'>/**
 * pcc_mbox_request_channel - PCC clients call this function to
 *		request a pointer to their PCC subspace, from which they
 *		can get the details of communicating with the remote.
 * @cl: Pointer to Mailbox client, so we know where to bind the
 *		Channel.
 * @subspace_id: The PCC Subspace index as parsed in the PCC client
 *		ACPI package. This is used to lookup the array of PCC
 *		subspaces as parsed by the PCC Mailbox controller.
 *
 * Return: Pointer to the Mailbox Channel if successful or
 *		ERR_PTR.
 */</doc>
<dec f='linux-4.14.y/include/acpi/pcc.h' l='17' type='struct mbox_chan * pcc_mbox_request_channel(struct mbox_client * cl, int subspace_id)'/>
<use f='linux-4.14.y/drivers/acpi/cppc_acpi.c' l='545' u='c' c='register_pcc_channel'/>
<def f='linux-4.14.y/drivers/mailbox/pcc.c' l='240' ll='287' type='struct mbox_chan * pcc_mbox_request_channel(struct mbox_client * cl, int subspace_id)'/>
<dec f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' type='struct mbox_chan * pcc_mbox_request_channel(struct mbox_client * , int )'/>
<use f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' c='pcc_mbox_request_channel'/>
<use f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/pcc.c' l='288' u='a'/>
<doc f='linux-4.14.y/drivers/mailbox/pcc.c' l='227'>/**
 * pcc_mbox_request_channel - PCC clients call this function to
 *		request a pointer to their PCC subspace, from which they
 *		can get the details of communicating with the remote.
 * @cl: Pointer to Mailbox client, so we know where to bind the
 *		Channel.
 * @subspace_id: The PCC Subspace index as parsed in the PCC client
 *		ACPI package. This is used to lookup the array of PCC
 *		subspaces as parsed by the PCC Mailbox controller.
 *
 * Return: Pointer to the Mailbox Channel if successful or
 *		ERR_PTR.
 */</doc>
