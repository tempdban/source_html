<dec f='linux-4.18.y/include/drm/drm_plane.h' l='240' type='int (*)(struct drm_plane *, struct drm_modeset_acquire_ctx *)'/>
<offset>64</offset>
<doc f='linux-4.18.y/include/drm/drm_plane.h' l='225'>/**
	 * @disable_plane:
	 *
	 * This is the legacy entry point to disable the plane. The DRM core
	 * calls this method in response to a DRM_IOCTL_MODE_SETPLANE IOCTL call
	 * with the frame buffer ID set to 0.  Disabled planes must not be
	 * processed by the CRTC.
	 *
	 * Drivers implementing atomic modeset should use
	 * drm_atomic_helper_disable_plane() to implement this hook.
	 *
	 * RETURNS:
	 *
	 * 0 on success or a negative error code on failure.
	 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='415' u='r' c='drm_plane_force_disable'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane.c' l='604' u='r' c='__setplane_internal'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane_helper.c' l='260' u='r' c='drm_primary_helper_update'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_plane_helper.c' l='334' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_simple_kms_helper.c' l='202' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_display.c' l='831' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_display.c' l='853' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_plane.c' l='125' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='312' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='321' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='570' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='579' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1350' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1359' u='w'/>
