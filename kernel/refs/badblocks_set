<dec f='linux-4.14.y/include/linux/badblocks.h' l='46' type='int badblocks_set(struct badblocks * bb, sector_t s, int sectors, int acknowledged)'/>
<def f='linux-4.14.y/block/badblocks.c' l='171' ll='322' type='int badblocks_set(struct badblocks * bb, sector_t s, int sectors, int acknowledged)'/>
<dec f='linux-4.14.y/block/badblocks.c' l='323' type='int badblocks_set(struct badblocks * , sector_t , int , int )'/>
<use f='linux-4.14.y/block/badblocks.c' l='323' c='badblocks_set'/>
<use f='linux-4.14.y/block/badblocks.c' l='323' u='a'/>
<use f='linux-4.14.y/block/badblocks.c' l='323' u='a'/>
<use f='linux-4.14.y/block/badblocks.c' l='545' u='c' c='badblocks_store'/>
<doc f='linux-4.14.y/block/badblocks.c' l='156'>/**
 * badblocks_set() - Add a range of bad blocks to the table.
 * @bb:		the badblocks structure that holds all badblock information
 * @s:		first sector to mark as bad
 * @sectors:	number of sectors to mark as bad
 * @acknowledged: weather to mark the bad sectors as acknowledged
 *
 * This might extend the table, or might contract it if two adjacent ranges
 * can be merged. We binary-search to find the &apos;insertion&apos; point, then
 * decide how best to handle it.
 *
 * Return:
 *  0: success
 *  1: failed to set badblocks (out of space)
 */</doc>
<use f='linux-4.14.y/drivers/md/md.c' l='1574' u='c' c='super_1_load'/>
<use f='linux-4.14.y/drivers/md/md.c' l='8976' u='c' c='rdev_set_badblocks'/>
<dec f='linux-4.14.y/include/linux/badblocks.h' l='46' type='int badblocks_set(struct badblocks * bb, sector_t s, int sectors, int acknowledged)'/>
<def f='linux-4.14.y/block/badblocks.c' l='171' ll='322' type='int badblocks_set(struct badblocks * bb, sector_t s, int sectors, int acknowledged)'/>
<dec f='linux-4.14.y/block/badblocks.c' l='323' type='int badblocks_set(struct badblocks * , sector_t , int , int )'/>
<use f='linux-4.14.y/block/badblocks.c' l='323' c='badblocks_set'/>
<use f='linux-4.14.y/block/badblocks.c' l='323' u='a'/>
<use f='linux-4.14.y/block/badblocks.c' l='323' u='a'/>
<use f='linux-4.14.y/block/badblocks.c' l='545' u='c' c='badblocks_store'/>
<doc f='linux-4.14.y/block/badblocks.c' l='156'>/**
 * badblocks_set() - Add a range of bad blocks to the table.
 * @bb:		the badblocks structure that holds all badblock information
 * @s:		first sector to mark as bad
 * @sectors:	number of sectors to mark as bad
 * @acknowledged: weather to mark the bad sectors as acknowledged
 *
 * This might extend the table, or might contract it if two adjacent ranges
 * can be merged. We binary-search to find the &apos;insertion&apos; point, then
 * decide how best to handle it.
 *
 * Return:
 *  0: success
 *  1: failed to set badblocks (out of space)
 */</doc>
<use f='linux-4.14.y/drivers/md/md.c' l='1574' u='c' c='super_1_load'/>
<use f='linux-4.14.y/drivers/md/md.c' l='8976' u='c' c='rdev_set_badblocks'/>
