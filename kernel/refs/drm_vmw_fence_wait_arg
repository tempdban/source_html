<def f='linux-4.14.y/include/uapi/drm/vmwgfx_drm.h' l='634' ll='643'/>
<size>40</size>
<doc f='linux-4.14.y/include/uapi/drm/vmwgfx_drm.h' l='619'>/**
 * struct drm_vmw_fence_wait_arg
 *
 * @handle: Fence object handle as returned by the DRM_VMW_EXECBUF ioctl.
 * @cookie_valid: Must be reset to 0 on first call. Left alone on restart.
 * @kernel_cookie: Set to 0 on first call. Left alone on restart.
 * @timeout_us: Wait timeout in microseconds. 0 for indefinite timeout.
 * @lazy: Set to 1 if timing is not critical. Allow more than a kernel tick
 * before returning.
 * @flags: Fence flags to wait on.
 * @wait_options: Options that control the behaviour of the wait ioctl.
 *
 * Input argument to the DRM_VMW_FENCE_WAIT ioctl.
 */</doc>
<mbr r='drm_vmw_fence_wait_arg::handle' o='0' t='__u32'/>
<mbr r='drm_vmw_fence_wait_arg::cookie_valid' o='32' t='__s32'/>
<mbr r='drm_vmw_fence_wait_arg::kernel_cookie' o='64' t='__u64'/>
<mbr r='drm_vmw_fence_wait_arg::timeout_us' o='128' t='__u64'/>
<mbr r='drm_vmw_fence_wait_arg::lazy' o='192' t='__s32'/>
<mbr r='drm_vmw_fence_wait_arg::flags' o='224' t='__s32'/>
<mbr r='drm_vmw_fence_wait_arg::wait_options' o='256' t='__s32'/>
<mbr r='drm_vmw_fence_wait_arg::pad64' o='288' t='__s32'/>
