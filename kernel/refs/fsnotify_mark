<def f='linux-4.14.y/include/linux/fsnotify_backend.h' l='240' ll='265'/>
<size>72</size>
<doc f='linux-4.14.y/include/linux/fsnotify_backend.h' l='226'>/*
 * A mark is simply an object attached to an in core inode which allows an
 * fsnotify listener to indicate they are either no longer interested in events
 * of a type matching mask or only interested in those events.
 *
 * These are flushed when an inode is evicted from core and may be flushed
 * when the inode is modified (as seen by fsnotify_access).  Some fsnotify
 * users (such as dnotify) will flush these when the open fd is closed and not
 * at inode eviction or modification.
 *
 * Text in brackets is showing the lock(s) protecting modifications of a
 * particular entry. obj_lock means either inode-&gt;i_lock or
 * mnt-&gt;mnt_root-&gt;d_lock depending on the mark type.
 */</doc>
<mbr r='fsnotify_mark::mask' o='0' t='__u32'/>
<mbr r='fsnotify_mark::refcnt' o='32' t='atomic_t'/>
<mbr r='fsnotify_mark::group' o='64' t='struct fsnotify_group *'/>
<mbr r='fsnotify_mark::g_list' o='128' t='struct list_head'/>
<mbr r='fsnotify_mark::lock' o='256' t='spinlock_t'/>
<mbr r='fsnotify_mark::obj_list' o='320' t='struct hlist_node'/>
<mbr r='fsnotify_mark::connector' o='448' t='struct fsnotify_mark_connector *'/>
<mbr r='fsnotify_mark::ignored_mask' o='512' t='__u32'/>
<mbr r='fsnotify_mark::flags' o='544' t='unsigned int'/>
<def f='linux-4.14.y/include/linux/fsnotify_backend.h' l='240' ll='265'/>
<size>72</size>
<doc f='linux-4.14.y/include/linux/fsnotify_backend.h' l='226'>/*
 * A mark is simply an object attached to an in core inode which allows an
 * fsnotify listener to indicate they are either no longer interested in events
 * of a type matching mask or only interested in those events.
 *
 * These are flushed when an inode is evicted from core and may be flushed
 * when the inode is modified (as seen by fsnotify_access).  Some fsnotify
 * users (such as dnotify) will flush these when the open fd is closed and not
 * at inode eviction or modification.
 *
 * Text in brackets is showing the lock(s) protecting modifications of a
 * particular entry. obj_lock means either inode-&gt;i_lock or
 * mnt-&gt;mnt_root-&gt;d_lock depending on the mark type.
 */</doc>
<mbr r='fsnotify_mark::mask' o='0' t='__u32'/>
<mbr r='fsnotify_mark::refcnt' o='32' t='atomic_t'/>
<mbr r='fsnotify_mark::group' o='64' t='struct fsnotify_group *'/>
<mbr r='fsnotify_mark::g_list' o='128' t='struct list_head'/>
<mbr r='fsnotify_mark::lock' o='256' t='spinlock_t'/>
<mbr r='fsnotify_mark::obj_list' o='320' t='struct hlist_node'/>
<mbr r='fsnotify_mark::connector' o='448' t='struct fsnotify_mark_connector *'/>
<mbr r='fsnotify_mark::ignored_mask' o='512' t='__u32'/>
<mbr r='fsnotify_mark::flags' o='544' t='unsigned int'/>
