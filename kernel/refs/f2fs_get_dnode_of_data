<dec f='linux-4.18.y/fs/f2fs/f2fs.h' l='2806' type='int f2fs_get_dnode_of_data(struct dnode_of_data * dn, unsigned long index, int mode)'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='672' u='c' c='f2fs_reserve_block'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='715' u='c' c='f2fs_get_read_data_page'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='1024' u='c' c='f2fs_map_blocks'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='1708' u='c' c='f2fs_do_write_data_page'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='2217' u='c' c='prepare_write_begin'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='399' u='c' c='f2fs_seek_block'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='612' u='c' c='f2fs_truncate_blocks'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='885' u='c' c='f2fs_truncate_hole'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='979' u='c' c='__read_out_blkaddrs'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='1029' u='c' c='__roll_back_blkaddrs'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='1062' u='c' c='__clone_blkaddrs'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='1345' u='c' c='f2fs_zero_range'/>
<use f='linux-4.18.y/fs/f2fs/gc.c' l='643' u='c' c='move_data_block'/>
<use f='linux-4.18.y/fs/f2fs/inline.c' l='221' u='c' c='f2fs_write_inline_data'/>
<def f='linux-4.18.y/fs/f2fs/node.c' l='616' ll='723' type='int f2fs_get_dnode_of_data(struct dnode_of_data * dn, unsigned long index, int mode)'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='1042' u='c' c='f2fs_remove_inode_page'/>
<doc f='linux-4.18.y/fs/f2fs/node.c' l='610'>/*
 * Caller should call f2fs_put_dnode(dn).
 * Also, it should grab and release a rwsem by calling f2fs_lock_op() and
 * f2fs_unlock_op() only if ro is not set RDONLY_NODE.
 * In the case of RDONLY_NODE, we don&apos;t need to care about mutex.
 */</doc>
<use f='linux-4.18.y/fs/f2fs/recovery.c' l='412' u='c' c='check_index_in_prev_nodes'/>
<use f='linux-4.18.y/fs/f2fs/recovery.c' l='463' u='c' c='do_recover_data'/>
<use f='linux-4.18.y/fs/f2fs/segment.c' l='242' u='c' c='__revoke_inmem_pages'/>
