<dec f='linux-4.18.y/drivers/bus/dpaa/include/fsl_qman.h' l='1486' type='void qman_dca_index(u8 index, int park_request)'/>
<doc f='linux-4.18.y/drivers/bus/dpaa/include/fsl_qman.h' l='1474'>/**
 * qman_dca_index - Perform a Discrete Consumption Acknowledgment
 * @index: the DQRR index to be consumed
 * @park_request: indicates whether the held-active @fq should be parked
 *
 * Only allowed in DCA-mode portals, for DQRR entries whose handler callback had
 * previously returned &apos;qman_cb_dqrr_defer&apos;. NB, as with the other APIs, this
 * does not take a &apos;portal&apos; argument but implies the core affine portal from the
 * cpu that is currently executing the function. For reasons of locking, this
 * function must be called from the same CPU as that which processed the DQRR
 * entry in the first place.
 */</doc>
<def f='linux-4.18.y/drivers/bus/dpaa/base/qbman/qman.c' l='1357' ll='1362' type='void qman_dca_index(u8 index, int park_request)'/>
<use f='linux-4.18.y/drivers/event/dpaa/dpaa_eventdev.c' l='83' u='c' c='dpaa_event_enqueue_burst'/>
<use f='linux-4.18.y/drivers/event/dpaa/dpaa_eventdev.c' l='140' u='c' c='dpaa_event_dequeue_burst'/>
