<def f='linux-4.14.y/include/linux/cgroup.h' l='333' ll='338' type='bool css_tryget(struct cgroup_subsys_state * css)'/>
<use f='linux-4.14.y/include/linux/cgroup.h' l='409' u='c' c='cgroup_tryget'/>
<doc f='linux-4.14.y/include/linux/cgroup.h' l='322'>/**
 * css_tryget - try to obtain a reference on the specified css
 * @css: target css
 *
 * Obtain a reference on @css unless it already has reached zero and is
 * being released.  This function doesn&apos;t care whether @css is on or
 * offline.  The caller naturally needs to ensure that @css is accessible
 * but doesn&apos;t have to be holding a reference on it - IOW, RCU protected
 * access is good enough for this function.  Returns %true if a reference
 * count was successfully obtained; %false otherwise.
 */</doc>
<def f='linux-4.14.y/include/linux/cgroup.h' l='333' ll='338' type='bool css_tryget(struct cgroup_subsys_state * css)'/>
<use f='linux-4.14.y/include/linux/cgroup.h' l='409' u='c' c='cgroup_tryget'/>
<doc f='linux-4.14.y/include/linux/cgroup.h' l='322'>/**
 * css_tryget - try to obtain a reference on the specified css
 * @css: target css
 *
 * Obtain a reference on @css unless it already has reached zero and is
 * being released.  This function doesn&apos;t care whether @css is on or
 * offline.  The caller naturally needs to ensure that @css is accessible
 * but doesn&apos;t have to be holding a reference on it - IOW, RCU protected
 * access is good enough for this function.  Returns %true if a reference
 * count was successfully obtained; %false otherwise.
 */</doc>
