<def f='linux-4.18.y/include/linux/kernfs.h' l='128' ll='159'/>
<size>128</size>
<doc f='linux-4.18.y/include/linux/kernfs.h' l='119'>/*
 * kernfs_node - the building block of kernfs hierarchy.  Each and every
 * kernfs node is represented by single kernfs_node.  Most fields are
 * private to kernfs and shouldn&apos;t be accessed directly by kernfs users.
 *
 * As long as s_count reference is held, the kernfs_node itself is
 * accessible.  Dereferencing elem or any other outer entity requires
 * active reference.
 */</doc>
<mbr r='kernfs_node::count' o='0' t='atomic_t'/>
<mbr r='kernfs_node::active' o='32' t='atomic_t'/>
<mbr r='kernfs_node::parent' o='64' t='struct kernfs_node *'/>
<mbr r='kernfs_node::name' o='128' t='const char *'/>
<mbr r='kernfs_node::rb' o='192' t='struct rb_node'/>
<mbr r='kernfs_node::ns' o='384' t='const void *'/>
<mbr r='kernfs_node::hash' o='448' t='unsigned int'/>
<mbr r='kernfs_node::priv' o='768' t='void *'/>
<mbr r='kernfs_node::id' o='832' t='union kernfs_node_id'/>
<mbr r='kernfs_node::flags' o='896' t='unsigned short'/>
<mbr r='kernfs_node::mode' o='912' t='umode_t'/>
<mbr r='kernfs_node::iattr' o='960' t='struct kernfs_iattrs *'/>
