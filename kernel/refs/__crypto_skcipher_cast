<def f='linux-4.14.y/include/crypto/skcipher.h' l='177' ll='181' type='struct crypto_skcipher * __crypto_skcipher_cast(struct crypto_tfm * tfm)'/>
<use f='linux-4.14.y/include/crypto/skcipher.h' l='427' u='c' c='crypto_skcipher_reqtfm'/>
<doc f='linux-4.14.y/include/crypto/skcipher.h' l='147'>/**
 * DOC: Symmetric Key Cipher API
 *
 * Symmetric key cipher API is used with the ciphers of type
 * CRYPTO_ALG_TYPE_SKCIPHER (listed as type &quot;skcipher&quot; in /proc/crypto).
 *
 * Asynchronous cipher operations imply that the function invocation for a
 * cipher request returns immediately before the completion of the operation.
 * The cipher request is scheduled as a separate kernel thread and therefore
 * load-balanced on the different CPUs via the process scheduler. To allow
 * the kernel crypto API to inform the caller about the completion of a cipher
 * request, the caller must provide a callback function. That function is
 * invoked with the cipher handle when the request completes.
 *
 * To support the asynchronous operation, additional information than just the
 * cipher handle must be supplied to the kernel crypto API. That additional
 * information is given by filling in the skcipher_request data structure.
 *
 * For the symmetric key cipher API, the state is maintained with the tfm
 * cipher handle. A single tfm can be used across multiple calls and in
 * parallel. For asynchronous block cipher calls, context data supplied and
 * only used by the caller can be referenced the request data structure in
 * addition to the IV used for the cipher request. The maintenance of such
 * state information would be important for a crypto driver implementer to
 * have, because when calling the callback function upon completion of the
 * cipher operation, that callback function may need some information about
 * which operation just finished if it invoked multiple in parallel. This
 * state information is unused by the kernel crypto API.
 */</doc>
<use f='linux-4.14.y/crypto/skcipher.c' l='651' u='c' c='crypto_init_skcipher_ops_blkcipher'/>
<use f='linux-4.14.y/crypto/skcipher.c' l='743' u='c' c='crypto_init_skcipher_ops_ablkcipher'/>
<use f='linux-4.14.y/crypto/skcipher.c' l='813' u='c' c='crypto_skcipher_exit_tfm'/>
<use f='linux-4.14.y/crypto/skcipher.c' l='821' u='c' c='crypto_skcipher_init_tfm'/>
