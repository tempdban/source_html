<dec f='linux-4.14.y/include/linux/blkdev.h' l='1154' type='void blk_complete_request(struct request * )'/>
<def f='linux-4.14.y/block/blk-softirq.c' l='159' ll='165' type='void blk_complete_request(struct request * req)'/>
<dec f='linux-4.14.y/block/blk-softirq.c' l='166' type='void blk_complete_request(struct request * )'/>
<use f='linux-4.14.y/block/blk-softirq.c' l='166' c='blk_complete_request'/>
<use f='linux-4.14.y/block/blk-softirq.c' l='166' u='a'/>
<use f='linux-4.14.y/block/blk-softirq.c' l='166' u='a'/>
<doc f='linux-4.14.y/block/blk-softirq.c' l='148'>/**
 * blk_complete_request - end I/O on a request
 * @req:      the request being processed
 *
 * Description:
 *     Ends all I/O on a request. It does not handle partial completions,
 *     unless the driver actually implements this in its completion callback
 *     through requeueing. The actual completion happens out-of-order,
 *     through a softirq handler. The user must have registered a completion
 *     callback through blk_queue_softirq_done().
 **/</doc>
<use f='linux-4.14.y/block/bsg-lib.c' l='92' u='c' c='bsg_job_done'/>
<use f='linux-4.14.y/drivers/md/dm-rq.c' l='363' u='c' c='dm_complete_request'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='1634' u='c' c='scsi_kill_request'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='1771' u='c' c='scsi_done'/>
