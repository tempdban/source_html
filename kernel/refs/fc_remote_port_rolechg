<dec f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='793' type='void fc_remote_port_rolechg(struct fc_rport * rport, u32 roles)'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='2888' u='c' c='fc_remote_port_add'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3029' ll='3084' type='void fc_remote_port_rolechg(struct fc_rport * rport, u32 roles)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' type='void fc_remote_port_rolechg(struct fc_rport * , u32 )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' c='fc_remote_port_rolechg'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' u='a'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3009'>/**
 * fc_remote_port_rolechg - notifies the fc transport that the roles on a remote may have changed.
 * @rport:	The remote port that changed.
 * @roles:      New roles for this port.
 *
 * Description: The LLDD calls this routine to notify the transport that the
 * roles on a remote port may have changed. The largest effect of this is
 * if a port now becomes a FCP Target, it must be allocated a
 * scsi target id.  If the port is no longer a FCP target, any
 * scsi target id value assigned to it will persist in case the
 * role changes back to include FCP Target. No changes in the scsi
 * midlayer will be invoked if the role changes (in the expectation
 * that the role will be resumed. If it doesn&apos;t normal error processing
 * will take place).
 *
 * Should not be called from interrupt context.
 *
 * Notes:
 *	This routine assumes no locks are held on entry.
 */</doc>
<dec f='linux-4.14.y/include/scsi/scsi_transport_fc.h' l='793' type='void fc_remote_port_rolechg(struct fc_rport * rport, u32 roles)'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='2888' u='c' c='fc_remote_port_add'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3029' ll='3084' type='void fc_remote_port_rolechg(struct fc_rport * rport, u32 roles)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' type='void fc_remote_port_rolechg(struct fc_rport * , u32 )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' c='fc_remote_port_rolechg'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3085' u='a'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='3009'>/**
 * fc_remote_port_rolechg - notifies the fc transport that the roles on a remote may have changed.
 * @rport:	The remote port that changed.
 * @roles:      New roles for this port.
 *
 * Description: The LLDD calls this routine to notify the transport that the
 * roles on a remote port may have changed. The largest effect of this is
 * if a port now becomes a FCP Target, it must be allocated a
 * scsi target id.  If the port is no longer a FCP target, any
 * scsi target id value assigned to it will persist in case the
 * role changes back to include FCP Target. No changes in the scsi
 * midlayer will be invoked if the role changes (in the expectation
 * that the role will be resumed. If it doesn&apos;t normal error processing
 * will take place).
 *
 * Should not be called from interrupt context.
 *
 * Notes:
 *	This routine assumes no locks are held on entry.
 */</doc>
