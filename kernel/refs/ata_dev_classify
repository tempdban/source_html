<dec f='linux-4.18.y/include/linux/libata.h' l='1182' type='unsigned int ata_dev_classify(const struct ata_taskfile * tf)'/>
<use f='linux-4.18.y/drivers/ata/libahci.c' l='1293' u='c' c='ahci_dev_classify'/>
<def f='linux-4.18.y/drivers/ata/libata-core.c' l='1062' ll='1112' type='unsigned int ata_dev_classify(const struct ata_taskfile * tf)'/>
<dec f='linux-4.18.y/drivers/ata/libata-core.c' l='7336' type='unsigned int ata_dev_classify(const struct ata_taskfile * )'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7336' c='ata_dev_classify'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7336' u='a'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7336' u='a'/>
<doc f='linux-4.18.y/drivers/ata/libata-core.c' l='1047'>/**
 *	ata_dev_classify - determine device type based on ATA-spec signature
 *	@tf: ATA taskfile register set for device to be identified
 *
 *	Determine from taskfile register contents whether a device is
 *	ATA or ATAPI, as per &quot;Signature and persistence&quot; section
 *	of ATA/PI spec (volume 1, sect 5.14).
 *
 *	LOCKING:
 *	None.
 *
 *	RETURNS:
 *	Device type, %ATA_DEV_ATA, %ATA_DEV_ATAPI, %ATA_DEV_PMP,
 *	%ATA_DEV_ZAC, or %ATA_DEV_UNKNOWN the event of failure.
 */</doc>
<use f='linux-4.18.y/drivers/ata/libata-sff.c' l='1881' u='c' c='ata_sff_dev_classify'/>
<use f='linux-4.18.y/drivers/scsi/libsas/sas_ata.c' l='637' u='c' c='sas_get_ata_command_set'/>
