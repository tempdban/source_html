<dec f='linux-4.18.y/include/linux/irq.h' l='839' type='int __devm_irq_alloc_descs(struct device * dev, int irq, unsigned int from, unsigned int cnt, int node, struct module * owner, const struct cpumask * affinity)'/>
<def f='linux-4.18.y/kernel/irq/devres.c' l='180' ll='202' type='int __devm_irq_alloc_descs(struct device * dev, int irq, unsigned int from, unsigned int cnt, int node, struct module * owner, const struct cpumask * affinity)'/>
<dec f='linux-4.18.y/kernel/irq/devres.c' l='203' type='int __devm_irq_alloc_descs(struct device * , int , unsigned int , unsigned int , int , struct module * , const struct cpumask * )'/>
<use f='linux-4.18.y/kernel/irq/devres.c' l='203' c='__devm_irq_alloc_descs'/>
<use f='linux-4.18.y/kernel/irq/devres.c' l='203' u='a'/>
<use f='linux-4.18.y/kernel/irq/devres.c' l='203' u='a'/>
<doc f='linux-4.18.y/kernel/irq/devres.c' l='163'>/**
 * __devm_irq_alloc_descs - Allocate and initialize a range of irq descriptors
 *			    for a managed device
 * @dev:	Device to allocate the descriptors for
 * @irq:	Allocate for specific irq number if irq &gt;= 0
 * @from:	Start the search from this irq number
 * @cnt:	Number of consecutive irqs to allocate
 * @node:	Preferred node on which the irq descriptor should be allocated
 * @owner:	Owning module (can be NULL)
 * @affinity:	Optional pointer to an affinity mask array of size @cnt
 *		which hints where the irq descriptors should be allocated
 *		and which default affinities to use
 *
 * Returns the first irq number or error code.
 *
 * Note: Use the provided wrappers (devm_irq_alloc_desc*) for simplicity.
 */</doc>
