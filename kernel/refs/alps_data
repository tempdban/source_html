<def f='linux-4.14.y/drivers/input/mouse/alps.h' l='289' ll='325'/>
<size>384</size>
<doc f='linux-4.14.y/drivers/input/mouse/alps.h' l='256'>/**
 * struct alps_data - private data structure for the ALPS driver
 * @psmouse: Pointer to parent psmouse device
 * @dev2: Trackstick device (can be NULL).
 * @dev3: Generic PS/2 mouse (can be NULL, delayed registering).
 * @phys2: Physical path for the trackstick device.
 * @phys3: Physical path for the generic PS/2 mouse.
 * @dev3_register_work: Delayed work for registering PS/2 mouse.
 * @nibble_commands: Command mapping used for touchpad register accesses.
 * @addr_command: Command used to tell the touchpad that a register address
 *   follows.
 * @proto_version: Indicates V1/V2/V3/...
 * @byte0: Helps figure out whether a position report packet matches the
 *   known format for this model.  The first byte of the report, ANDed with
 *   mask0, should match byte0.
 * @mask0: The mask used to check the first byte of the report.
 * @fw_ver: cached copy of firmware version (EC report)
 * @flags: Additional device capabilities (passthrough port, trackstick, etc.).
 * @x_max: Largest possible X position value.
 * @y_max: Largest possible Y position value.
 * @x_bits: Number of X bits in the MT bitmap.
 * @y_bits: Number of Y bits in the MT bitmap.
 * @hw_init: Protocol-specific hardware init function.
 * @process_packet: Protocol-specific function to process a report packet.
 * @decode_fields: Protocol-specific function to read packet bitfields.
 * @set_abs_params: Protocol-specific function to configure the input_dev.
 * @prev_fin: Finger bit from previous packet.
 * @multi_packet: Multi-packet data in progress.
 * @multi_data: Saved multi-packet data.
 * @f: Decoded packet data fields.
 * @quirks: Bitmap of ALPS_QUIRK_*.
 * @timer: Timer for flushing out the final report packet in the stream.
 */</doc>
<mbr r='alps_data::psmouse' o='0' t='struct psmouse *'/>
<mbr r='alps_data::dev2' o='64' t='struct input_dev *'/>
<mbr r='alps_data::dev3' o='128' t='struct input_dev *'/>
<mbr r='alps_data::phys2' o='192' t='char [32]'/>
<mbr r='alps_data::phys3' o='448' t='char [32]'/>
<mbr r='alps_data::dev3_register_work' o='704' t='struct delayed_work'/>
<mbr r='alps_data::nibble_commands' o='1472' t='const struct alps_nibble_commands *'/>
<mbr r='alps_data::addr_command' o='1536' t='int'/>
<mbr r='alps_data::proto_version' o='1568' t='u16'/>
<mbr r='alps_data::byte0' o='1584' t='u8'/>
<mbr r='alps_data::mask0' o='1592' t='u8'/>
<mbr r='alps_data::dev_id' o='1600' t='u8 [3]'/>
<mbr r='alps_data::fw_ver' o='1624' t='u8 [3]'/>
<mbr r='alps_data::flags' o='1664' t='int'/>
<mbr r='alps_data::x_max' o='1696' t='int'/>
<mbr r='alps_data::y_max' o='1728' t='int'/>
<mbr r='alps_data::x_bits' o='1760' t='int'/>
<mbr r='alps_data::y_bits' o='1792' t='int'/>
<mbr r='alps_data::x_res' o='1824' t='unsigned int'/>
<mbr r='alps_data::y_res' o='1856' t='unsigned int'/>
<mbr r='alps_data::hw_init' o='1920' t='int (*)(struct psmouse *)'/>
<mbr r='alps_data::process_packet' o='1984' t='void (*)(struct psmouse *)'/>
<mbr r='alps_data::decode_fields' o='2048' t='int (*)(struct alps_fields *, unsigned char *, struct psmouse *)'/>
<mbr r='alps_data::set_abs_params' o='2112' t='void (*)(struct alps_data *, struct input_dev *)'/>
<mbr r='alps_data::prev_fin' o='2176' t='int'/>
<mbr r='alps_data::multi_packet' o='2208' t='int'/>
<mbr r='alps_data::second_touch' o='2240' t='int'/>
<mbr r='alps_data::multi_data' o='2272' t='unsigned char [6]'/>
<mbr r='alps_data::f' o='2336' t='struct alps_fields'/>
<mbr r='alps_data::quirks' o='2656' t='u8'/>
<mbr r='alps_data::timer' o='2688' t='struct timer_list'/>
<def f='linux-4.14.y/drivers/input/mouse/alps.h' l='289' ll='325'/>
<size>384</size>
<doc f='linux-4.14.y/drivers/input/mouse/alps.h' l='256'>/**
 * struct alps_data - private data structure for the ALPS driver
 * @psmouse: Pointer to parent psmouse device
 * @dev2: Trackstick device (can be NULL).
 * @dev3: Generic PS/2 mouse (can be NULL, delayed registering).
 * @phys2: Physical path for the trackstick device.
 * @phys3: Physical path for the generic PS/2 mouse.
 * @dev3_register_work: Delayed work for registering PS/2 mouse.
 * @nibble_commands: Command mapping used for touchpad register accesses.
 * @addr_command: Command used to tell the touchpad that a register address
 *   follows.
 * @proto_version: Indicates V1/V2/V3/...
 * @byte0: Helps figure out whether a position report packet matches the
 *   known format for this model.  The first byte of the report, ANDed with
 *   mask0, should match byte0.
 * @mask0: The mask used to check the first byte of the report.
 * @fw_ver: cached copy of firmware version (EC report)
 * @flags: Additional device capabilities (passthrough port, trackstick, etc.).
 * @x_max: Largest possible X position value.
 * @y_max: Largest possible Y position value.
 * @x_bits: Number of X bits in the MT bitmap.
 * @y_bits: Number of Y bits in the MT bitmap.
 * @hw_init: Protocol-specific hardware init function.
 * @process_packet: Protocol-specific function to process a report packet.
 * @decode_fields: Protocol-specific function to read packet bitfields.
 * @set_abs_params: Protocol-specific function to configure the input_dev.
 * @prev_fin: Finger bit from previous packet.
 * @multi_packet: Multi-packet data in progress.
 * @multi_data: Saved multi-packet data.
 * @f: Decoded packet data fields.
 * @quirks: Bitmap of ALPS_QUIRK_*.
 * @timer: Timer for flushing out the final report packet in the stream.
 */</doc>
<mbr r='alps_data::psmouse' o='0' t='struct psmouse *'/>
<mbr r='alps_data::dev2' o='64' t='struct input_dev *'/>
<mbr r='alps_data::dev3' o='128' t='struct input_dev *'/>
<mbr r='alps_data::phys2' o='192' t='char [32]'/>
<mbr r='alps_data::phys3' o='448' t='char [32]'/>
<mbr r='alps_data::dev3_register_work' o='704' t='struct delayed_work'/>
<mbr r='alps_data::nibble_commands' o='1472' t='const struct alps_nibble_commands *'/>
<mbr r='alps_data::addr_command' o='1536' t='int'/>
<mbr r='alps_data::proto_version' o='1568' t='u16'/>
<mbr r='alps_data::byte0' o='1584' t='u8'/>
<mbr r='alps_data::mask0' o='1592' t='u8'/>
<mbr r='alps_data::dev_id' o='1600' t='u8 [3]'/>
<mbr r='alps_data::fw_ver' o='1624' t='u8 [3]'/>
<mbr r='alps_data::flags' o='1664' t='int'/>
<mbr r='alps_data::x_max' o='1696' t='int'/>
<mbr r='alps_data::y_max' o='1728' t='int'/>
<mbr r='alps_data::x_bits' o='1760' t='int'/>
<mbr r='alps_data::y_bits' o='1792' t='int'/>
<mbr r='alps_data::x_res' o='1824' t='unsigned int'/>
<mbr r='alps_data::y_res' o='1856' t='unsigned int'/>
<mbr r='alps_data::hw_init' o='1920' t='int (*)(struct psmouse *)'/>
<mbr r='alps_data::process_packet' o='1984' t='void (*)(struct psmouse *)'/>
<mbr r='alps_data::decode_fields' o='2048' t='int (*)(struct alps_fields *, unsigned char *, struct psmouse *)'/>
<mbr r='alps_data::set_abs_params' o='2112' t='void (*)(struct alps_data *, struct input_dev *)'/>
<mbr r='alps_data::prev_fin' o='2176' t='int'/>
<mbr r='alps_data::multi_packet' o='2208' t='int'/>
<mbr r='alps_data::second_touch' o='2240' t='int'/>
<mbr r='alps_data::multi_data' o='2272' t='unsigned char [6]'/>
<mbr r='alps_data::f' o='2336' t='struct alps_fields'/>
<mbr r='alps_data::quirks' o='2656' t='u8'/>
<mbr r='alps_data::timer' o='2688' t='struct timer_list'/>
