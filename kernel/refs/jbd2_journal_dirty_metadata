<dec f='linux-4.14.y/include/linux/jbd2.h' l='1360' type='int jbd2_journal_dirty_metadata(handle_t * , struct buffer_head * )'/>
<use f='linux-4.14.y/fs/ext4/ext4_jbd2.c' l='269' u='c' c='__ext4_handle_dirty_metadata'/>
<use f='linux-4.14.y/fs/ext4/ext4_jbd2.c' l='325' u='c' c='__ext4_handle_dirty_super'/>
<dec f='linux-4.14.y/fs/jbd2/journal.c' l='70' type='int jbd2_journal_dirty_metadata(handle_t * , struct buffer_head * )'/>
<use f='linux-4.14.y/fs/jbd2/journal.c' l='70' c='jbd2_journal_dirty_metadata'/>
<use f='linux-4.14.y/fs/jbd2/journal.c' l='70' u='a'/>
<use f='linux-4.14.y/fs/jbd2/journal.c' l='70' u='a'/>
<def f='linux-4.14.y/fs/jbd2/transaction.c' l='1333' ll='1477' type='int jbd2_journal_dirty_metadata(handle_t * handle, struct buffer_head * bh)'/>
<doc f='linux-4.14.y/fs/jbd2/transaction.c' l='1310'>/**
 * int jbd2_journal_dirty_metadata() -  mark a buffer as containing dirty metadata
 * @handle: transaction to add buffer to.
 * @bh: buffer to mark
 *
 * mark dirty metadata which needs to be journaled as part of the current
 * transaction.
 *
 * The buffer must have previously had jbd2_journal_get_write_access()
 * called so that it has a valid journal_head attached to the buffer
 * head.
 *
 * The buffer is placed on the transaction&apos;s metadata list and is marked
 * as belonging to the transaction.
 *
 * Returns error number or 0 on success.
 *
 * Special care needs to be taken if the buffer already belongs to the
 * current committing transaction (in which case we should have frozen
 * data present for that commit).  In that case, we don&apos;t relink the
 * buffer: that only gets done when the old transaction finally
 * completes its commit.
 */</doc>
<dec f='linux-4.14.y/include/linux/jbd2.h' l='1360' type='int jbd2_journal_dirty_metadata(handle_t * , struct buffer_head * )'/>
<use f='linux-4.14.y/fs/ext4/ext4_jbd2.c' l='269' u='c' c='__ext4_handle_dirty_metadata'/>
<use f='linux-4.14.y/fs/ext4/ext4_jbd2.c' l='325' u='c' c='__ext4_handle_dirty_super'/>
<dec f='linux-4.14.y/fs/jbd2/journal.c' l='70' type='int jbd2_journal_dirty_metadata(handle_t * , struct buffer_head * )'/>
<use f='linux-4.14.y/fs/jbd2/journal.c' l='70' c='jbd2_journal_dirty_metadata'/>
<use f='linux-4.14.y/fs/jbd2/journal.c' l='70' u='a'/>
<use f='linux-4.14.y/fs/jbd2/journal.c' l='70' u='a'/>
<def f='linux-4.14.y/fs/jbd2/transaction.c' l='1333' ll='1477' type='int jbd2_journal_dirty_metadata(handle_t * handle, struct buffer_head * bh)'/>
<doc f='linux-4.14.y/fs/jbd2/transaction.c' l='1310'>/**
 * int jbd2_journal_dirty_metadata() -  mark a buffer as containing dirty metadata
 * @handle: transaction to add buffer to.
 * @bh: buffer to mark
 *
 * mark dirty metadata which needs to be journaled as part of the current
 * transaction.
 *
 * The buffer must have previously had jbd2_journal_get_write_access()
 * called so that it has a valid journal_head attached to the buffer
 * head.
 *
 * The buffer is placed on the transaction&apos;s metadata list and is marked
 * as belonging to the transaction.
 *
 * Returns error number or 0 on success.
 *
 * Special care needs to be taken if the buffer already belongs to the
 * current committing transaction (in which case we should have frozen
 * data present for that commit).  In that case, we don&apos;t relink the
 * buffer: that only gets done when the old transaction finally
 * completes its commit.
 */</doc>
