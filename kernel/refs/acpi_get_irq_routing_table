<dec f='linux-4.14.y/include/acpi/acpixf.h' l='836' type='acpi_status acpi_get_irq_routing_table(acpi_handle device, struct acpi_buffer * ret_buffer)'/>
<def f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='157' ll='175' type='acpi_status acpi_get_irq_routing_table(acpi_handle device_handle, struct acpi_buffer * ret_buffer)'/>
<dec f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' type='acpi_status acpi_get_irq_routing_table(acpi_handle , struct acpi_buffer * )'/>
<use f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' c='acpi_get_irq_routing_table'/>
<use f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' u='a'/>
<use f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' u='a'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='134'>/*******************************************************************************
 *
 * FUNCTION:    acpi_get_irq_routing_table
 *
 * PARAMETERS:  device_handle   - Handle to the Bus device we are querying
 *              ret_buffer      - Pointer to a buffer to receive the
 *                                current resources for the device
 *
 * RETURN:      Status
 *
 * DESCRIPTION: This function is called to get the IRQ routing table for a
 *              specific bus. The caller must first acquire a handle for the
 *              desired bus. The routine table is placed in the buffer pointed
 *              to by the ret_buffer variable parameter.
 *
 *              If the function fails an appropriate status will be returned
 *              and the value of ret_buffer is undefined.
 *
 *              This function attempts to execute the _PRT method contained in
 *              the object indicated by the passed device_handle.
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/pci_irq.c' l='234' u='c' c='acpi_pci_irq_find_prt_entry'/>
<dec f='linux-4.14.y/include/acpi/acpixf.h' l='836' type='acpi_status acpi_get_irq_routing_table(acpi_handle device, struct acpi_buffer * ret_buffer)'/>
<def f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='157' ll='175' type='acpi_status acpi_get_irq_routing_table(acpi_handle device_handle, struct acpi_buffer * ret_buffer)'/>
<dec f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' type='acpi_status acpi_get_irq_routing_table(acpi_handle , struct acpi_buffer * )'/>
<use f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' c='acpi_get_irq_routing_table'/>
<use f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' u='a'/>
<use f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='177' u='a'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/rsxface.c' l='134'>/*******************************************************************************
 *
 * FUNCTION:    acpi_get_irq_routing_table
 *
 * PARAMETERS:  device_handle   - Handle to the Bus device we are querying
 *              ret_buffer      - Pointer to a buffer to receive the
 *                                current resources for the device
 *
 * RETURN:      Status
 *
 * DESCRIPTION: This function is called to get the IRQ routing table for a
 *              specific bus. The caller must first acquire a handle for the
 *              desired bus. The routine table is placed in the buffer pointed
 *              to by the ret_buffer variable parameter.
 *
 *              If the function fails an appropriate status will be returned
 *              and the value of ret_buffer is undefined.
 *
 *              This function attempts to execute the _PRT method contained in
 *              the object indicated by the passed device_handle.
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/pci_irq.c' l='234' u='c' c='acpi_pci_irq_find_prt_entry'/>
