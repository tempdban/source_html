<def f='linux-4.14.y/include/rdma/ib_verbs.h' l='3170' ll='3174' type='int ib_poll_cq(struct ib_cq * cq, int num_entries, struct ib_wc * wc)'/>
<doc f='linux-4.14.y/include/rdma/ib_verbs.h' l='3158'>/**
 * ib_poll_cq - poll a CQ for completion(s)
 * @cq:the CQ being polled
 * @num_entries:maximum number of completions to return
 * @wc:array of at least @num_entries &amp;struct ib_wc where completions
 *   will be returned
 *
 * Poll a CQ for (possibly multiple) completions.  If the return value
 * is &lt; 0, an error occurred.  If the return value is &gt;= 0, it is the
 * number of completions returned.  If the return value is
 * non-negative and &lt; num_entries, then the CQ was emptied.
 */</doc>
<def f='linux-4.14.y/include/rdma/ib_verbs.h' l='3170' ll='3174' type='int ib_poll_cq(struct ib_cq * cq, int num_entries, struct ib_wc * wc)'/>
<doc f='linux-4.14.y/include/rdma/ib_verbs.h' l='3158'>/**
 * ib_poll_cq - poll a CQ for completion(s)
 * @cq:the CQ being polled
 * @num_entries:maximum number of completions to return
 * @wc:array of at least @num_entries &amp;struct ib_wc where completions
 *   will be returned
 *
 * Poll a CQ for (possibly multiple) completions.  If the return value
 * is &lt; 0, an error occurred.  If the return value is &gt;= 0, it is the
 * number of completions returned.  If the return value is
 * non-negative and &lt; num_entries, then the CQ was emptied.
 */</doc>
