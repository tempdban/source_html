<dec f='linux-4.18.y/include/linux/time.h' l='43' type='long do_utimes(int dfd, const char * filename, struct timespec64 * times, int flags)'/>
<use f='linux-4.18.y/fs/utimes.c' l='35' u='c' c='__do_sys_utime'/>
<def f='linux-4.18.y/fs/utimes.c' l='119' ll='166' type='long do_utimes(int dfd, const char * filename, struct timespec64 * times, int flags)'/>
<use f='linux-4.18.y/fs/utimes.c' l='184' u='c' c='__do_sys_utimensat'/>
<use f='linux-4.18.y/fs/utimes.c' l='212' u='c' c='do_futimesat'/>
<use f='linux-4.18.y/fs/utimes.c' l='245' u='c' c='__do_compat_sys_utime'/>
<use f='linux-4.18.y/fs/utimes.c' l='260' u='c' c='__do_compat_sys_utimensat'/>
<use f='linux-4.18.y/fs/utimes.c' l='280' u='c' c='do_compat_futimesat'/>
<doc f='linux-4.18.y/fs/utimes.c' l='104'>/*
 * do_utimes - change times on filename or file descriptor
 * @dfd: open file descriptor, -1 or AT_FDCWD
 * @filename: path name or NULL
 * @times: new times or NULL
 * @flags: zero or more flags (only AT_SYMLINK_NOFOLLOW for the moment)
 *
 * If filename is NULL and dfd refers to an open file, then operate on
 * the file.  Otherwise look up filename, possibly using dfd as a
 * starting point.
 *
 * If times==NULL, set access and modification to current time,
 * must be owner or have write permission.
 * Else, update from *times, must be owner or super user.
 */</doc>
<use f='linux-4.18.y/init/initramfs.c' l='121' u='c' c='do_utime'/>
