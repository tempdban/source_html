<def f='linux-4.14.y/include/net/rtnetlink.h' l='59' ll='116'/>
<size>208</size>
<doc f='linux-4.14.y/include/net/rtnetlink.h' l='31'>/**
 *	struct rtnl_link_ops - rtnetlink link operations
 *
 *	@list: Used internally
 *	@kind: Identifier
 *	@maxtype: Highest device specific netlink attribute number
 *	@policy: Netlink policy for device specific attribute validation
 *	@validate: Optional validation function for netlink/changelink parameters
 *	@priv_size: sizeof net_device private space
 *	@setup: net_device setup function
 *	@newlink: Function for configuring and registering a new device
 *	@changelink: Function for changing parameters of an existing device
 *	@dellink: Function to remove a device
 *	@get_size: Function to calculate required room for dumping device
 *		   specific netlink attributes
 *	@fill_info: Function to dump device specific netlink attributes
 *	@get_xstats_size: Function to calculate required room for dumping device
 *			  specific statistics
 *	@fill_xstats: Function to dump device specific statistics
 *	@get_num_tx_queues: Function to determine number of transmit queues
 *			    to create when creating a new device.
 *	@get_num_rx_queues: Function to determine number of receive queues
 *			    to create when creating a new device.
 *	@get_link_net: Function to get the i/o netns of the device
 *	@get_linkxstats_size: Function to calculate the required room for
 *			      dumping device-specific extended link stats
 *	@fill_linkxstats: Function to dump device-specific extended link stats
 */</doc>
<mbr r='rtnl_link_ops::list' o='0' t='struct list_head'/>
<mbr r='rtnl_link_ops::kind' o='128' t='const char *'/>
<mbr r='rtnl_link_ops::priv_size' o='192' t='size_t'/>
<mbr r='rtnl_link_ops::setup' o='256' t='void (*)(struct net_device *)'/>
<mbr r='rtnl_link_ops::maxtype' o='320' t='int'/>
<mbr r='rtnl_link_ops::policy' o='384' t='const struct nla_policy *'/>
<mbr r='rtnl_link_ops::validate' o='448' t='int (*)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::newlink' o='512' t='int (*)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::changelink' o='576' t='int (*)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::dellink' o='640' t='void (*)(struct net_device *, struct list_head *)'/>
<mbr r='rtnl_link_ops::get_size' o='704' t='size_t (*)(const struct net_device *)'/>
<mbr r='rtnl_link_ops::fill_info' o='768' t='int (*)(struct sk_buff *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_xstats_size' o='832' t='size_t (*)(const struct net_device *)'/>
<mbr r='rtnl_link_ops::fill_xstats' o='896' t='int (*)(struct sk_buff *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_num_tx_queues' o='960' t='unsigned int (*)(void)'/>
<mbr r='rtnl_link_ops::get_num_rx_queues' o='1024' t='unsigned int (*)(void)'/>
<mbr r='rtnl_link_ops::slave_maxtype' o='1088' t='int'/>
<mbr r='rtnl_link_ops::slave_policy' o='1152' t='const struct nla_policy *'/>
<mbr r='rtnl_link_ops::slave_validate' o='1216' t='int (*)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::slave_changelink' o='1280' t='int (*)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::get_slave_size' o='1344' t='size_t (*)(const struct net_device *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::fill_slave_info' o='1408' t='int (*)(struct sk_buff *, const struct net_device *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_link_net' o='1472' t='struct net *(*)(const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_linkxstats_size' o='1536' t='size_t (*)(const struct net_device *, int)'/>
<mbr r='rtnl_link_ops::fill_linkxstats' o='1600' t='int (*)(struct sk_buff *, const struct net_device *, int *, int)'/>
<def f='linux-4.14.y/include/net/rtnetlink.h' l='59' ll='116'/>
<size>208</size>
<doc f='linux-4.14.y/include/net/rtnetlink.h' l='31'>/**
 *	struct rtnl_link_ops - rtnetlink link operations
 *
 *	@list: Used internally
 *	@kind: Identifier
 *	@maxtype: Highest device specific netlink attribute number
 *	@policy: Netlink policy for device specific attribute validation
 *	@validate: Optional validation function for netlink/changelink parameters
 *	@priv_size: sizeof net_device private space
 *	@setup: net_device setup function
 *	@newlink: Function for configuring and registering a new device
 *	@changelink: Function for changing parameters of an existing device
 *	@dellink: Function to remove a device
 *	@get_size: Function to calculate required room for dumping device
 *		   specific netlink attributes
 *	@fill_info: Function to dump device specific netlink attributes
 *	@get_xstats_size: Function to calculate required room for dumping device
 *			  specific statistics
 *	@fill_xstats: Function to dump device specific statistics
 *	@get_num_tx_queues: Function to determine number of transmit queues
 *			    to create when creating a new device.
 *	@get_num_rx_queues: Function to determine number of receive queues
 *			    to create when creating a new device.
 *	@get_link_net: Function to get the i/o netns of the device
 *	@get_linkxstats_size: Function to calculate the required room for
 *			      dumping device-specific extended link stats
 *	@fill_linkxstats: Function to dump device-specific extended link stats
 */</doc>
<mbr r='rtnl_link_ops::list' o='0' t='struct list_head'/>
<mbr r='rtnl_link_ops::kind' o='128' t='const char *'/>
<mbr r='rtnl_link_ops::priv_size' o='192' t='size_t'/>
<mbr r='rtnl_link_ops::setup' o='256' t='void (*)(struct net_device *)'/>
<mbr r='rtnl_link_ops::maxtype' o='320' t='int'/>
<mbr r='rtnl_link_ops::policy' o='384' t='const struct nla_policy *'/>
<mbr r='rtnl_link_ops::validate' o='448' t='int (*)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::newlink' o='512' t='int (*)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::changelink' o='576' t='int (*)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::dellink' o='640' t='void (*)(struct net_device *, struct list_head *)'/>
<mbr r='rtnl_link_ops::get_size' o='704' t='size_t (*)(const struct net_device *)'/>
<mbr r='rtnl_link_ops::fill_info' o='768' t='int (*)(struct sk_buff *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_xstats_size' o='832' t='size_t (*)(const struct net_device *)'/>
<mbr r='rtnl_link_ops::fill_xstats' o='896' t='int (*)(struct sk_buff *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_num_tx_queues' o='960' t='unsigned int (*)(void)'/>
<mbr r='rtnl_link_ops::get_num_rx_queues' o='1024' t='unsigned int (*)(void)'/>
<mbr r='rtnl_link_ops::slave_maxtype' o='1088' t='int'/>
<mbr r='rtnl_link_ops::slave_policy' o='1152' t='const struct nla_policy *'/>
<mbr r='rtnl_link_ops::slave_validate' o='1216' t='int (*)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::slave_changelink' o='1280' t='int (*)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *)'/>
<mbr r='rtnl_link_ops::get_slave_size' o='1344' t='size_t (*)(const struct net_device *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::fill_slave_info' o='1408' t='int (*)(struct sk_buff *, const struct net_device *, const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_link_net' o='1472' t='struct net *(*)(const struct net_device *)'/>
<mbr r='rtnl_link_ops::get_linkxstats_size' o='1536' t='size_t (*)(const struct net_device *, int)'/>
<mbr r='rtnl_link_ops::fill_linkxstats' o='1600' t='int (*)(struct sk_buff *, const struct net_device *, int *, int)'/>
