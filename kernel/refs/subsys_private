<def f='linux-4.14.y/drivers/base/base.h' l='29' ll='44'/>
<size>408</size>
<doc f='linux-4.14.y/drivers/base/base.h' l='4'>/**
 * struct subsys_private - structure to hold the private to the driver core portions of the bus_type/class structure.
 *
 * @subsys - the struct kset that defines this subsystem
 * @devices_kset - the subsystem&apos;s &apos;devices&apos; directory
 * @interfaces - list of subsystem interfaces associated
 * @mutex - protect the devices, and interfaces lists.
 *
 * @drivers_kset - the list of drivers associated
 * @klist_devices - the klist to iterate over the @devices_kset
 * @klist_drivers - the klist to iterate over the @drivers_kset
 * @bus_notifier - the bus notifier list for anything that cares about things
 *                 on this bus.
 * @bus - pointer back to the struct bus_type that this structure is associated
 *        with.
 *
 * @glue_dirs - &quot;glue&quot; directory to put in-between the parent device to
 *              avoid namespace conflicts
 * @class - pointer back to the struct class that this structure is associated
 *          with.
 *
 * This structure is the one that is the actual kobject allowing struct
 * bus_type/class to be statically allocated safely.  Nothing outside of the
 * driver core should ever touch these fields.
 */</doc>
<mbr r='subsys_private::subsys' o='0' t='struct kset'/>
<mbr r='subsys_private::devices_kset' o='768' t='struct kset *'/>
<mbr r='subsys_private::interfaces' o='832' t='struct list_head'/>
<mbr r='subsys_private::mutex' o='960' t='struct mutex'/>
<mbr r='subsys_private::drivers_kset' o='1216' t='struct kset *'/>
<mbr r='subsys_private::klist_devices' o='1280' t='struct klist'/>
<mbr r='subsys_private::klist_drivers' o='1600' t='struct klist'/>
<mbr r='subsys_private::bus_notifier' o='1920' t='struct blocking_notifier_head'/>
<mbr r='subsys_private::drivers_autoprobe' o='2304' t='unsigned int'/>
<mbr r='subsys_private::bus' o='2368' t='struct bus_type *'/>
<mbr r='subsys_private::glue_dirs' o='2432' t='struct kset'/>
<mbr r='subsys_private::class' o='3200' t='struct class *'/>
