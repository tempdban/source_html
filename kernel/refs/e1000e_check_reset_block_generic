<dec f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/phy.h' l='11' type='s32 e1000e_check_reset_block_generic(struct e1000_hw * hw)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/80003es2lan.c' l='1356'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/80003es2lan.c' l='1356'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/82571.c' l='1883'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/82571.c' l='1883'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/82571.c' l='1901'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/82571.c' l='1901'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/82571.c' l='1919'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/82571.c' l='1919'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/phy.c' l='43' ll='50' type='s32 e1000e_check_reset_block_generic(struct e1000_hw * hw)'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/phy.c' l='35'>/**
 *  e1000e_check_reset_block_generic - Check if PHY reset is blocked
 *  @hw: pointer to the HW structure
 *
 *  Read the PHY management control register and check whether a PHY reset
 *  is blocked.  If a reset is not blocked return 0, otherwise
 *  return E1000_BLK_PHY_RESET (12).
 **/</doc>
