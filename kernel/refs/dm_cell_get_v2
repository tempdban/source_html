<dec f='linux-4.18.y/drivers/md/dm-bio-prison-v2.h' l='87' type='bool dm_cell_get_v2(struct dm_bio_prison_v2 * prison, struct dm_cell_key_v2 * key, unsigned int lock_level, struct bio * inmate, struct dm_bio_prison_cell_v2 * cell_prealloc, struct dm_bio_prison_cell_v2 ** cell_result)'/>
<doc f='linux-4.18.y/drivers/md/dm-bio-prison-v2.h' l='71'>/*
 * Shared locks have a bio associated with them.
 *
 * If the lock is granted the caller can continue to use the bio, and must
 * call dm_cell_put_v2() to drop the reference count when finished using it.
 *
 * If the lock cannot be granted then the bio will be tracked within the
 * cell, and later given to the holder of the exclusive lock.
 *
 * See dm_cell_lock_v2() for discussion of the lock_level parameter.
 *
 * Compare *cell_result with cell_prealloc to see if the prealloc was used.
 * If cell_prealloc was used then inmate wasn&apos;t added to it.
 *
 * Returns true if the lock is granted.
 */</doc>
<def f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='172' ll='187' type='bool dm_cell_get_v2(struct dm_bio_prison_v2 * prison, struct dm_cell_key_v2 * key, unsigned int lock_level, struct bio * inmate, struct dm_bio_prison_cell_v2 * cell_prealloc, struct dm_bio_prison_cell_v2 ** cell_result)'/>
<dec f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='188' type='bool dm_cell_get_v2(struct dm_bio_prison_v2 * , struct dm_cell_key_v2 * , unsigned int , struct bio * , struct dm_bio_prison_cell_v2 * , struct dm_bio_prison_cell_v2 ** )'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='188' c='dm_cell_get_v2'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='188' u='a'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='188' u='a'/>
<use f='linux-4.18.y/drivers/md/dm-cache-target.c' l='672' u='c' c='bio_detain_shared'/>
