<dec f='linux-4.14.y/include/linux/i2c.h' l='92' type='s32 i2c_smbus_write_byte(const struct i2c_client * client, u8 value)'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-acpi.c' l='538' u='c' c='i2c_acpi_space_handler'/>
<def f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='113' ll='117' type='s32 i2c_smbus_write_byte(const struct i2c_client * client, u8 value)'/>
<dec f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' type='s32 i2c_smbus_write_byte(const struct i2c_client * , u8 )'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' c='i2c_smbus_write_byte'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' u='a'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' u='a'/>
<doc f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='105'>/**
 * i2c_smbus_write_byte - SMBus &quot;send byte&quot; protocol
 * @client: Handle to slave device
 * @value: Byte to be sent
 *
 * This executes the SMBus &quot;send byte&quot; protocol, returning negative errno
 * else zero on success.
 */</doc>
<dec f='linux-4.14.y/include/linux/i2c.h' l='92' type='s32 i2c_smbus_write_byte(const struct i2c_client * client, u8 value)'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-acpi.c' l='538' u='c' c='i2c_acpi_space_handler'/>
<def f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='113' ll='117' type='s32 i2c_smbus_write_byte(const struct i2c_client * client, u8 value)'/>
<dec f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' type='s32 i2c_smbus_write_byte(const struct i2c_client * , u8 )'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' c='i2c_smbus_write_byte'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' u='a'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='118' u='a'/>
<doc f='linux-4.14.y/drivers/i2c/i2c-core-smbus.c' l='105'>/**
 * i2c_smbus_write_byte - SMBus &quot;send byte&quot; protocol
 * @client: Handle to slave device
 * @value: Byte to be sent
 *
 * This executes the SMBus &quot;send byte&quot; protocol, returning negative errno
 * else zero on success.
 */</doc>
