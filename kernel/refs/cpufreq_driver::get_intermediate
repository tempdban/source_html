<dec f='linux-4.18.y/include/linux/cpufreq.h' l='322' type='unsigned int (*)(struct cpufreq_policy *, unsigned int)'/>
<offset>704</offset>
<doc f='linux-4.18.y/include/linux/cpufreq.h' l='307'>/*
	 * Only for drivers with target_index() and CPUFREQ_ASYNC_NOTIFICATION
	 * unset.
	 *
	 * get_intermediate should return a stable intermediate frequency
	 * platform wants to switch to and target_intermediate() should set CPU
	 * to to that frequency, before jumping to the frequency corresponding
	 * to &apos;index&apos;. Core will take care of sending notifications and driver
	 * doesn&apos;t have to handle them in target_intermediate() or
	 * target_index().
	 *
	 * Drivers can return &apos;0&apos; from get_intermediate() in case they don&apos;t
	 * wish to switch to intermediate frequency for some target frequency.
	 * In that case core will directly call -&gt;target_index().
	 */</doc>
<use f='linux-4.18.y/drivers/cpufreq/cpufreq.c' l='1871' u='r' c='__target_intermediate'/>
<use f='linux-4.18.y/drivers/cpufreq/cpufreq.c' l='1905' u='r' c='__target_index'/>
<use f='linux-4.18.y/drivers/cpufreq/cpufreq.c' l='2479' u='r' c='cpufreq_register_driver'/>
