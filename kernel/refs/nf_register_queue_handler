<dec f='linux-4.14.y/include/net/netfilter/nf_queue.h' l='31' type='void nf_register_queue_handler(struct net * net, const struct nf_queue_handler * qh)'/>
<def f='linux-4.14.y/net/netfilter/nf_queue.c' l='32' ll='37' type='void nf_register_queue_handler(struct net * net, const struct nf_queue_handler * qh)'/>
<dec f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' type='void nf_register_queue_handler(struct net * , const struct nf_queue_handler * )'/>
<use f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' c='nf_register_queue_handler'/>
<use f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' u='a'/>
<use f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' u='a'/>
<doc f='linux-4.14.y/net/netfilter/nf_queue.c' l='30'>/* return EBUSY when somebody else is registered, return EEXIST if the
 * same handler is registered, return 0 in case of success. */</doc>
<use f='linux-4.14.y/net/netfilter/nfnetlink_queue.c' l='1512' u='c' c='nfnl_queue_net_init'/>
<dec f='linux-4.14.y/include/net/netfilter/nf_queue.h' l='31' type='void nf_register_queue_handler(struct net * net, const struct nf_queue_handler * qh)'/>
<def f='linux-4.14.y/net/netfilter/nf_queue.c' l='32' ll='37' type='void nf_register_queue_handler(struct net * net, const struct nf_queue_handler * qh)'/>
<dec f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' type='void nf_register_queue_handler(struct net * , const struct nf_queue_handler * )'/>
<use f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' c='nf_register_queue_handler'/>
<use f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' u='a'/>
<use f='linux-4.14.y/net/netfilter/nf_queue.c' l='38' u='a'/>
<doc f='linux-4.14.y/net/netfilter/nf_queue.c' l='30'>/* return EBUSY when somebody else is registered, return EEXIST if the
 * same handler is registered, return 0 in case of success. */</doc>
<use f='linux-4.14.y/net/netfilter/nfnetlink_queue.c' l='1512' u='c' c='nfnl_queue_net_init'/>
