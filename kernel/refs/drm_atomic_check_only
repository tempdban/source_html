<dec f='linux-4.18.y/include/drm/drm_atomic.h' l='607' type='int drm_atomic_check_only(struct drm_atomic_state * state)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1697' ll='1748' type='int drm_atomic_check_only(struct drm_atomic_state * state)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1749' type='int drm_atomic_check_only(struct drm_atomic_state * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1749' c='drm_atomic_check_only'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1749' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1749' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1770' u='c' c='drm_atomic_commit'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1799' u='c' c='drm_atomic_nonblocking_commit'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='2437' u='c' c='drm_mode_atomic_ioctl'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1686'>/**
 * drm_atomic_check_only - check whether a given config would work
 * @state: atomic configuration to check
 *
 * Note that this function can return -EDEADLK if the driver needed to acquire
 * more locks but encountered a deadlock. The caller must then do the usual w/w
 * backoff dance and restart. All other errors are fatal.
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
