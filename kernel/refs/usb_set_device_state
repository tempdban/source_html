<dec f='linux-4.18.y/include/linux/usb/hcd.h' l='640' type='void usb_set_device_state(struct usb_device * udev, enum usb_device_state new_state)'/>
<doc f='linux-4.18.y/include/linux/usb/hcd.h' l='638'>/*-------------------------------------------------------------------------*/</doc>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='1080' u='c' c='register_root_hub'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2487' u='c' c='usb_hc_died'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2499' u='c' c='usb_hc_died'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='1183' u='c' c='hub_activate'/>
<def f='linux-4.18.y/drivers/usb/core/hub.c' l='1969' ll='2007' type='void usb_set_device_state(struct usb_device * udev, enum usb_device_state new_state)'/>
<dec f='linux-4.18.y/drivers/usb/core/hub.c' l='2008' type='void usb_set_device_state(struct usb_device * , enum usb_device_state )'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2008' c='usb_set_device_state'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2008' u='a'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2008' u='a'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2129' u='c' c='usb_disconnect'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2519' u='c' c='usb_new_device'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2901' u='c' c='hub_port_reset'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2905' u='c' c='hub_port_reset'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='4231' u='c' c='hub_port_disable'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='4344' u='c' c='hub_set_address'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='4902' u='c' c='hub_port_connect'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='5610' u='c' c='usb_reset_and_verify_device'/>
<doc f='linux-4.18.y/drivers/usb/core/hub.c' l='1948'>/**
 * usb_set_device_state - change a device&apos;s current state (usbcore, hcds)
 * @udev: pointer to device whose state should be changed
 * @new_state: new state value to be stored
 *
 * udev-&gt;state is _not_ fully protected by the device lock.  Although
 * most transitions are made only while holding the lock, the state can
 * can change to USB_STATE_NOTATTACHED at almost any time.  This
 * is so that devices can be marked as disconnected as soon as possible,
 * without having to wait for any semaphores to be released.  As a result,
 * all changes to any device&apos;s state must be protected by the
 * device_state_lock spinlock.
 *
 * Once a device has been added to the device tree, all changes to its state
 * should be made using this routine.  The state should _not_ be set directly.
 *
 * If udev-&gt;state is already USB_STATE_NOTATTACHED then no change is made.
 * Otherwise udev-&gt;state is set to new_state, and if new_state is
 * USB_STATE_NOTATTACHED then all of udev&apos;s descendants&apos; states are also set
 * to USB_STATE_NOTATTACHED.
 */</doc>
<use f='linux-4.18.y/drivers/usb/core/message.c' l='1252' u='c' c='usb_disable_device'/>
<use f='linux-4.18.y/drivers/usb/core/message.c' l='1983' u='c' c='usb_set_configuration'/>
<use f='linux-4.18.y/drivers/usb/core/message.c' l='1989' u='c' c='usb_set_configuration'/>
