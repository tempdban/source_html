<dec f='linux-4.18.y/drivers/md/dm-bio-prison-v2.h' l='66' type='struct dm_bio_prison_cell_v2 * dm_bio_prison_alloc_cell_v2(struct dm_bio_prison_v2 * prison, gfp_t gfp)'/>
<doc f='linux-4.18.y/drivers/md/dm-bio-prison-v2.h' l='59'>/*
 * These two functions just wrap a mempool.  This is a transitory step:
 * Eventually all bio prison clients should manage their own cell memory.
 *
 * Like mempool_alloc(), dm_bio_prison_alloc_cell_v2() can only fail if called
 * in interrupt context or passed GFP_NOWAIT.
 */</doc>
<def f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='66' ll='69' type='struct dm_bio_prison_cell_v2 * dm_bio_prison_alloc_cell_v2(struct dm_bio_prison_v2 * prison, gfp_t gfp)'/>
<dec f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='70' type='struct dm_bio_prison_cell_v2 * dm_bio_prison_alloc_cell_v2(struct dm_bio_prison_v2 * , gfp_t )'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='70' c='dm_bio_prison_alloc_cell_v2'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='70' u='a'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v2.c' l='70' u='a'/>
<use f='linux-4.18.y/drivers/md/dm-cache-target.c' l='544' u='c' c='alloc_prison_cell'/>
