<dec f='linux-4.14.y/include/drm/ttm/ttm_bo_driver.h' l='1077' type='int ttm_bo_pipeline_move(struct ttm_buffer_object * bo, struct dma_fence * fence, bool evict, struct ttm_mem_reg * new_mem)'/>
<doc f='linux-4.14.y/include/drm/ttm/ttm_bo_driver.h' l='1066'>/**
 * ttm_bo_pipeline_move.
 *
 * @bo: A pointer to a struct ttm_buffer_object.
 * @fence: A fence object that signals when moving is complete.
 * @evict: This is an evict move. Don&apos;t return until the buffer is idle.
 * @new_mem: struct ttm_mem_reg indicating where to move.
 *
 * Function for pipelining accelerated moves. Either free the memory
 * immediately or hang it on a temporary buffer object.
 */</doc>
<def f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_bo_util.c' l='710' ll='799' type='int ttm_bo_pipeline_move(struct ttm_buffer_object * bo, struct dma_fence * fence, bool evict, struct ttm_mem_reg * new_mem)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_bo_util.c' l='800' type='int ttm_bo_pipeline_move(struct ttm_buffer_object * , struct dma_fence * , bool , struct ttm_mem_reg * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_bo_util.c' l='800' c='ttm_bo_pipeline_move'/>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_bo_util.c' l='800' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_bo_util.c' l='800' u='a'/>
