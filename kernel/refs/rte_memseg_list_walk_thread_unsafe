<dec f='linux-4.18.y/lib/librte_eal/common/include/rte_memory.h' l='318' type='int rte_memseg_list_walk_thread_unsafe(rte_memseg_list_walk_t func, void * arg)'/>
<doc f='linux-4.18.y/lib/librte_eal/common/include/rte_memory.h' l='302'>/**
 * Walk each allocated memseg list without performing any locking.
 *
 * @note This function does not perform any locking, and is only safe to call
 *       from within memory-related callback functions.
 *
 * @param func
 *   Iterator function
 * @param arg
 *   Argument passed to iterator
 * @return
 *   0 if walked over the entire list
 *   1 if stopped by the user
 *   -1 if user function reported error
 */</doc>
<use f='linux-4.18.y/drivers/net/virtio/virtio_user/vhost_kernel.c' l='122' u='c' c='prepare_vhost_memory_kernel'/>
<def f='linux-4.18.y/lib/librte_eal/common/eal_common_memory.c' l='520' ll='537' type='int rte_memseg_list_walk_thread_unsafe(rte_memseg_list_walk_t func, void * arg)'/>
<use f='linux-4.18.y/lib/librte_eal/common/eal_common_memory.c' l='547' u='c' c='rte_memseg_list_walk'/>
<use f='linux-4.18.y/lib/librte_eal/linuxapp/eal/eal_memalloc.c' l='1089' u='c' c='eal_memalloc_alloc_seg_bulk'/>
<use f='linux-4.18.y/lib/librte_eal/linuxapp/eal/eal_memalloc.c' l='1156' u='c' c='eal_memalloc_free_seg_bulk'/>
<use f='linux-4.18.y/lib/librte_eal/linuxapp/eal/eal_memalloc.c' l='1445' u='c' c='eal_memalloc_sync_with_primary'/>
