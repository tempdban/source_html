<dec f='linux-4.18.y/include/linux/usb/gadget.h' l='557' type='int usb_gadget_vbus_connect(struct usb_gadget * gadget)'/>
<def f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='548' ll='563' type='int usb_gadget_vbus_connect(struct usb_gadget * gadget)'/>
<dec f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='564' type='int usb_gadget_vbus_connect(struct usb_gadget * )'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='564' c='usb_gadget_vbus_connect'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='564' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='564' u='a'/>
<doc f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='535'>/**
 * usb_gadget_vbus_connect - Notify controller that VBUS is powered
 * @gadget:The device which now has VBUS power.
 * Context: can sleep
 *
 * This call is used by a driver for an external transceiver (or GPIO)
 * that detects a VBUS power session starting.  Common responses include
 * resuming the controller, activating the D+ (or D-) pullup to let the
 * host detect that a USB device is attached, and starting to draw power
 * (8mA or possibly more, especially after SET_CONFIGURATION).
 *
 * Returns zero on success, else negative errno.
 */</doc>
