<dec f='linux-4.18.y/include/drm/drm_crtc_helper.h' l='76' type='void drm_kms_helper_hotplug_event(struct drm_device * dev)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='560' ll='566' type='void drm_kms_helper_hotplug_event(struct drm_device * dev)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='567' type='void drm_kms_helper_hotplug_event(struct drm_device * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='567' c='drm_kms_helper_hotplug_event'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='567' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='567' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='650' u='c' c='output_poll_execute'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='791' u='c' c='drm_helper_hpd_irq_event'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='544'>/**
 * drm_kms_helper_hotplug_event - fire off KMS hotplug events
 * @dev: drm_device whose connector state changed
 *
 * This function fires off the uevent for userspace and also calls the
 * output_poll_changed function, which is most commonly used to inform the fbdev
 * emulation code and allow it to update the fbcon output configuration.
 *
 * Drivers should call this from their hotplug handling code when a change is
 * detected. Note that this function does not do any output detection of its
 * own, like drm_helper_hpd_irq_event() does - this is assumed to be done by the
 * driver already.
 *
 * This function must be called from process context with no mode
 * setting locks held.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_display.c' l='179' u='c' c='qxl_display_read_client_monitors_config'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_vq.c' l='556' u='c' c='virtio_gpu_cmd_get_display_info_cb'/>
