<dec f='linux-4.14.y/include/net/tcp.h' l='414' type='void tcp_update_metrics(struct sock * sk)'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='6109' u='c' c='tcp_rcv_state_process'/>
<def f='linux-4.14.y/net/ipv4/tcp_metrics.c' l='322' ll='438' type='void tcp_update_metrics(struct sock * sk)'/>
<doc f='linux-4.14.y/net/ipv4/tcp_metrics.c' l='318'>/* Save metrics learned by this TCP session.  This function is called
 * only, when TCP finishes successfully i.e. when it enters TIME-WAIT
 * or goes from LAST-ACK to CLOSE.
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp_minisocks.c' l='333' u='c' c='tcp_time_wait'/>
<dec f='linux-4.14.y/include/net/tcp.h' l='414' type='void tcp_update_metrics(struct sock * sk)'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='6109' u='c' c='tcp_rcv_state_process'/>
<def f='linux-4.14.y/net/ipv4/tcp_metrics.c' l='322' ll='438' type='void tcp_update_metrics(struct sock * sk)'/>
<doc f='linux-4.14.y/net/ipv4/tcp_metrics.c' l='318'>/* Save metrics learned by this TCP session.  This function is called
 * only, when TCP finishes successfully i.e. when it enters TIME-WAIT
 * or goes from LAST-ACK to CLOSE.
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp_minisocks.c' l='333' u='c' c='tcp_time_wait'/>
