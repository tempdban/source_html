<dec f='linux-4.18.y/include/linux/blk-mq-pci.h' l='8' type='int blk_mq_pci_map_queues(struct blk_mq_tag_set * set, struct pci_dev * pdev, int offset)'/>
<def f='linux-4.18.y/block/blk-mq-pci.c' l='32' ll='54' type='int blk_mq_pci_map_queues(struct blk_mq_tag_set * set, struct pci_dev * pdev, int offset)'/>
<dec f='linux-4.18.y/block/blk-mq-pci.c' l='55' type='int blk_mq_pci_map_queues(struct blk_mq_tag_set * , struct pci_dev * , int )'/>
<use f='linux-4.18.y/block/blk-mq-pci.c' l='55' c='blk_mq_pci_map_queues'/>
<use f='linux-4.18.y/block/blk-mq-pci.c' l='55' u='a'/>
<use f='linux-4.18.y/block/blk-mq-pci.c' l='55' u='a'/>
<doc f='linux-4.18.y/block/blk-mq-pci.c' l='20'>/**
 * blk_mq_pci_map_queues - provide a default queue mapping for PCI device
 * @set:	tagset to provide the mapping for
 * @pdev:	PCI device associated with @set.
 * @offset:	Offset to use for the pci irq vector
 *
 * This function assumes the PCI device @pdev has at least as many available
 * interrupt vectors as @set has queues.  It will then query the vector
 * corresponding to each queue for it&apos;s affinity mask and built queue mapping
 * that maps a queue to the CPUs that have irq affinity for the corresponding
 * vector.
 */</doc>
