<dec f='linux-4.18.y/arch/x86/include/asm/fpu/internal.h' l='27' type='void fpu__initialize(struct fpu * fpu)'/>
<doc f='linux-4.18.y/arch/x86/include/asm/fpu/internal.h' l='24'>/*
 * High level FPU state handling functions:
 */</doc>
<def f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='228' ll='240' type='void fpu__initialize(struct fpu * fpu)'/>
<dec f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='241' type='void fpu__initialize(struct fpu * )'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='241' c='fpu__initialize'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='241' u='a'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='241' u='a'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='320' u='c' c='fpu__restore'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='396' u='c' c='fpu__clear'/>
<doc f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='224'>/*
 * Activate the current task&apos;s in-memory FPU context,
 * if it has not been used before:
 */</doc>
<use f='linux-4.18.y/arch/x86/kernel/fpu/signal.c' l='287' u='c' c='__fpu__restore_sig'/>
