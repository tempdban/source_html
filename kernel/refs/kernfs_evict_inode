<dec f='linux-4.14.y/fs/kernfs/kernfs-internal.h' l='87' type='void kernfs_evict_inode(struct inode * inode)'/>
<def f='linux-4.14.y/fs/kernfs/inode.c' l='283' ll='290' type='void kernfs_evict_inode(struct inode * inode)'/>
<doc f='linux-4.14.y/fs/kernfs/inode.c' l='276'>/*
 * The kernfs_node serves as both an inode and a directory entry for
 * kernfs.  To prevent the kernfs inode numbers from being freed
 * prematurely we take a reference to kernfs_node from the kernfs inode.  A
 * super_operations.evict_inode() implementation is needed to drop that
 * reference upon inode destruction.
 */</doc>
<use f='linux-4.14.y/fs/kernfs/mount.c' l='61'/>
<use f='linux-4.14.y/fs/kernfs/mount.c' l='61'/>
<dec f='linux-4.14.y/fs/kernfs/kernfs-internal.h' l='87' type='void kernfs_evict_inode(struct inode * inode)'/>
<def f='linux-4.14.y/fs/kernfs/inode.c' l='283' ll='290' type='void kernfs_evict_inode(struct inode * inode)'/>
<doc f='linux-4.14.y/fs/kernfs/inode.c' l='276'>/*
 * The kernfs_node serves as both an inode and a directory entry for
 * kernfs.  To prevent the kernfs inode numbers from being freed
 * prematurely we take a reference to kernfs_node from the kernfs inode.  A
 * super_operations.evict_inode() implementation is needed to drop that
 * reference upon inode destruction.
 */</doc>
<use f='linux-4.14.y/fs/kernfs/mount.c' l='61'/>
<use f='linux-4.14.y/fs/kernfs/mount.c' l='61'/>
