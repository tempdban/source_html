<def f='linux-4.18.y/kernel/trace/trace.h' l='415' ll='458'/>
<size>160</size>
<doc f='linux-4.18.y/kernel/trace/trace.h' l='395'>/**
 * struct tracer - a specific tracer and its callbacks to interact with tracefs
 * @name: the name chosen to select it on the available_tracers file
 * @init: called when one switches to this tracer (echo name &gt; current_tracer)
 * @reset: called when one switches to another tracer
 * @start: called when tracing is unpaused (echo 1 &gt; tracing_on)
 * @stop: called when tracing is paused (echo 0 &gt; tracing_on)
 * @update_thresh: called when tracing_thresh is updated
 * @open: called when the trace file is opened
 * @pipe_open: called when the trace_pipe file is opened
 * @close: called when the trace file is released
 * @pipe_close: called when the trace_pipe file is released
 * @read: override the default read callback on trace_pipe
 * @splice_read: override the default splice_read callback on trace_pipe
 * @selftest: selftest to run on boot (see trace_selftest.c)
 * @print_headers: override the first lines that describe your columns
 * @print_line: callback that prints a trace
 * @set_flag: signals one of your private flags changed (trace_options file)
 * @flags: your private flags
 */</doc>
<mbr r='tracer::name' o='0' t='const char *'/>
<mbr r='tracer::init' o='64' t='int (*)(struct trace_array *)'/>
<mbr r='tracer::reset' o='128' t='void (*)(struct trace_array *)'/>
<mbr r='tracer::start' o='192' t='void (*)(struct trace_array *)'/>
<mbr r='tracer::stop' o='256' t='void (*)(struct trace_array *)'/>
<mbr r='tracer::update_thresh' o='320' t='int (*)(struct trace_array *)'/>
<mbr r='tracer::open' o='384' t='void (*)(struct trace_iterator *)'/>
<mbr r='tracer::pipe_open' o='448' t='void (*)(struct trace_iterator *)'/>
<mbr r='tracer::close' o='512' t='void (*)(struct trace_iterator *)'/>
<mbr r='tracer::pipe_close' o='576' t='void (*)(struct trace_iterator *)'/>
<mbr r='tracer::read' o='640' t='ssize_t (*)(struct trace_iterator *, struct file *, char *, size_t, loff_t *)'/>
<mbr r='tracer::splice_read' o='704' t='ssize_t (*)(struct trace_iterator *, struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int)'/>
<mbr r='tracer::print_header' o='768' t='void (*)(struct seq_file *)'/>
<mbr r='tracer::print_line' o='832' t='enum print_line_t (*)(struct trace_iterator *)'/>
<mbr r='tracer::set_flag' o='896' t='int (*)(struct trace_array *, u32, u32, int)'/>
<mbr r='tracer::flag_changed' o='960' t='int (*)(struct trace_array *, u32, int)'/>
<mbr r='tracer::next' o='1024' t='struct tracer *'/>
<mbr r='tracer::flags' o='1088' t='struct tracer_flags *'/>
<mbr r='tracer::enabled' o='1152' t='int'/>
<mbr r='tracer::ref' o='1184' t='int'/>
<mbr r='tracer::print_max' o='1216' t='bool'/>
<mbr r='tracer::allow_instances' o='1224' t='bool'/>
<mbr r='tracer::noboot' o='1232' t='bool'/>
