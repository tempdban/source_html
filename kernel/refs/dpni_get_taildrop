<dec f='linux-4.18.y/drivers/net/dpaa2/mc/fsl_dpni.h' l='1127' type='int dpni_get_taildrop(struct fsl_mc_io * mc_io, uint32_t cmd_flags, uint16_t token, enum dpni_congestion_point cg_point, enum dpni_queue_type q_type, uint8_t tc, uint8_t q_index, struct dpni_taildrop * taildrop)'/>
<def f='linux-4.18.y/drivers/net/dpaa2/mc/dpni.c' l='1899' ll='1943' type='int dpni_get_taildrop(struct fsl_mc_io * mc_io, uint32_t cmd_flags, uint16_t token, enum dpni_congestion_point cg_point, enum dpni_queue_type qtype, uint8_t tc, uint8_t index, struct dpni_taildrop * taildrop)'/>
<doc f='linux-4.18.y/drivers/net/dpaa2/mc/dpni.c' l='1884'>/**
 * dpni_get_taildrop() - Get taildrop information
 * @mc_io:	Pointer to MC portal&apos;s I/O object
 * @cmd_flags:	Command flags; one or more of &apos;MC_CMD_FLAG_&apos;
 * @token:	Token of DPNI object
 * @cg_point:	Congestion point
 * @q_type:	Queue type on which the taildrop is configured.
 *		Only Rx queues are supported for now
 * @tc:		Traffic class to apply this taildrop to
 * @q_index:	Index of the queue if the DPNI supports multiple queues for
 *		traffic distribution. Ignored if CONGESTION_POINT is not 0.
 * @taildrop:	Taildrop structure
 *
 * Return:	&apos;0&apos; on Success; Error code otherwise.
 */</doc>
