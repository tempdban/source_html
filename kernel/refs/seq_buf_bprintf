<dec f='linux-4.14.y/include/linux/seq_buf.h' l='131' type='int seq_buf_bprintf(struct seq_buf * s, const char * fmt, const u32 * binary)'/>
<use f='linux-4.14.y/kernel/trace/trace_seq.c' l='186' u='c' c='trace_seq_bprintf'/>
<def f='linux-4.14.y/lib/seq_buf.c' l='113' ll='129' type='int seq_buf_bprintf(struct seq_buf * s, const char * fmt, const u32 * binary)'/>
<doc f='linux-4.14.y/lib/seq_buf.c' l='96'>/**
 * seq_buf_bprintf - Write the printf string from binary arguments
 * @s: seq_buf descriptor
 * @fmt: The format string for the @binary arguments
 * @binary: The binary arguments for @fmt.
 *
 * When recording in a fast path, a printf may be recorded with just
 * saving the format and the arguments as they were passed to the
 * function, instead of wasting cycles converting the arguments into
 * ASCII characters. Instead, the arguments are saved in a 32 bit
 * word array that is defined by the format string constraints.
 *
 * This function will take the format and the binary array and finish
 * the conversion into the ASCII string within the buffer.
 *
 * Returns zero on success, -1 on overflow.
 */</doc>
<dec f='linux-4.14.y/include/linux/seq_buf.h' l='131' type='int seq_buf_bprintf(struct seq_buf * s, const char * fmt, const u32 * binary)'/>
<use f='linux-4.14.y/kernel/trace/trace_seq.c' l='186' u='c' c='trace_seq_bprintf'/>
<def f='linux-4.14.y/lib/seq_buf.c' l='113' ll='129' type='int seq_buf_bprintf(struct seq_buf * s, const char * fmt, const u32 * binary)'/>
<doc f='linux-4.14.y/lib/seq_buf.c' l='96'>/**
 * seq_buf_bprintf - Write the printf string from binary arguments
 * @s: seq_buf descriptor
 * @fmt: The format string for the @binary arguments
 * @binary: The binary arguments for @fmt.
 *
 * When recording in a fast path, a printf may be recorded with just
 * saving the format and the arguments as they were passed to the
 * function, instead of wasting cycles converting the arguments into
 * ASCII characters. Instead, the arguments are saved in a 32 bit
 * word array that is defined by the format string constraints.
 *
 * This function will take the format and the binary array and finish
 * the conversion into the ASCII string within the buffer.
 *
 * Returns zero on success, -1 on overflow.
 */</doc>
