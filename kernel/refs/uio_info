<def f='linux-4.18.y/include/linux/uio_driver.h' l='99' ll='113'/>
<size>568</size>
<doc f='linux-4.18.y/include/linux/uio_driver.h' l='83'>/**
 * struct uio_info - UIO device capabilities
 * @uio_dev:		the UIO device this info belongs to
 * @name:		device name
 * @version:		device driver version
 * @mem:		list of mappable memory regions, size==0 for end of list
 * @port:		list of port regions, size==0 for end of list
 * @irq:		interrupt number or UIO_IRQ_CUSTOM
 * @irq_flags:		flags for request_irq()
 * @priv:		optional private data
 * @handler:		the device&apos;s irq handler
 * @mmap:		mmap operation for this uio device
 * @open:		open operation for this uio device
 * @release:		release operation for this uio device
 * @irqcontrol:		disable/enable irqs when 0/1 is written to /dev/uioX
 */</doc>
<mbr r='uio_info::uio_dev' o='0' t='struct uio_device *'/>
<mbr r='uio_info::name' o='64' t='const char *'/>
<mbr r='uio_info::version' o='128' t='const char *'/>
<mbr r='uio_info::mem' o='192' t='struct uio_mem [5]'/>
<mbr r='uio_info::port' o='2432' t='struct uio_port [5]'/>
<mbr r='uio_info::irq' o='4032' t='long'/>
<mbr r='uio_info::irq_flags' o='4096' t='unsigned long'/>
<mbr r='uio_info::priv' o='4160' t='void *'/>
<mbr r='uio_info::handler' o='4224' t='irqreturn_t (*)(int, struct uio_info *)'/>
<mbr r='uio_info::mmap' o='4288' t='int (*)(struct uio_info *, struct vm_area_struct *)'/>
<mbr r='uio_info::open' o='4352' t='int (*)(struct uio_info *, struct inode *)'/>
<mbr r='uio_info::release' o='4416' t='int (*)(struct uio_info *, struct inode *)'/>
<mbr r='uio_info::irqcontrol' o='4480' t='int (*)(struct uio_info *, s32)'/>
