<dec f='linux-4.18.y/fs/notify/fsnotify.h' l='19' type='int fsnotify_compare_groups(struct fsnotify_group * a, struct fsnotify_group * b)'/>
<use f='linux-4.18.y/fs/notify/fsnotify.c' l='278' u='c' c='fsnotify_iter_select_report_types'/>
<use f='linux-4.18.y/fs/notify/fsnotify.c' l='290' u='c' c='fsnotify_iter_select_report_types'/>
<doc f='linux-4.18.y/fs/notify/fsnotify.h' l='18'>/* compare two groups for sorting of marks lists */</doc>
<def f='linux-4.18.y/fs/notify/mark.c' l='422' ll='437' type='int fsnotify_compare_groups(struct fsnotify_group * a, struct fsnotify_group * b)'/>
<use f='linux-4.18.y/fs/notify/mark.c' l='549' u='c' c='fsnotify_add_mark_list'/>
<doc f='linux-4.18.y/fs/notify/mark.c' l='403'>/*
 * Sorting function for lists of fsnotify marks.
 *
 * Fanotify supports different notification classes (reflected as priority of
 * notification group). Events shall be passed to notification groups in
 * decreasing priority order. To achieve this marks in notification lists for
 * inodes and vfsmounts are sorted so that priorities of corresponding groups
 * are descending.
 *
 * Furthermore correct handling of the ignore mask requires processing inode
 * and vfsmount marks of each group together. Using the group address as
 * further sort criterion provides a unique sorting order and thus we can
 * merge inode and vfsmount lists of marks in linear time and find groups
 * present in both lists.
 *
 * A return value of 1 signifies that b has priority over a.
 * A return value of 0 signifies that the two marks have to be handled together.
 * A return value of -1 signifies that a has priority over b.
 */</doc>
