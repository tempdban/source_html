<dec f='linux-4.18.y/include/asm-generic/bitops/find.h' l='30' type='unsigned long find_next_and_bit(const unsigned long * addr1, const unsigned long * addr2, unsigned long size, unsigned long offset)'/>
<doc f='linux-4.18.y/include/asm-generic/bitops/find.h' l='20'>/**
 * find_next_and_bit - find the next set bit in both memory regions
 * @addr1: The first address to base the search on
 * @addr2: The second address to base the search on
 * @offset: The bitnumber to start searching at
 * @size: The bitmap size in bits
 *
 * Returns the bit number for the next set bit
 * If no bits are set, returns @size.
 */</doc>
<use f='linux-4.18.y/lib/cpumask.c' l='39' u='c' c='cpumask_next_and'/>
<def f='linux-4.18.y/lib/find_bit.c' l='89' ll='94' type='unsigned long find_next_and_bit(const unsigned long * addr1, const unsigned long * addr2, unsigned long size, unsigned long offset)'/>
<dec f='linux-4.18.y/lib/find_bit.c' l='95' type='unsigned long find_next_and_bit(const unsigned long * , const unsigned long * , unsigned long , unsigned long )'/>
<use f='linux-4.18.y/lib/find_bit.c' l='95' c='find_next_and_bit'/>
<use f='linux-4.18.y/lib/find_bit.c' l='95' u='a'/>
<use f='linux-4.18.y/lib/find_bit.c' l='95' u='a'/>
<dec f='linux-4.18.y/tools/include/asm-generic/bitops/find.h' l='30' type='unsigned long find_next_and_bit(const unsigned long * addr1, const unsigned long * addr2, unsigned long size, unsigned long offset)'/>
<doc f='linux-4.18.y/tools/include/asm-generic/bitops/find.h' l='20'>/**
 * find_next_and_bit - find the next set bit in both memory regions
 * @addr1: The first address to base the search on
 * @addr2: The second address to base the search on
 * @offset: The bitnumber to start searching at
 * @size: The bitmap size in bits
 *
 * Returns the bit number for the next set bit
 * If no bits are set, returns @size.
 */</doc>
