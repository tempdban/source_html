<dec f='linux-4.14.y/include/linux/interrupt.h' l='690' type='unsigned int probe_irq_mask(unsigned long )'/>
<doc f='linux-4.14.y/include/linux/interrupt.h' l='690'>/* returns mask of ISA interrupts */</doc>
<def f='linux-4.14.y/kernel/irq/autoprobe.c' l='119' ll='139' type='unsigned int probe_irq_mask(unsigned long val)'/>
<dec f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' type='unsigned int probe_irq_mask(unsigned long )'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' c='probe_irq_mask'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' u='a'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' u='a'/>
<doc f='linux-4.14.y/kernel/irq/autoprobe.c' l='107'>/**
 *	probe_irq_mask - scan a bitmap of interrupt lines
 *	@val:	mask of interrupts to consider
 *
 *	Scan the interrupt lines and return a bitmap of active
 *	autodetect interrupts. The interrupt probe logic state
 *	is then returned to its previous value.
 *
 *	Note: we need to scan all the irq&apos;s even though we will
 *	only return autodetect irq numbers - just so that we reset
 *	them all to a known state.
 */</doc>
<dec f='linux-4.14.y/include/linux/interrupt.h' l='690' type='unsigned int probe_irq_mask(unsigned long )'/>
<doc f='linux-4.14.y/include/linux/interrupt.h' l='690'>/* returns mask of ISA interrupts */</doc>
<def f='linux-4.14.y/kernel/irq/autoprobe.c' l='119' ll='139' type='unsigned int probe_irq_mask(unsigned long val)'/>
<dec f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' type='unsigned int probe_irq_mask(unsigned long )'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' c='probe_irq_mask'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' u='a'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='140' u='a'/>
<doc f='linux-4.14.y/kernel/irq/autoprobe.c' l='107'>/**
 *	probe_irq_mask - scan a bitmap of interrupt lines
 *	@val:	mask of interrupts to consider
 *
 *	Scan the interrupt lines and return a bitmap of active
 *	autodetect interrupts. The interrupt probe logic state
 *	is then returned to its previous value.
 *
 *	Note: we need to scan all the irq&apos;s even though we will
 *	only return autodetect irq numbers - just so that we reset
 *	them all to a known state.
 */</doc>
