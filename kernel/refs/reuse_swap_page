<dec f='linux-4.18.y/include/linux/swap.h' l='468' type='bool reuse_swap_page(struct page * , int * )'/>
<use f='linux-4.18.y/mm/memory.c' l='2782' u='c' c='do_wp_page'/>
<use f='linux-4.18.y/mm/memory.c' l='3062' u='c' c='do_swap_page'/>
<def f='linux-4.18.y/mm/swapfile.c' l='1550' ll='1584' type='bool reuse_swap_page(struct page * page, int * total_map_swapcount)'/>
<doc f='linux-4.18.y/mm/swapfile.c' l='1540'>/*
 * We can write to an anon page without COW if there are no other references
 * to it.  And as a side-effect, free up its swap: because the old content
 * on disk will never be read, and seeking back there to write new content
 * later would only waste time away from clustering.
 *
 * NOTE: total_map_swapcount should not be relied upon by the caller if
 * reuse_swap_page() returns false, but it may be always overwritten
 * (see the other implementation for CONFIG_SWAP=n).
 */</doc>
