<dec f='linux-4.14.y/drivers/acpi/acpica/acutils.h' l='412' type='acpi_status acpi_ut_execute_CLS(struct acpi_namespace_node * device_node, struct acpi_pnp_device_id ** return_id)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/nsxfname.c' l='350' u='c' c='acpi_get_object_info'/>
<def f='linux-4.14.y/drivers/acpi/acpica/utids.c' l='371' ll='439' type='acpi_status acpi_ut_execute_CLS(struct acpi_namespace_node * device_node, struct acpi_pnp_device_id ** return_id)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/utids.c' l='352'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ut_execute_CLS
 *
 * PARAMETERS:  device_node         - Node for the device
 *              return_id           - Where the _CLS is returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Executes the _CLS control method that returns PCI-defined
 *              class code of the device. The _CLS value is always a package
 *              containing PCI class information as a list of integers.
 *              The returned string has format &quot;BBSSPP&quot;, where:
 *                BB = Base-class code
 *                SS = Sub-class code
 *                PP = Programming Interface code
 *
 ******************************************************************************/</doc>
