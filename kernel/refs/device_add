<dec f='linux-4.18.y/include/linux/device.h' l='1167' type='int device_add(struct device * dev)'/>
<use f='linux-4.18.y/block/genhd.c' l='585' u='c' c='register_disk'/>
<use f='linux-4.18.y/block/partition-generic.c' l='368' u='c' c='add_partition'/>
<use f='linux-4.18.y/drivers/acpi/scan.c' l='694' u='c' c='acpi_device_add'/>
<use f='linux-4.18.y/drivers/ata/libata-transport.c' l='294' u='c' c='ata_tport_add'/>
<use f='linux-4.18.y/drivers/ata/libata-transport.c' l='424' u='c' c='ata_tlink_add'/>
<use f='linux-4.18.y/drivers/ata/libata-transport.c' l='675' u='c' c='ata_tdev_add'/>
<use f='linux-4.18.y/drivers/base/attribute_container.c' l='351' u='c' c='attribute_container_add_class_device'/>
<def f='linux-4.18.y/drivers/base/core.c' l='1773' ll='1922' type='int device_add(struct device * dev)'/>
<dec f='linux-4.18.y/drivers/base/core.c' l='1923' type='int device_add(struct device * )'/>
<use f='linux-4.18.y/drivers/base/core.c' l='1923' c='device_add'/>
<use f='linux-4.18.y/drivers/base/core.c' l='1923' u='a'/>
<use f='linux-4.18.y/drivers/base/core.c' l='1923' u='a'/>
<use f='linux-4.18.y/drivers/base/core.c' l='1946' u='c' c='device_register'/>
<use f='linux-4.18.y/drivers/base/core.c' l='2471' u='c' c='device_create_groups_vargs'/>
<doc f='linux-4.18.y/drivers/base/core.c' l='1751'>/**
 * device_add - add device to device hierarchy.
 * @dev: device.
 *
 * This is part 2 of device_register(), though may be called
 * separately _iff_ device_initialize() has been called separately.
 *
 * This adds @dev to the kobject hierarchy via kobject_add(), adds it
 * to the global and sibling lists for the device, then
 * adds it to the other relevant subsystems of the driver model.
 *
 * Do not call this routine or device_register() more than once for
 * any device structure.  The driver model core is not designed to work
 * with devices that get unregistered and then spring back to life.
 * (Among other things, it&apos;s very hard to guarantee that all references
 * to the previous incarnation of @dev have been dropped.)  Allocate
 * and register a fresh new struct device instead.
 *
 * NOTE: _Never_ directly free @dev after calling this function, even
 * if it returned an error! Always use put_device() to give up your
 * reference instead.
 */</doc>
<use f='linux-4.18.y/drivers/base/cpu.c' l='436' u='c' c='__cpu_device_create'/>
<use f='linux-4.18.y/drivers/base/platform.c' l='417' u='c' c='platform_device_add'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='191' u='c' c='drm_minor_register'/>
<use f='linux-4.18.y/drivers/hid/hid-core.c' l='2141' u='c' c='hid_add_device'/>
<use f='linux-4.18.y/drivers/input/input.c' l='2142' u='c' c='input_register_device'/>
<use f='linux-4.18.y/drivers/input/serio/serio.c' l='558' u='c' c='serio_add_port'/>
<use f='linux-4.18.y/drivers/iommu/iommu-sysfs.c' l='81' u='c' c='iommu_device_sysfs_add'/>
<use f='linux-4.18.y/drivers/media/rc/rc-main.c' l='1864' u='c' c='rc_register_device'/>
<use f='linux-4.18.y/drivers/net/phy/mdio_device.c' l='90' u='c' c='mdio_device_register'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='660' u='c' c='phy_device_register'/>
<use f='linux-4.18.y/drivers/nvmem/core.c' l='511' u='c' c='nvmem_register'/>
<use f='linux-4.18.y/drivers/pci/probe.c' l='2348' u='c' c='pci_device_add'/>
<use f='linux-4.18.y/drivers/power/supply/power_supply_core.c' l='903' u='c' c='__power_supply_register'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='255' u='c' c='scsi_add_host_with_dma'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='264' u='c' c='scsi_add_host_with_dma'/>
<use f='linux-4.18.y/drivers/scsi/raid_class.c' l='247' u='c' c='raid_component_add'/>
<use f='linux-4.18.y/drivers/scsi/scsi_sysfs.c' l='1248' u='c' c='scsi_target_add'/>
<use f='linux-4.18.y/drivers/scsi/scsi_sysfs.c' l='1293' u='c' c='scsi_sysfs_add_sdev'/>
<use f='linux-4.18.y/drivers/scsi/scsi_sysfs.c' l='1301' u='c' c='scsi_sysfs_add_sdev'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='2654' u='c' c='fc_remote_port_create'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3406' u='c' c='fc_vport_setup'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_iscsi.c' l='2086' u='c' c='iscsi_add_session'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_sas.c' l='724' u='c' c='sas_phy_add'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_sas.c' l='952' u='c' c='sas_port_add'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_sas.c' l='1528' u='c' c='sas_rphy_add'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_srp.c' l='742' u='c' c='srp_rport_add'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='3382' u='c' c='sd_probe'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='556' u='c' c='spi_add_device'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2197' u='c' c='spi_register_controller'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='2485' u='c' c='usb_new_device'/>
<use f='linux-4.18.y/drivers/usb/core/message.c' l='2014' u='c' c='usb_set_configuration'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1170' u='c' c='usb_add_gadget_udc_release'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1180' u='c' c='usb_add_gadget_udc_release'/>
<use f='linux-4.18.y/drivers/virtio/virtio.c' l='347' u='c' c='register_virtio_device'/>
<use f='linux-4.18.y/fs/char_dev.c' l='549' u='c' c='cdev_device_add'/>
<use f='linux-4.18.y/fs/fuse/cuse.c' l='370' u='c' c='cuse_process_init_reply'/>
<use f='linux-4.18.y/kernel/events/core.c' l='9548' u='c' c='pmu_dev_alloc'/>
<use f='linux-4.18.y/net/core/net-sysfs.c' l='1604' u='c' c='netdev_register_kobject'/>
