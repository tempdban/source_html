<dec f='linux-4.18.y/include/linux/vmalloc.h' l='75' type='void * vmalloc_node(unsigned long size, int node)'/>
<use f='linux-4.18.y/crypto/scompress.c' l='93' u='c' c='crypto_scomp_alloc_scratches'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='6189' u='c' c='ixgbe_setup_tx_resources'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='6283' u='c' c='ixgbe_setup_rx_resources'/>
<def f='linux-4.18.y/mm/vmalloc.c' l='1884' ll='1888' type='void * vmalloc_node(unsigned long size, int node)'/>
<dec f='linux-4.18.y/mm/vmalloc.c' l='1889' type='void * vmalloc_node(unsigned long , int )'/>
<use f='linux-4.18.y/mm/vmalloc.c' l='1889' c='vmalloc_node'/>
<use f='linux-4.18.y/mm/vmalloc.c' l='1889' u='a'/>
<use f='linux-4.18.y/mm/vmalloc.c' l='1889' u='a'/>
<doc f='linux-4.18.y/mm/vmalloc.c' l='1873'>/**
 *	vmalloc_node  -  allocate memory on a specific node
 *	@size:		allocation size
 *	@node:		numa node
 *
 *	Allocate enough pages to cover @size from the page level
 *	allocator and map them into contiguous kernel virtual space.
 *
 *	For tight control over page level allocator and protection flags
 *	use __vmalloc() instead.
 */</doc>
