<def f='linux-4.18.y/lib/librte_sched/rte_red.h' l='317' ll='361' type='int rte_red_enqueue_nonempty(const struct rte_red_config * red_cfg, struct rte_red * red, const unsigned int q)'/>
<use f='linux-4.18.y/lib/librte_sched/rte_red.h' l='389' u='c' c='rte_red_enqueue'/>
<doc f='linux-4.18.y/lib/librte_sched/rte_red.h' l='305'>/**
 * @brief Decides if new packet should be enqeued or dropped in queue non-empty case
 *
 * @param red_cfg [in] config pointer to a RED configuration parameter structure
 * @param red [in,out] data pointer to RED runtime data
 * @param q [in] current queue size (measured in packets)
 *
 * @return Operation status
 * @retval 0 enqueue the packet
 * @retval 1 drop the packet based on max threshold criterion
 * @retval 2 drop the packet based on mark probability criterion
 */</doc>
