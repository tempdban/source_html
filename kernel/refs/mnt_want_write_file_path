<dec f='linux-4.18.y/fs/internal.h' l='83' type='int mnt_want_write_file_path(struct file * )'/>
<def f='linux-4.18.y/fs/namespace.c' l='445' ll='454' type='int mnt_want_write_file_path(struct file * file)'/>
<doc f='linux-4.18.y/fs/namespace.c' l='433'>/**
 * mnt_want_write_file_path - get write access to a file&apos;s mount
 * @file: the file who&apos;s mount on which to take a write
 *
 * This is like mnt_want_write, but it takes a file and can
 * do some optimisations if the file is open for write already
 *
 * Called by the vfs for cases when we have an open file at hand, but will do an
 * inode operation on it (important distinction for files opened on overlayfs,
 * since the file operations will come from the real underlying file, while
 * inode operations come from the overlay).
 */</doc>
<use f='linux-4.18.y/fs/open.c' l='710' u='c' c='ksys_fchown'/>
<use f='linux-4.18.y/fs/xattr.c' l='504' u='c' c='__do_sys_fsetxattr'/>
<use f='linux-4.18.y/fs/xattr.c' l='736' u='c' c='__do_sys_fremovexattr'/>
