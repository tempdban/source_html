<dec f='linux-4.18.y/include/linux/virtio.h' l='54' type='int virtqueue_add_sgs(struct virtqueue * vq, struct scatterlist ** sgs, unsigned int out_sgs, unsigned int in_sgs, void * data, gfp_t gfp)'/>
<use f='linux-4.18.y/drivers/block/virtio_blk.c' l='172' u='c' c='virtblk_add_req'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_vq.c' l='293' u='c' c='virtio_gpu_queue_ctrl_buffer_locked'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_vq.c' l='368' u='c' c='virtio_gpu_queue_cursor'/>
<use f='linux-4.18.y/drivers/net/virtio_net.c' l='1549' u='c' c='virtnet_send_command'/>
<use f='linux-4.18.y/drivers/scsi/virtio_scsi.c' l='462' u='c' c='virtscsi_add_cmd'/>
<def f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='451' ll='468' type='int virtqueue_add_sgs(struct virtqueue * _vq, struct scatterlist ** sgs, unsigned int out_sgs, unsigned int in_sgs, void * data, gfp_t gfp)'/>
<dec f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='469' type='int virtqueue_add_sgs(struct virtqueue * , struct scatterlist ** , unsigned int , unsigned int , void * , gfp_t )'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='469' c='virtqueue_add_sgs'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='469' u='a'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='469' u='a'/>
<doc f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='437'>/**
 * virtqueue_add_sgs - expose buffers to other end
 * @vq: the struct virtqueue we&apos;re talking about.
 * @sgs: array of terminated scatterlists.
 * @out_num: the number of scatterlists readable by other side
 * @in_num: the number of scatterlists which are writable (after readable ones)
 * @data: the token identifying the buffer.
 * @gfp: how to do memory allocations (if necessary).
 *
 * Caller must ensure we don&apos;t call this with other virtqueue operations
 * at the same time (except where noted).
 *
 * Returns zero or a negative error (ie. ENOSPC, ENOMEM, EIO).
 */</doc>
