<dec f='linux-4.18.y/include/linux/fb.h' l='633' type='int unregister_framebuffer(struct fb_info * fb_info)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fb_helper.c' l='918' u='c' c='drm_fb_helper_unregister_fbi'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='820' u='c' c='vmw_fb_close'/>
<def f='linux-4.18.y/drivers/video/fbdev/core/fbmem.c' l='1843' ll='1853' type='int unregister_framebuffer(struct fb_info * fb_info)'/>
<dec f='linux-4.18.y/drivers/video/fbdev/core/fbmem.c' l='1854' type='int unregister_framebuffer(struct fb_info * )'/>
<use f='linux-4.18.y/drivers/video/fbdev/core/fbmem.c' l='1854' c='unregister_framebuffer'/>
<use f='linux-4.18.y/drivers/video/fbdev/core/fbmem.c' l='1854' u='a'/>
<use f='linux-4.18.y/drivers/video/fbdev/core/fbmem.c' l='1854' u='a'/>
<doc f='linux-4.18.y/drivers/video/fbdev/core/fbmem.c' l='1827'>/**
 *	unregister_framebuffer - releases a frame buffer device
 *	@fb_info: frame buffer info structure
 *
 *	Unregisters a frame buffer device @fb_info.
 *
 *	Returns negative errno on error, or zero for success.
 *
 *      This function will also notify the framebuffer console
 *      to release the driver.
 *
 *      This is meant to be called within a driver&apos;s module_exit()
 *      function. If this is called outside module_exit(), ensure
 *      that the driver implements fb_open() and fb_release() to
 *      check that no processes are using the device.
 */</doc>
<use f='linux-4.18.y/drivers/video/fbdev/simplefb.c' l='521' u='c' c='simplefb_remove'/>
<use f='linux-4.18.y/drivers/video/fbdev/vesafb.c' l='482' u='c' c='vesafb_remove'/>
<use f='linux-4.18.y/drivers/video/fbdev/vga16fb.c' l='1399' u='c' c='vga16fb_remove'/>
