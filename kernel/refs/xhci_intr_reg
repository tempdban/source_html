<def f='linux-4.14.y/drivers/usb/host/xhci.h' l='482' ll='489'/>
<size>32</size>
<doc f='linux-4.14.y/drivers/usb/host/xhci.h' l='465'>/**
 * struct xhci_intr_reg - Interrupt Register Set
 * @irq_pending:	IMAN - Interrupt Management Register.  Used to enable
 *			interrupts and check for pending interrupts.
 * @irq_control:	IMOD - Interrupt Moderation Register.
 * 			Used to throttle interrupts.
 * @erst_size:		Number of segments in the Event Ring Segment Table (ERST).
 * @erst_base:		ERST base address.
 * @erst_dequeue:	Event ring dequeue pointer.
 *
 * Each interrupter (defined by a MSI-X vector) has an event ring and an Event
 * Ring Segment Table (ERST) associated with it.  The event ring is comprised of
 * multiple segments of the same size.  The HC places events on the ring and
 * &quot;updates the Cycle bit in the TRBs to indicate to software the current
 * position of the Enqueue Pointer.&quot; The HCD (Linux) processes those events and
 * updates the dequeue pointer.
 */</doc>
<mbr r='xhci_intr_reg::irq_pending' o='0' t='__le32'/>
<mbr r='xhci_intr_reg::irq_control' o='32' t='__le32'/>
<mbr r='xhci_intr_reg::erst_size' o='64' t='__le32'/>
<mbr r='xhci_intr_reg::rsvd' o='96' t='__le32'/>
<mbr r='xhci_intr_reg::erst_base' o='128' t='__le64'/>
<mbr r='xhci_intr_reg::erst_dequeue' o='192' t='__le64'/>
