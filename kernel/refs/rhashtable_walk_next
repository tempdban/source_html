<dec f='linux-4.14.y/include/linux/rhashtable.h' l='382' type='void * rhashtable_walk_next(struct rhashtable_iter * iter)'/>
<def f='linux-4.14.y/lib/rhashtable.c' l='783' ll='844' type='void * rhashtable_walk_next(struct rhashtable_iter * iter)'/>
<dec f='linux-4.14.y/lib/rhashtable.c' l='845' type='void * rhashtable_walk_next(struct rhashtable_iter * )'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='845' c='rhashtable_walk_next'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='845' u='a'/>
<use f='linux-4.14.y/lib/rhashtable.c' l='845' u='a'/>
<doc f='linux-4.14.y/lib/rhashtable.c' l='771'>/**
 * rhashtable_walk_next - Return the next object and advance the iterator
 * @iter:	Hash table iterator
 *
 * Note that you must call rhashtable_walk_stop when you are finished
 * with the walk.
 *
 * Returns the next object or NULL when the end of the table is reached.
 *
 * Returns -EAGAIN if resize event occured.  Note that the iterator
 * will rewind back to the beginning and you may continue to use it.
 */</doc>
<use f='linux-4.14.y/net/netfilter/nft_set_hash.c' l='242' u='c' c='nft_rhash_walk'/>
<use f='linux-4.14.y/net/netfilter/nft_set_hash.c' l='295' u='c' c='nft_rhash_gc'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='2520' u='c' c='__netlink_seq_next'/>
