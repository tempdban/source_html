<dec f='linux-4.18.y/net/socket.c' l='2492' macro='1' type='long __se_sys_recvmmsg(typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((int)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((int)0), typeof (0ULL))), 0LL, 0L)) fd, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct mmsghdr *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct mmsghdr *)0), typeof (0ULL))), 0LL, 0L)) mmsg, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0ULL))), 0LL, 0L)) vlen, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0ULL))), 0LL, 0L)) flags, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0ULL))), 0LL, 0L)) timeout)'/>
<use f='linux-4.18.y/net/socket.c' l='2492' macro='1' u='c'/>
<use f='linux-4.18.y/net/socket.c' l='2492' macro='1' u='c'/>
<def f='linux-4.18.y/net/socket.c' l='2492' macro='1' type='long __se_sys_recvmmsg(typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((int)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((int)0), typeof (0ULL))), 0LL, 0L)) fd, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct mmsghdr *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct mmsghdr *)0), typeof (0ULL))), 0LL, 0L)) mmsg, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0ULL))), 0LL, 0L)) vlen, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((unsigned int)0), typeof (0ULL))), 0LL, 0L)) flags, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0ULL))), 0LL, 0L)) timeout)'/>
