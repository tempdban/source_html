<def f='linux-4.18.y/include/linux/virtio.h' l='180' ll='196'/>
<size>208</size>
<doc f='linux-4.18.y/include/linux/virtio.h' l='163'>/**
 * virtio_driver - operations for a virtio I/O driver
 * @driver: underlying device driver (populate name and owner).
 * @id_table: the ids serviced by this driver.
 * @feature_table: an array of feature numbers supported by this driver.
 * @feature_table_size: number of entries in the feature table array.
 * @feature_table_legacy: same as feature_table but when working in legacy mode.
 * @feature_table_size_legacy: number of entries in feature table legacy array.
 * @probe: the function to call when a device is found.  Returns 0 or -errno.
 * @scan: optional function to call after successful probe; intended
 *    for virtio-scsi to invoke a scan.
 * @remove: the function to call when a device is removed.
 * @config_changed: optional function to call when the device configuration
 *    changes; may be called in interrupt context.
 * @freeze: optional function to call during suspend/hibernation.
 * @restore: optional function to call on resume.
 */</doc>
<mbr r='virtio_driver::driver' o='0' t='struct device_driver'/>
<mbr r='virtio_driver::id_table' o='1024' t='const struct virtio_device_id *'/>
<mbr r='virtio_driver::feature_table' o='1088' t='const unsigned int *'/>
<mbr r='virtio_driver::feature_table_size' o='1152' t='unsigned int'/>
<mbr r='virtio_driver::feature_table_legacy' o='1216' t='const unsigned int *'/>
<mbr r='virtio_driver::feature_table_size_legacy' o='1280' t='unsigned int'/>
<mbr r='virtio_driver::validate' o='1344' t='int (*)(struct virtio_device *)'/>
<mbr r='virtio_driver::probe' o='1408' t='int (*)(struct virtio_device *)'/>
<mbr r='virtio_driver::scan' o='1472' t='void (*)(struct virtio_device *)'/>
<mbr r='virtio_driver::remove' o='1536' t='void (*)(struct virtio_device *)'/>
<mbr r='virtio_driver::config_changed' o='1600' t='void (*)(struct virtio_device *)'/>
