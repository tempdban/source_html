<dec f='linux-4.18.y/include/linux/errseq.h' l='11' type='errseq_t errseq_sample(errseq_t * eseq)'/>
<use f='linux-4.18.y/include/linux/fs.h' l='2694' u='c' c='filemap_sample_wb_err'/>
<def f='linux-4.18.y/lib/errseq.c' l='122' ll='130' type='errseq_t errseq_sample(errseq_t * eseq)'/>
<dec f='linux-4.18.y/lib/errseq.c' l='131' type='errseq_t errseq_sample(errseq_t * )'/>
<use f='linux-4.18.y/lib/errseq.c' l='131' c='errseq_sample'/>
<use f='linux-4.18.y/lib/errseq.c' l='131' u='a'/>
<use f='linux-4.18.y/lib/errseq.c' l='131' u='a'/>
<doc f='linux-4.18.y/lib/errseq.c' l='110'>/**
 * errseq_sample() - Grab current errseq_t value.
 * @eseq: Pointer to errseq_t to be sampled.
 *
 * This function allows callers to initialise their errseq_t variable.
 * If the error has been &quot;seen&quot;, new callers will not see an old error.
 * If there is an unseen error in @eseq, the caller of this function will
 * see it the next time it checks for an error.
 *
 * Context: Any context.
 * Return: The current errseq value.
 */</doc>
