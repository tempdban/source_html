<dec f='linux-4.18.y/include/linux/mii.h' l='45' type='int generic_mii_ioctl(struct mii_if_info * mii_if, struct mii_ioctl_data * mii_data, int cmd, unsigned int * duplex_changed)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e100.c' l='2751' u='c' c='e100_do_ioctl'/>
<use f='linux-4.18.y/drivers/net/ethernet/realtek/8139cp.c' l='1609' u='c' c='cp_ioctl'/>
<use f='linux-4.18.y/drivers/net/ethernet/realtek/8139too.c' l='2508' u='c' c='netdev_ioctl'/>
<def f='linux-4.18.y/drivers/net/mii.c' l='584' ll='651' type='int generic_mii_ioctl(struct mii_if_info * mii_if, struct mii_ioctl_data * mii_data, int cmd, unsigned int * duplex_chg_out)'/>
<dec f='linux-4.18.y/drivers/net/mii.c' l='666' type='int generic_mii_ioctl(struct mii_if_info * , struct mii_ioctl_data * , int , unsigned int * )'/>
<use f='linux-4.18.y/drivers/net/mii.c' l='666' c='generic_mii_ioctl'/>
<use f='linux-4.18.y/drivers/net/mii.c' l='666' u='a'/>
<use f='linux-4.18.y/drivers/net/mii.c' l='666' u='a'/>
<doc f='linux-4.18.y/drivers/net/mii.c' l='574'>/**
 * generic_mii_ioctl - main MII ioctl interface
 * @mii_if: the MII interface
 * @mii_data: MII ioctl data structure
 * @cmd: MII ioctl command
 * @duplex_chg_out: pointer to @duplex_changed status if there was no
 *	ioctl error
 *
 * Returns 0 on success, negative on error.
 */</doc>
