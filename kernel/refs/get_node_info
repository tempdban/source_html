<dec f='linux-4.14.y/fs/f2fs/f2fs.h' l='2466' type='void get_node_info(struct f2fs_sb_info * sbi, nid_t nid, struct node_info * ni)'/>
<use f='linux-4.14.y/fs/f2fs/checkpoint.c' l='574' u='c' c='recover_orphan_inode'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='807' u='c' c='__allocate_data_block'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1025' u='c' c='__clone_blkaddrs'/>
<use f='linux-4.14.y/fs/f2fs/gc.c' l='529' u='c' c='gc_node_segment'/>
<use f='linux-4.14.y/fs/f2fs/gc.c' l='585' u='c' c='is_alive'/>
<use f='linux-4.14.y/fs/f2fs/gc.c' l='653' u='c' c='move_data_block'/>
<use f='linux-4.14.y/fs/f2fs/inline.c' l='675' u='c' c='f2fs_inline_data_fiemap'/>
<use f='linux-4.14.y/fs/f2fs/inode.c' l='575' u='c' c='handle_failed_inode'/>
<def f='linux-4.14.y/fs/f2fs/node.c' l='390' ll='445' type='void get_node_info(struct f2fs_sb_info * sbi, nid_t nid, struct node_info * ni)'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='699' u='c' c='truncate_node'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='1067' u='c' c='new_node_page'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='1119' u='c' c='read_node_page'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='1391' u='c' c='__write_node_page'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='2237' u='c' c='recover_xattr_data'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='2274' u='c' c='recover_inode_page'/>
<doc f='linux-4.14.y/fs/f2fs/node.c' l='387'>/*
 * This function always returns success
 */</doc>
<use f='linux-4.14.y/fs/f2fs/recovery.c' l='445' u='c' c='do_recover_data'/>
<use f='linux-4.14.y/fs/f2fs/segment.c' l='245' u='c' c='__revoke_inmem_pages'/>
<use f='linux-4.14.y/fs/f2fs/segment.c' l='2446' u='c' c='write_data_page'/>
