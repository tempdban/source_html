<def f='linux-4.14.y/include/linux/netfilter/x_tables.h' l='92' ll='101'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/netfilter/x_tables.h' l='79'>/**
 * struct xt_mtchk_param - parameters for match extensions&apos;
 * checkentry functions
 *
 * @net:	network namespace through which the check was invoked
 * @table:	table the rule is tried to be inserted into
 * @entryinfo:	the family-specific rule data
 * 		(struct ipt_ip, ip6t_ip, arpt_arp or (note) ebt_entry)
 * @match:	struct xt_match through which this function was invoked
 * @matchinfo:	per-match data
 * @hook_mask:	via which hooks the new rule is reachable
 * Other fields as above.
 */</doc>
<mbr r='xt_mtchk_param::net' o='0' t='struct net *'/>
<mbr r='xt_mtchk_param::table' o='64' t='const char *'/>
<mbr r='xt_mtchk_param::entryinfo' o='128' t='const void *'/>
<mbr r='xt_mtchk_param::match' o='192' t='const struct xt_match *'/>
<mbr r='xt_mtchk_param::matchinfo' o='256' t='void *'/>
<mbr r='xt_mtchk_param::hook_mask' o='320' t='unsigned int'/>
<mbr r='xt_mtchk_param::family' o='352' t='u_int8_t'/>
<mbr r='xt_mtchk_param::nft_compat' o='360' t='bool'/>
