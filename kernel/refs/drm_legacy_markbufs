<dec f='linux-4.14.y/drivers/gpu/drm/drm_legacy.h' l='72' type='int drm_legacy_markbufs(struct drm_device * d, void * v, struct drm_file * f)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_bufs.c' l='1346' ll='1379' type='int drm_legacy_markbufs(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_bufs.c' l='1332'>/**
 * Specifies a low and high water mark for buffer allocation
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg a pointer to a drm_buf_desc structure.
 * \return zero on success or a negative number on failure.
 *
 * Verifies that the size order is bounded between the admissible orders and
 * updates the respective drm_device_dma::bufs entry low and high water mark.
 *
 * \note This ioctl is deprecated and mostly never used.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioc32.c' l='358' u='r' c='compat_drm_markbufs'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='584'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='584'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='584'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='584'/>
