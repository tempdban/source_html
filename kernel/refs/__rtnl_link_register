<dec f='linux-4.14.y/include/net/rtnetlink.h' l='118' type='int __rtnl_link_register(struct rtnl_link_ops * ops)'/>
<def f='linux-4.14.y/net/core/rtnetlink.c' l='294' ll='309' type='int __rtnl_link_register(struct rtnl_link_ops * ops)'/>
<dec f='linux-4.14.y/net/core/rtnetlink.c' l='310' type='int __rtnl_link_register(struct rtnl_link_ops * )'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='310' c='__rtnl_link_register'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='310' u='a'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='310' u='a'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='323' u='c' c='rtnl_link_register'/>
<doc f='linux-4.14.y/net/core/rtnetlink.c' l='284'>/**
 * __rtnl_link_register - Register rtnl_link_ops with rtnetlink.
 * @ops: struct rtnl_link_ops * to register
 *
 * The caller must hold the rtnl_mutex. This function should be used
 * by drivers that create devices during module initialization. It
 * must be called before registering the devices.
 *
 * Returns 0 on success or a negative error code.
 */</doc>
