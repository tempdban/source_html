<dec f='linux-4.18.y/include/linux/splice.h' l='73' type='ssize_t __splice_from_pipe(struct pipe_inode_info * , struct splice_desc * , splice_actor * )'/>
<use f='linux-4.18.y/drivers/char/virtio_console.c' l='970' u='c' c='port_fops_splice_write'/>
<def f='linux-4.18.y/fs/splice.c' l='617' ll='632' type='ssize_t __splice_from_pipe(struct pipe_inode_info * pipe, struct splice_desc * sd, splice_actor * actor)'/>
<dec f='linux-4.18.y/fs/splice.c' l='633' type='ssize_t __splice_from_pipe(struct pipe_inode_info * , struct splice_desc * , splice_actor * )'/>
<use f='linux-4.18.y/fs/splice.c' l='633' c='__splice_from_pipe'/>
<use f='linux-4.18.y/fs/splice.c' l='633' u='a'/>
<use f='linux-4.18.y/fs/splice.c' l='633' u='a'/>
<use f='linux-4.18.y/fs/splice.c' l='662' u='c' c='splice_from_pipe'/>
<use f='linux-4.18.y/fs/splice.c' l='1262' u='c' c='vmsplice_to_user'/>
<doc f='linux-4.18.y/fs/splice.c' l='604'>/**
 * __splice_from_pipe - splice data from a pipe to given actor
 * @pipe:	pipe to splice from
 * @sd:		information to @actor
 * @actor:	handler that splices the data
 *
 * Description:
 *    This function does little more than loop over the pipe and call
 *    @actor to do the actual moving of a single struct pipe_buffer to
 *    the desired destination. See pipe_to_file, pipe_to_sendpage, or
 *    pipe_to_user.
 *
 */</doc>
