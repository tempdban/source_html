<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='81' type='int dm_bio_detain(struct dm_bio_prison * prison, struct dm_cell_key * key, struct bio * inmate, struct dm_bio_prison_cell * cell_prealloc, struct dm_bio_prison_cell ** cell_result)'/>
<def f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='161' ll='168' type='int dm_bio_detain(struct dm_bio_prison * prison, struct dm_cell_key * key, struct bio * inmate, struct dm_bio_prison_cell * cell_prealloc, struct dm_bio_prison_cell ** cell_result)'/>
<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' type='int dm_bio_detain(struct dm_bio_prison * , struct dm_cell_key * , struct bio * , struct dm_bio_prison_cell * , struct dm_bio_prison_cell ** )'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' c='dm_bio_detain'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' u='a'/>
<doc f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='75'>/*
 * An atomic op that combines retrieving or creating a cell, and adding a
 * bio to it.
 *
 * Returns 1 if the cell was already held, 0 if @inmate is the new holder.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-thin.c' l='416' u='c' c='bio_detain'/>
<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='81' type='int dm_bio_detain(struct dm_bio_prison * prison, struct dm_cell_key * key, struct bio * inmate, struct dm_bio_prison_cell * cell_prealloc, struct dm_bio_prison_cell ** cell_result)'/>
<def f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='161' ll='168' type='int dm_bio_detain(struct dm_bio_prison * prison, struct dm_cell_key * key, struct bio * inmate, struct dm_bio_prison_cell * cell_prealloc, struct dm_bio_prison_cell ** cell_result)'/>
<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' type='int dm_bio_detain(struct dm_bio_prison * , struct dm_cell_key * , struct bio * , struct dm_bio_prison_cell * , struct dm_bio_prison_cell ** )'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' c='dm_bio_detain'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='169' u='a'/>
<doc f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='75'>/*
 * An atomic op that combines retrieving or creating a cell, and adding a
 * bio to it.
 *
 * Returns 1 if the cell was already held, 0 if @inmate is the new holder.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-thin.c' l='416' u='c' c='bio_detain'/>
