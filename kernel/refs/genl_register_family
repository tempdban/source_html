<dec f='linux-4.14.y/include/net/genetlink.h' l='146' type='int genl_register_family(struct genl_family * family)'/>
<use f='linux-4.14.y/drivers/acpi/event.c' l='150' u='c' c='acpi_event_genetlink_init'/>
<use f='linux-4.14.y/drivers/thermal/thermal_core.c' l='1478' u='c' c='genetlink_init'/>
<use f='linux-4.14.y/kernel/taskstats.c' l='692' u='c' c='taskstats_init'/>
<use f='linux-4.14.y/net/ipv4/tcp_metrics.c' l='1040' u='c' c='tcp_metrics_init'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='788' u='c' c='netlbl_cipsov4_genl_init'/>
<use f='linux-4.14.y/net/netlabel/netlabel_mgmt.c' l='855' u='c' c='netlbl_mgmt_genl_init'/>
<use f='linux-4.14.y/net/netlabel/netlabel_unlabeled.c' l='1399' u='c' c='netlbl_unlabel_genl_init'/>
<def f='linux-4.14.y/net/netlink/genetlink.c' l='322' ll='391' type='int genl_register_family(struct genl_family * family)'/>
<dec f='linux-4.14.y/net/netlink/genetlink.c' l='392' type='int genl_register_family(struct genl_family * )'/>
<use f='linux-4.14.y/net/netlink/genetlink.c' l='392' c='genl_register_family'/>
<use f='linux-4.14.y/net/netlink/genetlink.c' l='392' u='a'/>
<use f='linux-4.14.y/net/netlink/genetlink.c' l='392' u='a'/>
<use f='linux-4.14.y/net/netlink/genetlink.c' l='1044' u='c' c='genl_init'/>
<doc f='linux-4.14.y/net/netlink/genetlink.c' l='310'>/**
 * genl_register_family - register a generic netlink family
 * @family: generic netlink family
 *
 * Registers the specified family after validating it first. Only one
 * family may be registered with the same family name or identifier.
 *
 * The family&apos;s ops, multicast groups and module pointer must already
 * be assigned.
 *
 * Return 0 on success or a negative error code.
 */</doc>
<use f='linux-4.14.y/net/openvswitch/datapath.c' l='2307' u='c' c='dp_register_genl'/>
