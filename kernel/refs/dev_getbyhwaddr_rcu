<dec f='linux-4.18.y/include/linux/netdevice.h' l='2517' type='struct net_device * dev_getbyhwaddr_rcu(struct net * net, unsigned short type, const char * hwaddr)'/>
<def f='linux-4.18.y/net/core/dev.c' l='946' ll='957' type='struct net_device * dev_getbyhwaddr_rcu(struct net * net, unsigned short type, const char * ha)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='958' type='struct net_device * dev_getbyhwaddr_rcu(struct net * , unsigned short , const char * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='958' c='dev_getbyhwaddr_rcu'/>
<use f='linux-4.18.y/net/core/dev.c' l='958' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='958' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='932'>/**
 *	dev_getbyhwaddr_rcu - find a device by its hardware address
 *	@net: the applicable net namespace
 *	@type: media type of device
 *	@ha: hardware address
 *
 *	Search for an interface by MAC address. Returns NULL if the device
 *	is not found or a pointer to the device.
 *	The caller must hold RCU or RTNL.
 *	The returned device has not had its ref count increased
 *	and the caller must therefore be careful about locking
 *
 */</doc>
<use f='linux-4.18.y/net/ipv4/arp.c' l='1008' u='c' c='arp_req_set_public'/>
