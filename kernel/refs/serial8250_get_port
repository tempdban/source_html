<dec f='linux-4.18.y/drivers/tty/serial/8250/8250.h' l='131' type='struct uart_8250_port * serial8250_get_port(int line)'/>
<def f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='415' ll='418' type='struct uart_8250_port * serial8250_get_port(int line)'/>
<dec f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='419' type='struct uart_8250_port * serial8250_get_port(int )'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='419' c='serial8250_get_port'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='419' u='a'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='419' u='a'/>
<doc f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='403'>/**
 * serial8250_get_port - retrieve struct uart_8250_port
 * @line: serial line number
 *
 * This function retrieves struct uart_8250_port for the specific line.
 * This struct *must* *not* be used to perform a 8250 or serial core operation
 * which is not accessible otherwise. Its only purpose is to make the struct
 * accessible to the runtime-pm callbacks for context suspend/restore.
 * The lock assumption made here is none because runtime-pm suspend/resume
 * callbacks should not be invoked if there is any operation performed on the
 * port.
 */</doc>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_exar.c' l='415' u='c' c='pci_xr17v35x_exit'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_pci.c' l='1531' u='c' c='pci_fintek_init'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_pnp.c' l='484' u='c' c='serial_pnp_probe'/>
