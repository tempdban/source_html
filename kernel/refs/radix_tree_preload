<dec f='linux-4.18.y/include/linux/radix-tree.h' l='330' type='int radix_tree_preload(gfp_t gfp_mask)'/>
<use f='linux-4.18.y/block/blk-cgroup.c' l='1178' u='c' c='blkcg_init_queue'/>
<use f='linux-4.18.y/drivers/block/brd.c' l='110' u='c' c='brd_insert_page'/>
<use f='linux-4.18.y/fs/f2fs/checkpoint.c' l='416' u='c' c='__add_ino_entry'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='1901' u='c' c='add_free_nid'/>
<use f='linux-4.18.y/fs/f2fs/trace.c' l='64' u='c' c='f2fs_trace_pid'/>
<def f='linux-4.18.y/lib/radix-tree.c' l='84' ll='88'/>
<def f='linux-4.18.y/lib/radix-tree.c' l='510' ll='515' type='int radix_tree_preload(gfp_t gfp_mask)'/>
<dec f='linux-4.18.y/lib/radix-tree.c' l='516' type='int radix_tree_preload(gfp_t )'/>
<use f='linux-4.18.y/lib/radix-tree.c' l='516' c='radix_tree_preload'/>
<use f='linux-4.18.y/lib/radix-tree.c' l='516' u='a'/>
<use f='linux-4.18.y/lib/radix-tree.c' l='516' u='a'/>
<size>16</size>
<doc f='linux-4.18.y/lib/radix-tree.c' l='81'>/*
 * Per-cpu pool of preloaded nodes
 */</doc>
<doc f='linux-4.18.y/lib/radix-tree.c' l='501'>/*
 * Load up this CPU&apos;s radix_tree_node buffer with sufficient objects to
 * ensure that the addition of a single element in the tree cannot fail.  On
 * success, return zero, with preemption disabled.  On error, return -ENOMEM
 * with preemption not disabled.
 *
 * To make use of this facility, the radix tree must be initialised without
 * __GFP_DIRECT_RECLAIM being passed to INIT_RADIX_TREE().
 */</doc>
<use f='linux-4.18.y/mm/filemap.c' l='789' u='c' c='replace_page_cache_page'/>
<use f='linux-4.18.y/mm/vmalloc.c' l='869' u='c' c='new_vmap_block'/>
