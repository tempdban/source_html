<def f='linux-4.14.y/drivers/md/md.h' l='500' ll='503' type='void mddev_lock_nointr(struct mddev * mddev)'/>
<doc f='linux-4.14.y/drivers/md/md.h' l='497'>/* Sometimes we need to take the lock in a situation where
 * failure due to interrupts is not acceptable.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3157' u='c' c='raid_ctr'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3641' u='c' c='raid_postsuspend'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3862' u='c' c='raid_preresume'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3905' u='c' c='raid_resume'/>
<use f='linux-4.14.y/drivers/md/md.c' l='5829' u='c' c='md_stop_writes'/>
<use f='linux-4.14.y/drivers/md/md.c' l='5901' u='c' c='md_set_readonly'/>
<use f='linux-4.14.y/drivers/md/md.c' l='5962' u='c' c='do_md_stop'/>
<use f='linux-4.14.y/drivers/md/md.c' l='7308' u='c' c='md_ioctl'/>
<use f='linux-4.14.y/drivers/md/md.c' l='8546' u='c' c='md_do_sync'/>
<def f='linux-4.14.y/drivers/md/md.h' l='500' ll='503' type='void mddev_lock_nointr(struct mddev * mddev)'/>
<doc f='linux-4.14.y/drivers/md/md.h' l='497'>/* Sometimes we need to take the lock in a situation where
 * failure due to interrupts is not acceptable.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3157' u='c' c='raid_ctr'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3641' u='c' c='raid_postsuspend'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3862' u='c' c='raid_preresume'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='3905' u='c' c='raid_resume'/>
<use f='linux-4.14.y/drivers/md/md.c' l='5829' u='c' c='md_stop_writes'/>
<use f='linux-4.14.y/drivers/md/md.c' l='5901' u='c' c='md_set_readonly'/>
<use f='linux-4.14.y/drivers/md/md.c' l='5962' u='c' c='do_md_stop'/>
<use f='linux-4.14.y/drivers/md/md.c' l='7308' u='c' c='md_ioctl'/>
<use f='linux-4.14.y/drivers/md/md.c' l='8546' u='c' c='md_do_sync'/>
