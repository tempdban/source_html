<def f='linux-4.18.y/drivers/md/md.h' l='509' ll='512' type='void mddev_lock_nointr(struct mddev * mddev)'/>
<use f='linux-4.18.y/drivers/md/dm-raid.c' l='3248' u='c' c='raid_ctr'/>
<use f='linux-4.18.y/drivers/md/dm-raid.c' l='3766' u='c' c='raid_postsuspend'/>
<use f='linux-4.18.y/drivers/md/dm-raid.c' l='4008' u='c' c='raid_preresume'/>
<use f='linux-4.18.y/drivers/md/dm-raid.c' l='4038' u='c' c='raid_resume'/>
<doc f='linux-4.18.y/drivers/md/md.h' l='506'>/* Sometimes we need to take the lock in a situation where
 * failure due to interrupts is not acceptable.
 */</doc>
<use f='linux-4.18.y/drivers/md/md.c' l='5876' u='c' c='md_stop_writes'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5956' u='c' c='md_set_readonly'/>
<use f='linux-4.18.y/drivers/md/md.c' l='6017' u='c' c='do_md_stop'/>
<use f='linux-4.18.y/drivers/md/md.c' l='7366' u='c' c='md_ioctl'/>
<use f='linux-4.18.y/drivers/md/md.c' l='8610' u='c' c='md_do_sync'/>
