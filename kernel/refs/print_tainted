<dec f='linux-4.14.y/include/linux/kernel.h' l='511' type='const char * print_tainted()'/>
<def f='linux-4.14.y/kernel/panic.c' l='349' ll='368' type='const char * print_tainted()'/>
<doc f='linux-4.14.y/kernel/panic.c' l='327'>/**
 *	print_tainted - return a string to represent the kernel taint state.
 *
 *  &apos;P&apos; - Proprietary module has been loaded.
 *  &apos;F&apos; - Module has been forcibly loaded.
 *  &apos;S&apos; - SMP with CPUs not designed for SMP.
 *  &apos;R&apos; - User forced a module unload.
 *  &apos;M&apos; - System experienced a machine check exception.
 *  &apos;B&apos; - System has hit bad_page.
 *  &apos;U&apos; - Userspace-defined naughtiness.
 *  &apos;D&apos; - Kernel has oopsed before
 *  &apos;A&apos; - ACPI table overridden.
 *  &apos;W&apos; - Taint on warning.
 *  &apos;C&apos; - modules from drivers/staging are loaded.
 *  &apos;I&apos; - Working around severe firmware bug.
 *  &apos;O&apos; - Out-of-tree module has been loaded.
 *  &apos;E&apos; - Unsigned module has been loaded.
 *  &apos;L&apos; - A soft lockup has previously occurred.
 *  &apos;K&apos; - Kernel has been live patched.
 *
 *	The string is overwritten by the next call to print_tainted().
 */</doc>
<use f='linux-4.14.y/kernel/printk/printk.c' l='3123' u='c' c='dump_stack_print_info'/>
