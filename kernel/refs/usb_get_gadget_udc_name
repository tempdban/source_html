<dec f='linux-4.14.y/include/linux/usb/gadget.h' l='719' type='char * usb_get_gadget_udc_name()'/>
<def f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1231' ll='1246' type='char * usb_get_gadget_udc_name()'/>
<dec f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1247' type='char * usb_get_gadget_udc_name()'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1247' c='usb_get_gadget_udc_name'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1247' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1247' u='a'/>
<doc f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1219'>/**
 * usb_get_gadget_udc_name - get the name of the first UDC controller
 * This functions returns the name of the first UDC controller in the system.
 * Please note that this interface is usefull only for legacy drivers which
 * assume that there is only one UDC controller in the system and they need to
 * get its name before initialization. There is no guarantee that the UDC
 * of the returned name will be still available, when gadget driver registers
 * itself.
 *
 * Returns pointer to string with UDC controller name on success, NULL
 * otherwise. Caller should kfree() returned string.
 */</doc>
