<def f='linux-4.14.y/include/drm/drm_encoder_slave.h' l='121' ll='128'/>
<size>240</size>
<doc f='linux-4.14.y/include/drm/drm_encoder_slave.h' l='111'>/**
 * struct drm_i2c_encoder_driver
 *
 * Describes a device driver for an encoder connected to the GPU
 * through an I2C bus. In addition to the entry points in @i2c_driver
 * an @encoder_init function should be provided. It will be called to
 * give the driver an opportunity to allocate any per-encoder data
 * structures and to initialize the @slave_funcs and (optionally)
 * @slave_priv members of @encoder.
 */</doc>
<mbr r='drm_i2c_encoder_driver::i2c_driver' o='0' t='struct i2c_driver'/>
<mbr r='drm_i2c_encoder_driver::encoder_init' o='1856' t='int (*)(struct i2c_client *, struct drm_device *, struct drm_encoder_slave *)'/>
<def f='linux-4.14.y/include/drm/drm_encoder_slave.h' l='121' ll='128'/>
<size>240</size>
<doc f='linux-4.14.y/include/drm/drm_encoder_slave.h' l='111'>/**
 * struct drm_i2c_encoder_driver
 *
 * Describes a device driver for an encoder connected to the GPU
 * through an I2C bus. In addition to the entry points in @i2c_driver
 * an @encoder_init function should be provided. It will be called to
 * give the driver an opportunity to allocate any per-encoder data
 * structures and to initialize the @slave_funcs and (optionally)
 * @slave_priv members of @encoder.
 */</doc>
<mbr r='drm_i2c_encoder_driver::i2c_driver' o='0' t='struct i2c_driver'/>
<mbr r='drm_i2c_encoder_driver::encoder_init' o='1856' t='int (*)(struct i2c_client *, struct drm_device *, struct drm_encoder_slave *)'/>
