<dec f='linux-4.18.y/drivers/usb/gadget/function/u_ether.h' l='90' type='struct eth_dev * gether_setup_name(struct usb_gadget * g, const char * dev_addr, const char * host_addr, u8 * ethaddr, unsigned int qmult, const char * netname)'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/u_ether.h' l='111' u='c' c='gether_setup'/>
<doc f='linux-4.18.y/drivers/usb/gadget/function/u_ether.h' l='89'>/* variant of gether_setup that allows customizing network device name */</doc>
<def f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='745' ll='811' type='struct eth_dev * gether_setup_name(struct usb_gadget * g, const char * dev_addr, const char * host_addr, u8 * ethaddr, unsigned int qmult, const char * netname)'/>
<dec f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='812' type='struct eth_dev * gether_setup_name(struct usb_gadget * , const char * , const char * , u8 * , unsigned int , const char * )'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='812' c='gether_setup_name'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='812' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='812' u='a'/>
<doc f='linux-4.18.y/drivers/usb/gadget/function/u_ether.c' l='731'>/**
 * gether_setup_name - initialize one ethernet-over-usb link
 * @g: gadget to associated with these links
 * @ethaddr: NULL, or a buffer in which the ethernet address of the
 *	host side of the link is recorded
 * @netname: name for network device (for example, &quot;usb&quot;)
 * Context: may sleep
 *
 * This sets up the single network link that may be exported by a
 * gadget driver using this framework.  The link layer addresses are
 * set up using module parameters.
 *
 * Returns an eth_dev pointer on success, or an ERR_PTR on failure.
 */</doc>
