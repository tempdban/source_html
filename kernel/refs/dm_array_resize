<dec f='linux-4.14.y/drivers/md/persistent-data/dm-array.h' l='109' type='int dm_array_resize(struct dm_array_info * info, dm_block_t root, uint32_t old_size, uint32_t new_size, const void * value, dm_block_t * new_root)'/>
<use f='linux-4.14.y/drivers/md/dm-cache-metadata.c' l='1060' u='c' c='dm_cache_resize'/>
<doc f='linux-4.14.y/drivers/md/persistent-data/dm-array.h' l='94'>/*
 * Resizes the array.
 *
 * info - describes the array
 * root - the root block of the array on disk
 * old_size - the caller is responsible for remembering the size of
 *            the array
 * new_size - can be bigger or smaller than old_size
 * value - if we&apos;re growing the array the new entries will have this value
 * new_root - on success, points to the new root block
 *
 * If growing the inc function for &apos;value&apos; will be called the appropriate
 * number of times.  So if the caller is holding a reference they may want
 * to drop it.
 */</doc>
<def f='linux-4.14.y/drivers/md/persistent-data/dm-array.c' l='687' ll='695' type='int dm_array_resize(struct dm_array_info * info, dm_block_t root, uint32_t old_size, uint32_t new_size, const void * value, dm_block_t * new_root)'/>
<dec f='linux-4.14.y/drivers/md/persistent-data/dm-array.c' l='696' type='int dm_array_resize(struct dm_array_info * , dm_block_t , uint32_t , uint32_t , const void * , dm_block_t * )'/>
<use f='linux-4.14.y/drivers/md/persistent-data/dm-array.c' l='696' c='dm_array_resize'/>
<use f='linux-4.14.y/drivers/md/persistent-data/dm-array.c' l='696' u='a'/>
<use f='linux-4.14.y/drivers/md/persistent-data/dm-array.c' l='696' u='a'/>
<use f='linux-4.14.y/drivers/md/persistent-data/dm-bitset.c' l='93' u='c' c='dm_bitset_resize'/>
