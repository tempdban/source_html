<dec f='linux-4.18.y/include/drm/drm_modes.h' l='473' type='bool drm_mode_is_420_also(const struct drm_display_info * display, const struct drm_display_mode * mode)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1781' ll='1787' type='bool drm_mode_is_420_also(const struct drm_display_info * display, const struct drm_display_mode * mode)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1788' type='bool drm_mode_is_420_also(const struct drm_display_info * , const struct drm_display_mode * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1788' c='drm_mode_is_420_also'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1788' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1788' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1804' u='c' c='drm_mode_is_420'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1770'>/**
 * drm_mode_is_420_also - if a given videomode can be supported in YCBCR420
 * output format also (along with RGB/YCBCR444/422)
 *
 * @display: display under action.
 * @mode: video mode to be tested.
 *
 * Returns:
 * true if the mode can be support YCBCR420 format
 * false if not.
 */</doc>
