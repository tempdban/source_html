<dec f='linux-4.14.y/security/apparmor/include/capability.h' l='43' type='int aa_capable(struct aa_label * label, int cap, int audit)'/>
<def f='linux-4.14.y/security/apparmor/capability.c' l='151' ll='162' type='int aa_capable(struct aa_label * label, int cap, int audit)'/>
<doc f='linux-4.14.y/security/apparmor/capability.c' l='141'>/**
 * aa_capable - test permission to use capability
 * @label: label being tested for capability (NOT NULL)
 * @cap: capability to be tested
 * @audit: whether an audit record should be generated
 *
 * Look up capability in profile capability set.
 *
 * Returns: 0 on success, or else an error code.
 */</doc>
<use f='linux-4.14.y/security/apparmor/ipc.c' l='110' u='c' c='profile_tracer_perm'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='177' u='c' c='apparmor_capable'/>
<use f='linux-4.14.y/security/apparmor/resource.c' l='127' u='c' c='aa_task_setrlimit'/>
<dec f='linux-4.14.y/security/apparmor/include/capability.h' l='43' type='int aa_capable(struct aa_label * label, int cap, int audit)'/>
<def f='linux-4.14.y/security/apparmor/capability.c' l='151' ll='162' type='int aa_capable(struct aa_label * label, int cap, int audit)'/>
<doc f='linux-4.14.y/security/apparmor/capability.c' l='141'>/**
 * aa_capable - test permission to use capability
 * @label: label being tested for capability (NOT NULL)
 * @cap: capability to be tested
 * @audit: whether an audit record should be generated
 *
 * Look up capability in profile capability set.
 *
 * Returns: 0 on success, or else an error code.
 */</doc>
<use f='linux-4.14.y/security/apparmor/ipc.c' l='110' u='c' c='profile_tracer_perm'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='177' u='c' c='apparmor_capable'/>
<use f='linux-4.14.y/security/apparmor/resource.c' l='127' u='c' c='aa_task_setrlimit'/>
