<def f='linux-4.14.y/include/linux/cred.h' l='111' ll='149'/>
<size>128</size>
<doc f='linux-4.14.y/include/linux/cred.h' l='88'>/*
 * The security context of a task
 *
 * The parts of the context break down into two categories:
 *
 *  (1) The objective context of a task.  These parts are used when some other
 *	task is attempting to affect this one.
 *
 *  (2) The subjective context.  These details are used when the task is acting
 *	upon another object, be that a file, a task, a key or whatever.
 *
 * Note that some members of this structure belong to both categories - the
 * LSM security pointer for instance.
 *
 * A task has two security pointers.  task-&gt;real_cred points to the objective
 * context that defines that task&apos;s actual details.  The objective part of this
 * context is used whenever that task is acted upon.
 *
 * task-&gt;cred points to the subjective context that defines the details of how
 * that task is going to act upon another object.  This may be overridden
 * temporarily to point to another security context, but normally points to the
 * same context as task-&gt;real_cred.
 */</doc>
<mbr r='cred::usage' o='0' t='atomic_t'/>
<mbr r='cred::uid' o='32' t='kuid_t'/>
<mbr r='cred::gid' o='64' t='kgid_t'/>
<mbr r='cred::suid' o='96' t='kuid_t'/>
<mbr r='cred::sgid' o='128' t='kgid_t'/>
<mbr r='cred::euid' o='160' t='kuid_t'/>
<mbr r='cred::egid' o='192' t='kgid_t'/>
<mbr r='cred::fsuid' o='224' t='kuid_t'/>
<mbr r='cred::fsgid' o='256' t='kgid_t'/>
<mbr r='cred::securebits' o='288' t='unsigned int'/>
<mbr r='cred::cap_inheritable' o='320' t='kernel_cap_t'/>
<mbr r='cred::cap_permitted' o='384' t='kernel_cap_t'/>
<mbr r='cred::cap_effective' o='448' t='kernel_cap_t'/>
<mbr r='cred::cap_bset' o='512' t='kernel_cap_t'/>
<mbr r='cred::cap_ambient' o='576' t='kernel_cap_t'/>
<mbr r='cred::security' o='640' t='void *'/>
<mbr r='cred::user' o='704' t='struct user_struct *'/>
<mbr r='cred::user_ns' o='768' t='struct user_namespace *'/>
<mbr r='cred::group_info' o='832' t='struct group_info *'/>
<mbr r='cred::rcu' o='896' t='struct callback_head'/>
