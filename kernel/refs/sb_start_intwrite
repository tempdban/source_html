<def f='linux-4.14.y/include/linux/fs.h' l='1588' ll='1591' type='void sb_start_intwrite(struct super_block * sb)'/>
<doc f='linux-4.14.y/include/linux/fs.h' l='1575'>/*
 * sb_start_intwrite - get write access to a superblock for internal fs purposes
 * @sb: the super we write to
 *
 * This is the third level of protection against filesystem freezing. It is
 * free for use by a filesystem. The only requirement is that it must rank
 * below sb_start_pagefault.
 *
 * For example filesystem can call sb_start_intwrite() when starting a
 * transaction which somewhat eases handling of freezing for internal sources
 * of filesystem changes (internal fs threads, discarding preallocation on file
 * close, etc.).
 */</doc>
<use f='linux-4.14.y/fs/ext4/inode.c' l='249' u='c' c='ext4_evict_inode'/>
<def f='linux-4.14.y/include/linux/fs.h' l='1588' ll='1591' type='void sb_start_intwrite(struct super_block * sb)'/>
<doc f='linux-4.14.y/include/linux/fs.h' l='1575'>/*
 * sb_start_intwrite - get write access to a superblock for internal fs purposes
 * @sb: the super we write to
 *
 * This is the third level of protection against filesystem freezing. It is
 * free for use by a filesystem. The only requirement is that it must rank
 * below sb_start_pagefault.
 *
 * For example filesystem can call sb_start_intwrite() when starting a
 * transaction which somewhat eases handling of freezing for internal sources
 * of filesystem changes (internal fs threads, discarding preallocation on file
 * close, etc.).
 */</doc>
<use f='linux-4.14.y/fs/ext4/inode.c' l='249' u='c' c='ext4_evict_inode'/>
<use f='linux-4.14.y/fs/f2fs/inode.c' l='480' u='c' c='f2fs_evict_inode'/>
<use f='linux-4.14.y/fs/f2fs/segment.c' l='513' u='c' c='issue_flush_thread'/>
<use f='linux-4.14.y/fs/f2fs/segment.c' l='1257' u='c' c='issue_discard_thread'/>
<use f='linux-4.14.y/fs/f2fs/super.c' l='668' u='c' c='f2fs_drop_inode'/>
