<dec f='linux-4.18.y/include/linux/phy.h' l='764' type='int phy_modify(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<use f='linux-4.18.y/include/linux/phy.h' l='801' u='c' c='phy_set_bits'/>
<use f='linux-4.18.y/include/linux/phy.h' l='812' u='c' c='phy_clear_bits'/>
<def f='linux-4.18.y/drivers/net/phy/phy-core.c' l='362' ll='371' type='int phy_modify(struct phy_device * phydev, u32 regnum, u16 mask, u16 set)'/>
<dec f='linux-4.18.y/drivers/net/phy/phy-core.c' l='372' type='int phy_modify(struct phy_device * , u32 , u16 , u16 )'/>
<use f='linux-4.18.y/drivers/net/phy/phy-core.c' l='372' c='phy_modify'/>
<use f='linux-4.18.y/drivers/net/phy/phy-core.c' l='372' u='a'/>
<use f='linux-4.18.y/drivers/net/phy/phy-core.c' l='372' u='a'/>
<doc f='linux-4.18.y/drivers/net/phy/phy-core.c' l='351'>/**
 * phy_modify - Convenience function for modifying a given PHY register
 * @phydev: the phy_device struct
 * @regnum: register number to write
 * @mask: bit mask of bits to clear
 * @set: new value of bits set in mask to write to @regnum
 *
 * NOTE: MUST NOT be called from interrupt context,
 * because the bus read/write functions may wait for an interrupt
 * to conclude the operation.
 */</doc>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1412' u='c' c='genphy_setup_forced'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1424' u='c' c='genphy_restart_aneg'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1720' u='c' c='genphy_loopback'/>
