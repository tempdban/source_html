<dec f='linux-4.14.y/include/scsi/scsi_device.h' l='420' type='void scsi_remove_target(struct device * )'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='6495' u='c' c='_scsih_sas_volume_delete'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='8269' u='c' c='scsih_remove'/>
<def f='linux-4.14.y/drivers/scsi/scsi_sysfs.c' l='1409' ll='1435' type='void scsi_remove_target(struct device * dev)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_sysfs.c' l='1436' type='void scsi_remove_target(struct device * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_sysfs.c' l='1436' c='scsi_remove_target'/>
<use f='linux-4.14.y/drivers/scsi/scsi_sysfs.c' l='1436' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_sysfs.c' l='1436' u='a'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_sysfs.c' l='1401'>/**
 * scsi_remove_target - try to remove a target and all its devices
 * @dev: generic starget or parent of generic stargets to be removed
 *
 * Note: This is slightly racy.  It is possible that if the user
 * requests the addition of another device then the target won&apos;t be
 * removed.
 */</doc>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_fc.c' l='2502' u='c' c='fc_starget_delete'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2022' u='c' c='__iscsi_unbind_session'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='1644' u='c' c='sas_rphy_remove'/>
