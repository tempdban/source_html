<dec f='linux-4.14.y/include/linux/mm.h' l='1441' type='int redirty_page_for_writepage(struct writeback_control * wbc, struct page * page)'/>
<use f='linux-4.14.y/fs/buffer.c' l='1806' u='c' c='__block_write_full_page'/>
<use f='linux-4.14.y/fs/ext4/inode.c' l='2145' u='c' c='ext4_writepage'/>
<use f='linux-4.14.y/fs/ext4/inode.c' l='2171' u='c' c='ext4_writepage'/>
<use f='linux-4.14.y/fs/ext4/page-io.c' l='526' u='c' c='ext4_bio_write_page'/>
<def f='linux-4.14.y/mm/page-writeback.c' l='2537' ll='2545' type='int redirty_page_for_writepage(struct writeback_control * wbc, struct page * page)'/>
<dec f='linux-4.14.y/mm/page-writeback.c' l='2546' type='int redirty_page_for_writepage(struct writeback_control * , struct page * )'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2546' c='redirty_page_for_writepage'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2546' u='a'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2546' u='a'/>
<doc f='linux-4.14.y/mm/page-writeback.c' l='2532'>/*
 * When a writepage implementation decides that it doesn&apos;t want to write this
 * page for some reason, it should redirty the locked page via
 * redirty_page_for_writepage() and it should then unlock the page and return 0
 */</doc>
<dec f='linux-4.14.y/include/linux/mm.h' l='1441' type='int redirty_page_for_writepage(struct writeback_control * wbc, struct page * page)'/>
<use f='linux-4.14.y/fs/buffer.c' l='1806' u='c' c='__block_write_full_page'/>
<use f='linux-4.14.y/fs/ext4/inode.c' l='2145' u='c' c='ext4_writepage'/>
<use f='linux-4.14.y/fs/ext4/inode.c' l='2171' u='c' c='ext4_writepage'/>
<use f='linux-4.14.y/fs/ext4/page-io.c' l='526' u='c' c='ext4_bio_write_page'/>
<use f='linux-4.14.y/fs/f2fs/checkpoint.c' l='263' u='c' c='__f2fs_write_meta_page'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='1603' u='c' c='__write_data_page'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='1432' u='c' c='__write_node_page'/>
<use f='linux-4.14.y/fs/fuse/file.c' l='1697' u='c' c='fuse_writepage'/>
<use f='linux-4.14.y/fs/ntfs/aops.c' l='592' u='c' c='ntfs_write_block'/>
<use f='linux-4.14.y/fs/ntfs/aops.c' l='867' u='c' c='ntfs_write_block'/>
<use f='linux-4.14.y/fs/ntfs/aops.c' l='1313' u='c' c='ntfs_write_mst_block'/>
<use f='linux-4.14.y/fs/ntfs/aops.c' l='1523' u='c' c='ntfs_writepage'/>
<def f='linux-4.14.y/mm/page-writeback.c' l='2537' ll='2545' type='int redirty_page_for_writepage(struct writeback_control * wbc, struct page * page)'/>
<dec f='linux-4.14.y/mm/page-writeback.c' l='2546' type='int redirty_page_for_writepage(struct writeback_control * , struct page * )'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2546' c='redirty_page_for_writepage'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2546' u='a'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2546' u='a'/>
<doc f='linux-4.14.y/mm/page-writeback.c' l='2532'>/*
 * When a writepage implementation decides that it doesn&apos;t want to write this
 * page for some reason, it should redirty the locked page via
 * redirty_page_for_writepage() and it should then unlock the page and return 0
 */</doc>
