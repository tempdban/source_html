<dec f='linux-4.18.y/include/acpi/acpixf.h' l='414' type='acpi_status acpi_initialize_tables(struct acpi_table_desc * initial_storage, u32 initial_table_count, u8 allow_resize)'/>
<doc f='linux-4.18.y/include/acpi/acpixf.h' l='410'>/*
 * Initialization
 */</doc>
<def f='linux-4.18.y/drivers/acpi/acpica/tbxface.c' l='67' ll='115' type='acpi_status acpi_initialize_tables(struct acpi_table_desc * initial_table_array, u32 initial_table_count, u8 allow_resize)'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/tbxface.c' l='41'>/*******************************************************************************
 *
 * FUNCTION:    acpi_initialize_tables
 *
 * PARAMETERS:  initial_table_array - Pointer to an array of pre-allocated
 *                                    struct acpi_table_desc structures. If NULL, the
 *                                    array is dynamically allocated.
 *              initial_table_count - Size of initial_table_array, in number of
 *                                    struct acpi_table_desc structures
 *              allow_resize        - Flag to tell Table Manager if resize of
 *                                    pre-allocated array is allowed. Ignored
 *                                    if initial_table_array is NULL.
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Initialize the table manager, get the RSDP and RSDT/XSDT.
 *
 * NOTE:        Allows static allocation of the initial table array in order
 *              to avoid the use of dynamic memory in confined environments
 *              such as the kernel boot sequence where it may not be available.
 *
 *              If the host OS memory managers are initialized, use NULL for
 *              initial_table_array, and the table will be dynamically allocated.
 *
 ******************************************************************************/</doc>
<use f='linux-4.18.y/drivers/acpi/tables.c' l='755' u='c' c='acpi_table_init'/>
