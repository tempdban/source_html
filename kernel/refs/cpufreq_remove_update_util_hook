<dec f='linux-4.14.y/include/linux/sched/cpufreq.h' l='25' type='void cpufreq_remove_update_util_hook(int cpu)'/>
<use f='linux-4.14.y/drivers/cpufreq/intel_pstate.c' l='1725' u='c' c='intel_pstate_clear_update_util_hook'/>
<def f='linux-4.14.y/kernel/sched/cpufreq.c' l='59' ll='62' type='void cpufreq_remove_update_util_hook(int cpu)'/>
<dec f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' type='void cpufreq_remove_update_util_hook(int )'/>
<use f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' c='cpufreq_remove_update_util_hook'/>
<use f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' u='a'/>
<use f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' u='a'/>
<doc f='linux-4.14.y/kernel/sched/cpufreq.c' l='49'>/**
 * cpufreq_remove_update_util_hook - Clear the CPU&apos;s update_util_data pointer.
 * @cpu: The CPU to clear the pointer for.
 *
 * Clear the update_util_data pointer for the given CPU.
 *
 * Callers must use RCU-sched callbacks to free any memory that might be
 * accessed via the old update_util_data pointer or invoke synchronize_sched()
 * right after this function to avoid use-after-free.
 */</doc>
<dec f='linux-4.14.y/include/linux/sched/cpufreq.h' l='25' type='void cpufreq_remove_update_util_hook(int cpu)'/>
<use f='linux-4.14.y/drivers/cpufreq/intel_pstate.c' l='1725' u='c' c='intel_pstate_clear_update_util_hook'/>
<def f='linux-4.14.y/kernel/sched/cpufreq.c' l='59' ll='62' type='void cpufreq_remove_update_util_hook(int cpu)'/>
<dec f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' type='void cpufreq_remove_update_util_hook(int )'/>
<use f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' c='cpufreq_remove_update_util_hook'/>
<use f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' u='a'/>
<use f='linux-4.14.y/kernel/sched/cpufreq.c' l='63' u='a'/>
<doc f='linux-4.14.y/kernel/sched/cpufreq.c' l='49'>/**
 * cpufreq_remove_update_util_hook - Clear the CPU&apos;s update_util_data pointer.
 * @cpu: The CPU to clear the pointer for.
 *
 * Clear the update_util_data pointer for the given CPU.
 *
 * Callers must use RCU-sched callbacks to free any memory that might be
 * accessed via the old update_util_data pointer or invoke synchronize_sched()
 * right after this function to avoid use-after-free.
 */</doc>
