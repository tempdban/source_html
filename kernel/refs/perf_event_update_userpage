<dec f='linux-4.14.y/include/linux/perf_event.h' l='877' type='void perf_event_update_userpage(struct perf_event * event)'/>
<use f='linux-4.14.y/arch/x86/events/amd/ibs.c' l='425' u='c' c='perf_ibs_start'/>
<use f='linux-4.14.y/arch/x86/events/amd/ibs.c' l='512' u='c' c='perf_ibs_del'/>
<use f='linux-4.14.y/arch/x86/events/amd/ibs.c' l='676' u='c' c='perf_ibs_handle_irq'/>
<use f='linux-4.14.y/arch/x86/events/amd/iommu.c' l='305' u='c' c='perf_iommu_start'/>
<use f='linux-4.14.y/arch/x86/events/amd/iommu.c' l='379' u='c' c='perf_iommu_del'/>
<use f='linux-4.14.y/arch/x86/events/amd/uncore.c' l='111' u='c' c='amd_uncore_start'/>
<use f='linux-4.14.y/arch/x86/events/core.c' l='1183' u='c' c='x86_perf_event_set_period'/>
<use f='linux-4.14.y/arch/x86/events/core.c' l='1283' u='c' c='x86_pmu_start'/>
<use f='linux-4.14.y/arch/x86/events/core.c' l='1416' u='c' c='x86_pmu_del'/>
<use f='linux-4.14.y/arch/x86/events/intel/ds.c' l='1371' u='c' c='intel_pmu_save_and_restart_reload'/>
<use f='linux-4.14.y/kernel/events/core.c' l='2931' u='c' c='__perf_event_sync_stat'/>
<use f='linux-4.14.y/kernel/events/core.c' l='2932' u='c' c='__perf_event_sync_stat'/>
<use f='linux-4.14.y/kernel/events/core.c' l='4660' u='c' c='_perf_event_reset'/>
<def f='linux-4.14.y/kernel/events/core.c' l='4978' ll='5026' type='void perf_event_update_userpage(struct perf_event * event)'/>
<use f='linux-4.14.y/kernel/events/core.c' l='5464' u='c' c='perf_mmap'/>
<use f='linux-4.14.y/kernel/events/core.c' l='7784' u='c' c='perf_swevent_add'/>
<use f='linux-4.14.y/kernel/events/core.c' l='8801' u='c' c='cpu_clock_event_add'/>
<use f='linux-4.14.y/kernel/events/core.c' l='8878' u='c' c='task_clock_event_add'/>
<doc f='linux-4.14.y/kernel/events/core.c' l='4973'>/*
 * Callers need to ensure there can be no nesting of this function, otherwise
 * the seqlock logic goes bad. We can not serialize this because the arch
 * code calls this from NMI context.
 */</doc>
