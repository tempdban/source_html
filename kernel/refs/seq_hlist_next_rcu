<dec f='linux-4.14.y/include/linux/seq_file.h' l='215' type='struct hlist_node * seq_hlist_next_rcu(void * v, struct hlist_head * head, loff_t * ppos)'/>
<def f='linux-4.14.y/fs/seq_file.c' l='976' ll='987' type='struct hlist_node * seq_hlist_next_rcu(void * v, struct hlist_head * head, loff_t * ppos)'/>
<dec f='linux-4.14.y/fs/seq_file.c' l='988' type='struct hlist_node * seq_hlist_next_rcu(void * , struct hlist_head * , loff_t * )'/>
<use f='linux-4.14.y/fs/seq_file.c' l='988' c='seq_hlist_next_rcu'/>
<use f='linux-4.14.y/fs/seq_file.c' l='988' u='a'/>
<use f='linux-4.14.y/fs/seq_file.c' l='988' u='a'/>
<doc f='linux-4.14.y/fs/seq_file.c' l='964'>/**
 * seq_hlist_next_rcu - move to the next position of the hlist protected by RCU
 * @v:    the current iterator
 * @head: the head of the hlist
 * @ppos: the current position
 *
 * Called at seq_file-&gt;op-&gt;next().
 *
 * This list-traversal primitive may safely run concurrently with
 * the _rcu list-mutation primitives such as hlist_add_head_rcu()
 * as long as the traversal is guarded by rcu_read_lock().
 */</doc>
<use f='linux-4.14.y/net/packet/af_packet.c' l='4529' u='c' c='packet_seq_next'/>
<dec f='linux-4.14.y/include/linux/seq_file.h' l='215' type='struct hlist_node * seq_hlist_next_rcu(void * v, struct hlist_head * head, loff_t * ppos)'/>
<def f='linux-4.14.y/fs/seq_file.c' l='976' ll='987' type='struct hlist_node * seq_hlist_next_rcu(void * v, struct hlist_head * head, loff_t * ppos)'/>
<dec f='linux-4.14.y/fs/seq_file.c' l='988' type='struct hlist_node * seq_hlist_next_rcu(void * , struct hlist_head * , loff_t * )'/>
<use f='linux-4.14.y/fs/seq_file.c' l='988' c='seq_hlist_next_rcu'/>
<use f='linux-4.14.y/fs/seq_file.c' l='988' u='a'/>
<use f='linux-4.14.y/fs/seq_file.c' l='988' u='a'/>
<doc f='linux-4.14.y/fs/seq_file.c' l='964'>/**
 * seq_hlist_next_rcu - move to the next position of the hlist protected by RCU
 * @v:    the current iterator
 * @head: the head of the hlist
 * @ppos: the current position
 *
 * Called at seq_file-&gt;op-&gt;next().
 *
 * This list-traversal primitive may safely run concurrently with
 * the _rcu list-mutation primitives such as hlist_add_head_rcu()
 * as long as the traversal is guarded by rcu_read_lock().
 */</doc>
<use f='linux-4.14.y/net/packet/af_packet.c' l='4529' u='c' c='packet_seq_next'/>
