<def f='linux-4.14.y/include/linux/buffer_head.h' l='63' ll='79'/>
<size>104</size>
<doc f='linux-4.14.y/include/linux/buffer_head.h' l='54'>/*
 * Historically, a buffer_head was used to map a single block
 * within a page, and of course as the unit of I/O through the
 * filesystem and block layers.  Nowadays the basic I/O unit
 * is the bio, and buffer_heads are used for extracting block
 * mappings (via a get_block_t call), for tracking state within
 * a page (via a page_mapping) and for wrapping bio submission
 * for backward compatibility reasons (e.g. submit_bh).
 */</doc>
<mbr r='buffer_head::b_state' o='0' t='unsigned long'/>
<mbr r='buffer_head::b_this_page' o='64' t='struct buffer_head *'/>
<mbr r='buffer_head::b_page' o='128' t='struct page *'/>
<mbr r='buffer_head::b_blocknr' o='192' t='sector_t'/>
<mbr r='buffer_head::b_size' o='256' t='size_t'/>
<mbr r='buffer_head::b_data' o='320' t='char *'/>
<mbr r='buffer_head::b_bdev' o='384' t='struct block_device *'/>
<mbr r='buffer_head::b_end_io' o='448' t='bh_end_io_t *'/>
<mbr r='buffer_head::b_private' o='512' t='void *'/>
<mbr r='buffer_head::b_assoc_buffers' o='576' t='struct list_head'/>
<mbr r='buffer_head::b_assoc_map' o='704' t='struct address_space *'/>
<mbr r='buffer_head::b_count' o='768' t='atomic_t'/>
