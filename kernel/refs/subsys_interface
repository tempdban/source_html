<def f='linux-4.14.y/include/linux/device.h' l='344' ll='350'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/device.h' l='331'>/**
 * struct subsys_interface - interfaces to device functions
 * @name:       name of the device function
 * @subsys:     subsytem of the devices to attach to
 * @node:       the list of functions registered at the subsystem
 * @add_dev:    device hookup to device function handler
 * @remove_dev: device hookup to device function handler
 *
 * Simple interfaces attached to a subsystem. Multiple interfaces can
 * attach to a subsystem and its devices. Unlike drivers, they do not
 * exclusively claim or control devices. Interfaces usually represent
 * a specific functionality of a subsystem/class of devices.
 */</doc>
<mbr r='subsys_interface::name' o='0' t='const char *'/>
<mbr r='subsys_interface::subsys' o='64' t='struct bus_type *'/>
<mbr r='subsys_interface::node' o='128' t='struct list_head'/>
<mbr r='subsys_interface::add_dev' o='256' t='int (*)(struct device *, struct subsys_interface *)'/>
<mbr r='subsys_interface::remove_dev' o='320' t='void (*)(struct device *, struct subsys_interface *)'/>
