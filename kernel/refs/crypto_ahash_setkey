<dec f='linux-4.18.y/include/crypto/hash.h' l='408' type='int crypto_ahash_setkey(struct crypto_ahash * tfm, const u8 * key, unsigned int keylen)'/>
<def f='linux-4.18.y/crypto/ahash.c' l='193' ll='209' type='int crypto_ahash_setkey(struct crypto_ahash * tfm, const u8 * key, unsigned int keylen)'/>
<dec f='linux-4.18.y/crypto/ahash.c' l='210' type='int crypto_ahash_setkey(struct crypto_ahash * , const u8 * , unsigned int )'/>
<use f='linux-4.18.y/crypto/ahash.c' l='210' c='crypto_ahash_setkey'/>
<use f='linux-4.18.y/crypto/ahash.c' l='210' u='a'/>
<use f='linux-4.18.y/crypto/ahash.c' l='210' u='a'/>
<doc f='linux-4.18.y/include/crypto/hash.h' l='397'>/**
 * crypto_ahash_setkey - set key for cipher handle
 * @tfm: cipher handle
 * @key: buffer holding the key
 * @keylen: length of the key in bytes
 *
 * The caller provided key is set for the ahash cipher. The cipher
 * handle must point to a keyed hash in order for this function to succeed.
 *
 * Return: 0 if the setting of the key was successful; &lt; 0 if an error occurred
 */</doc>
