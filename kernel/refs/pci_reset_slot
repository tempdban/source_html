<dec f='linux-4.14.y/include/linux/pci.h' l='1099' type='int pci_reset_slot(struct pci_slot * slot)'/>
<def f='linux-4.14.y/drivers/pci/pci.c' l='4623' ll='4638' type='int pci_reset_slot(struct pci_slot * slot)'/>
<dec f='linux-4.14.y/drivers/pci/pci.c' l='4639' type='int pci_reset_slot(struct pci_slot * )'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='4639' c='pci_reset_slot'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='4639' u='a'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='4639' u='a'/>
<doc f='linux-4.14.y/drivers/pci/pci.c' l='4608'>/**
 * pci_reset_slot - reset a PCI slot
 * @slot: PCI slot to reset
 *
 * A PCI bus may host multiple slots, each slot may support a reset mechanism
 * independent of other slots.  For instance, some slots may support slot power
 * control.  In the case of a 1:1 bus to slot architecture, this function may
 * wrap the bus reset to avoid spurious slot related events such as hotplug.
 * Generally a slot reset should be attempted before a bus reset.  All of the
 * function of the slot and any subordinate buses behind the slot are reset
 * through this function.  PCI config space of all devices in the slot and
 * behind the slot is saved before and restored after reset.
 *
 * Return 0 on success, non-zero on error.
 */</doc>
