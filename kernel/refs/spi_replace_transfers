<dec f='linux-4.14.y/include/linux/spi/spi.h' l='1007' type='struct spi_replaced_transfers * spi_replace_transfers(struct spi_message * msg, struct spi_transfer * xfer_first, size_t remove, size_t insert, spi_replaced_release_t release, size_t extradatasize, gfp_t gfp)'/>
<def f='linux-4.14.y/drivers/spi/spi.c' l='2472' ll='2564' type='struct spi_replaced_transfers * spi_replace_transfers(struct spi_message * msg, struct spi_transfer * xfer_first, size_t remove, size_t insert, spi_replaced_release_t release, size_t extradatasize, gfp_t gfp)'/>
<dec f='linux-4.14.y/drivers/spi/spi.c' l='2565' type='struct spi_replaced_transfers * spi_replace_transfers(struct spi_message * , struct spi_transfer * , size_t , size_t , spi_replaced_release_t , size_t , gfp_t )'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2565' c='spi_replace_transfers'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2565' u='a'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2565' u='a'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2587' u='c' c='__spi_split_transfer_maxsize'/>
<doc f='linux-4.14.y/drivers/spi/spi.c' l='2457'>/**
 * spi_replace_transfers - replace transfers with several transfers
 *                         and register change with spi_message.resources
 * @msg:           the spi_message we work upon
 * @xfer_first:    the first spi_transfer we want to replace
 * @remove:        number of transfers to remove
 * @insert:        the number of transfers we want to insert instead
 * @release:       extra release code necessary in some circumstances
 * @extradatasize: extra data to allocate (with alignment guarantees
 *                 of struct @spi_transfer)
 * @gfp:           gfp flags
 *
 * Returns: pointer to @spi_replaced_transfers,
 *          PTR_ERR(...) in case of errors.
 */</doc>
