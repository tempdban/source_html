<dec f='linux-4.18.y/include/net/pkt_sched.h' l='109' type='bool sch_direct_xmit(struct sk_buff * skb, struct Qdisc * q, struct net_device * dev, struct netdev_queue * txq, spinlock_t * root_lock, bool validate)'/>
<use f='linux-4.18.y/net/core/dev.c' l='3261' u='c' c='__dev_xmit_skb'/>
<def f='linux-4.18.y/net/sched/sch_generic.c' l='299' ll='350' type='bool sch_direct_xmit(struct sk_buff * skb, struct Qdisc * q, struct net_device * dev, struct netdev_queue * txq, spinlock_t * root_lock, bool validate)'/>
<use f='linux-4.18.y/net/sched/sch_generic.c' l='390' u='c' c='qdisc_restart'/>
<doc f='linux-4.18.y/net/sched/sch_generic.c' l='290'>/*
 * Transmit possibly several skbs, and handle the return status as
 * required. Owning running seqcount bit guarantees that
 * only one CPU can execute this function.
 *
 * Returns to the caller:
 *				false  - hardware queue frozen backoff
 *				true   - feel free to send more pkts
 */</doc>
