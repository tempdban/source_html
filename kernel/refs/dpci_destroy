<dec f='linux-4.18.y/drivers/bus/fslmc/mc/fsl_dpci.h' l='72' type='int dpci_destroy(struct fsl_mc_io * mc_io, uint16_t dprc_token, uint32_t cmd_flags, uint32_t object_id)'/>
<def f='linux-4.18.y/drivers/bus/fslmc/mc/dpci.c' l='146' ll='163' type='int dpci_destroy(struct fsl_mc_io * mc_io, uint16_t dprc_token, uint32_t cmd_flags, uint32_t object_id)'/>
<doc f='linux-4.18.y/drivers/bus/fslmc/mc/dpci.c' l='131'>/**
 * dpci_destroy() - Destroy the DPCI object and release all its resources.
 * @mc_io:	Pointer to MC portal&apos;s I/O object
 * @dprc_token: Parent container token; &apos;0&apos; for default container
 * @cmd_flags:	Command flags; one or more of &apos;MC_CMD_FLAG_&apos;
 * @object_id:	The object id; it must be a valid id within the container that
 * created this object;
 *
 * The function accepts the authentication token of the parent container that
 * created the object (not the one that currently owns the object). The object
 * is searched within parent using the provided &apos;object_id&apos;.
 * All tokens to the object must be closed before calling destroy.
 *
 * Return:	&apos;0&apos; on Success; error code otherwise.
 */</doc>
