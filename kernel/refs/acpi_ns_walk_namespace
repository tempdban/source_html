<dec f='linux-4.18.y/drivers/acpi/acpica/acnamesp.h' l='75' type='acpi_status acpi_ns_walk_namespace(acpi_object_type type, acpi_handle start_object, u32 max_depth, u32 flags, acpi_walk_callback descending_callback, acpi_walk_callback ascending_callback, void * context, void ** return_value)'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/acnamesp.h' l='71'>/*
 * nswalk - walk the namespace
 */</doc>
<use f='linux-4.18.y/drivers/acpi/acpica/dsinit.c' l='189' u='c' c='acpi_ds_initialize_objects'/>
<use f='linux-4.18.y/drivers/acpi/acpica/evgpeblk.c' l='362' u='c' c='acpi_ev_create_gpe_block'/>
<use f='linux-4.18.y/drivers/acpi/acpica/evgpeinit.c' l='232' u='c' c='acpi_ev_update_gpes'/>
<use f='linux-4.18.y/drivers/acpi/acpica/evhandler.c' l='520' u='c' c='acpi_ev_install_space_handler'/>
<use f='linux-4.18.y/drivers/acpi/acpica/evregion.c' l='670' u='c' c='acpi_ev_execute_reg_methods'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exconfig.c' l='179' u='c' c='acpi_ex_load_table_op'/>
<use f='linux-4.18.y/drivers/acpi/acpica/exconfig.c' l='442' u='c' c='acpi_ex_load_op'/>
<use f='linux-4.18.y/drivers/acpi/acpica/nsinit.c' l='129' u='c' c='acpi_ns_initialize_devices'/>
<use f='linux-4.18.y/drivers/acpi/acpica/nsinit.c' l='210' u='c' c='acpi_ns_initialize_devices'/>
<def f='linux-4.18.y/drivers/acpi/acpica/nswalk.c' l='149' ll='324' type='acpi_status acpi_ns_walk_namespace(acpi_object_type type, acpi_handle start_node, u32 max_depth, u32 flags, acpi_walk_callback descending_callback, acpi_walk_callback ascending_callback, void * context, void ** return_value)'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/nswalk.c' l='116'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ns_walk_namespace
 *
 * PARAMETERS:  type                - acpi_object_type to search for
 *              start_node          - Handle in namespace where search begins
 *              max_depth           - Depth to which search is to reach
 *              flags               - Whether to unlock the NS before invoking
 *                                    the callback routine
 *              descending_callback - Called during tree descent
 *                                    when an object of &quot;Type&quot; is found
 *              ascending_callback  - Called during tree ascent
 *                                    when an object of &quot;Type&quot; is found
 *              context             - Passed to user function(s) above
 *              return_value        - from the user_function if terminated
 *                                    early. Otherwise, returns NULL.
 * RETURNS:     Status
 *
 * DESCRIPTION: Performs a modified depth-first walk of the namespace tree,
 *              starting (and ending) at the node specified by start_handle.
 *              The callback function is called whenever a node that matches
 *              the type parameter is found. If the callback function returns
 *              a non-zero value, the search is terminated immediately and
 *              this value is returned to the caller.
 *
 *              The point of this procedure is to provide a generic namespace
 *              walk routine that can be called from multiple places to
 *              provide multiple services; the callback function(s) can be
 *              tailored to each task, whether it is a print function,
 *              a compare function, etc.
 *
 ******************************************************************************/</doc>
<use f='linux-4.18.y/drivers/acpi/acpica/nsxfeval.c' l='606' u='c' c='acpi_walk_namespace'/>
<use f='linux-4.18.y/drivers/acpi/acpica/nsxfeval.c' l='805' u='c' c='acpi_get_devices'/>
