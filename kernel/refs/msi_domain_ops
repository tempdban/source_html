<def f='linux-4.14.y/include/linux/msi.h' l='224' ll='245'/>
<size>64</size>
<doc f='linux-4.14.y/include/linux/msi.h' l='206'>/**
 * struct msi_domain_ops - MSI interrupt domain callbacks
 * @get_hwirq:		Retrieve the resulting hw irq number
 * @msi_init:		Domain specific init function for MSI interrupts
 * @msi_free:		Domain specific function to free a MSI interrupts
 * @msi_check:		Callback for verification of the domain/info/dev data
 * @msi_prepare:	Prepare the allocation of the interrupts in the domain
 * @msi_finish:		Optional callback to finalize the allocation
 * @set_desc:		Set the msi descriptor for an interrupt
 * @handle_error:	Optional error handler if the allocation fails
 *
 * @get_hwirq, @msi_init and @msi_free are callbacks used by
 * msi_create_irq_domain() and related interfaces
 *
 * @msi_check, @msi_prepare, @msi_finish, @set_desc and @handle_error
 * are callbacks used by msi_domain_alloc_irqs() and related
 * interfaces which are based on msi_desc.
 */</doc>
<mbr r='msi_domain_ops::get_hwirq' o='0' t='irq_hw_number_t (*)(struct msi_domain_info *, msi_alloc_info_t *)'/>
<mbr r='msi_domain_ops::msi_init' o='64' t='int (*)(struct irq_domain *, struct msi_domain_info *, unsigned int, irq_hw_number_t, msi_alloc_info_t *)'/>
<mbr r='msi_domain_ops::msi_free' o='128' t='void (*)(struct irq_domain *, struct msi_domain_info *, unsigned int)'/>
<mbr r='msi_domain_ops::msi_check' o='192' t='int (*)(struct irq_domain *, struct msi_domain_info *, struct device *)'/>
<mbr r='msi_domain_ops::msi_prepare' o='256' t='int (*)(struct irq_domain *, struct device *, int, msi_alloc_info_t *)'/>
<mbr r='msi_domain_ops::msi_finish' o='320' t='void (*)(msi_alloc_info_t *, int)'/>
<mbr r='msi_domain_ops::set_desc' o='384' t='void (*)(msi_alloc_info_t *, struct msi_desc *)'/>
<mbr r='msi_domain_ops::handle_error' o='448' t='int (*)(struct irq_domain *, struct msi_desc *, int)'/>
<def f='linux-4.14.y/include/linux/msi.h' l='224' ll='245'/>
<size>64</size>
<doc f='linux-4.14.y/include/linux/msi.h' l='206'>/**
 * struct msi_domain_ops - MSI interrupt domain callbacks
 * @get_hwirq:		Retrieve the resulting hw irq number
 * @msi_init:		Domain specific init function for MSI interrupts
 * @msi_free:		Domain specific function to free a MSI interrupts
 * @msi_check:		Callback for verification of the domain/info/dev data
 * @msi_prepare:	Prepare the allocation of the interrupts in the domain
 * @msi_finish:		Optional callback to finalize the allocation
 * @set_desc:		Set the msi descriptor for an interrupt
 * @handle_error:	Optional error handler if the allocation fails
 *
 * @get_hwirq, @msi_init and @msi_free are callbacks used by
 * msi_create_irq_domain() and related interfaces
 *
 * @msi_check, @msi_prepare, @msi_finish, @set_desc and @handle_error
 * are callbacks used by msi_domain_alloc_irqs() and related
 * interfaces which are based on msi_desc.
 */</doc>
<mbr r='msi_domain_ops::get_hwirq' o='0' t='irq_hw_number_t (*)(struct msi_domain_info *, msi_alloc_info_t *)'/>
<mbr r='msi_domain_ops::msi_init' o='64' t='int (*)(struct irq_domain *, struct msi_domain_info *, unsigned int, irq_hw_number_t, msi_alloc_info_t *)'/>
<mbr r='msi_domain_ops::msi_free' o='128' t='void (*)(struct irq_domain *, struct msi_domain_info *, unsigned int)'/>
<mbr r='msi_domain_ops::msi_check' o='192' t='int (*)(struct irq_domain *, struct msi_domain_info *, struct device *)'/>
<mbr r='msi_domain_ops::msi_prepare' o='256' t='int (*)(struct irq_domain *, struct device *, int, msi_alloc_info_t *)'/>
<mbr r='msi_domain_ops::msi_finish' o='320' t='void (*)(msi_alloc_info_t *, int)'/>
<mbr r='msi_domain_ops::set_desc' o='384' t='void (*)(msi_alloc_info_t *, struct msi_desc *)'/>
<mbr r='msi_domain_ops::handle_error' o='448' t='int (*)(struct irq_domain *, struct msi_desc *, int)'/>
