<def f='linux-4.14.y/include/linux/regset.h' l='220' ll='243' type='int user_regset_copyout(unsigned int * pos, unsigned int * count, void ** kbuf, void ** ubuf, const void * data, const int start_pos, const int end_pos)'/>
<doc f='linux-4.14.y/include/linux/regset.h' l='208'>/*
 * These are helpers for writing regset get/set functions in arch code.
 * Because @start_pos and @end_pos are always compile-time constants,
 * these are inlined into very little code though they look large.
 *
 * Use one or more calls sequentially for each chunk of regset data stored
 * contiguously in memory.  Call with constants for @start_pos and @end_pos,
 * giving the range of byte positions in the regset that data corresponds
 * to; @end_pos can be -1 if this chunk is at the end of the regset layout.
 * Each call updates the arguments to point past its chunk.
 */</doc>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='45' u='c' c='xfpregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='112' u='c' c='xstateregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='313' u='c' c='fpregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='326' u='c' c='fpregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/ptrace.c' l='745' u='c' c='ioperm_get'/>
<def f='linux-4.14.y/include/linux/regset.h' l='220' ll='243' type='int user_regset_copyout(unsigned int * pos, unsigned int * count, void ** kbuf, void ** ubuf, const void * data, const int start_pos, const int end_pos)'/>
<doc f='linux-4.14.y/include/linux/regset.h' l='208'>/*
 * These are helpers for writing regset get/set functions in arch code.
 * Because @start_pos and @end_pos are always compile-time constants,
 * these are inlined into very little code though they look large.
 *
 * Use one or more calls sequentially for each chunk of regset data stored
 * contiguously in memory.  Call with constants for @start_pos and @end_pos,
 * giving the range of byte positions in the regset that data corresponds
 * to; @end_pos can be -1 if this chunk is at the end of the regset layout.
 * Each call updates the arguments to point past its chunk.
 */</doc>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='45' u='c' c='xfpregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='112' u='c' c='xstateregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='313' u='c' c='fpregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/fpu/regset.c' l='326' u='c' c='fpregs_get'/>
<use f='linux-4.14.y/arch/x86/kernel/ptrace.c' l='745' u='c' c='ioperm_get'/>
