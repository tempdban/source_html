<dec f='linux-4.14.y/include/asm-generic/qspinlock.h' l='77' type='void queued_spin_lock_slowpath(struct qspinlock * lock, u32 val)'/>
<use f='linux-4.14.y/include/asm-generic/qspinlock.h' l='90' u='c' c='queued_spin_lock'/>
<def f='linux-4.14.y/kernel/locking/qspinlock.c' l='294' ll='515' type='void queued_spin_lock_slowpath(struct qspinlock * lock, u32 val)'/>
<dec f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' type='void queued_spin_lock_slowpath(struct qspinlock * , u32 )'/>
<use f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' c='queued_spin_lock_slowpath'/>
<use f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' u='a'/>
<use f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' u='a'/>
<doc f='linux-4.14.y/kernel/locking/qspinlock.c' l='273'>/**
 * queued_spin_lock_slowpath - acquire the queued spinlock
 * @lock: Pointer to queued spinlock structure
 * @val: Current value of the queued spinlock 32-bit word
 *
 * (queue tail, pending bit, lock value)
 *
 *              fast     :    slow                                  :    unlock
 *                       :                                          :
 * uncontended  (0,0,0) -:--&gt; (0,0,1) ------------------------------:--&gt; (*,*,0)
 *                       :       | ^--------.------.             /  :
 *                       :       v           \      \            |  :
 * pending               :    (0,1,1) +--&gt; (0,1,0)   \           |  :
 *                       :       | ^--&apos;              |           |  :
 *                       :       v                   |           |  :
 * uncontended           :    (n,x,y) +--&gt; (n,0,0) --&apos;           |  :
 *   queue               :       | ^--&apos;                          |  :
 *                       :       v                               |  :
 * contended             :    (*,x,y) +--&gt; (*,0,0) ---&gt; (*,0,1) -&apos;  :
 *   queue               :         ^--&apos;                             :
 */</doc>
<dec f='linux-4.14.y/include/asm-generic/qspinlock.h' l='77' type='void queued_spin_lock_slowpath(struct qspinlock * lock, u32 val)'/>
<use f='linux-4.14.y/include/asm-generic/qspinlock.h' l='90' u='c' c='queued_spin_lock'/>
<def f='linux-4.14.y/kernel/locking/qspinlock.c' l='294' ll='515' type='void queued_spin_lock_slowpath(struct qspinlock * lock, u32 val)'/>
<dec f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' type='void queued_spin_lock_slowpath(struct qspinlock * , u32 )'/>
<use f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' c='queued_spin_lock_slowpath'/>
<use f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' u='a'/>
<use f='linux-4.14.y/kernel/locking/qspinlock.c' l='516' u='a'/>
<doc f='linux-4.14.y/kernel/locking/qspinlock.c' l='273'>/**
 * queued_spin_lock_slowpath - acquire the queued spinlock
 * @lock: Pointer to queued spinlock structure
 * @val: Current value of the queued spinlock 32-bit word
 *
 * (queue tail, pending bit, lock value)
 *
 *              fast     :    slow                                  :    unlock
 *                       :                                          :
 * uncontended  (0,0,0) -:--&gt; (0,0,1) ------------------------------:--&gt; (*,*,0)
 *                       :       | ^--------.------.             /  :
 *                       :       v           \      \            |  :
 * pending               :    (0,1,1) +--&gt; (0,1,0)   \           |  :
 *                       :       | ^--&apos;              |           |  :
 *                       :       v                   |           |  :
 * uncontended           :    (n,x,y) +--&gt; (n,0,0) --&apos;           |  :
 *   queue               :       | ^--&apos;                          |  :
 *                       :       v                               |  :
 * contended             :    (*,x,y) +--&gt; (*,0,0) ---&gt; (*,0,1) -&apos;  :
 *   queue               :         ^--&apos;                             :
 */</doc>
