<def f='linux-4.14.y/include/net/inet_ecn.h' l='191' ll='210' type='int INET_ECN_decapsulate(struct sk_buff * skb, __u8 outer, __u8 inner)'/>
<use f='linux-4.14.y/include/net/inet_ecn.h' l='224' u='c' c='IP_ECN_decapsulate'/>
<use f='linux-4.14.y/include/net/inet_ecn.h' l='239' u='c' c='IP6_ECN_decapsulate'/>
<doc f='linux-4.14.y/include/net/inet_ecn.h' l='167'>/*
 * RFC 6040 4.2
 *  To decapsulate the inner header at the tunnel egress, a compliant
 *  tunnel egress MUST set the outgoing ECN field to the codepoint at the
 *  intersection of the appropriate arriving inner header (row) and outer
 *  header (column) in Figure 4
 *
 *      +---------+------------------------------------------------+
 *      |Arriving |            Arriving Outer Header               |
 *      |   Inner +---------+------------+------------+------------+
 *      |  Header | Not-ECT | ECT(0)     | ECT(1)     |     CE     |
 *      +---------+---------+------------+------------+------------+
 *      | Not-ECT | Not-ECT |Not-ECT(!!!)|Not-ECT(!!!)| &lt;drop&gt;(!!!)|
 *      |  ECT(0) |  ECT(0) | ECT(0)     | ECT(1)     |     CE     |
 *      |  ECT(1) |  ECT(1) | ECT(1) (!) | ECT(1)     |     CE     |
 *      |    CE   |      CE |     CE     |     CE(!!!)|     CE     |
 *      +---------+---------+------------+------------+------------+
 *
 *             Figure 4: New IP in IP Decapsulation Behaviour
 *
 *  returns 0 on success
 *          1 if something is broken and should be logged (!!! above)
 *          2 if packet should be dropped
 */</doc>
