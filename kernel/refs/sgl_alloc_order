<dec f='linux-4.18.y/include/linux/scatterlist.h' l='283' type='struct scatterlist * sgl_alloc_order(unsigned long long length, unsigned int order, bool chainable, gfp_t gfp, unsigned int * nent_p)'/>
<def f='linux-4.18.y/lib/scatterlist.c' l='478' ll='521' type='struct scatterlist * sgl_alloc_order(unsigned long long length, unsigned int order, bool chainable, gfp_t gfp, unsigned int * nent_p)'/>
<dec f='linux-4.18.y/lib/scatterlist.c' l='522' type='struct scatterlist * sgl_alloc_order(unsigned long long , unsigned int , bool , gfp_t , unsigned int * )'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='522' c='sgl_alloc_order'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='522' u='a'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='522' u='a'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='535' u='c' c='sgl_alloc'/>
<doc f='linux-4.18.y/lib/scatterlist.c' l='467'>/**
 * sgl_alloc_order - allocate a scatterlist and its pages
 * @length: Length in bytes of the scatterlist. Must be at least one
 * @order: Second argument for alloc_pages()
 * @chainable: Whether or not to allocate an extra element in the scatterlist
 *	for scatterlist chaining purposes
 * @gfp: Memory allocation flags
 * @nent_p: [out] Number of entries in the scatterlist that have pages
 *
 * Returns: A pointer to an initialized scatterlist or %NULL upon failure.
 */</doc>
