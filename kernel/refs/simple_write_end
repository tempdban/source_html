<dec f='linux-4.18.y/include/linux/fs.h' l='3169' type='int simple_write_end(struct file * file, struct address_space * mapping, loff_t pos, unsigned int len, unsigned int copied, struct page * page, void * fsdata)'/>
<use f='linux-4.18.y/fs/configfs/inode.c' l='50'/>
<use f='linux-4.18.y/fs/configfs/inode.c' l='50'/>
<use f='linux-4.18.y/fs/kernfs/inode.c' l='24'/>
<use f='linux-4.18.y/fs/kernfs/inode.c' l='24'/>
<def f='linux-4.18.y/fs/libfs.c' l='473' ll='501' type='int simple_write_end(struct file * file, struct address_space * mapping, loff_t pos, unsigned int len, unsigned int copied, struct page * page, void * fsdata)'/>
<dec f='linux-4.18.y/fs/libfs.c' l='502' type='int simple_write_end(struct file * , struct address_space * , loff_t , unsigned int , unsigned int , struct page * , void * )'/>
<use f='linux-4.18.y/fs/libfs.c' l='502' c='simple_write_end'/>
<use f='linux-4.18.y/fs/libfs.c' l='502' u='a'/>
<use f='linux-4.18.y/fs/libfs.c' l='502' u='a'/>
<doc f='linux-4.18.y/fs/libfs.c' l='450'>/**
 * simple_write_end - .write_end helper for non-block-device FSes
 * @available: See .write_end of address_space_operations
 * @file: 		&quot;
 * @mapping: 		&quot;
 * @pos: 		&quot;
 * @len: 		&quot;
 * @copied: 		&quot;
 * @page: 		&quot;
 * @fsdata: 		&quot;
 *
 * simple_write_end does the minimum needed for updating a page after writing is
 * done. It has the same API signature as the .write_end of
 * address_space_operations vector. So it can just be set onto .write_end for
 * FSes that don&apos;t need any other processing. i_mutex is assumed to be held.
 * Block based filesystems should use generic_write_end().
 * NOTE: Even though i_size might get updated by this function, mark_inode_dirty
 * is not called, so a filesystem that actually does store data in .write_inode
 * should extend on what&apos;s done here with a call to mark_inode_dirty() in the
 * case that i_size has changed.
 *
 * Use *ONLY* with simple_readpage()
 */</doc>
<use f='linux-4.18.y/fs/ramfs/inode.c' l='57'/>
<use f='linux-4.18.y/fs/ramfs/inode.c' l='57'/>
