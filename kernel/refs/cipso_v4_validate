<dec f='linux-4.18.y/include/net/cipso_ipv4.h' l='226' type='int cipso_v4_validate(const struct sk_buff * skb, unsigned char ** option)'/>
<def f='linux-4.18.y/net/ipv4/cipso_ipv4.c' l='1563' ll='1704' type='int cipso_v4_validate(const struct sk_buff * skb, unsigned char ** option)'/>
<doc f='linux-4.18.y/net/ipv4/cipso_ipv4.c' l='1544'>/**
 * cipso_v4_validate - Validate a CIPSO option
 * @option: the start of the option, on error it is set to point to the error
 *
 * Description:
 * This routine is called to validate a CIPSO option, it checks all of the
 * fields to ensure that they are at least valid, see the draft snippet below
 * for details.  If the option is valid then a zero value is returned and
 * the value of @option is unchanged.  If the option is invalid then a
 * non-zero value is returned and @option is adjusted to point to the
 * offending portion of the option.  From the IETF draft ...
 *
 *  &quot;If any field within the CIPSO options, such as the DOI identifier, is not
 *   recognized the IP datagram is discarded and an ICMP &apos;parameter problem&apos;
 *   (type 12) is generated and returned.  The ICMP code field is set to &apos;bad
 *   parameter&apos; (code 0) and the pointer is set to the start of the CIPSO field
 *   that is unrecognized.&quot;
 *
 */</doc>
<use f='linux-4.18.y/net/ipv4/ip_options.c' l='448' u='c' c='ip_options_compile'/>
