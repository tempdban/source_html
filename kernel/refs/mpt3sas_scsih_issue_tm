<dec f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_base.h' l='1493' type='int mpt3sas_scsih_issue_tm(struct MPT3SAS_ADAPTER * ioc, u16 handle, u64 lun, u8 type, u16 smid_task, u16 msix_task, u8 timeout, u8 tr_method)'/>
<def f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='2645' ll='2747' type='int mpt3sas_scsih_issue_tm(struct MPT3SAS_ADAPTER * ioc, u16 handle, u64 lun, u8 type, u16 smid_task, u16 msix_task, u8 timeout, u8 tr_method)'/>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='2756' u='c' c='mpt3sas_scsih_issue_locked_tm'/>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='7495' u='c' c='_scsih_sas_broadcast_primitive_event'/>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='7536' u='c' c='_scsih_sas_broadcast_primitive_event'/>
<doc f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='2626'>/**
 * mpt3sas_scsih_issue_tm - main routine for sending tm requests
 * @ioc: per adapter struct
 * @handle: device handle
 * @lun: lun number
 * @type: MPI2_SCSITASKMGMT_TASKTYPE__XXX (defined in mpi2_init.h)
 * @smid_task: smid assigned to the task
 * @msix_task: MSIX table index supplied by the OS
 * @timeout: timeout in seconds
 * @tr_method: Target Reset Method
 * Context: user
 *
 * A generic API for sending task management requests to firmware.
 *
 * The callback index is set inside `ioc-&gt;tm_cb_idx`.
 * The caller is responsible to check for outstanding commands.
 *
 * Return SUCCESS or FAILED.
 */</doc>
