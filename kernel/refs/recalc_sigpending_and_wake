<dec f='linux-4.18.y/include/linux/sched/signal.h' l='372' type='void recalc_sigpending_and_wake(struct task_struct * t)'/>
<doc f='linux-4.18.y/include/linux/sched/signal.h' l='366'>/*
 * Reevaluate whether the task has signals pending delivery.
 * Wake the task if so.
 * This is required every time the blocked sigset_t changes.
 * callers must hold sighand-&gt;siglock.
 */</doc>
<def f='linux-4.18.y/kernel/signal.c' l='161' ll='165' type='void recalc_sigpending_and_wake(struct task_struct * t)'/>
<use f='linux-4.18.y/kernel/signal.c' l='1203' u='c' c='force_sig_info'/>
<doc f='linux-4.18.y/kernel/signal.c' l='157'>/*
 * After recalculating TIF_SIGPENDING, we need to make sure the task wakes up.
 * This is superfluous when called on current, the wakeup is a harmless no-op.
 */</doc>
