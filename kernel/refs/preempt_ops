<def f='linux-4.18.y/include/linux/preempt.h' l='296' ll='300'/>
<size>16</size>
<doc f='linux-4.18.y/include/linux/preempt.h' l='282'>/**
 * preempt_ops - notifiers called when a task is preempted and rescheduled
 * @sched_in: we&apos;re about to be rescheduled:
 *    notifier: struct preempt_notifier for the task being scheduled
 *    cpu:  cpu we&apos;re scheduled on
 * @sched_out: we&apos;ve just been preempted
 *    notifier: struct preempt_notifier for the task being preempted
 *    next: the task that&apos;s kicking us out
 *
 * Please note that sched_in and out are called under different
 * contexts.  sched_out is called with rq lock held and irq disabled
 * while sched_in is called without rq lock and irq enabled.  This
 * difference is intentional and depended upon by its users.
 */</doc>
<mbr r='preempt_ops::sched_in' o='0' t='void (*)(struct preempt_notifier *, int)'/>
<mbr r='preempt_ops::sched_out' o='64' t='void (*)(struct preempt_notifier *, struct task_struct *)'/>
