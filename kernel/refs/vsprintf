<dec f='linux-4.14.y/arch/x86/boot/boot.h' l='323' type='int vsprintf(char * buf, const char * fmt, va_list args)'/>
<dec f='linux-4.14.y/include/linux/kernel.h' l='447' type='int vsprintf(char * buf, const char * , struct __va_list_tag * )'/>
<dec f='include/stdio.h' l='379' type='int vsprintf(char *__restrict __s, const char *__restrict __format, struct __va_list_tag * __arg)'/>
<doc f='include/stdio.h' l='378'>/* Write formatted output to S from argument list ARG.  */</doc>
<def f='linux-4.14.y/arch/x86/boot/printf.c' l='115' ll='283' type='int vsprintf(char * buf, const char * fmt, va_list args)'/>
<use f='linux-4.14.y/arch/x86/boot/printf.c' l='291' u='c' c='sprintf'/>
<use f='linux-4.14.y/arch/x86/boot/printf.c' l='303' u='c' c='printf'/>
<use f='linux-4.14.y/drivers/acpi/osl.c' l='162' u='c' c='acpi_os_vprintf'/>
<use f='linux-4.14.y/drivers/scsi/BusLogic.c' l='3593' u='c' c='blogic_msg'/>
<use f='linux-4.14.y/init/do_mounts.c' l='490' u='c' c='change_floppy'/>
<def f='linux-4.14.y/lib/vsprintf.c' l='2359' ll='2362' type='int vsprintf(char * buf, const char * fmt, struct __va_list_tag * args)'/>
<dec f='linux-4.14.y/lib/vsprintf.c' l='2363' type='int vsprintf(char * , const char * , struct __va_list_tag * )'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2363' c='vsprintf'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2363' u='a'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2363' u='a'/>
<doc f='linux-4.14.y/lib/vsprintf.c' l='2345'>/**
 * vsprintf - Format a string and place it in a buffer
 * @buf: The buffer to place the result into
 * @fmt: The format string to use
 * @args: Arguments for the format string
 *
 * The function returns the number of characters written
 * into @buf. Use vsnprintf() or vscnprintf() in order to avoid
 * buffer overflows.
 *
 * If you&apos;re not already dealing with a va_list consider using sprintf().
 *
 * See the vsnprintf() documentation for format string extensions over C99.
 */</doc>
<def f='include/bits/stdio2.h' l='42' ll='48' macro='1' type='int vsprintf(char *restrict __s, const char *restrict __fmt, struct __va_list_tag * __ap)'/>
<dec f='linux-4.14.y/arch/x86/boot/boot.h' l='323' type='int vsprintf(char * buf, const char * fmt, va_list args)'/>
<dec f='linux-4.14.y/include/linux/kernel.h' l='447' type='int vsprintf(char * buf, const char * , struct __va_list_tag * )'/>
<def f='linux-4.14.y/arch/x86/boot/printf.c' l='115' ll='283' type='int vsprintf(char * buf, const char * fmt, va_list args)'/>
<use f='linux-4.14.y/arch/x86/boot/printf.c' l='291' u='c' c='sprintf'/>
<use f='linux-4.14.y/arch/x86/boot/printf.c' l='303' u='c' c='printf'/>
<use f='linux-4.14.y/drivers/acpi/osl.c' l='162' u='c' c='acpi_os_vprintf'/>
<use f='linux-4.14.y/drivers/scsi/BusLogic.c' l='3593' u='c' c='blogic_msg'/>
<use f='linux-4.14.y/init/do_mounts.c' l='490' u='c' c='change_floppy'/>
<def f='linux-4.14.y/lib/vsprintf.c' l='2359' ll='2362' type='int vsprintf(char * buf, const char * fmt, struct __va_list_tag * args)'/>
<dec f='linux-4.14.y/lib/vsprintf.c' l='2363' type='int vsprintf(char * , const char * , struct __va_list_tag * )'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2363' c='vsprintf'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2363' u='a'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2363' u='a'/>
<doc f='linux-4.14.y/lib/vsprintf.c' l='2345'>/**
 * vsprintf - Format a string and place it in a buffer
 * @buf: The buffer to place the result into
 * @fmt: The format string to use
 * @args: Arguments for the format string
 *
 * The function returns the number of characters written
 * into @buf. Use vsnprintf() or vscnprintf() in order to avoid
 * buffer overflows.
 *
 * If you&apos;re not already dealing with a va_list consider using sprintf().
 *
 * See the vsnprintf() documentation for format string extensions over C99.
 */</doc>
