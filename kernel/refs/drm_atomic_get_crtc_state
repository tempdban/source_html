<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='310' type='struct drm_crtc_state * drm_atomic_get_crtc_state(struct drm_atomic_state * state, struct drm_crtc * crtc)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='279' ll='310' type='struct drm_crtc_state * drm_atomic_get_crtc_state(struct drm_atomic_state * state, struct drm_crtc * crtc)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' type='struct drm_crtc_state * drm_atomic_get_crtc_state(struct drm_atomic_state * , struct drm_crtc * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' c='drm_atomic_get_crtc_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='699' u='c' c='drm_atomic_get_plane_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1130' u='c' c='drm_atomic_get_connector_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1360' u='c' c='drm_atomic_set_crtc_for_plane'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1371' u='c' c='drm_atomic_set_crtc_for_plane'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1478' u='c' c='drm_atomic_set_crtc_for_connector'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1527' u='c' c='drm_atomic_add_affected_connectors'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1871' u='c' c='drm_atomic_connector_commit_dpms'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1924' u='c' c='drm_atomic_set_property'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='264'>/**
 * drm_atomic_get_crtc_state - get crtc state
 * @state: global atomic state object
 * @crtc: crtc to get state object for
 *
 * This function returns the crtc state for the given crtc, allocating it if
 * needed. It will also grab the relevant crtc lock to make sure that the state
 * is consistent.
 *
 * Returns:
 *
 * Either the allocated state or the error code encoded into the pointer. When
 * the error is EDEADLK then the w/w mutex code has detected a deadlock and the
 * entire atomic sequence must be restarted. All other errors are fatal.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2621' u='c' c='__drm_atomic_helper_set_config'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2729' u='c' c='drm_atomic_helper_disable_all'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2982' u='c' c='page_flip_common'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='3479' u='c' c='drm_atomic_helper_duplicate_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='3603' u='c' c='drm_atomic_helper_legacy_gamma_set'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1344' u='c' c='setcmap_atomic'/>
<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='310' type='struct drm_crtc_state * drm_atomic_get_crtc_state(struct drm_atomic_state * state, struct drm_crtc * crtc)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='279' ll='310' type='struct drm_crtc_state * drm_atomic_get_crtc_state(struct drm_atomic_state * state, struct drm_crtc * crtc)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' type='struct drm_crtc_state * drm_atomic_get_crtc_state(struct drm_atomic_state * , struct drm_crtc * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' c='drm_atomic_get_crtc_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='311' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='699' u='c' c='drm_atomic_get_plane_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1130' u='c' c='drm_atomic_get_connector_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1360' u='c' c='drm_atomic_set_crtc_for_plane'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1371' u='c' c='drm_atomic_set_crtc_for_plane'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1478' u='c' c='drm_atomic_set_crtc_for_connector'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1527' u='c' c='drm_atomic_add_affected_connectors'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1871' u='c' c='drm_atomic_connector_commit_dpms'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1924' u='c' c='drm_atomic_set_property'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='264'>/**
 * drm_atomic_get_crtc_state - get crtc state
 * @state: global atomic state object
 * @crtc: crtc to get state object for
 *
 * This function returns the crtc state for the given crtc, allocating it if
 * needed. It will also grab the relevant crtc lock to make sure that the state
 * is consistent.
 *
 * Returns:
 *
 * Either the allocated state or the error code encoded into the pointer. When
 * the error is EDEADLK then the w/w mutex code has detected a deadlock and the
 * entire atomic sequence must be restarted. All other errors are fatal.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2621' u='c' c='__drm_atomic_helper_set_config'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2729' u='c' c='drm_atomic_helper_disable_all'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2982' u='c' c='page_flip_common'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='3479' u='c' c='drm_atomic_helper_duplicate_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='3603' u='c' c='drm_atomic_helper_legacy_gamma_set'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1344' u='c' c='setcmap_atomic'/>
