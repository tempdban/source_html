<def f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_type.h' l='107' ll='114'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_type.h' l='99'>/* These are structs for managing the hardware information and the operations.
 * The structures of function pointers are filled out at init time when we
 * know for sure exactly which hardware we&apos;re working with.  This gives us the
 * flexibility of using the same main driver code but adapting to slightly
 * different hardware needs as new parts are developed.  For this architecture,
 * the Firmware and AdminQ are intended to insulate the driver from most of the
 * future changes, but these structures will also do part of the job.
 */</doc>
<def f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40e_type.h' l='82' ll='89'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40e_type.h' l='74'>/* These are structs for managing the hardware information and the operations.
 * The structures of function pointers are filled out at init time when we
 * know for sure exactly which hardware we&apos;re working with.  This gives us the
 * flexibility of using the same main driver code but adapting to slightly
 * different hardware needs as new parts are developed.  For this architecture,
 * the Firmware and AdminQ are intended to insulate the driver from most of the
 * future changes, but these structures will also do part of the job.
 */</doc>
