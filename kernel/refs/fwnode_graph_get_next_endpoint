<dec f='linux-4.18.y/include/linux/property.h' l='293' type='struct fwnode_handle * fwnode_graph_get_next_endpoint(const struct fwnode_handle * fwnode, struct fwnode_handle * prev)'/>
<def f='linux-4.18.y/drivers/base/property.c' l='1351' ll='1356' type='struct fwnode_handle * fwnode_graph_get_next_endpoint(const struct fwnode_handle * fwnode, struct fwnode_handle * prev)'/>
<dec f='linux-4.18.y/drivers/base/property.c' l='1357' type='struct fwnode_handle * fwnode_graph_get_next_endpoint(const struct fwnode_handle * , struct fwnode_handle * )'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1357' c='fwnode_graph_get_next_endpoint'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1357' u='a'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1357' u='a'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1440' u='c' c='fwnode_graph_get_remote_node'/>
<doc f='linux-4.18.y/drivers/base/property.c' l='1343'>/**
 * device_graph_get_next_endpoint - Get next endpoint firmware node
 * @fwnode: Pointer to the parent firmware node
 * @prev: Previous endpoint node or %NULL to get the first
 *
 * Returns an endpoint firmware node pointer or %NULL if no more endpoints
 * are available.
 */</doc>
