<dec f='linux-4.14.y/include/linux/tty.h' l='575' type='struct device * tty_port_register_device_serdev(struct tty_port * port, struct tty_driver * driver, unsigned int index, struct device * device)'/>
<def f='linux-4.14.y/drivers/tty/tty_port.c' l='180' ll='186' type='struct device * tty_port_register_device_serdev(struct tty_port * port, struct tty_driver * driver, unsigned int index, struct device * device)'/>
<dec f='linux-4.14.y/drivers/tty/tty_port.c' l='187' type='struct device * tty_port_register_device_serdev(struct tty_port * , struct tty_driver * , unsigned int , struct device * )'/>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='187' c='tty_port_register_device_serdev'/>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='187' u='a'/>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='187' u='a'/>
<doc f='linux-4.14.y/drivers/tty/tty_port.c' l='170'>/**
 * tty_port_register_device_serdev - register tty or serdev device
 * @port: tty_port of the device
 * @driver: tty_driver for this device
 * @index: index of the tty
 * @device: parent if exists, otherwise NULL
 *
 * Register a serdev or tty device depending on if the parent device has any
 * defined serdev clients or not.
 */</doc>
<dec f='linux-4.14.y/include/linux/tty.h' l='575' type='struct device * tty_port_register_device_serdev(struct tty_port * port, struct tty_driver * driver, unsigned int index, struct device * device)'/>
<def f='linux-4.14.y/drivers/tty/tty_port.c' l='180' ll='186' type='struct device * tty_port_register_device_serdev(struct tty_port * port, struct tty_driver * driver, unsigned int index, struct device * device)'/>
<dec f='linux-4.14.y/drivers/tty/tty_port.c' l='187' type='struct device * tty_port_register_device_serdev(struct tty_port * , struct tty_driver * , unsigned int , struct device * )'/>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='187' c='tty_port_register_device_serdev'/>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='187' u='a'/>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='187' u='a'/>
<doc f='linux-4.14.y/drivers/tty/tty_port.c' l='170'>/**
 * tty_port_register_device_serdev - register tty or serdev device
 * @port: tty_port of the device
 * @driver: tty_driver for this device
 * @index: index of the tty
 * @device: parent if exists, otherwise NULL
 *
 * Register a serdev or tty device depending on if the parent device has any
 * defined serdev clients or not.
 */</doc>
