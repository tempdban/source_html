<dec f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.h' l='54' type='s32 e1000e_write_kmrn_reg(struct e1000_hw * hw, u32 offset, u16 data)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2588' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2600' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2646' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2658' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5000' u='c' c='e1000_setup_copper_link_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5008' u='c' c='e1000_setup_copper_link_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5275' u='c' c='e1000e_gig_downshift_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5280' u='c' c='e1000e_gig_downshift_workaround_ich8lan'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.c' l='578' ll='581' type='s32 e1000e_write_kmrn_reg(struct e1000_hw * hw, u32 offset, u16 data)'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.c' l='569'>/**
 *  e1000e_write_kmrn_reg -  Write kumeran register
 *  @hw: pointer to the HW structure
 *  @offset: register offset to write to
 *  @data: data to write at register offset
 *
 *  Acquires semaphore then writes the data to the PHY register at the offset
 *  using the kumeran interface.  Release the acquired semaphore before exiting.
 **/</doc>
<dec f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.h' l='54' type='s32 e1000e_write_kmrn_reg(struct e1000_hw * hw, u32 offset, u16 data)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2588' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2600' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2646' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2658' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5000' u='c' c='e1000_setup_copper_link_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5008' u='c' c='e1000_setup_copper_link_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5275' u='c' c='e1000e_gig_downshift_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5280' u='c' c='e1000e_gig_downshift_workaround_ich8lan'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.c' l='578' ll='581' type='s32 e1000e_write_kmrn_reg(struct e1000_hw * hw, u32 offset, u16 data)'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.c' l='569'>/**
 *  e1000e_write_kmrn_reg -  Write kumeran register
 *  @hw: pointer to the HW structure
 *  @offset: register offset to write to
 *  @data: data to write at register offset
 *
 *  Acquires semaphore then writes the data to the PHY register at the offset
 *  using the kumeran interface.  Release the acquired semaphore before exiting.
 **/</doc>
