<dec f='linux-4.18.y/include/linux/hid.h' l='888' type='int hid_open_report(struct hid_device * device)'/>
<use f='linux-4.18.y/include/linux/hid.h' l='1004' u='c' c='hid_parse'/>
<def f='linux-4.18.y/drivers/hid/hid-core.c' l='947' ll='1042' type='int hid_open_report(struct hid_device * device)'/>
<dec f='linux-4.18.y/drivers/hid/hid-core.c' l='1043' type='int hid_open_report(struct hid_device * )'/>
<use f='linux-4.18.y/drivers/hid/hid-core.c' l='1043' c='hid_open_report'/>
<use f='linux-4.18.y/drivers/hid/hid-core.c' l='1043' u='a'/>
<use f='linux-4.18.y/drivers/hid/hid-core.c' l='1043' u='a'/>
<use f='linux-4.18.y/drivers/hid/hid-core.c' l='1987' u='c' c='hid_device_probe'/>
<doc f='linux-4.18.y/drivers/hid/hid-core.c' l='935'>/**
 * hid_open_report - open a driver-specific device report
 *
 * @device: hid device
 *
 * Parse a report description into a hid_device structure. Reports are
 * enumerated, fields are attached to these reports.
 * 0 returned on success, otherwise nonzero error value.
 *
 * This function (or the equivalent hid_parse() macro) should only be
 * called from probe() in drivers, before starting the device.
 */</doc>
