<dec f='linux-4.18.y/include/linux/sched/mm.h' l='96' type='void mm_release(struct task_struct * , struct mm_struct * )'/>
<doc f='linux-4.18.y/include/linux/sched/mm.h' l='95'>/* Remove the current tasks stale references to the old mm_struct */</doc>
<use f='linux-4.18.y/fs/exec.c' l='1014' u='c' c='exec_mmap'/>
<use f='linux-4.18.y/kernel/exit.c' l='499' u='c' c='exit_mm'/>
<def f='linux-4.18.y/kernel/fork.c' l='1197' ll='1245' type='void mm_release(struct task_struct * tsk, struct mm_struct * mm)'/>
<doc f='linux-4.18.y/kernel/fork.c' l='1184'>/* Please note the differences between mmput and mm_release.
 * mmput is called whenever we stop holding onto a mm_struct,
 * error success whatever.
 *
 * mm_release is called after a mm_struct has been removed
 * from the current process.
 *
 * This difference is important for error handling, when we
 * only half set up a mm_struct for a new process and need to restore
 * the old one.  Because we mmput the new mm_struct before
 * restoring the old one. . .
 * Eric Biederman 10 January 1998
 */</doc>
