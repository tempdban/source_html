<dec f='linux-4.14.y/include/linux/mm.h' l='1443' type='void account_page_dirtied(struct page * page, struct address_space * mapping)'/>
<use f='linux-4.14.y/fs/buffer.c' l='633' u='c' c='__set_page_dirty'/>
<def f='linux-4.14.y/mm/page-writeback.c' l='2423' ll='2444' type='void account_page_dirtied(struct page * page, struct address_space * mapping)'/>
<dec f='linux-4.14.y/mm/page-writeback.c' l='2445' type='void account_page_dirtied(struct page * , struct address_space * )'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2445' c='account_page_dirtied'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2445' u='a'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2445' u='a'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2490' u='c' c='__set_page_dirty_nobuffers'/>
<doc f='linux-4.14.y/mm/page-writeback.c' l='2416'>/*
 * Helper function for set_page_dirty family.
 *
 * Caller must hold lock_page_memcg().
 *
 * NOTE: This relies on being atomic wrt interrupts.
 */</doc>
<dec f='linux-4.14.y/include/linux/mm.h' l='1443' type='void account_page_dirtied(struct page * page, struct address_space * mapping)'/>
<use f='linux-4.14.y/fs/buffer.c' l='633' u='c' c='__set_page_dirty'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='2167' u='c' c='f2fs_set_page_dirty_nobuffers'/>
<def f='linux-4.14.y/mm/page-writeback.c' l='2423' ll='2444' type='void account_page_dirtied(struct page * page, struct address_space * mapping)'/>
<dec f='linux-4.14.y/mm/page-writeback.c' l='2445' type='void account_page_dirtied(struct page * , struct address_space * )'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2445' c='account_page_dirtied'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2445' u='a'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2445' u='a'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2490' u='c' c='__set_page_dirty_nobuffers'/>
<doc f='linux-4.14.y/mm/page-writeback.c' l='2416'>/*
 * Helper function for set_page_dirty family.
 *
 * Caller must hold lock_page_memcg().
 *
 * NOTE: This relies on being atomic wrt interrupts.
 */</doc>
