<dec f='linux-4.14.y/include/drm/drm_property.h' l='259' type='struct drm_property * drm_property_create_bool(struct drm_device * dev, int flags, const char * name)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mode_config.c' l='292' u='c' c='drm_mode_create_standard_properties'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='350' ll='354' type='struct drm_property * drm_property_create_bool(struct drm_device * dev, int flags, const char * name)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' type='struct drm_property * drm_property_create_bool(struct drm_device * , int , const char * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' c='drm_property_create_bool'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='334'>/**
 * drm_property_create_bool - create a new boolean property type
 * @dev: drm device
 * @flags: flags specifying the property type
 * @name: name of the property
 *
 * This creates a new generic drm property which can then be attached to a drm
 * object with drm_object_attach_property(). The returned property object must
 * be freed with drm_property_destroy(), which is done automatically when
 * calling drm_mode_config_cleanup().
 *
 * This is implemented as a ranged property with only {0, 1} as valid values.
 *
 * Returns:
 * A pointer to the newly created property on success, NULL on failure.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_property.h' l='259' type='struct drm_property * drm_property_create_bool(struct drm_device * dev, int flags, const char * name)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mode_config.c' l='292' u='c' c='drm_mode_create_standard_properties'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='350' ll='354' type='struct drm_property * drm_property_create_bool(struct drm_device * dev, int flags, const char * name)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' type='struct drm_property * drm_property_create_bool(struct drm_device * , int , const char * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' c='drm_property_create_bool'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='355' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='334'>/**
 * drm_property_create_bool - create a new boolean property type
 * @dev: drm device
 * @flags: flags specifying the property type
 * @name: name of the property
 *
 * This creates a new generic drm property which can then be attached to a drm
 * object with drm_object_attach_property(). The returned property object must
 * be freed with drm_property_destroy(), which is done automatically when
 * calling drm_mode_config_cleanup().
 *
 * This is implemented as a ranged property with only {0, 1} as valid values.
 *
 * Returns:
 * A pointer to the newly created property on success, NULL on failure.
 */</doc>
