<dec f='linux-4.18.y/include/net/tcp.h' l='601' type='int tcp_read_sock(struct sock * sk, read_descriptor_t * desc, sk_read_actor_t recv_actor)'/>
<doc f='linux-4.18.y/include/net/tcp.h' l='600'>/* Read &apos;sendfile()&apos;-style from a TCP socket */</doc>
<use f='linux-4.18.y/net/ipv4/af_inet.c' l='1002'/>
<use f='linux-4.18.y/net/ipv4/af_inet.c' l='1002'/>
<use f='linux-4.18.y/net/ipv4/tcp.c' l='759' u='c' c='__tcp_splice_read'/>
<def f='linux-4.18.y/net/ipv4/tcp.c' l='1627' ll='1696' type='int tcp_read_sock(struct sock * sk, read_descriptor_t * desc, sk_read_actor_t recv_actor)'/>
<dec f='linux-4.18.y/net/ipv4/tcp.c' l='1697' type='int tcp_read_sock(struct sock * , read_descriptor_t * , sk_read_actor_t )'/>
<use f='linux-4.18.y/net/ipv4/tcp.c' l='1697' c='tcp_read_sock'/>
<use f='linux-4.18.y/net/ipv4/tcp.c' l='1697' u='a'/>
<use f='linux-4.18.y/net/ipv4/tcp.c' l='1697' u='a'/>
<doc f='linux-4.18.y/net/ipv4/tcp.c' l='1616'>/*
 * This routine provides an alternative to tcp_recvmsg() for routines
 * that would like to handle copying from skbuffs directly in &apos;sendfile&apos;
 * fashion.
 * Note:
 *	- It is assumed that the socket was locked by the caller.
 *	- The routine does not block.
 *	- At present, there is no support for reading OOB data
 *	  or for &apos;peeking&apos; the socket using this routine
 *	  (although both would be easy to implement).
 */</doc>
