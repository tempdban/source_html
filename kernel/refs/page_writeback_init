<dec f='linux-4.14.y/mm/internal.h' l='39' type='void page_writeback_init()'/>
<use f='linux-4.14.y/mm/filemap.c' l='879' u='c' c='pagecache_init'/>
<def f='linux-4.14.y/mm/page-writeback.c' l='2078' ll='2086' type='void page_writeback_init()'/>
<doc f='linux-4.14.y/mm/page-writeback.c' l='2060'>/*
 * Called early on to tune the page writeback dirty limits.
 *
 * We used to scale dirty pages according to how total memory
 * related to pages that could be allocated for buffers (by
 * comparing nr_free_buffer_pages() to vm_total_pages.
 *
 * However, that was when we used &quot;dirty_ratio&quot; to scale with
 * all memory, and we don&apos;t do that any more. &quot;dirty_ratio&quot;
 * is now applied to total non-HIGHPAGE memory (by subtracting
 * totalhigh_pages from vm_total_pages), and as such we can&apos;t
 * get into the old insane situation any more where we had
 * large amounts of dirty pages compared to a small amount of
 * non-HIGHMEM memory.
 *
 * But we might still want to scale the dirty_ratio by how
 * much memory the box has..
 */</doc>
