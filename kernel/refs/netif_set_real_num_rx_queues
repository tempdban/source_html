<dec f='linux-4.14.y/include/linux/netdevice.h' l='3193' type='int netif_set_real_num_rx_queues(struct net_device * dev, unsigned int rxq)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_main.c' l='3244' u='c' c='__igb_open'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='5316' u='c' c='ixgbe_fwd_ring_up'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='6546' u='c' c='ixgbe_open'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='2456' u='c' c='ixgbevf_set_interrupt_capability'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1770' u='c' c='virtnet_set_channels'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='2009' u='c' c='virtnet_xdp_set'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='2636' u='c' c='virtnet_probe'/>
<use f='linux-4.14.y/drivers/net/vmxnet3/vmxnet3_drv.c' l='3478' u='c' c='vmxnet3_probe_device'/>
<def f='linux-4.14.y/net/core/dev.c' l='2394' ll='2412' type='int netif_set_real_num_rx_queues(struct net_device * dev, unsigned int rxq)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='2413' type='int netif_set_real_num_rx_queues(struct net_device * , unsigned int )'/>
<use f='linux-4.14.y/net/core/dev.c' l='2413' c='netif_set_real_num_rx_queues'/>
<use f='linux-4.14.y/net/core/dev.c' l='2413' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='2413' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='2384'>/**
 *	netif_set_real_num_rx_queues - set actual number of RX queues used
 *	@dev: Network device
 *	@rxq: Actual number of RX queues
 *
 *	This must be called either with the rtnl_lock held or before
 *	registration of the net device.  Returns 0 on success, or a
 *	negative error code.  If called before registration, it always
 *	succeeds.
 */</doc>
<dec f='linux-4.14.y/include/linux/netdevice.h' l='3193' type='int netif_set_real_num_rx_queues(struct net_device * dev, unsigned int rxq)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_main.c' l='3244' u='c' c='__igb_open'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='5316' u='c' c='ixgbe_fwd_ring_up'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='6546' u='c' c='ixgbe_open'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='2456' u='c' c='ixgbevf_set_interrupt_capability'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1770' u='c' c='virtnet_set_channels'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='2009' u='c' c='virtnet_xdp_set'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='2636' u='c' c='virtnet_probe'/>
<use f='linux-4.14.y/drivers/net/vmxnet3/vmxnet3_drv.c' l='3478' u='c' c='vmxnet3_probe_device'/>
<def f='linux-4.14.y/net/core/dev.c' l='2394' ll='2412' type='int netif_set_real_num_rx_queues(struct net_device * dev, unsigned int rxq)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='2413' type='int netif_set_real_num_rx_queues(struct net_device * , unsigned int )'/>
<use f='linux-4.14.y/net/core/dev.c' l='2413' c='netif_set_real_num_rx_queues'/>
<use f='linux-4.14.y/net/core/dev.c' l='2413' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='2413' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='2384'>/**
 *	netif_set_real_num_rx_queues - set actual number of RX queues used
 *	@dev: Network device
 *	@rxq: Actual number of RX queues
 *
 *	This must be called either with the rtnl_lock held or before
 *	registration of the net device.  Returns 0 on success, or a
 *	negative error code.  If called before registration, it always
 *	succeeds.
 */</doc>
