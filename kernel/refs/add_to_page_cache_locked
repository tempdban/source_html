<dec f='linux-4.14.y/include/linux/pagemap.h' l='612' type='int add_to_page_cache_locked(struct page * page, struct address_space * mapping, unsigned long index, gfp_t gfp_mask)'/>
<use f='linux-4.14.y/include/linux/pagemap.h' l='630' u='c' c='add_to_page_cache'/>
<def f='linux-4.14.y/mm/filemap.c' l='792' ll='797' type='int add_to_page_cache_locked(struct page * page, struct address_space * mapping, unsigned long offset, gfp_t gfp_mask)'/>
<dec f='linux-4.14.y/mm/filemap.c' l='798' type='int add_to_page_cache_locked(struct page * , struct address_space * , unsigned long , gfp_t )'/>
<use f='linux-4.14.y/mm/filemap.c' l='798' c='add_to_page_cache_locked'/>
<use f='linux-4.14.y/mm/filemap.c' l='798' u='a'/>
<use f='linux-4.14.y/mm/filemap.c' l='798' u='a'/>
<doc f='linux-4.14.y/mm/filemap.c' l='782'>/**
 * add_to_page_cache_locked - add a locked page to the pagecache
 * @page:	page to add
 * @mapping:	the page&apos;s address_space
 * @offset:	page index
 * @gfp_mask:	page allocation mode
 *
 * This function is used to add a page to the pagecache. It must be locked.
 * This function does not add the page to the LRU.  The caller must do that.
 */</doc>
