<def f='linux-4.18.y/include/linux/ptrace.h' l='171' ll='189' type='void ptrace_event_pid(int event, struct pid * pid)'/>
<doc f='linux-4.18.y/include/linux/ptrace.h' l='160'>/**
 * ptrace_event_pid - possibly stop for a ptrace event notification
 * @event:	%PTRACE_EVENT_* value to report
 * @pid:	process identifier for %PTRACE_GETEVENTMSG to return
 *
 * Check whether @event is enabled and, if so, report @event and @pid
 * to the ptrace parent.  @pid is reported as the pid_t seen from the
 * the ptrace parent&apos;s pid namespace.
 *
 * Called without locks.
 */</doc>
<use f='linux-4.18.y/kernel/fork.c' l='2152' u='c' c='_do_fork'/>
<use f='linux-4.18.y/kernel/fork.c' l='2156' u='c' c='_do_fork'/>
