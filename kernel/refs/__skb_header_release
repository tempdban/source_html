<def f='linux-4.14.y/include/linux/skbuff.h' l='1481' ll='1485' type='void __skb_header_release(struct sk_buff * skb)'/>
<doc f='linux-4.14.y/include/linux/skbuff.h' l='1474'>/**
 *	__skb_header_release - release reference to header
 *	@skb: buffer to operate on
 *
 *	Variant of skb_header_release() assuming skb is private to caller.
 *	We can avoid one atomic operation.
 */</doc>
<use f='linux-4.14.y/net/core/skbuff.c' l='3873' u='c' c='skb_gro_receive'/>
<use f='linux-4.14.y/net/ipv4/tcp.c' l='648' u='c' c='skb_entail'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='1161' u='c' c='tcp_queue_skb'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='1343' u='c' c='tcp_fragment'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='1876' u='c' c='tso_fragment'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='3133' u='c' c='tcp_send_synack'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='3353' u='c' c='tcp_connect_queue_skb'/>
