<def f='linux-4.14.y/include/net/ip.h' l='92' ll='100'/>
<dec f='linux-4.14.y/include/net/ip.h' l='102' type='struct ip_ra_chain *'/>
<size>40</size>
<mbr r='ip_ra_chain::next' o='0' t='struct ip_ra_chain *'/>
<mbr r='ip_ra_chain::sk' o='64' t='struct sock *'/>
<mbr r='ip_ra_chain::rcu' o='192' t='struct callback_head'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='a' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='a' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<def f='linux-4.14.y/net/ipv4/ip_sockglue.c' l='339' type='struct ip_ra_chain *'/>
<use f='linux-4.14.y/net/ipv4/ip_sockglue.c' l='361' u='a' c='ip_ra_control'/>
<doc f='linux-4.14.y/net/ipv4/ip_sockglue.c' l='329'>/* Special input handler for packets caught by router alert option.
   They are selected only by protocol field, and then processed likely
   local ones; but only if someone wants them! Otherwise, router
   not running rsvpd will kill RSVP.

   It is user level problem, what it will make with them.
   I have no idea, how it will masquearde or NAT them (it is joke, joke :-)),
   but receiver should be enough clever f.e. to forward mtrace requests,
   sent to multicast group to reach destination designated router.
 */</doc>
<def f='linux-4.14.y/include/net/ip.h' l='92' ll='100'/>
<dec f='linux-4.14.y/include/net/ip.h' l='102' type='struct ip_ra_chain *'/>
<size>40</size>
<mbr r='ip_ra_chain::next' o='0' t='struct ip_ra_chain *'/>
<mbr r='ip_ra_chain::sk' o='64' t='struct sock *'/>
<mbr r='ip_ra_chain::rcu' o='192' t='struct callback_head'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='a' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='a' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<use f='linux-4.14.y/net/ipv4/ip_input.c' l='162' u='r' c='ip_call_ra_chain'/>
<def f='linux-4.14.y/net/ipv4/ip_sockglue.c' l='339' type='struct ip_ra_chain *'/>
<use f='linux-4.14.y/net/ipv4/ip_sockglue.c' l='361' u='a' c='ip_ra_control'/>
<doc f='linux-4.14.y/net/ipv4/ip_sockglue.c' l='329'>/* Special input handler for packets caught by router alert option.
   They are selected only by protocol field, and then processed likely
   local ones; but only if someone wants them! Otherwise, router
   not running rsvpd will kill RSVP.

   It is user level problem, what it will make with them.
   I have no idea, how it will masquearde or NAT them (it is joke, joke :-)),
   but receiver should be enough clever f.e. to forward mtrace requests,
   sent to multicast group to reach destination designated router.
 */</doc>
