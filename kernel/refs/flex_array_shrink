<dec f='linux-4.18.y/include/linux/flex_array.h' l='142' type='int flex_array_shrink(struct flex_array * fa)'/>
<doc f='linux-4.18.y/include/linux/flex_array.h' l='135'>/**
 * flex_array_shrink() - Reduces the allocated size of an array.
 * @fa:		array to shrink.
 *
 * Return:	Returns number of pages of memory actually freed.
 *
 */</doc>
<def f='linux-4.18.y/lib/flex_array.c' l='376' ll='397' type='int flex_array_shrink(struct flex_array * fa)'/>
<dec f='linux-4.18.y/lib/flex_array.c' l='398' type='int flex_array_shrink(struct flex_array * )'/>
<use f='linux-4.18.y/lib/flex_array.c' l='398' c='flex_array_shrink'/>
<use f='linux-4.18.y/lib/flex_array.c' l='398' u='a'/>
<use f='linux-4.18.y/lib/flex_array.c' l='398' u='a'/>
<doc f='linux-4.18.y/lib/flex_array.c' l='367'>/**
 * flex_array_shrink - free unused second-level pages
 * @fa:		the flex array to shrink
 *
 * Frees all second-level pages that consist solely of unused
 * elements.  Returns the number of pages freed.
 *
 * Locking must be provided by the caller.
 */</doc>
