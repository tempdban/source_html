<dec f='linux-4.14.y/include/drm/drm_crtc.h' l='646' type='int (*)(struct drm_crtc *, const char *, size_t *)'/>
<offset>1024</offset>
<doc f='linux-4.14.y/include/drm/drm_crtc.h' l='622'>/**
	 * @set_crc_source:
	 *
	 * Changes the source of CRC checksums of frames at the request of
	 * userspace, typically for testing purposes. The sources available are
	 * specific of each driver and a %NULL value indicates that CRC
	 * generation is to be switched off.
	 *
	 * When CRC generation is enabled, the driver should call
	 * drm_crtc_add_crc_entry() at each frame, providing any information
	 * that characterizes the frame contents in the crcN arguments, as
	 * provided from the configured source. Drivers must accept an &quot;auto&quot;
	 * source name that will select a default source for this CRTC.
	 *
	 * Note that &quot;auto&quot; can depend upon the current modeset configuration,
	 * e.g. it could pick an encoder or output specific CRC sampling point.
	 *
	 * This callback is optional if the driver does not support any CRC
	 * generation functionality.
	 *
	 * RETURNS:
	 *
	 * 0 on success or a negative error code on failure.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='180' u='r' c='crtc_crc_open'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='220' u='r' c='crtc_crc_open'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='234' u='r' c='crtc_crc_release'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='321' u='r' c='drm_debugfs_crtc_crc_add'/>
<dec f='linux-4.14.y/include/drm/drm_crtc.h' l='646' type='int (*)(struct drm_crtc *, const char *, size_t *)'/>
<offset>1024</offset>
<doc f='linux-4.14.y/include/drm/drm_crtc.h' l='622'>/**
	 * @set_crc_source:
	 *
	 * Changes the source of CRC checksums of frames at the request of
	 * userspace, typically for testing purposes. The sources available are
	 * specific of each driver and a %NULL value indicates that CRC
	 * generation is to be switched off.
	 *
	 * When CRC generation is enabled, the driver should call
	 * drm_crtc_add_crc_entry() at each frame, providing any information
	 * that characterizes the frame contents in the crcN arguments, as
	 * provided from the configured source. Drivers must accept an &quot;auto&quot;
	 * source name that will select a default source for this CRTC.
	 *
	 * Note that &quot;auto&quot; can depend upon the current modeset configuration,
	 * e.g. it could pick an encoder or output specific CRC sampling point.
	 *
	 * This callback is optional if the driver does not support any CRC
	 * generation functionality.
	 *
	 * RETURNS:
	 *
	 * 0 on success or a negative error code on failure.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='180' u='r' c='crtc_crc_open'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='220' u='r' c='crtc_crc_open'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='234' u='r' c='crtc_crc_release'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='321' u='r' c='drm_debugfs_crtc_crc_add'/>
