<dec f='linux-4.14.y/include/linux/device-mapper.h' l='395' type='int dm_read_arg_group(const struct dm_arg * arg, struct dm_arg_set * arg_set, unsigned int * num_args, char ** error)'/>
<doc f='linux-4.14.y/include/linux/device-mapper.h' l='390'>/*
 * Process the next argument as the start of a group containing between
 * arg-&gt;min and arg-&gt;max further arguments. Either return the size as
 * *num_args or, if invalid, return -EINVAL and set *error.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-cache-target.c' l='2340' u='c' c='parse_features'/>
<use f='linux-4.14.y/drivers/md/dm-cache-target.c' l='2382' u='c' c='parse_policy'/>
<use f='linux-4.14.y/drivers/md/dm-crypt.c' l='2606' u='c' c='crypt_ctr_optional'/>
<use f='linux-4.14.y/drivers/md/dm-mpath.c' l='725' u='c' c='parse_path_selector'/>
<use f='linux-4.14.y/drivers/md/dm-mpath.c' l='919' u='c' c='parse_hw_handler'/>
<use f='linux-4.14.y/drivers/md/dm-mpath.c' l='973' u='c' c='parse_features'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='2978' u='c' c='raid_ctr'/>
<def f='linux-4.14.y/drivers/md/dm-table.c' l='835' ll='839' type='int dm_read_arg_group(const struct dm_arg * arg, struct dm_arg_set * arg_set, unsigned int * value, char ** error)'/>
<dec f='linux-4.14.y/drivers/md/dm-table.c' l='840' type='int dm_read_arg_group(const struct dm_arg * , struct dm_arg_set * , unsigned int * , char ** )'/>
<use f='linux-4.14.y/drivers/md/dm-table.c' l='840' c='dm_read_arg_group'/>
<use f='linux-4.14.y/drivers/md/dm-table.c' l='840' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-table.c' l='840' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-thin.c' l='3061' u='c' c='parse_pool_features'/>
<dec f='linux-4.14.y/include/linux/device-mapper.h' l='395' type='int dm_read_arg_group(const struct dm_arg * arg, struct dm_arg_set * arg_set, unsigned int * num_args, char ** error)'/>
<doc f='linux-4.14.y/include/linux/device-mapper.h' l='390'>/*
 * Process the next argument as the start of a group containing between
 * arg-&gt;min and arg-&gt;max further arguments. Either return the size as
 * *num_args or, if invalid, return -EINVAL and set *error.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-cache-target.c' l='2340' u='c' c='parse_features'/>
<use f='linux-4.14.y/drivers/md/dm-cache-target.c' l='2382' u='c' c='parse_policy'/>
<use f='linux-4.14.y/drivers/md/dm-crypt.c' l='2606' u='c' c='crypt_ctr_optional'/>
<use f='linux-4.14.y/drivers/md/dm-mpath.c' l='725' u='c' c='parse_path_selector'/>
<use f='linux-4.14.y/drivers/md/dm-mpath.c' l='919' u='c' c='parse_hw_handler'/>
<use f='linux-4.14.y/drivers/md/dm-mpath.c' l='973' u='c' c='parse_features'/>
<use f='linux-4.14.y/drivers/md/dm-raid.c' l='2978' u='c' c='raid_ctr'/>
<def f='linux-4.14.y/drivers/md/dm-table.c' l='835' ll='839' type='int dm_read_arg_group(const struct dm_arg * arg, struct dm_arg_set * arg_set, unsigned int * value, char ** error)'/>
<dec f='linux-4.14.y/drivers/md/dm-table.c' l='840' type='int dm_read_arg_group(const struct dm_arg * , struct dm_arg_set * , unsigned int * , char ** )'/>
<use f='linux-4.14.y/drivers/md/dm-table.c' l='840' c='dm_read_arg_group'/>
<use f='linux-4.14.y/drivers/md/dm-table.c' l='840' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-table.c' l='840' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-thin.c' l='3061' u='c' c='parse_pool_features'/>
