<dec f='linux-4.18.y/include/linux/cdev.h' l='33' type='void cdev_device_del(struct cdev * cdev, struct device * dev)'/>
<use f='linux-4.18.y/drivers/input/evdev.c' l='1444' u='c' c='evdev_disconnect'/>
<use f='linux-4.18.y/drivers/input/mousedev.c' l='929' u='c' c='mousedev_destroy'/>
<use f='linux-4.18.y/drivers/rtc/class.c' l='371' u='c' c='rtc_device_unregister'/>
<def f='linux-4.18.y/fs/char_dev.c' l='571' ll='576' type='void cdev_device_del(struct cdev * cdev, struct device * dev)'/>
<dec f='linux-4.18.y/fs/char_dev.c' l='683' type='void cdev_device_del(struct cdev * , struct device * )'/>
<use f='linux-4.18.y/fs/char_dev.c' l='683' c='cdev_device_del'/>
<use f='linux-4.18.y/fs/char_dev.c' l='683' u='a'/>
<use f='linux-4.18.y/fs/char_dev.c' l='683' u='a'/>
<doc f='linux-4.18.y/fs/char_dev.c' l='556'>/**
 * cdev_device_del() - inverse of cdev_device_add
 * @dev: the device structure
 * @cdev: the cdev structure
 *
 * cdev_device_del() is a helper function to call cdev_del and device_del.
 * It should be used whenever cdev_device_add is used.
 *
 * If dev-&gt;devt is not set it will not remove the cdev and will be equivalent
 * to device_del.
 *
 * NOTE: This guarantees that associated sysfs callbacks are not running
 * or runnable, however any cdevs already open will remain and their fops
 * will still be callable even after this function returns.
 */</doc>
