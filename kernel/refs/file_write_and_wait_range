<dec f='linux-4.14.y/include/linux/fs.h' l='2599' type='int file_write_and_wait_range(struct file * file, loff_t start, loff_t end)'/>
<use f='linux-4.14.y/include/linux/fs.h' l='2604' u='c' c='file_write_and_wait'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fb_defio.c' l='72' u='c' c='fb_deferred_io_fsync'/>
<use f='linux-4.14.y/fs/block_dev.c' l='635' u='c' c='blkdev_fsync'/>
<use f='linux-4.14.y/fs/ext4/fsync.c' l='128' u='c' c='ext4_sync_file'/>
<use f='linux-4.14.y/fs/libfs.c' l='977' u='c' c='__generic_file_fsync'/>
<def f='linux-4.14.y/mm/filemap.c' l='649' ll='665' type='int file_write_and_wait_range(struct file * file, loff_t lstart, loff_t lend)'/>
<dec f='linux-4.14.y/mm/filemap.c' l='666' type='int file_write_and_wait_range(struct file * , loff_t , loff_t )'/>
<use f='linux-4.14.y/mm/filemap.c' l='666' c='file_write_and_wait_range'/>
<use f='linux-4.14.y/mm/filemap.c' l='666' u='a'/>
<use f='linux-4.14.y/mm/filemap.c' l='666' u='a'/>
<doc f='linux-4.14.y/mm/filemap.c' l='635'>/**
 * file_write_and_wait_range - write out &amp; wait on a file range
 * @file:	file pointing to address_space with pages
 * @lstart:	offset in bytes where the range starts
 * @lend:	offset in bytes where the range ends (inclusive)
 *
 * Write out and wait upon file offsets lstart-&gt;lend, inclusive.
 *
 * Note that @lend is inclusive (describes the last byte to be written) so
 * that this function can be used to write to the very end-of-file (end = -1).
 *
 * After writing out and waiting on the data, we check and advance the
 * f_wb_err cursor to the latest value, and return any errors detected there.
 */</doc>
<dec f='linux-4.14.y/include/linux/fs.h' l='2599' type='int file_write_and_wait_range(struct file * file, loff_t start, loff_t end)'/>
<use f='linux-4.14.y/include/linux/fs.h' l='2604' u='c' c='file_write_and_wait'/>
<use f='linux-4.14.y/drivers/video/fbdev/core/fb_defio.c' l='72' u='c' c='fb_deferred_io_fsync'/>
<use f='linux-4.14.y/fs/block_dev.c' l='635' u='c' c='blkdev_fsync'/>
<use f='linux-4.14.y/fs/ext4/fsync.c' l='128' u='c' c='ext4_sync_file'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='211' u='c' c='f2fs_do_sync_file'/>
<use f='linux-4.14.y/fs/fuse/file.c' l='460' u='c' c='fuse_fsync_common'/>
<use f='linux-4.14.y/fs/libfs.c' l='977' u='c' c='__generic_file_fsync'/>
<use f='linux-4.14.y/fs/ntfs/dir.c' l='1509' u='c' c='ntfs_dir_fsync'/>
<use f='linux-4.14.y/fs/ntfs/file.c' l='1992' u='c' c='ntfs_file_fsync'/>
<def f='linux-4.14.y/mm/filemap.c' l='649' ll='665' type='int file_write_and_wait_range(struct file * file, loff_t lstart, loff_t lend)'/>
<dec f='linux-4.14.y/mm/filemap.c' l='666' type='int file_write_and_wait_range(struct file * , loff_t , loff_t )'/>
<use f='linux-4.14.y/mm/filemap.c' l='666' c='file_write_and_wait_range'/>
<use f='linux-4.14.y/mm/filemap.c' l='666' u='a'/>
<use f='linux-4.14.y/mm/filemap.c' l='666' u='a'/>
<doc f='linux-4.14.y/mm/filemap.c' l='635'>/**
 * file_write_and_wait_range - write out &amp; wait on a file range
 * @file:	file pointing to address_space with pages
 * @lstart:	offset in bytes where the range starts
 * @lend:	offset in bytes where the range ends (inclusive)
 *
 * Write out and wait upon file offsets lstart-&gt;lend, inclusive.
 *
 * Note that @lend is inclusive (describes the last byte to be written) so
 * that this function can be used to write to the very end-of-file (end = -1).
 *
 * After writing out and waiting on the data, we check and advance the
 * f_wb_err cursor to the latest value, and return any errors detected there.
 */</doc>
