<dec f='linux-4.18.y/include/linux/kgdb.h' l='145' type='void sleeping_thread_to_gdb_regs(unsigned long * gdb_regs, struct task_struct * p)'/>
<doc f='linux-4.18.y/include/linux/kgdb.h' l='132'>/**
 *	sleeping_thread_to_gdb_regs - Convert ptrace regs to GDB regs
 *	@gdb_regs: A pointer to hold the registers in the order GDB wants.
 *	@p: The &amp;struct task_struct of the desired process.
 *
 *	Convert the register values of the sleeping process in @p to
 *	the format that GDB expects.
 *	This function is called when kgdb does not have access to the
 *	&amp;struct pt_regs and therefore it should fill the gdb registers
 *	@gdb_regs with what has	been saved in &amp;struct thread_struct
 *	thread field during switch_to.
 */</doc>
<def f='linux-4.18.y/arch/x86/kernel/kgdb.c' l='159' ll='194' type='void sleeping_thread_to_gdb_regs(unsigned long * gdb_regs, struct task_struct * p)'/>
<doc f='linux-4.18.y/arch/x86/kernel/kgdb.c' l='147'>/**
 *	sleeping_thread_to_gdb_regs - Convert ptrace regs to GDB regs
 *	@gdb_regs: A pointer to hold the registers in the order GDB wants.
 *	@p: The &amp;struct task_struct of the desired process.
 *
 *	Convert the register values of the sleeping process in @p to
 *	the format that GDB expects.
 *	This function is called when kgdb does not have access to the
 *	&amp;struct pt_regs and therefore it should fill the gdb registers
 *	@gdb_regs with what has	been saved in &amp;struct thread_struct
 *	thread field during switch_to.
 */</doc>
<use f='linux-4.18.y/kernel/debug/gdbstub.c' l='533' u='c' c='gdb_get_regs_helper'/>
