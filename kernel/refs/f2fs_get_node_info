<dec f='linux-4.18.y/fs/f2fs/f2fs.h' l='2803' type='void f2fs_get_node_info(struct f2fs_sb_info * sbi, nid_t nid, struct node_info * ni)'/>
<use f='linux-4.18.y/fs/f2fs/checkpoint.c' l='603' u='c' c='recover_orphan_inode'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='888' u='c' c='__allocate_data_block'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='1285' u='c' c='f2fs_xattr_fiemap'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='1312' u='c' c='f2fs_xattr_fiemap'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='1066' u='c' c='__clone_blkaddrs'/>
<use f='linux-4.18.y/fs/f2fs/gc.c' l='520' u='c' c='gc_node_segment'/>
<use f='linux-4.18.y/fs/f2fs/gc.c' l='579' u='c' c='is_alive'/>
<use f='linux-4.18.y/fs/f2fs/gc.c' l='658' u='c' c='move_data_block'/>
<use f='linux-4.18.y/fs/f2fs/inline.c' l='693' u='c' c='f2fs_inline_data_fiemap'/>
<use f='linux-4.18.y/fs/f2fs/inode.c' l='662' u='c' c='f2fs_handle_failed_inode'/>
<def f='linux-4.18.y/fs/f2fs/node.c' l='422' ll='476' type='void f2fs_get_node_info(struct f2fs_sb_info * sbi, nid_t nid, struct node_info * ni)'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='730' u='c' c='truncate_node'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='1095' u='c' c='f2fs_new_node_page'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='1147' u='c' c='read_node_page'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='1388' u='c' c='__write_node_page'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='2306' u='c' c='f2fs_recover_xattr_data'/>
<use f='linux-4.18.y/fs/f2fs/node.c' l='2342' u='c' c='f2fs_recover_inode_page'/>
<doc f='linux-4.18.y/fs/f2fs/node.c' l='419'>/*
 * This function always returns success
 */</doc>
<use f='linux-4.18.y/fs/f2fs/recovery.c' l='474' u='c' c='do_recover_data'/>
<use f='linux-4.18.y/fs/f2fs/segment.c' l='253' u='c' c='__revoke_inmem_pages'/>
<use f='linux-4.18.y/fs/f2fs/segment.c' l='2856' u='c' c='f2fs_outplace_write_data'/>
