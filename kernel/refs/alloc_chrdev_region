<dec f='linux-4.18.y/include/linux/fs.h' l='2549' type='int alloc_chrdev_region(dev_t * , unsigned int , unsigned int , const char * )'/>
<use f='linux-4.18.y/block/bsg.c' l='997' u='c' c='bsg_init'/>
<use f='linux-4.18.y/drivers/dax/super.c' l='648' u='c' c='dax_fs_init'/>
<use f='linux-4.18.y/drivers/net/tap.c' l='1266' u='c' c='tap_create_cdev'/>
<use f='linux-4.18.y/drivers/pps/pps.c' l='472' u='c' c='pps_init'/>
<use f='linux-4.18.y/drivers/ptp/ptp_clock.c' l='403' u='c' c='ptp_init'/>
<use f='linux-4.18.y/drivers/rtc/rtc-dev.c' l='474' u='c' c='rtc_dev_init'/>
<use f='linux-4.18.y/drivers/tty/tty_io.c' l='3165' u='c' c='tty_register_driver'/>
<use f='linux-4.18.y/drivers/uio/uio.c' l='832' u='c' c='uio_major_init'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_hid.c' l='1148' u='c' c='ghid_setup'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_printer.c' l='1476' u='c' c='gprinter_setup'/>
<use f='linux-4.18.y/drivers/vfio/vfio.c' l='2222' u='c' c='vfio_init'/>
<def f='linux-4.18.y/fs/char_dev.c' l='239' ll='248' type='int alloc_chrdev_region(dev_t * dev, unsigned int baseminor, unsigned int count, const char * name)'/>
<dec f='linux-4.18.y/fs/char_dev.c' l='676' type='int alloc_chrdev_region(dev_t * , unsigned int , unsigned int , const char * )'/>
<use f='linux-4.18.y/fs/char_dev.c' l='676' c='alloc_chrdev_region'/>
<use f='linux-4.18.y/fs/char_dev.c' l='676' u='a'/>
<use f='linux-4.18.y/fs/char_dev.c' l='676' u='a'/>
<doc f='linux-4.18.y/fs/char_dev.c' l='228'>/**
 * alloc_chrdev_region() - register a range of char device numbers
 * @dev: output parameter for first assigned number
 * @baseminor: first of the requested range of minor numbers
 * @count: the number of minor numbers required
 * @name: the name of the associated device or driver
 *
 * Allocates a range of char device numbers.  The major number will be
 * chosen dynamically, and returned (along with the first minor number)
 * in @dev.  Returns zero or a negative error code.
 */</doc>
<use f='linux-4.18.y/fs/fuse/cuse.c' l='339' u='c' c='cuse_process_init_reply'/>
