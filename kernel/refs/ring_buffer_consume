<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='122' type='struct ring_buffer_event * ring_buffer_consume(struct ring_buffer * buffer, int cpu, u64 * ts, unsigned long * lost_events)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3952' ll='3988' type='struct ring_buffer_event * ring_buffer_consume(struct ring_buffer * buffer, int cpu, u64 * ts, unsigned long * lost_events)'/>
<dec f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' type='struct ring_buffer_event * ring_buffer_consume(struct ring_buffer * , int , u64 * , unsigned long * )'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' c='ring_buffer_consume'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' u='a'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' u='a'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3941'>/**
 * ring_buffer_consume - return an event and consume it
 * @buffer: The ring buffer to get the next event from
 * @cpu: the cpu to read the buffer from
 * @ts: a variable to store the timestamp (may be NULL)
 * @lost_events: a variable to store if events were lost (may be NULL)
 *
 * Returns the next event in the ring buffer, and that event is consumed.
 * Meaning, that sequential reads will keep returning a different event,
 * and eventually empty the ring buffer if the producer is slower.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3162' u='c' c='trace_consume'/>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='660' u='c' c='get_return_for_leaf'/>
<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='122' type='struct ring_buffer_event * ring_buffer_consume(struct ring_buffer * buffer, int cpu, u64 * ts, unsigned long * lost_events)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3952' ll='3988' type='struct ring_buffer_event * ring_buffer_consume(struct ring_buffer * buffer, int cpu, u64 * ts, unsigned long * lost_events)'/>
<dec f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' type='struct ring_buffer_event * ring_buffer_consume(struct ring_buffer * , int , u64 * , unsigned long * )'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' c='ring_buffer_consume'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' u='a'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3989' u='a'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3941'>/**
 * ring_buffer_consume - return an event and consume it
 * @buffer: The ring buffer to get the next event from
 * @cpu: the cpu to read the buffer from
 * @ts: a variable to store the timestamp (may be NULL)
 * @lost_events: a variable to store if events were lost (may be NULL)
 *
 * Returns the next event in the ring buffer, and that event is consumed.
 * Meaning, that sequential reads will keep returning a different event,
 * and eventually empty the ring buffer if the producer is slower.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3162' u='c' c='trace_consume'/>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='660' u='c' c='get_return_for_leaf'/>
