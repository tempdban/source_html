<dec f='linux-4.18.y/include/drm/drm_drv.h' l='88' type='int (*)(struct drm_device *, unsigned long)'/>
<offset>0</offset>
<doc f='linux-4.18.y/include/drm/drm_drv.h' l='71'>/**
	 * @load:
	 *
	 * Backward-compatible driver callback to complete
	 * initialization steps after the driver is registered.  For
	 * this reason, may suffer from race conditions and its use is
	 * deprecated for new drivers.  It is therefore only supported
	 * for existing drivers not yet converted to the new scheme.
	 * See drm_dev_init() and drm_dev_register() for proper and
	 * race-free way to set up a &amp;struct drm_device.
	 *
	 * This is deprecated, do not use!
	 *
	 * Returns:
	 *
	 * Zero on success, non-zero value on failure.
	 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/bochs/bochs_drv.c' l='85' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_drv.c' l='133' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='809' u='r' c='drm_dev_register'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='810' u='r' c='drm_dev_register'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='118' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1551' u='w'/>
