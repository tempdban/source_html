<dec f='linux-4.18.y/drivers/net/sfc/sfc.h' l='229' type='rte_spinlock_t'/>
<offset>3584</offset>
<doc f='linux-4.18.y/drivers/net/sfc/sfc.h' l='208'>/*
	 * The lock is used to serialise management event queue polling
	 * which can be done from different context. Also the lock
	 * guarantees that mgmt_evq_running is preserved while the lock
	 * is held. It is used to serialise polling and start/stop
	 * operations.
	 *
	 * Locks which may be held when the lock is acquired:
	 *  - adapter lock, when:
	 *    - device start/stop to change mgmt_evq_running
	 *    - any control operations in client side MCDI proxy handling to
	 *	poll management event queue waiting for proxy response
	 *  - MCDI lock, when:
	 *    - any control operations in client side MCDI proxy handling to
	 *	poll management event queue waiting for proxy response
	 *
	 * Locks which are acquired with the lock held:
	 *  - nic_lock, when:
	 *    - MC event processing on management event queue polling
	 *	(e.g. MC REBOOT or BADASSERT events)
	 */</doc>
<use f='linux-4.18.y/drivers/net/sfc/sfc_ev.c' l='563' u='a' c='sfc_ev_mgmt_qpoll'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_ev.c' l='567' u='a' c='sfc_ev_mgmt_qpoll'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_ev.c' l='741' u='a' c='sfc_ev_start'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_ev.c' l='743' u='a' c='sfc_ev_start'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_ev.c' l='784' u='a' c='sfc_ev_stop'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_ev.c' l='786' u='a' c='sfc_ev_stop'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_ev.c' l='890' u='a' c='sfc_ev_attach'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_intr.c' l='34' u='a' c='sfc_intr_handle_mgmt_evq'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_intr.c' l='48' u='a' c='sfc_intr_handle_mgmt_evq'/>
