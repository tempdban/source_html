<dec f='linux-4.14.y/include/drm/drm_property.h' l='265' type='struct drm_property_blob * drm_property_create_blob(struct drm_device * dev, size_t length, const void * data)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='356' u='c' c='drm_atomic_set_mode_for_crtc'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='3585' u='c' c='drm_atomic_helper_legacy_gamma_set'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1279' u='c' c='setcmap_new_gamma_lut'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='103' u='c' c='create_in_format_blob'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='536' ll='572' type='struct drm_property_blob * drm_property_create_blob(struct drm_device * dev, size_t length, const void * data)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='573' type='struct drm_property_blob * drm_property_create_blob(struct drm_device * , size_t , const void * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='573' c='drm_property_create_blob'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='573' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='573' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='687' u='c' c='drm_property_replace_global_blob'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='774' u='c' c='drm_mode_createblob_ioctl'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='522'>/**
 * drm_property_create_blob - Create new blob property
 * @dev: DRM device to create property for
 * @length: Length to allocate for blob data
 * @data: If specified, copies data into blob
 *
 * Creates a new blob property for a specified DRM device, optionally
 * copying data. Note that blob properties are meant to be invariant, hence the
 * data must be filled out before the blob is used as the value of any property.
 *
 * Returns:
 * New blob property with a single reference on success, or an ERR_PTR
 * value on failure.
 */</doc>
