<dec f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='123' type='void drm_modeset_unlock_all(struct drm_device * dev)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc.c' l='140' u='c' c='drm_crtc_force_disable_all'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='219' u='c' c='drm_helper_disable_unused_functions'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='983' u='c' c='drm_helper_resume_force_mode'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='470' u='c' c='restore_fbdev_mode_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='624' u='c' c='dpms_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1262' u='c' c='setcmap_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='1675' u='c' c='pan_display_legacy'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='879' u='c' c='legacy_remove_fb'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mode_object.c' l='379' u='c' c='drm_mode_obj_get_properties_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mode_object.c' l='421' u='c' c='set_property_legacy'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='138' ll='153' type='void drm_modeset_unlock_all(struct drm_device * dev)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='154' type='void drm_modeset_unlock_all(struct drm_device * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='154' c='drm_modeset_unlock_all'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='154' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='154' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='124'>/**
 * drm_modeset_unlock_all - drop all modeset locks
 * @dev: DRM device
 *
 * This function drops all modeset locks taken by a previous call to the
 * drm_modeset_lock_all() function.
 *
 * This function is deprecated. It uses the lock acquisition context stored
 * in &amp;drm_device.mode_config. This facilitates conversion of existing
 * code because it removes the need to manually deal with the acquisition
 * context, but it is also brittle because the context is global and care must
 * be taken not to nest calls. New code should pass the acquisition context
 * directly to the drm_modeset_drop_locks() function.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='185' u='c' c='qxl_display_read_client_monitors_config'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='335' u='c' c='qxl_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='353' u='c' c='qxl_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='684' u='c' c='vmw_fb_set_par'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='745' u='c' c='vmw_fb_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='751' u='c' c='vmw_fb_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='889' u='c' c='vmw_fb_off'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c' l='321' u='c' c='vmw_present_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c' l='398' u='c' c='vmw_present_readback_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='247' u='c' c='vmw_kms_legacy_hotspot_clear'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='892' u='c' c='vmw_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='919' u='c' c='vmw_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='1093' u='c' c='vmw_framebuffer_dmabuf_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='1132' u='c' c='vmw_framebuffer_dmabuf_dirty'/>
