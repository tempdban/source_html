<dec f='linux-4.14.y/include/linux/netdevice.h' l='3930' type='int netdev_upper_dev_link(struct net_device * dev, struct net_device * upper_dev)'/>
<use f='linux-4.14.y/drivers/net/macvlan.c' l='1433' u='c' c='macvlan_common_newlink'/>
<def f='linux-4.14.y/net/core/dev.c' l='6318' ll='6322' type='int netdev_upper_dev_link(struct net_device * dev, struct net_device * upper_dev)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='6323' type='int netdev_upper_dev_link(struct net_device * , struct net_device * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='6323' c='netdev_upper_dev_link'/>
<use f='linux-4.14.y/net/core/dev.c' l='6323' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='6323' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='6308'>/**
 * netdev_upper_dev_link - Add a link to the upper device
 * @dev: device
 * @upper_dev: new upper device
 *
 * Adds a link to device which is upper to this one. The caller must hold
 * the RTNL lock. On a failure a negative errno code is returned.
 * On success the reference counts are adjusted and the function
 * returns zero.
 */</doc>
