<def f='linux-4.18.y/arch/x86/include/asm/pgtable-invert.h' l='16' ll='19' type='bool __pte_needs_invert(u64 val)'/>
<use f='linux-4.18.y/arch/x86/include/asm/pgtable-invert.h' l='24' u='c' c='protnone_mask'/>
<use f='linux-4.18.y/arch/x86/include/asm/pgtable-invert.h' l='34' u='c' c='flip_protnone_guard'/>
<use f='linux-4.18.y/arch/x86/include/asm/pgtable-invert.h' l='34' u='c' c='flip_protnone_guard'/>
<doc f='linux-4.18.y/arch/x86/include/asm/pgtable-invert.h' l='7'>/*
 * A clear pte value is special, and doesn&apos;t get inverted.
 *
 * Note that even users that only pass a pgprot_t (rather
 * than a full pte) won&apos;t trigger the special zero case,
 * because even PAGE_NONE has _PAGE_PROTNONE | _PAGE_ACCESSED
 * set. So the all zero case really is limited to just the
 * cleared page table entry case.
 */</doc>
<use f='linux-4.18.y/arch/x86/mm/mmap.c' l='255' u='c' c='pfn_modify_allowed'/>
