<dec f='linux-4.18.y/include/linux/completion.h' l='105' type='int wait_for_completion_interruptible(struct completion * x)'/>
<use f='linux-4.18.y/crypto/algboss.c' l='196' u='c' c='cryptomgr_schedule_probe'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2510' u='c' c='drm_atomic_helper_swap_state'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2521' u='c' c='drm_atomic_helper_swap_state'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2532' u='c' c='drm_atomic_helper_swap_state'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_fs.c' l='296' u='c' c='__ffs_ep0_queue_wait'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_fs.c' l='1004' u='c' c='ffs_epfile_io'/>
<use f='linux-4.18.y/drivers/usb/storage/usb.c' l='306' u='c' c='usb_stor_control_thread'/>
<def f='linux-4.18.y/kernel/sched/completion.c' l='202' ll='208' type='int wait_for_completion_interruptible(struct completion * x)'/>
<dec f='linux-4.18.y/kernel/sched/completion.c' l='209' type='int wait_for_completion_interruptible(struct completion * )'/>
<use f='linux-4.18.y/kernel/sched/completion.c' l='209' c='wait_for_completion_interruptible'/>
<use f='linux-4.18.y/kernel/sched/completion.c' l='209' u='a'/>
<use f='linux-4.18.y/kernel/sched/completion.c' l='209' u='a'/>
<doc f='linux-4.18.y/kernel/sched/completion.c' l='193'>/**
 * wait_for_completion_interruptible: - waits for completion of a task (w/intr)
 * @x:  holds the state of this particular completion
 *
 * This waits for completion of a specific task to be signaled. It is
 * interruptible.
 *
 * Return: -ERESTARTSYS if interrupted, 0 if completed.
 */</doc>
