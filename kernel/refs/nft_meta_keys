<def f='linux-4.14.y/include/uapi/linux/netfilter/nf_tables.h' l='781' ll='807'/>
<doc f='linux-4.14.y/include/uapi/linux/netfilter/nf_tables.h' l='752'>/**
 * enum nft_meta_keys - nf_tables meta expression keys
 *
 * @NFT_META_LEN: packet length (skb-&gt;len)
 * @NFT_META_PROTOCOL: packet ethertype protocol (skb-&gt;protocol), invalid in OUTPUT
 * @NFT_META_PRIORITY: packet priority (skb-&gt;priority)
 * @NFT_META_MARK: packet mark (skb-&gt;mark)
 * @NFT_META_IIF: packet input interface index (dev-&gt;ifindex)
 * @NFT_META_OIF: packet output interface index (dev-&gt;ifindex)
 * @NFT_META_IIFNAME: packet input interface name (dev-&gt;name)
 * @NFT_META_OIFNAME: packet output interface name (dev-&gt;name)
 * @NFT_META_IIFTYPE: packet input interface type (dev-&gt;type)
 * @NFT_META_OIFTYPE: packet output interface type (dev-&gt;type)
 * @NFT_META_SKUID: originating socket UID (fsuid)
 * @NFT_META_SKGID: originating socket GID (fsgid)
 * @NFT_META_NFTRACE: packet nftrace bit
 * @NFT_META_RTCLASSID: realm value of packet&apos;s route (skb-&gt;dst-&gt;tclassid)
 * @NFT_META_SECMARK: packet secmark (skb-&gt;secmark)
 * @NFT_META_NFPROTO: netfilter protocol
 * @NFT_META_L4PROTO: layer 4 protocol number
 * @NFT_META_BRI_IIFNAME: packet input bridge interface name
 * @NFT_META_BRI_OIFNAME: packet output bridge interface name
 * @NFT_META_PKTTYPE: packet type (skb-&gt;pkt_type), special handling for loopback
 * @NFT_META_CPU: cpu id through smp_processor_id()
 * @NFT_META_IIFGROUP: packet input interface group
 * @NFT_META_OIFGROUP: packet output interface group
 * @NFT_META_CGROUP: socket control group (skb-&gt;sk-&gt;sk_classid)
 * @NFT_META_PRANDOM: a 32bit pseudo-random number
 */</doc>
