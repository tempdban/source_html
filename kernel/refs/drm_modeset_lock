<def f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='72' ll='83'/>
<dec f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='112' type='int drm_modeset_lock(struct drm_modeset_lock * lock, struct drm_modeset_acquire_ctx * ctx)'/>
<size>56</size>
<doc f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='64'>/**
 * struct drm_modeset_lock - used for locking modeset resources.
 * @mutex: resource locking
 * @head: used to hold it&apos;s place on &amp;drm_atomi_state.locked list when
 *    part of an atomic update
 *
 * Used for locking CRTCs and other modeset resources.
 */</doc>
<mbr r='drm_modeset_lock::mutex' o='0' t='struct ww_mutex'/>
<mbr r='drm_modeset_lock::head' o='320' t='struct list_head'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='292' u='c' c='drm_atomic_get_crtc_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='679' u='c' c='drm_atomic_get_plane_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1088' u='c' c='drm_atomic_get_connector_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1531' u='c' c='drm_atomic_add_affected_connectors'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1754' u='c' c='__drm_state_dump'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1762' u='c' c='__drm_state_dump'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1770' u='c' c='__drm_state_dump'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1855' u='c' c='drm_atomic_connector_commit_dpms'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2511' u='c' c='update_output_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_color_mgmt.c' l='319' u='c' c='drm_mode_gamma_get_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='1209' u='c' c='drm_mode_connector_set_link_status_property'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='1361' u='c' c='drm_mode_getconnector'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc.c' l='411' u='c' c='drm_mode_getcrtc'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc.c' l='425' u='c' c='drm_mode_getcrtc'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_encoder.c' l='227' u='c' c='drm_mode_getencoder'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='536' u='c' c='drm_fb_helper_is_bound'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='330' ll='338' type='int drm_modeset_lock(struct drm_modeset_lock * lock, struct drm_modeset_acquire_ctx * ctx)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' type='int drm_modeset_lock(struct drm_modeset_lock * , struct drm_modeset_acquire_ctx * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' c='drm_modeset_lock'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='394' u='c' c='drm_modeset_lock_all_ctx'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='399' u='c' c='drm_modeset_lock_all_ctx'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='405' u='c' c='drm_modeset_lock_all_ctx'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='316'>/**
 * drm_modeset_lock - take modeset lock
 * @lock: lock to take
 * @ctx: acquire ctx
 *
 * If @ctx is not NULL, then its ww acquire context is used and the
 * lock will be tracked by the context and can be released by calling
 * drm_modeset_drop_locks().  If -EDEADLK is returned, this means a
 * deadlock scenario has been detected and it is an error to attempt
 * to take any more locks without first calling drm_modeset_backoff().
 *
 * If @ctx is NULL then the function call behaves like a normal,
 * non-nesting mutex_lock() call.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='520' u='c' c='drm_mode_getplane'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='839' u='c' c='drm_mode_cursor_common'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='847' u='c' c='drm_mode_cursor_common'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='990' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='993' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='274' u='c' c='drm_helper_probe_detect_ctx'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='320' u='c' c='drm_helper_probe_detect'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='414' u='c' c='drm_helper_probe_single_connector_modes'/>
<def f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='72' ll='83'/>
<dec f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='112' type='int drm_modeset_lock(struct drm_modeset_lock * lock, struct drm_modeset_acquire_ctx * ctx)'/>
<size>56</size>
<doc f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='64'>/**
 * struct drm_modeset_lock - used for locking modeset resources.
 * @mutex: resource locking
 * @head: used to hold it&apos;s place on &amp;drm_atomi_state.locked list when
 *    part of an atomic update
 *
 * Used for locking CRTCs and other modeset resources.
 */</doc>
<mbr r='drm_modeset_lock::mutex' o='0' t='struct ww_mutex'/>
<mbr r='drm_modeset_lock::head' o='320' t='struct list_head'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='292' u='c' c='drm_atomic_get_crtc_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='679' u='c' c='drm_atomic_get_plane_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1088' u='c' c='drm_atomic_get_connector_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1531' u='c' c='drm_atomic_add_affected_connectors'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1754' u='c' c='__drm_state_dump'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1762' u='c' c='__drm_state_dump'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1770' u='c' c='__drm_state_dump'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1855' u='c' c='drm_atomic_connector_commit_dpms'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2511' u='c' c='update_output_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_color_mgmt.c' l='319' u='c' c='drm_mode_gamma_get_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='1209' u='c' c='drm_mode_connector_set_link_status_property'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='1361' u='c' c='drm_mode_getconnector'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc.c' l='411' u='c' c='drm_mode_getcrtc'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc.c' l='425' u='c' c='drm_mode_getcrtc'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_encoder.c' l='227' u='c' c='drm_mode_getencoder'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='536' u='c' c='drm_fb_helper_is_bound'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='330' ll='338' type='int drm_modeset_lock(struct drm_modeset_lock * lock, struct drm_modeset_acquire_ctx * ctx)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' type='int drm_modeset_lock(struct drm_modeset_lock * , struct drm_modeset_acquire_ctx * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' c='drm_modeset_lock'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='339' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='394' u='c' c='drm_modeset_lock_all_ctx'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='399' u='c' c='drm_modeset_lock_all_ctx'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='405' u='c' c='drm_modeset_lock_all_ctx'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_modeset_lock.c' l='316'>/**
 * drm_modeset_lock - take modeset lock
 * @lock: lock to take
 * @ctx: acquire ctx
 *
 * If @ctx is not NULL, then its ww acquire context is used and the
 * lock will be tracked by the context and can be released by calling
 * drm_modeset_drop_locks().  If -EDEADLK is returned, this means a
 * deadlock scenario has been detected and it is an error to attempt
 * to take any more locks without first calling drm_modeset_backoff().
 *
 * If @ctx is NULL then the function call behaves like a normal,
 * non-nesting mutex_lock() call.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='520' u='c' c='drm_mode_getplane'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='839' u='c' c='drm_mode_cursor_common'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='847' u='c' c='drm_mode_cursor_common'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='990' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='993' u='c' c='drm_mode_page_flip_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='274' u='c' c='drm_helper_probe_detect_ctx'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='320' u='c' c='drm_helper_probe_detect'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='414' u='c' c='drm_helper_probe_single_connector_modes'/>
