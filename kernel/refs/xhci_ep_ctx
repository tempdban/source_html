<def f='linux-4.14.y/drivers/usb/host/xhci.h' l='702' ll='709'/>
<size>32</size>
<doc f='linux-4.14.y/drivers/usb/host/xhci.h' l='684'>/**
 * struct xhci_ep_ctx
 * @ep_info:	endpoint state, streams, mult, and interval information.
 * @ep_info2:	information on endpoint type, max packet size, max burst size,
 * 		error count, and whether the HC will force an event for all
 * 		transactions.
 * @deq:	64-bit ring dequeue pointer address.  If the endpoint only
 * 		defines one stream, this points to the endpoint transfer ring.
 * 		Otherwise, it points to a stream context array, which has a
 * 		ring pointer for each flow.
 * @tx_info:
 * 		Average TRB lengths for the endpoint ring and
 * 		max payload within an Endpoint Service Interval Time (ESIT).
 *
 * Endpoint Context - section 6.2.1.2.  This assumes the HC uses 32-byte context
 * structures.  If the HC uses 64-byte contexts, there is an additional 32 bytes
 * reserved at the end of the endpoint context for HC internal use.
 */</doc>
<mbr r='xhci_ep_ctx::ep_info' o='0' t='__le32'/>
<mbr r='xhci_ep_ctx::ep_info2' o='32' t='__le32'/>
<mbr r='xhci_ep_ctx::deq' o='64' t='__le64'/>
<mbr r='xhci_ep_ctx::tx_info' o='128' t='__le32'/>
<mbr r='xhci_ep_ctx::reserved' o='160' t='__le32 [3]'/>
