<def f='linux-4.14.y/include/linux/dmaengine.h' l='158' ll='169'/>
<size>40</size>
<doc f='linux-4.14.y/include/linux/dmaengine.h' l='140'>/**
 * struct dma_interleaved_template - Template to convey DMAC the transfer pattern
 *	 and attributes.
 * @src_start: Bus address of source for the first chunk.
 * @dst_start: Bus address of destination for the first chunk.
 * @dir: Specifies the type of Source and Destination.
 * @src_inc: If the source address increments after reading from it.
 * @dst_inc: If the destination address increments after writing to it.
 * @src_sgl: If the &apos;icg&apos; of sgl[] applies to Source (scattered read).
 *		Otherwise, source is read contiguously (icg ignored).
 *		Ignored if src_inc is false.
 * @dst_sgl: If the &apos;icg&apos; of sgl[] applies to Destination (scattered write).
 *		Otherwise, destination is filled contiguously (icg ignored).
 *		Ignored if dst_inc is false.
 * @numf: Number of frames in this template.
 * @frame_size: Number of chunks in a frame i.e, size of sgl[].
 * @sgl: Array of {chunk,icg} pairs that make up a frame.
 */</doc>
<mbr r='dma_interleaved_template::src_start' o='0' t='dma_addr_t'/>
<mbr r='dma_interleaved_template::dst_start' o='64' t='dma_addr_t'/>
<mbr r='dma_interleaved_template::dir' o='128' t='enum dma_transfer_direction'/>
<mbr r='dma_interleaved_template::src_inc' o='160' t='bool'/>
<mbr r='dma_interleaved_template::dst_inc' o='168' t='bool'/>
<mbr r='dma_interleaved_template::src_sgl' o='176' t='bool'/>
<mbr r='dma_interleaved_template::dst_sgl' o='184' t='bool'/>
<mbr r='dma_interleaved_template::numf' o='192' t='size_t'/>
<mbr r='dma_interleaved_template::frame_size' o='256' t='size_t'/>
<mbr r='dma_interleaved_template::sgl' o='320' t='struct data_chunk [0]'/>
