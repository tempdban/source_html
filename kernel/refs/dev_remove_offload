<dec f='linux-4.14.y/include/linux/netdevice.h' l='2405' type='void dev_remove_offload(struct packet_offload * po)'/>
<def f='linux-4.14.y/net/core/dev.c' l='540' ll='545' type='void dev_remove_offload(struct packet_offload * po)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='546' type='void dev_remove_offload(struct packet_offload * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='546' c='dev_remove_offload'/>
<use f='linux-4.14.y/net/core/dev.c' l='546' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='546' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='528'>/**
 *	dev_remove_offload	 - remove packet offload handler
 *	@po: packet offload declaration
 *
 *	Remove a packet offload handler that was previously added to the kernel
 *	offload handlers by dev_add_offload(). The passed &amp;offload_type is
 *	removed from the kernel lists and can be freed or reused once this
 *	function returns.
 *
 *	This call sleeps to guarantee that no CPU is looking at the packet
 *	type after return.
 */</doc>
<use f='linux-4.14.y/net/mpls/mpls_gso.c' l='101' u='c' c='mpls_gso_exit'/>
<use f='linux-4.14.y/net/mpls/mpls_gso.c' l='102' u='c' c='mpls_gso_exit'/>
