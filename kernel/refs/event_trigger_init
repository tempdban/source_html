<dec f='linux-4.14.y/kernel/trace/trace.h' l='1528' type='int event_trigger_init(struct event_trigger_ops * ops, struct event_trigger_data * data)'/>
<def f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='417' ll='422' type='int event_trigger_init(struct event_trigger_ops * ops, struct event_trigger_data * data)'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='980'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='980'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='987'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='987'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='994'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='994'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1001'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1001'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1170'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1170'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1177'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1177'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1293'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1293'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1300'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1300'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1307'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1307'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1314'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1314'/>
<doc f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='405'>/**
 * event_trigger_init - Generic event_trigger_ops @init implementation
 * @ops: The trigger ops associated with the trigger
 * @data: Trigger-specific data
 *
 * Common implementation of event trigger initialization.
 *
 * Usually used directly as the @init method in event trigger
 * implementations.
 *
 * Return: 0 on success, errno otherwise
 */</doc>
<dec f='linux-4.14.y/kernel/trace/trace.h' l='1528' type='int event_trigger_init(struct event_trigger_ops * ops, struct event_trigger_data * data)'/>
<def f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='417' ll='422' type='int event_trigger_init(struct event_trigger_ops * ops, struct event_trigger_data * data)'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='980'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='980'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='987'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='987'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='994'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='994'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1001'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1001'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1170'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1170'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1177'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1177'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1293'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1293'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1300'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1300'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1307'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1307'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1314'/>
<use f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='1314'/>
<doc f='linux-4.14.y/kernel/trace/trace_events_trigger.c' l='405'>/**
 * event_trigger_init - Generic event_trigger_ops @init implementation
 * @ops: The trigger ops associated with the trigger
 * @data: Trigger-specific data
 *
 * Common implementation of event trigger initialization.
 *
 * Usually used directly as the @init method in event trigger
 * implementations.
 *
 * Return: 0 on success, errno otherwise
 */</doc>
