<def f='linux-4.18.y/include/linux/usb/tcpm.h' l='76' ll='94'/>
<size>72</size>
<doc f='linux-4.18.y/include/linux/usb/tcpm.h' l='58'>/**
 * struct tcpc_config - Port configuration
 * @src_pdo:	PDO parameters sent to port partner as response to
 *		PD_CTRL_GET_SOURCE_CAP message
 * @nr_src_pdo:	Number of entries in @src_pdo
 * @snk_pdo:	PDO parameters sent to partner as response to
 *		PD_CTRL_GET_SINK_CAP message
 * @nr_snk_pdo:	Number of entries in @snk_pdo
 * @operating_snk_mw:
 *		Required operating sink power in mW
 * @type:	Port type (TYPEC_PORT_DFP, TYPEC_PORT_UFP, or
 *		TYPEC_PORT_DRP)
 * @default_role:
 *		Default port role (TYPEC_SINK or TYPEC_SOURCE).
 *		Set to TYPEC_NO_PREFERRED_ROLE if no default role.
 * @try_role_hw:True if try.{Src,Snk} is implemented in hardware
 * @alt_modes:	List of supported alternate modes
 */</doc>
<mbr r='tcpc_config::src_pdo' o='0' t='const u32 *'/>
<mbr r='tcpc_config::nr_src_pdo' o='64' t='unsigned int'/>
<mbr r='tcpc_config::snk_pdo' o='128' t='const u32 *'/>
<mbr r='tcpc_config::nr_snk_pdo' o='192' t='unsigned int'/>
<mbr r='tcpc_config::snk_vdo' o='256' t='const u32 *'/>
<mbr r='tcpc_config::nr_snk_vdo' o='320' t='unsigned int'/>
<mbr r='tcpc_config::operating_snk_mw' o='352' t='unsigned int'/>
<mbr r='tcpc_config::type' o='384' t='enum typec_port_type'/>
<mbr r='tcpc_config::data' o='416' t='enum typec_port_data'/>
<mbr r='tcpc_config::default_role' o='448' t='enum typec_role'/>
<mbr r='tcpc_config::try_role_hw' o='480' t='bool'/>
<mbr r='tcpc_config::alt_modes' o='512' t='const struct typec_altmode_desc *'/>
