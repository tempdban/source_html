<dec f='linux-4.18.y/include/linux/usb/gadget.h' l='781' type='struct usb_descriptor_header ** usb_copy_descriptors(struct usb_descriptor_header ** )'/>
<doc f='linux-4.18.y/include/linux/usb/gadget.h' l='780'>/* copy a NULL-terminated vector of descriptors */</doc>
<def f='linux-4.18.y/drivers/usb/gadget/config.c' l='121' ll='156' type='struct usb_descriptor_header ** usb_copy_descriptors(struct usb_descriptor_header ** src)'/>
<dec f='linux-4.18.y/drivers/usb/gadget/config.c' l='157' type='struct usb_descriptor_header ** usb_copy_descriptors(struct usb_descriptor_header ** )'/>
<use f='linux-4.18.y/drivers/usb/gadget/config.c' l='157' c='usb_copy_descriptors'/>
<use f='linux-4.18.y/drivers/usb/gadget/config.c' l='157' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/config.c' l='157' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/config.c' l='168' u='c' c='usb_assign_descriptors'/>
<use f='linux-4.18.y/drivers/usb/gadget/config.c' l='173' u='c' c='usb_assign_descriptors'/>
<use f='linux-4.18.y/drivers/usb/gadget/config.c' l='178' u='c' c='usb_assign_descriptors'/>
<use f='linux-4.18.y/drivers/usb/gadget/config.c' l='183' u='c' c='usb_assign_descriptors'/>
<doc f='linux-4.18.y/drivers/usb/gadget/config.c' l='109'>/**
 * usb_copy_descriptors - copy a vector of USB descriptors
 * @src: null-terminated vector to copy
 * Context: initialization code, which may sleep
 *
 * This makes a copy of a vector of USB descriptors.  Its primary use
 * is to support usb_function objects which can have multiple copies,
 * each needing different descriptors.  Functions may have static
 * tables of descriptors, which are used as templates and customized
 * with identifiers (for interfaces, strings, endpoints, and more)
 * as needed by a given function instance.
 */</doc>
