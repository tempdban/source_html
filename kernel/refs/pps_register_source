<dec f='linux-4.14.y/include/linux/pps_kernel.h' l='98' type='struct pps_device * pps_register_source(struct pps_source_info * info, int default_params)'/>
<doc f='linux-4.14.y/include/linux/pps_kernel.h' l='94'>/*
 * Exported functions
 */</doc>
<def f='linux-4.14.y/drivers/pps/kapi.c' l='78' ll='139' type='struct pps_device * pps_register_source(struct pps_source_info * info, int default_params)'/>
<dec f='linux-4.14.y/drivers/pps/kapi.c' l='140' type='struct pps_device * pps_register_source(struct pps_source_info * , int )'/>
<use f='linux-4.14.y/drivers/pps/kapi.c' l='140' c='pps_register_source'/>
<use f='linux-4.14.y/drivers/pps/kapi.c' l='140' u='a'/>
<use f='linux-4.14.y/drivers/pps/kapi.c' l='140' u='a'/>
<doc f='linux-4.14.y/drivers/pps/kapi.c' l='67'>/* pps_register_source - add a PPS source in the system
 * @info: the PPS info struct
 * @default_params: the default PPS parameters of the new source
 *
 * This function is used to add a new PPS source in the system. The new
 * source is described by info&apos;s fields and it will have, as default PPS
 * parameters, the ones specified into default_params.
 *
 * The function returns, in case of success, the PPS device. Otherwise NULL.
 */</doc>
<use f='linux-4.14.y/drivers/ptp/ptp_clock.c' l='266' u='c' c='ptp_clock_register'/>
