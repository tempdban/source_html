<dec f='linux-4.18.y/include/linux/libata.h' l='1204' type='int ata_do_set_mode(struct ata_link * link, struct ata_device ** r_failed_dev)'/>
<def f='linux-4.18.y/drivers/ata/libata-core.c' l='3600' ll='3680' type='int ata_do_set_mode(struct ata_link * link, struct ata_device ** r_failed_dev)'/>
<dec f='linux-4.18.y/drivers/ata/libata-core.c' l='7323' type='int ata_do_set_mode(struct ata_link * , struct ata_device ** )'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7323' c='ata_do_set_mode'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7323' u='a'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='7323' u='a'/>
<doc f='linux-4.18.y/drivers/ata/libata-core.c' l='3583'>/**
 *	ata_do_set_mode - Program timings and issue SET FEATURES - XFER
 *	@link: link on which timings will be programmed
 *	@r_failed_dev: out parameter for failed device
 *
 *	Standard implementation of the function used to tune and set
 *	ATA device disk transfer mode (PIO3, UDMA6, etc.).  If
 *	ata_dev_set_mode() fails, pointer to the failing device is
 *	returned in @r_failed_dev.
 *
 *	LOCKING:
 *	PCI/etc. bus probe sem.
 *
 *	RETURNS:
 *	0 on success, negative errno otherwise
 */</doc>
<use f='linux-4.18.y/drivers/ata/libata-eh.c' l='3288' u='c' c='ata_set_mode'/>
