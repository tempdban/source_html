<dec f='linux-4.18.y/include/linux/ftrace.h' l='385' type='int ftrace_set_notrace(struct ftrace_ops * ops, unsigned char * buf, int len, int reset)'/>
<def f='linux-4.18.y/kernel/trace/ftrace.c' l='4843' ll='4848' type='int ftrace_set_notrace(struct ftrace_ops * ops, unsigned char * buf, int len, int reset)'/>
<dec f='linux-4.18.y/kernel/trace/ftrace.c' l='4849' type='int ftrace_set_notrace(struct ftrace_ops * , unsigned char * , int , int )'/>
<use f='linux-4.18.y/kernel/trace/ftrace.c' l='4849' c='ftrace_set_notrace'/>
<use f='linux-4.18.y/kernel/trace/ftrace.c' l='4849' u='a'/>
<use f='linux-4.18.y/kernel/trace/ftrace.c' l='4849' u='a'/>
<doc f='linux-4.18.y/kernel/trace/ftrace.c' l='4832'>/**
 * ftrace_set_notrace - set a function to not trace in ftrace
 * @ops - the ops to set the notrace filter with
 * @buf - the string that holds the function notrace text.
 * @len - the length of the string.
 * @reset - non zero to reset all filters before applying this filter.
 *
 * Notrace Filters denote which functions should not be enabled when tracing
 * is enabled. If @buf is NULL and reset is set, all functions will be enabled
 * for tracing.
 */</doc>
<use f='linux-4.18.y/kernel/trace/trace_events_filter.c' l='1916' u='c' c='ftrace_function_set_regexp'/>
