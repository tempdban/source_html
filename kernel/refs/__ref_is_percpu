<def f='linux-4.14.y/include/linux/percpu-refcount.h' l='130' ll='159' type='bool __ref_is_percpu(struct percpu_ref * ref, unsigned long ** percpu_countp)'/>
<use f='linux-4.14.y/include/linux/percpu-refcount.h' l='176' u='c' c='percpu_ref_get_many'/>
<use f='linux-4.14.y/include/linux/percpu-refcount.h' l='213' u='c' c='percpu_ref_tryget'/>
<use f='linux-4.14.y/include/linux/percpu-refcount.h' l='247' u='c' c='percpu_ref_tryget_live'/>
<use f='linux-4.14.y/include/linux/percpu-refcount.h' l='275' u='c' c='percpu_ref_put_many'/>
<use f='linux-4.14.y/include/linux/percpu-refcount.h' l='323' u='c' c='percpu_ref_is_zero'/>
<doc f='linux-4.14.y/include/linux/percpu-refcount.h' l='124'>/*
 * Internal helper.  Don&apos;t use outside percpu-refcount proper.  The
 * function doesn&apos;t return the pointer and let the caller test it for NULL
 * because doing so forces the compiler to generate two conditional
 * branches as it can&apos;t assume that @ref-&gt;percpu_count is not NULL.
 */</doc>
