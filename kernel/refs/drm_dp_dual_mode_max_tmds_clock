<dec f='linux-4.18.y/include/drm/drm_dp_dual_mode_helper.h' l='107' type='int drm_dp_dual_mode_max_tmds_clock(enum drm_dp_dual_mode_type type, struct i2c_adapter * adapter)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='264' ll='289' type='int drm_dp_dual_mode_max_tmds_clock(enum drm_dp_dual_mode_type type, struct i2c_adapter * adapter)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='290' type='int drm_dp_dual_mode_max_tmds_clock(enum drm_dp_dual_mode_type , struct i2c_adapter * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='290' c='drm_dp_dual_mode_max_tmds_clock'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='290' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='290' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_dp_dual_mode_helper.c' l='249'>/**
 * drm_dp_dual_mode_max_tmds_clock - Max TMDS clock for DP dual mode adaptor
 * @type: DP dual mode adaptor type
 * @adapter: I2C adapter for the DDC bus
 *
 * Determine the max TMDS clock the adaptor supports based on the
 * type of the dual mode adaptor and the DP_DUAL_MODE_MAX_TMDS_CLOCK
 * register (on type2 adaptors). As some type 1 adaptors have
 * problems with registers (see comments in drm_dp_dual_mode_detect())
 * we don&apos;t read the register on those, instead we simply assume
 * a 165 MHz limit based on the specification.
 *
 * Returns:
 * Maximum supported TMDS clock rate for the DP dual mode adaptor in kHz.
 */</doc>
