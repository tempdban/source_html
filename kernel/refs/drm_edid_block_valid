<dec f='linux-4.14.y/include/drm/drm_edid.h' l='481' type='bool drm_edid_block_valid(u8 * raw_edid, int block, bool print_bad_edid, bool * edid_corrupt)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1325' ll='1406' type='bool drm_edid_block_valid(u8 * raw_edid, int block, bool print_bad_edid, bool * edid_corrupt)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' type='bool drm_edid_block_valid(u8 * , int , bool , bool * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' c='drm_edid_block_valid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1426' u='c' c='drm_edid_is_valid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1514' u='c' c='connector_bad_edid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1556' u='c' c='drm_do_get_edid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1583' u='c' c='drm_do_get_edid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1607' u='c' c='drm_do_get_edid'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1313'>/**
 * drm_edid_block_valid - Sanity check the EDID block (base or extension)
 * @raw_edid: pointer to raw EDID block
 * @block: type of block to validate (0 for base, extension otherwise)
 * @print_bad_edid: if true, dump bad EDID blocks to the console
 * @edid_corrupt: if true, the header or checksum is invalid
 *
 * Validate a base or extension EDID block and optionally dump bad blocks to
 * the console.
 *
 * Return: True if the block is valid, false otherwise.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_edid.h' l='481' type='bool drm_edid_block_valid(u8 * raw_edid, int block, bool print_bad_edid, bool * edid_corrupt)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1325' ll='1406' type='bool drm_edid_block_valid(u8 * raw_edid, int block, bool print_bad_edid, bool * edid_corrupt)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' type='bool drm_edid_block_valid(u8 * , int , bool , bool * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' c='drm_edid_block_valid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1407' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1426' u='c' c='drm_edid_is_valid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1514' u='c' c='connector_bad_edid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1556' u='c' c='drm_do_get_edid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1583' u='c' c='drm_do_get_edid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1607' u='c' c='drm_do_get_edid'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='1313'>/**
 * drm_edid_block_valid - Sanity check the EDID block (base or extension)
 * @raw_edid: pointer to raw EDID block
 * @block: type of block to validate (0 for base, extension otherwise)
 * @print_bad_edid: if true, dump bad EDID blocks to the console
 * @edid_corrupt: if true, the header or checksum is invalid
 *
 * Validate a base or extension EDID block and optionally dump bad blocks to
 * the console.
 *
 * Return: True if the block is valid, false otherwise.
 */</doc>
