<def f='linux-4.18.y/include/crypto/skcipher.h' l='520' ll='532' type='struct skcipher_request * skcipher_request_alloc(struct crypto_skcipher * tfm, gfp_t gfp)'/>
<doc f='linux-4.18.y/include/crypto/skcipher.h' l='509'>/**
 * skcipher_request_alloc() - allocate request data structure
 * @tfm: cipher handle to be registered with the request
 * @gfp: memory allocation flag that is handed to kmalloc by the API call.
 *
 * Allocate the request data structure that must be used with the skcipher
 * encrypt and decrypt API calls. During the allocation, the provided skcipher
 * handle is registered in the request data structure.
 *
 * Return: allocated request handle in case of success, or NULL if out of memory
 */</doc>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='164' u='c' c='fscrypt_do_page_crypto'/>
<use f='linux-4.18.y/fs/crypto/fname.c' l='61' u='c' c='fname_encrypt'/>
<use f='linux-4.18.y/fs/crypto/fname.c' l='102' u='c' c='fname_decrypt'/>
<use f='linux-4.18.y/fs/crypto/keyinfo.c' l='45' u='c' c='derive_key_aes'/>
