<dec f='linux-4.14.y/include/linux/ftrace.h' l='359' type='int ftrace_text_reserved(const void * start, const void * end)'/>
<def f='linux-4.14.y/kernel/trace/ftrace.c' l='1684' ll='1692' type='int ftrace_text_reserved(const void * start, const void * end)'/>
<doc f='linux-4.14.y/kernel/trace/ftrace.c' l='1674'>/**
 * ftrace_text_reserved - return true if range contains an ftrace location
 * @start: start of range to search
 * @end: end of range to search (inclusive). @end points to the last byte to check.
 *
 * Returns 1 if @start and @end contains a ftrace location.
 * That is, the instruction that is either a NOP or call to
 * the function tracer. It checks the ftrace internal tables to
 * determine if the address belongs or not.
 */</doc>
<dec f='linux-4.14.y/include/linux/ftrace.h' l='359' type='int ftrace_text_reserved(const void * start, const void * end)'/>
<def f='linux-4.14.y/kernel/trace/ftrace.c' l='1684' ll='1692' type='int ftrace_text_reserved(const void * start, const void * end)'/>
<doc f='linux-4.14.y/kernel/trace/ftrace.c' l='1674'>/**
 * ftrace_text_reserved - return true if range contains an ftrace location
 * @start: start of range to search
 * @end: end of range to search (inclusive). @end points to the last byte to check.
 *
 * Returns 1 if @start and @end contains a ftrace location.
 * That is, the instruction that is either a NOP or call to
 * the function tracer. It checks the ftrace internal tables to
 * determine if the address belongs or not.
 */</doc>
