<def f='linux-4.18.y/include/linux/rhashtable.h' l='1221' ll='1246' type='int rhashtable_replace_fast(struct rhashtable * ht, struct rhash_head * obj_old, struct rhash_head * obj_new, const struct rhashtable_params params)'/>
<doc f='linux-4.18.y/include/linux/rhashtable.h' l='1207'>/**
 * rhashtable_replace_fast - replace an object in hash table
 * @ht:		hash table
 * @obj_old:	pointer to hash head inside object being replaced
 * @obj_new:	pointer to hash head inside object which is new
 * @params:	hash table parameters
 *
 * Replacing an object doesn&apos;t affect the number of elements in the hash table
 * or bucket, so we don&apos;t need to worry about shrinking or expanding the
 * table here.
 *
 * Returns zero on success, -ENOENT if the entry could not be found,
 * -EINVAL if hash is not the same for the old and new objects.
 */</doc>
