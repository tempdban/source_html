<def f='linux-4.14.y/include/linux/hdmi.h' l='325' ll='331'/>
<size>68</size>
<doc f='linux-4.14.y/include/linux/hdmi.h' l='313'>/**
 * union hdmi_infoframe - overall union of all abstract infoframe representations
 * @any: generic infoframe
 * @avi: avi infoframe
 * @spd: spd infoframe
 * @vendor: union of all vendor infoframes
 * @audio: audio infoframe
 *
 * This is used by the generic pack function. This works since all infoframes
 * have the same header which also indicates which type of infoframe should be
 * packed.
 */</doc>
<mbr r='hdmi_infoframe::any' o='0' t='struct hdmi_any_infoframe'/>
<mbr r='hdmi_infoframe::avi' o='0' t='struct hdmi_avi_infoframe'/>
<mbr r='hdmi_infoframe::spd' o='0' t='struct hdmi_spd_infoframe'/>
<mbr r='hdmi_infoframe::vendor' o='0' t='union hdmi_vendor_any_infoframe'/>
<mbr r='hdmi_infoframe::audio' o='0' t='struct hdmi_audio_infoframe'/>
<def f='linux-4.14.y/include/linux/hdmi.h' l='325' ll='331'/>
<size>68</size>
<doc f='linux-4.14.y/include/linux/hdmi.h' l='313'>/**
 * union hdmi_infoframe - overall union of all abstract infoframe representations
 * @any: generic infoframe
 * @avi: avi infoframe
 * @spd: spd infoframe
 * @vendor: union of all vendor infoframes
 * @audio: audio infoframe
 *
 * This is used by the generic pack function. This works since all infoframes
 * have the same header which also indicates which type of infoframe should be
 * packed.
 */</doc>
<mbr r='hdmi_infoframe::any' o='0' t='struct hdmi_any_infoframe'/>
<mbr r='hdmi_infoframe::avi' o='0' t='struct hdmi_avi_infoframe'/>
<mbr r='hdmi_infoframe::spd' o='0' t='struct hdmi_spd_infoframe'/>
<mbr r='hdmi_infoframe::vendor' o='0' t='union hdmi_vendor_any_infoframe'/>
<mbr r='hdmi_infoframe::audio' o='0' t='struct hdmi_audio_infoframe'/>
