<dec f='linux-4.14.y/include/linux/phy.h' l='248' type='struct mii_bus * devm_mdiobus_alloc_size(struct device * dev, int sizeof_priv)'/>
<use f='linux-4.14.y/include/linux/phy.h' l='251' u='c' c='devm_mdiobus_alloc'/>
<def f='linux-4.14.y/drivers/net/phy/mdio_bus.c' l='157' ll='175' type='struct mii_bus * devm_mdiobus_alloc_size(struct device * dev, int sizeof_priv)'/>
<dec f='linux-4.14.y/drivers/net/phy/mdio_bus.c' l='176' type='struct mii_bus * devm_mdiobus_alloc_size(struct device * , int )'/>
<use f='linux-4.14.y/drivers/net/phy/mdio_bus.c' l='176' c='devm_mdiobus_alloc_size'/>
<use f='linux-4.14.y/drivers/net/phy/mdio_bus.c' l='176' u='a'/>
<use f='linux-4.14.y/drivers/net/phy/mdio_bus.c' l='176' u='a'/>
<doc f='linux-4.14.y/drivers/net/phy/mdio_bus.c' l='143'>/**
 * devm_mdiobus_alloc_size - Resource-managed mdiobus_alloc_size()
 * @dev:		Device to allocate mii_bus for
 * @sizeof_priv:	Space to allocate for private structure.
 *
 * Managed mdiobus_alloc_size. mii_bus allocated with this function is
 * automatically freed on driver detach.
 *
 * If an mii_bus allocated with this function needs to be freed separately,
 * devm_mdiobus_free() must be used.
 *
 * RETURNS:
 * Pointer to allocated mii_bus on success, NULL on failure.
 */</doc>
