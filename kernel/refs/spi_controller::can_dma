<dec f='linux-4.14.y/include/linux/spi/spi.h' l='515' type='bool (*)(struct spi_controller *, struct spi_device *, struct spi_transfer *)'/>
<offset>5056</offset>
<doc f='linux-4.14.y/include/linux/spi/spi.h' l='508'>/*
	 * Used to enable core support for DMA handling, if can_dma()
	 * exists and returns true then the transfer will be mapped
	 * prior to transfer_one() being called.  The driver should
	 * not modify or store xfer and dma_tx and dma_rx must be set
	 * while the device is prepared.
	 */</doc>
<use f='linux-4.14.y/drivers/spi/spi.c' l='839' u='r' c='__spi_map_msg'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='853' u='r' c='__spi_map_msg'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='886' u='r' c='__spi_unmap_msg'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='900' u='r' c='__spi_unmap_msg'/>
<dec f='linux-4.14.y/include/linux/spi/spi.h' l='515' type='bool (*)(struct spi_controller *, struct spi_device *, struct spi_transfer *)'/>
<offset>5056</offset>
<doc f='linux-4.14.y/include/linux/spi/spi.h' l='508'>/*
	 * Used to enable core support for DMA handling, if can_dma()
	 * exists and returns true then the transfer will be mapped
	 * prior to transfer_one() being called.  The driver should
	 * not modify or store xfer and dma_tx and dma_rx must be set
	 * while the device is prepared.
	 */</doc>
<use f='linux-4.14.y/drivers/spi/spi.c' l='839' u='r' c='__spi_map_msg'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='853' u='r' c='__spi_map_msg'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='886' u='r' c='__spi_unmap_msg'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='900' u='r' c='__spi_unmap_msg'/>
