<def f='linux-4.14.y/include/uapi/drm/vmwgfx_drm.h' l='928' ll='938'/>
<size>48</size>
<doc f='linux-4.14.y/include/uapi/drm/vmwgfx_drm.h' l='910'>/**
 * struct drm_vmw_gb_surface_create_req
 *
 * @svga3d_flags:     SVGA3d surface flags for the device.
 * @format:           SVGA3d format.
 * @mip_level:        Number of mip levels for all faces.
 * @drm_surface_flags Flags as described above.
 * @multisample_count Future use. Set to 0.
 * @autogen_filter    Future use. Set to 0.
 * @buffer_handle     Buffer handle of backup buffer. SVGA3D_INVALID_ID
 *                    if none.
 * @base_size         Size of the base mip level for all faces.
 * @array_size        Must be zero for non-DX hardware, and if non-zero
 *                    svga3d_flags must have proper bind flags setup.
 *
 * Input argument to the  DRM_VMW_GB_SURFACE_CREATE Ioctl.
 * Part of output argument for the DRM_VMW_GB_SURFACE_REF Ioctl.
 */</doc>
<mbr r='drm_vmw_gb_surface_create_req::svga3d_flags' o='0' t='__u32'/>
<mbr r='drm_vmw_gb_surface_create_req::format' o='32' t='__u32'/>
<mbr r='drm_vmw_gb_surface_create_req::mip_levels' o='64' t='__u32'/>
<mbr r='drm_vmw_gb_surface_create_req::drm_surface_flags' o='96' t='enum drm_vmw_surface_flags'/>
<mbr r='drm_vmw_gb_surface_create_req::multisample_count' o='128' t='__u32'/>
<mbr r='drm_vmw_gb_surface_create_req::autogen_filter' o='160' t='__u32'/>
<mbr r='drm_vmw_gb_surface_create_req::buffer_handle' o='192' t='__u32'/>
<mbr r='drm_vmw_gb_surface_create_req::array_size' o='224' t='__u32'/>
<mbr r='drm_vmw_gb_surface_create_req::base_size' o='256' t='struct drm_vmw_size'/>
