<dec f='linux-4.18.y/net/ipv4/udp_impl.h' l='10' type='void __udp4_lib_err(struct sk_buff * , u32 , struct udp_table * )'/>
<def f='linux-4.18.y/net/ipv4/udp.c' l='594' ll='664' type='void __udp4_lib_err(struct sk_buff * skb, u32 info, struct udp_table * udptable)'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='668' u='c' c='udp_err'/>
<doc f='linux-4.18.y/net/ipv4/udp.c' l='583'>/*
 * This routine is called by the ICMP module when it gets some
 * sort of error condition.  If err &lt; 0 then the socket should
 * be closed and the error returned to the user.  If err &gt; 0
 * it&apos;s just the icmp type &lt;&lt; 8 | icmp code.
 * Header points to the ip header of the error packet. We move
 * on past this. Then (as it used to claim before adjustment)
 * header points to the first 8 bytes of the udp header.  We need
 * to find the appropriate port.
 */</doc>
<use f='linux-4.18.y/net/ipv4/udplite.c' l='30' u='c' c='udplite_err'/>
