<dec f='linux-4.14.y/include/linux/netdevice.h' l='3740' type='void __hw_addr_unsync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *) unsync)'/>
<use f='linux-4.14.y/include/linux/netdevice.h' l='3793' u='c' c='__dev_uc_unsync'/>
<use f='linux-4.14.y/include/linux/netdevice.h' l='3837' u='c' c='__dev_mc_unsync'/>
<def f='linux-4.14.y/net/core/dev_addr_lists.c' l='292' ll='310' type='void __hw_addr_unsync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *) unsync)'/>
<dec f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' type='void __hw_addr_unsync_dev(struct netdev_hw_addr_list * , struct net_device * , int (*)(struct net_device *, const unsigned char *) )'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' c='__hw_addr_unsync_dev'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' u='a'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' u='a'/>
<doc f='linux-4.14.y/net/core/dev_addr_lists.c' l='280'>/**
 *  __hw_addr_unsync_dev - Remove synchronized addresses from device
 *  @list: address list to remove synchronized addresses from
 *  @dev:  device to sync
 *  @unsync: function to call if address should be removed
 *
 *  Remove all addresses that were added to the device by __hw_addr_sync_dev().
 *  This function is intended to be called from the ndo_stop or ndo_open
 *  functions on devices that require explicit address add/remove
 *  notifications.  If the unsync function pointer is NULL then this function
 *  can be used to just reset the sync_cnt for the addresses in the list.
 **/</doc>
<dec f='linux-4.14.y/include/linux/netdevice.h' l='3740' type='void __hw_addr_unsync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *) unsync)'/>
<use f='linux-4.14.y/include/linux/netdevice.h' l='3793' u='c' c='__dev_uc_unsync'/>
<use f='linux-4.14.y/include/linux/netdevice.h' l='3837' u='c' c='__dev_mc_unsync'/>
<def f='linux-4.14.y/net/core/dev_addr_lists.c' l='292' ll='310' type='void __hw_addr_unsync_dev(struct netdev_hw_addr_list * list, struct net_device * dev, int (*)(struct net_device *, const unsigned char *) unsync)'/>
<dec f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' type='void __hw_addr_unsync_dev(struct netdev_hw_addr_list * , struct net_device * , int (*)(struct net_device *, const unsigned char *) )'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' c='__hw_addr_unsync_dev'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' u='a'/>
<use f='linux-4.14.y/net/core/dev_addr_lists.c' l='311' u='a'/>
<doc f='linux-4.14.y/net/core/dev_addr_lists.c' l='280'>/**
 *  __hw_addr_unsync_dev - Remove synchronized addresses from device
 *  @list: address list to remove synchronized addresses from
 *  @dev:  device to sync
 *  @unsync: function to call if address should be removed
 *
 *  Remove all addresses that were added to the device by __hw_addr_sync_dev().
 *  This function is intended to be called from the ndo_stop or ndo_open
 *  functions on devices that require explicit address add/remove
 *  notifications.  If the unsync function pointer is NULL then this function
 *  can be used to just reset the sync_cnt for the addresses in the list.
 **/</doc>
