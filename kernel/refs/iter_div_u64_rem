<dec f='linux-4.18.y/include/linux/math64.h' l='143' type='u32 iter_div_u64_rem(u64 dividend, u32 divisor, u64 * remainder)'/>
<def f='linux-4.18.y/lib/div64.c' l='188' ll='191' type='u32 iter_div_u64_rem(u64 dividend, u32 divisor, u64 * remainder)'/>
<dec f='linux-4.18.y/lib/div64.c' l='192' type='u32 iter_div_u64_rem(u64 , u32 , u64 * )'/>
<use f='linux-4.18.y/lib/div64.c' l='192' c='iter_div_u64_rem'/>
<use f='linux-4.18.y/lib/div64.c' l='192' u='a'/>
<use f='linux-4.18.y/lib/div64.c' l='192' u='a'/>
<doc f='linux-4.18.y/lib/div64.c' l='184'>/*
 * Iterative div/mod for use when dividend is not expected to be much
 * bigger than divisor.
 */</doc>
