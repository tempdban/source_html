<dec f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.h' l='57' type='s32 e1000_phy_force_speed_duplex_igp(struct e1000_hw * hw)'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_82541.c' l='97' u='r' c='e1000_init_phy_params_82541'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_82571.c' l='123' u='r' c='e1000_init_phy_params_82571'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_82575.c' l='291' u='r' c='e1000_init_phy_params_82575'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_ich8lan.c' l='599' u='r' c='e1000_init_phy_params_ich8lan'/>
<def f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='1746' ll='1800' type='s32 e1000_phy_force_speed_duplex_igp(struct e1000_hw * hw)'/>
<doc f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='1738'>/**
 *  e1000_phy_force_speed_duplex_igp - Force speed/duplex for igp PHY
 *  @hw: pointer to the HW structure
 *
 *  Calls the PHY setup function to force speed and duplex.  Clears the
 *  auto-crossover to force MDI manually.  Waits for link and returns
 *  successful if link up is successful, else -E1000_ERR_PHY (-2).
 **/</doc>
<dec f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.h' l='34' type='s32 e1000_phy_force_speed_duplex_igp(struct e1000_hw * hw)'/>
<use f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_82575.c' l='259' u='r' c='e1000_init_phy_params_82575'/>
<def f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='1638' ll='1692' type='s32 e1000_phy_force_speed_duplex_igp(struct e1000_hw * hw)'/>
<doc f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='1630'>/**
 *  e1000_phy_force_speed_duplex_igp - Force speed/duplex for igp PHY
 *  @hw: pointer to the HW structure
 *
 *  Calls the PHY setup function to force speed and duplex.  Clears the
 *  auto-crossover to force MDI manually.  Waits for link and returns
 *  successful if link up is successful, else -E1000_ERR_PHY (-2).
 **/</doc>
