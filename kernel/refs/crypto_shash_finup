<dec f='linux-4.14.y/include/crypto/hash.h' l='930' type='int crypto_shash_finup(struct shash_desc * desc, const u8 * data, unsigned int len, u8 * out)'/>
<doc f='linux-4.14.y/include/crypto/hash.h' l='916'>/**
 * crypto_shash_finup() - calculate message digest of buffer
 * @desc: see crypto_shash_final()
 * @data: see crypto_shash_update()
 * @len: see crypto_shash_update()
 * @out: see crypto_shash_final()
 *
 * This function is a &quot;short-hand&quot; for the function calls of
 * crypto_shash_update and crypto_shash_final. The parameters have the same
 * meaning as discussed for those separate functions.
 *
 * Return: 0 if the message digest creation was successful; &lt; 0 if an error
 *	   occurred
 */</doc>
<use f='linux-4.14.y/crypto/hmac.c' l='137' u='c' c='hmac_final'/>
<use f='linux-4.14.y/crypto/hmac.c' l='152' u='c' c='hmac_finup'/>
<use f='linux-4.14.y/crypto/hmac.c' l='154' u='c' c='hmac_finup'/>
<def f='linux-4.14.y/crypto/shash.c' l='163' ll='174' type='int crypto_shash_finup(struct shash_desc * desc, const u8 * data, unsigned int len, u8 * out)'/>
<dec f='linux-4.14.y/crypto/shash.c' l='175' type='int crypto_shash_finup(struct shash_desc * , const u8 * , unsigned int , u8 * )'/>
<use f='linux-4.14.y/crypto/shash.c' l='175' c='crypto_shash_finup'/>
<use f='linux-4.14.y/crypto/shash.c' l='175' u='a'/>
<use f='linux-4.14.y/crypto/shash.c' l='175' u='a'/>
<use f='linux-4.14.y/crypto/shash.c' l='181' u='c' c='shash_digest_unaligned'/>
<use f='linux-4.14.y/crypto/shash.c' l='266' u='c' c='shash_ahash_finup'/>
<dec f='linux-4.14.y/include/crypto/hash.h' l='930' type='int crypto_shash_finup(struct shash_desc * desc, const u8 * data, unsigned int len, u8 * out)'/>
<doc f='linux-4.14.y/include/crypto/hash.h' l='916'>/**
 * crypto_shash_finup() - calculate message digest of buffer
 * @desc: see crypto_shash_final()
 * @data: see crypto_shash_update()
 * @len: see crypto_shash_update()
 * @out: see crypto_shash_final()
 *
 * This function is a &quot;short-hand&quot; for the function calls of
 * crypto_shash_update and crypto_shash_final. The parameters have the same
 * meaning as discussed for those separate functions.
 *
 * Return: 0 if the message digest creation was successful; &lt; 0 if an error
 *	   occurred
 */</doc>
<use f='linux-4.14.y/crypto/hmac.c' l='137' u='c' c='hmac_final'/>
<use f='linux-4.14.y/crypto/hmac.c' l='152' u='c' c='hmac_finup'/>
<use f='linux-4.14.y/crypto/hmac.c' l='154' u='c' c='hmac_finup'/>
<def f='linux-4.14.y/crypto/shash.c' l='163' ll='174' type='int crypto_shash_finup(struct shash_desc * desc, const u8 * data, unsigned int len, u8 * out)'/>
<dec f='linux-4.14.y/crypto/shash.c' l='175' type='int crypto_shash_finup(struct shash_desc * , const u8 * , unsigned int , u8 * )'/>
<use f='linux-4.14.y/crypto/shash.c' l='175' c='crypto_shash_finup'/>
<use f='linux-4.14.y/crypto/shash.c' l='175' u='a'/>
<use f='linux-4.14.y/crypto/shash.c' l='175' u='a'/>
<use f='linux-4.14.y/crypto/shash.c' l='181' u='c' c='shash_digest_unaligned'/>
<use f='linux-4.14.y/crypto/shash.c' l='266' u='c' c='shash_ahash_finup'/>
