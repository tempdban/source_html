<dec f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40e_prototype.h' l='45' type='i40e_status i40evf_clean_arq_element(struct i40e_hw * hw, struct i40e_arq_event_info * e, u16 * events_pending)'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40e_adminq.c' l='877' ll='969' type='i40e_status i40evf_clean_arq_element(struct i40e_hw * hw, struct i40e_arq_event_info * e, u16 * pending)'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40e_adminq.c' l='867'>/**
 *  i40evf_clean_arq_element
 *  @hw: pointer to the hw struct
 *  @e: event info from the receive descriptor, includes any buffers
 *  @pending: number of events that could be left to process
 *
 *  This function cleans one Admin Receive Queue element and returns
 *  the contents through e.  It can also return how many events are
 *  left to process through &apos;pending&apos;
 **/</doc>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40evf_main.c' l='2010' u='c' c='i40evf_adminq_task'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c' l='105' u='c' c='i40evf_verify_api_ver'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40evf_virtchnl.c' l='208' u='c' c='i40evf_get_vf_config'/>
