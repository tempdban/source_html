<dec f='linux-4.18.y/include/linux/ftrace.h' l='383' type='int ftrace_set_filter(struct ftrace_ops * ops, unsigned char * buf, int len, int reset)'/>
<def f='linux-4.18.y/kernel/trace/ftrace.c' l='4824' ll='4829' type='int ftrace_set_filter(struct ftrace_ops * ops, unsigned char * buf, int len, int reset)'/>
<dec f='linux-4.18.y/kernel/trace/ftrace.c' l='4830' type='int ftrace_set_filter(struct ftrace_ops * , unsigned char * , int , int )'/>
<use f='linux-4.18.y/kernel/trace/ftrace.c' l='4830' c='ftrace_set_filter'/>
<use f='linux-4.18.y/kernel/trace/ftrace.c' l='4830' u='a'/>
<use f='linux-4.18.y/kernel/trace/ftrace.c' l='4830' u='a'/>
<doc f='linux-4.18.y/kernel/trace/ftrace.c' l='4814'>/**
 * ftrace_set_filter - set a function to filter on in ftrace
 * @ops - the ops to set the filter with
 * @buf - the string that holds the function filter text.
 * @len - the length of the string.
 * @reset - non zero to reset all filters before applying this filter.
 *
 * Filters denote which functions should be enabled when tracing is enabled.
 * If @buf is NULL and reset is set, all functions will be enabled for tracing.
 */</doc>
<use f='linux-4.18.y/kernel/trace/trace_events_filter.c' l='1914' u='c' c='ftrace_function_set_regexp'/>
