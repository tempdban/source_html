<dec f='linux-4.18.y/include/linux/skbuff.h' l='3293' type='void skb_scrub_packet(struct sk_buff * skb, bool xnet)'/>
<use f='linux-4.18.y/include/linux/netdevice.h' l='3456' u='c' c='____dev_forward_skb'/>
<use f='linux-4.18.y/include/net/dst.h' l='352' u='c' c='__skb_tunnel_rx'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_core.c' l='311' u='c' c='ipvlan_skb_crossing_ns'/>
<def f='linux-4.18.y/net/core/skbuff.c' l='4897' ll='4914' type='void skb_scrub_packet(struct sk_buff * skb, bool xnet)'/>
<dec f='linux-4.18.y/net/core/skbuff.c' l='4915' type='void skb_scrub_packet(struct sk_buff * , bool )'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='4915' c='skb_scrub_packet'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='4915' u='a'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='4915' u='a'/>
<doc f='linux-4.18.y/net/core/skbuff.c' l='4884'>/**
 * skb_scrub_packet - scrub an skb
 *
 * @skb: buffer to clean
 * @xnet: packet is crossing netns
 *
 * skb_scrub_packet can be used after encapsulating or decapsulting a packet
 * into/from a tunnel. Some information have to be cleared during these
 * operations.
 * skb_scrub_packet can also be used to clean a skb before injecting it in
 * another namespace (@xnet == true). We have to clear all information in the
 * skb that could impact namespace isolation.
 */</doc>
<use f='linux-4.18.y/net/ipv4/ip_tunnel_core.c' l='69' u='c' c='iptunnel_xmit'/>
<use f='linux-4.18.y/net/ipv4/ip_tunnel_core.c' l='125' u='c' c='__iptunnel_pull_header'/>
<use f='linux-4.18.y/net/openvswitch/vport.c' l='452' u='c' c='ovs_vport_receive'/>
