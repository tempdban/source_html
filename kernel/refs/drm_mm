<def f='linux-4.18.y/include/drm/drm_mm.h' l='154' ll='180'/>
<size>224</size>
<doc f='linux-4.18.y/include/drm/drm_mm.h' l='146'>/**
 * struct drm_mm - DRM allocator
 *
 * DRM range allocator with a few special functions and features geared towards
 * managing GPU memory. Except for the @color_adjust callback the structure is
 * entirely opaque and should only be accessed through the provided functions
 * and macros. This structure can be embedded into larger driver structures.
 */</doc>
<mbr r='drm_mm::color_adjust' o='0' t='void (*)(const struct drm_mm_node *, unsigned long, u64 *, u64 *)'/>
<mbr r='drm_mm::hole_stack' o='64' t='struct list_head'/>
<mbr r='drm_mm::head_node' o='192' t='struct drm_mm_node'/>
<mbr r='drm_mm::interval_tree' o='1472' t='struct rb_root_cached'/>
<mbr r='drm_mm::holes_size' o='1600' t='struct rb_root'/>
<mbr r='drm_mm::holes_addr' o='1664' t='struct rb_root'/>
<mbr r='drm_mm::scan_active' o='1728' t='unsigned long'/>
