<def f='linux-4.14.y/include/linux/regmap.h' l='342' ll='357'/>
<size>40</size>
<doc f='linux-4.14.y/include/linux/regmap.h' l='322'>/**
 * struct regmap_range_cfg - Configuration for indirectly accessed or paged
 *                           registers.
 *
 * @name: Descriptive name for diagnostics
 *
 * @range_min: Address of the lowest register address in virtual range.
 * @range_max: Address of the highest register in virtual range.
 *
 * @selector_reg: Register with selector field.
 * @selector_mask: Bit shift for selector value.
 * @selector_shift: Bit mask for selector value.
 *
 * @window_start: Address of first (lowest) register in data window.
 * @window_len: Number of registers in data window.
 *
 * Registers, mapped to this virtual range, are accessed in two steps:
 *     1. page selector register update;
 *     2. access through data window registers.
 */</doc>
<mbr r='regmap_range_cfg::name' o='0' t='const char *'/>
<mbr r='regmap_range_cfg::range_min' o='64' t='unsigned int'/>
<mbr r='regmap_range_cfg::range_max' o='96' t='unsigned int'/>
<mbr r='regmap_range_cfg::selector_reg' o='128' t='unsigned int'/>
<mbr r='regmap_range_cfg::selector_mask' o='160' t='unsigned int'/>
<mbr r='regmap_range_cfg::selector_shift' o='192' t='int'/>
<mbr r='regmap_range_cfg::window_start' o='224' t='unsigned int'/>
<mbr r='regmap_range_cfg::window_len' o='256' t='unsigned int'/>
