<dec f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='770' type='int nfp_cpp_mutex_unlock(struct nfp_cpp_mutex * mutex)'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='763'>/*
 * Unlock a mutex handle, using the NFP MU Atomic Engine
 *
 * @param mutex		NFP CPP Mutex handle
 *
 * @return 0 on success, or -1 on failure (and set errno accordingly).
 */</doc>
<def f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_mutex.c' l='288' ll='329' type='int nfp_cpp_mutex_unlock(struct nfp_cpp_mutex * mutex)'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_mutex.c' l='281'>/*
 * Unlock a mutex handle, using the NFP MU Atomic Engine
 *
 * @param mutex     NFP CPP Mutex handle
 *
 * @return 0 on success, or -1 on failure (and set errno accordingly).
 */</doc>
<use f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_resource.c' l='130' u='c' c='nfp_resource_try_acquire'/>
<use f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_resource.c' l='137' u='c' c='nfp_resource_try_acquire'/>
<use f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_resource.c' l='215' u='c' c='nfp_resource_release'/>
