<def f='linux-4.18.y/include/uapi/linux/rtc.h' l='56' ll='64'/>
<size>32</size>
<doc f='linux-4.18.y/include/uapi/linux/rtc.h' l='43'>/*
 * Data structure to control PLL correction some better RTC feature
 * pll_value is used to get or set current value of correction,
 * the rest of the struct is used to query HW capabilities.
 * This is modeled after the RTC used in Q40/Q60 computers but
 * should be sufficiently flexible for other devices
 *
 * +ve pll_value means clock will run faster by
 *   pll_value*pll_posmult/pll_clock
 * -ve pll_value means clock will run slower by
 *   pll_value*pll_negmult/pll_clock
 */</doc>
<mbr r='rtc_pll_info::pll_ctrl' o='0' t='int'/>
<mbr r='rtc_pll_info::pll_value' o='32' t='int'/>
<mbr r='rtc_pll_info::pll_max' o='64' t='int'/>
<mbr r='rtc_pll_info::pll_min' o='96' t='int'/>
<mbr r='rtc_pll_info::pll_posmult' o='128' t='int'/>
<mbr r='rtc_pll_info::pll_negmult' o='160' t='int'/>
<mbr r='rtc_pll_info::pll_clock' o='192' t='long'/>
