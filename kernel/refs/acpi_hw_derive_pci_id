<dec f='linux-4.14.y/drivers/acpi/acpica/achware.h' l='147' type='acpi_status acpi_hw_derive_pci_id(struct acpi_pci_id * pci_id, acpi_handle root_pci_device, acpi_handle pci_region)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/achware.h' l='143'>/*
 * hwpci - PCI configuration support
 */</doc>
<use f='linux-4.14.y/drivers/acpi/acpica/evrgnini.c' l='326' u='c' c='acpi_ev_pci_config_region_setup'/>
<def f='linux-4.14.y/drivers/acpi/acpica/hwpci.c' l='121' ll='150' type='acpi_status acpi_hw_derive_pci_id(struct acpi_pci_id * pci_id, acpi_handle root_pci_device, acpi_handle pci_region)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/hwpci.c' l='82'>/*******************************************************************************
 *
 * FUNCTION:    acpi_hw_derive_pci_id
 *
 * PARAMETERS:  pci_id              - Initial values for the PCI ID. May be
 *                                    modified by this function.
 *              root_pci_device     - A handle to a PCI device object. This
 *                                    object must be a PCI Root Bridge having a
 *                                    _HID value of either PNP0A03 or PNP0A08
 *              pci_region          - A handle to a PCI configuration space
 *                                    Operation Region being initialized
 *
 * RETURN:      Status
 *
 * DESCRIPTION: This function derives a full PCI ID for a PCI device,
 *              consisting of a Segment number, Bus number, Device number,
 *              and function code.
 *
 *              The PCI hardware dynamically configures PCI bus numbers
 *              depending on the bus topology discovered during system
 *              initialization. This function is invoked during configuration
 *              of a PCI_Config Operation Region in order to (possibly) update
 *              the Bus/Device/Function numbers in the pci_id with the actual
 *              values as determined by the hardware and operating system
 *              configuration.
 *
 *              The pci_id parameter is initially populated during the Operation
 *              Region initialization. This function is then called, and is
 *              will make any necessary modifications to the Bus, Device, or
 *              Function number PCI ID subfields as appropriate for the
 *              current hardware and OS configuration.
 *
 * NOTE:        Created 08/2010. Replaces the previous OSL acpi_os_derive_pci_id
 *              interface since this feature is OS-independent. This module
 *              specifically avoids any use of recursion by building a local
 *              temporary device list.
 *
 ******************************************************************************/</doc>
<dec f='linux-4.14.y/drivers/acpi/acpica/achware.h' l='147' type='acpi_status acpi_hw_derive_pci_id(struct acpi_pci_id * pci_id, acpi_handle root_pci_device, acpi_handle pci_region)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/achware.h' l='143'>/*
 * hwpci - PCI configuration support
 */</doc>
<use f='linux-4.14.y/drivers/acpi/acpica/evrgnini.c' l='326' u='c' c='acpi_ev_pci_config_region_setup'/>
<def f='linux-4.14.y/drivers/acpi/acpica/hwpci.c' l='121' ll='150' type='acpi_status acpi_hw_derive_pci_id(struct acpi_pci_id * pci_id, acpi_handle root_pci_device, acpi_handle pci_region)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/hwpci.c' l='82'>/*******************************************************************************
 *
 * FUNCTION:    acpi_hw_derive_pci_id
 *
 * PARAMETERS:  pci_id              - Initial values for the PCI ID. May be
 *                                    modified by this function.
 *              root_pci_device     - A handle to a PCI device object. This
 *                                    object must be a PCI Root Bridge having a
 *                                    _HID value of either PNP0A03 or PNP0A08
 *              pci_region          - A handle to a PCI configuration space
 *                                    Operation Region being initialized
 *
 * RETURN:      Status
 *
 * DESCRIPTION: This function derives a full PCI ID for a PCI device,
 *              consisting of a Segment number, Bus number, Device number,
 *              and function code.
 *
 *              The PCI hardware dynamically configures PCI bus numbers
 *              depending on the bus topology discovered during system
 *              initialization. This function is invoked during configuration
 *              of a PCI_Config Operation Region in order to (possibly) update
 *              the Bus/Device/Function numbers in the pci_id with the actual
 *              values as determined by the hardware and operating system
 *              configuration.
 *
 *              The pci_id parameter is initially populated during the Operation
 *              Region initialization. This function is then called, and is
 *              will make any necessary modifications to the Bus, Device, or
 *              Function number PCI ID subfields as appropriate for the
 *              current hardware and OS configuration.
 *
 * NOTE:        Created 08/2010. Replaces the previous OSL acpi_os_derive_pci_id
 *              interface since this feature is OS-independent. This module
 *              specifically avoids any use of recursion by building a local
 *              temporary device list.
 *
 ******************************************************************************/</doc>
