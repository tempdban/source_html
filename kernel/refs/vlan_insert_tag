<def f='linux-4.14.y/include/linux/if_vlan.h' l='412' ll='416' type='struct sk_buff * vlan_insert_tag(struct sk_buff * skb, __be16 vlan_proto, u16 vlan_tci)'/>
<use f='linux-4.14.y/include/linux/if_vlan.h' l='434' u='c' c='vlan_insert_tag_set_proto'/>
<doc f='linux-4.14.y/include/linux/if_vlan.h' l='398'>/**
 * vlan_insert_tag - regular VLAN tag inserting
 * @skb: skbuff to tag
 * @vlan_proto: VLAN encapsulation protocol
 * @vlan_tci: VLAN TCI to insert
 *
 * Inserts the VLAN tag into @skb as part of the payload
 * Returns a VLAN tagged skb. If a new skb is created, @skb is freed.
 *
 * Following the skb_unshare() example, in case of error, the calling function
 * doesn&apos;t have to worry about freeing the original skb.
 *
 * Does not change skb-&gt;protocol so this function can be used during receive.
 */</doc>
