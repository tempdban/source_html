<def f='linux-4.14.y/arch/x86/include/asm/tlb.h' l='28' ll='31' type='void __tlb_remove_table(void * table)'/>
<doc f='linux-4.14.y/arch/x86/include/asm/tlb.h' l='19'>/*
 * While x86 architecture in general requires an IPI to perform TLB
 * shootdown, enablement code for several hypervisors overrides
 * .flush_tlb_others hook in pv_mmu_ops and implements it by issuing
 * a hypercall. To keep software pagetable walkers safe in this case we
 * switch to RCU based table free (HAVE_RCU_TABLE_FREE). See the comment
 * below &apos;ifdef CONFIG_HAVE_RCU_TABLE_FREE&apos; in include/asm-generic/tlb.h
 * for more details.
 */</doc>
<use f='linux-4.14.y/mm/memory.c' l='349' u='c' c='tlb_remove_table_one'/>
<use f='linux-4.14.y/mm/memory.c' l='360' u='c' c='tlb_remove_table_rcu'/>
<use f='linux-4.14.y/mm/memory.c' l='384' u='c' c='tlb_remove_table'/>
