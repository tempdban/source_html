<def f='linux-4.18.y/drivers/net/ethernet/intel/igb/e1000_hw.h' l='474' ll='486'/>
<size>72</size>
<mbr r='e1000_mbx_operations::init_params' o='0' t='s32 (*)(struct e1000_hw *)'/>
<mbr r='e1000_mbx_operations::read' o='64' t='s32 (*)(struct e1000_hw *, u32 *, u16, u16, bool)'/>
<mbr r='e1000_mbx_operations::write' o='128' t='s32 (*)(struct e1000_hw *, u32 *, u16, u16)'/>
<mbr r='e1000_mbx_operations::read_posted' o='192' t='s32 (*)(struct e1000_hw *, u32 *, u16, u16)'/>
<mbr r='e1000_mbx_operations::write_posted' o='256' t='s32 (*)(struct e1000_hw *, u32 *, u16, u16)'/>
<mbr r='e1000_mbx_operations::check_for_msg' o='320' t='s32 (*)(struct e1000_hw *, u16)'/>
<mbr r='e1000_mbx_operations::check_for_ack' o='384' t='s32 (*)(struct e1000_hw *, u16)'/>
<mbr r='e1000_mbx_operations::check_for_rst' o='448' t='s32 (*)(struct e1000_hw *, u16)'/>
<mbr r='e1000_mbx_operations::unlock' o='512' t='s32 (*)(struct e1000_hw *, u16)'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/igbvf/vf.h' l='183' ll='192'/>
<size>64</size>
<mbr r='e1000_mbx_operations::init_params' o='0' t='s32 (*)(struct e1000_hw *)'/>
<mbr r='e1000_mbx_operations::read' o='64' t='s32 (*)(struct e1000_hw *, u32 *, u16)'/>
<mbr r='e1000_mbx_operations::write' o='128' t='s32 (*)(struct e1000_hw *, u32 *, u16)'/>
<mbr r='e1000_mbx_operations::read_posted' o='192' t='s32 (*)(struct e1000_hw *, u32 *, u16)'/>
<mbr r='e1000_mbx_operations::write_posted' o='256' t='s32 (*)(struct e1000_hw *, u32 *, u16)'/>
<mbr r='e1000_mbx_operations::check_for_msg' o='320' t='s32 (*)(struct e1000_hw *)'/>
<mbr r='e1000_mbx_operations::check_for_ack' o='384' t='s32 (*)(struct e1000_hw *)'/>
<mbr r='e1000_mbx_operations::check_for_rst' o='448' t='s32 (*)(struct e1000_hw *)'/>
