<dec f='linux-4.18.y/include/drm/drm_gem.h' l='181' type='void drm_gem_private_object_init(struct drm_device * dev, struct drm_gem_object * obj, size_t size)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='140' u='c' c='drm_gem_object_init'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='162' ll='174' type='void drm_gem_private_object_init(struct drm_device * dev, struct drm_gem_object * obj, size_t size)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='175' type='void drm_gem_private_object_init(struct drm_device * , struct drm_gem_object * , size_t )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='175' c='drm_gem_private_object_init'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='175' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='175' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='152'>/**
 * drm_gem_private_object_init - initialize an allocated private GEM object
 * @dev: drm_device the object should be initialized for
 * @obj: drm_gem_object to initialize
 * @size: object size
 *
 * Initialize an already allocated GEM object of the specified size with
 * no GEM provided backing store. Instead the caller is responsible for
 * backing the object and handling it.
 */</doc>
