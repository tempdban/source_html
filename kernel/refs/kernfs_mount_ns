<dec f='linux-4.18.y/include/linux/kernfs.h' l='353' type='struct dentry * kernfs_mount_ns(struct file_system_type * fs_type, int flags, struct kernfs_root * root, unsigned long magic, bool * new_sb_created, const void * ns)'/>
<use f='linux-4.18.y/include/linux/kernfs.h' l='543' u='c' c='kernfs_mount'/>
<def f='linux-4.18.y/fs/kernfs/mount.c' l='305' ll='347' type='struct dentry * kernfs_mount_ns(struct file_system_type * fs_type, int flags, struct kernfs_root * root, unsigned long magic, bool * new_sb_created, const void * ns)'/>
<doc f='linux-4.18.y/fs/kernfs/mount.c' l='289'>/**
 * kernfs_mount_ns - kernfs mount helper
 * @fs_type: file_system_type of the fs being mounted
 * @flags: mount flags specified for the mount
 * @root: kernfs_root of the hierarchy being mounted
 * @magic: file system specific magic number
 * @new_sb_created: tell the caller if we allocated a new superblock
 * @ns: optional namespace tag of the mount
 *
 * This is to be called from each kernfs user&apos;s file_system_type-&gt;mount()
 * implementation, which should pass through the specified @fs_type and
 * @flags, and specify the hierarchy and namespace tag to mount via @root
 * and @ns, respectively.
 *
 * The return value can be passed to the vfs layer verbatim.
 */</doc>
<use f='linux-4.18.y/fs/sysfs/mount.c' l='36' u='c' c='sysfs_mount'/>
