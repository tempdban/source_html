<dec f='linux-4.18.y/include/net/net_failover.h' l='30' type='struct failover * net_failover_create(struct net_device * standby_dev)'/>
<def f='linux-4.18.y/drivers/net/net_failover.c' l='708' ll='775' type='struct failover * net_failover_create(struct net_device * standby_dev)'/>
<dec f='linux-4.18.y/drivers/net/net_failover.c' l='776' type='struct failover * net_failover_create(struct net_device * )'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='776' c='net_failover_create'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='776' u='a'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='776' u='a'/>
<doc f='linux-4.18.y/drivers/net/net_failover.c' l='695'>/**
 * net_failover_create - Create and register a failover instance
 *
 * @dev: standby netdev
 *
 * Creates a failover netdev and registers a failover instance for a standby
 * netdev. Used by paravirtual drivers that use 3-netdev model.
 * The failover netdev acts as a master device and controls 2 slave devices -
 * the original standby netdev and a VF netdev with the same MAC gets
 * registered as primary netdev.
 *
 * Return: pointer to failover instance
 */</doc>
<use f='linux-4.18.y/drivers/net/virtio_net.c' l='2941' u='c' c='virtnet_probe'/>
