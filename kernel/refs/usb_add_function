<dec f='linux-4.18.y/include/linux/usb/composite.h' l='245' type='int usb_add_function(struct usb_configuration * , struct usb_function * )'/>
<def f='linux-4.18.y/drivers/usb/gadget/composite.c' l='256' ll='306' type='int usb_add_function(struct usb_configuration * config, struct usb_function * function)'/>
<dec f='linux-4.18.y/drivers/usb/gadget/composite.c' l='307' type='int usb_add_function(struct usb_configuration * , struct usb_function * )'/>
<use f='linux-4.18.y/drivers/usb/gadget/composite.c' l='307' c='usb_add_function'/>
<use f='linux-4.18.y/drivers/usb/gadget/composite.c' l='307' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/composite.c' l='307' u='a'/>
<doc f='linux-4.18.y/drivers/usb/gadget/composite.c' l='242'>/**
 * usb_add_function() - add a function to a configuration
 * @config: the configuration
 * @function: the function being added
 * Context: single threaded during gadget setup
 *
 * After initialization, each configuration must have one or more
 * functions added to it.  Adding a function involves calling its @bind()
 * method to allocate resources such as interface and string identifiers
 * and endpoints.
 *
 * This function returns the value of the function&apos;s bind(), which is
 * zero for success else a negative errno value.
 */</doc>
<use f='linux-4.18.y/drivers/usb/gadget/configfs.c' l='1351' u='c' c='configfs_composite_bind'/>
