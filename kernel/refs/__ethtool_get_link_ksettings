<dec f='linux-4.18.y/include/linux/ethtool.h' l='164' type='int __ethtool_get_link_ksettings(struct net_device * dev, struct ethtool_link_ksettings * link_ksettings)'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='380' u='c' c='bond_update_speed_duplex'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_main.c' l='455' u='c' c='ipvlan_ethtool_get_link_ksettings'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='1024' u='c' c='macvlan_ethtool_get_link_ksettings'/>
<use f='linux-4.18.y/drivers/net/net_failover.c' l='350' u='c' c='nfo_ethtool_get_link_ksettings'/>
<use f='linux-4.18.y/net/bridge/br_if.c' l='42' u='c' c='port_cost'/>
<def f='linux-4.18.y/net/core/ethtool.c' l='551' ll='582' type='int __ethtool_get_link_ksettings(struct net_device * dev, struct ethtool_link_ksettings * link_ksettings)'/>
<dec f='linux-4.18.y/net/core/ethtool.c' l='583' type='int __ethtool_get_link_ksettings(struct net_device * , struct ethtool_link_ksettings * )'/>
<use f='linux-4.18.y/net/core/ethtool.c' l='583' c='__ethtool_get_link_ksettings'/>
<use f='linux-4.18.y/net/core/ethtool.c' l='583' u='a'/>
<use f='linux-4.18.y/net/core/ethtool.c' l='583' u='a'/>
<doc f='linux-4.18.y/net/core/ethtool.c' l='541'>/* Internal kernel helper to query a device ethtool_link_settings.
 *
 * Backward compatibility note: for compatibility with legacy drivers
 * that implement only the ethtool_cmd API, this has to work with both
 * drivers implementing get_link_ksettings API and drivers
 * implementing get_settings API. When drivers implement get_settings
 * and report ethtool_cmd deprecated fields
 * (transceiver/maxrxpkt/maxtxpkt), these fields are silently ignored
 * because the resulting struct ethtool_link_settings does not report them.
 */</doc>
<use f='linux-4.18.y/net/core/net-sysfs.c' l='208' u='c' c='speed_show'/>
<use f='linux-4.18.y/net/core/net-sysfs.c' l='228' u='c' c='duplex_show'/>
<use f='linux-4.18.y/net/packet/af_packet.c' l='540' u='c' c='prb_calc_retire_blk_tmo'/>
