<dec f='linux-4.18.y/include/linux/fs.h' l='1095' type='int __break_lease(struct inode * inode, unsigned int flags, unsigned int type)'/>
<use f='linux-4.18.y/include/linux/fs.h' l='2322' u='c' c='break_lease'/>
<use f='linux-4.18.y/include/linux/fs.h' l='2336' u='c' c='break_deleg'/>
<use f='linux-4.18.y/include/linux/fs.h' l='2366' u='c' c='break_layout'/>
<def f='linux-4.18.y/fs/locks.c' l='1452' ll='1552' type='int __break_lease(struct inode * inode, unsigned int mode, unsigned int type)'/>
<dec f='linux-4.18.y/fs/locks.c' l='1554' type='int __break_lease(struct inode * , unsigned int , unsigned int )'/>
<use f='linux-4.18.y/fs/locks.c' l='1554' c='__break_lease'/>
<use f='linux-4.18.y/fs/locks.c' l='1554' u='a'/>
<use f='linux-4.18.y/fs/locks.c' l='1554' u='a'/>
<doc f='linux-4.18.y/fs/locks.c' l='1439'>/**
 *	__break_lease	-	revoke all outstanding leases on file
 *	@inode: the inode of the file to return
 *	@mode: O_RDONLY: break only write leases; O_WRONLY or O_RDWR:
 *	    break all leases
 *	@type: FL_LEASE: break leases and delegations; FL_DELEG: break
 *	    only delegations
 *
 *	break_lease (inlined for speed) has checked there already is at least
 *	some kind of lock (maybe a lease) on this file.  Leases are broken on
 *	a call to open() or truncate().  This function can sleep unless you
 *	specified %O_NONBLOCK to your open().
 */</doc>
