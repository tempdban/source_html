<dec f='linux-4.14.y/include/linux/mm.h' l='2023' type='int init_per_zone_wmark_min()'/>
<def f='linux-4.14.y/mm/page_alloc.c' l='6992' ll='7020' type='int init_per_zone_wmark_min()'/>
<use f='linux-4.14.y/mm/page_alloc.c' l='7021'/>
<doc f='linux-4.14.y/mm/page_alloc.c' l='6968'>/*
 * Initialise min_free_kbytes.
 *
 * For small machines we want it small (128k min).  For large machines
 * we want it large (64MB max).  But it is not linear, because network
 * bandwidth does not increase linearly with machine size.  We use
 *
 *	min_free_kbytes = 4 * sqrt(lowmem_kbytes), for better accuracy:
 *	min_free_kbytes = sqrt(lowmem_kbytes * 16)
 *
 * which yields
 *
 * 16MB:	512k
 * 32MB:	724k
 * 64MB:	1024k
 * 128MB:	1448k
 * 256MB:	2048k
 * 512MB:	2896k
 * 1024MB:	4096k
 * 2048MB:	5792k
 * 4096MB:	8192k
 * 8192MB:	11584k
 * 16384MB:	16384k
 */</doc>
<dec f='linux-4.14.y/include/linux/mm.h' l='2023' type='int init_per_zone_wmark_min()'/>
<def f='linux-4.14.y/mm/page_alloc.c' l='6992' ll='7020' type='int init_per_zone_wmark_min()'/>
<use f='linux-4.14.y/mm/page_alloc.c' l='7021'/>
<doc f='linux-4.14.y/mm/page_alloc.c' l='6968'>/*
 * Initialise min_free_kbytes.
 *
 * For small machines we want it small (128k min).  For large machines
 * we want it large (64MB max).  But it is not linear, because network
 * bandwidth does not increase linearly with machine size.  We use
 *
 *	min_free_kbytes = 4 * sqrt(lowmem_kbytes), for better accuracy:
 *	min_free_kbytes = sqrt(lowmem_kbytes * 16)
 *
 * which yields
 *
 * 16MB:	512k
 * 32MB:	724k
 * 64MB:	1024k
 * 128MB:	1448k
 * 256MB:	2048k
 * 512MB:	2896k
 * 1024MB:	4096k
 * 2048MB:	5792k
 * 4096MB:	8192k
 * 8192MB:	11584k
 * 16384MB:	16384k
 */</doc>
