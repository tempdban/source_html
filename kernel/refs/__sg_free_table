<dec f='linux-4.18.y/include/linux/scatterlist.h' l='269' type='void __sg_free_table(struct sg_table * , unsigned int , bool , sg_free_fn * )'/>
<def f='linux-4.18.y/lib/scatterlist.c' l='193' ll='230' type='void __sg_free_table(struct sg_table * table, unsigned int max_ents, bool skip_first_chunk, sg_free_fn * free_fn)'/>
<dec f='linux-4.18.y/lib/scatterlist.c' l='231' type='void __sg_free_table(struct sg_table * , unsigned int , bool , sg_free_fn * )'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='231' c='__sg_free_table'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='231' u='a'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='231' u='a'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='240' u='c' c='sg_free_table'/>
<use f='linux-4.18.y/lib/scatterlist.c' l='354' u='c' c='sg_alloc_table'/>
<doc f='linux-4.18.y/lib/scatterlist.c' l='180'>/**
 * __sg_free_table - Free a previously mapped sg table
 * @table:	The sg table header to use
 * @max_ents:	The maximum number of entries per single scatterlist
 * @skip_first_chunk: don&apos;t free the (preallocated) first scatterlist chunk
 * @free_fn:	Free function
 *
 *  Description:
 *    Free an sg table previously allocated and setup with
 *    __sg_alloc_table().  The @max_ents value must be identical to
 *    that previously used with __sg_alloc_table().
 *
 **/</doc>
<use f='linux-4.18.y/lib/sg_pool.c' l='83' u='c' c='sg_free_table_chained'/>
