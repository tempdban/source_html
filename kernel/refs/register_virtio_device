<dec f='linux-4.18.y/include/linux/virtio.h' l='146' type='int register_virtio_device(struct virtio_device * dev)'/>
<def f='linux-4.18.y/drivers/virtio/virtio.c' l='315' ll='354' type='int register_virtio_device(struct virtio_device * dev)'/>
<dec f='linux-4.18.y/drivers/virtio/virtio.c' l='355' type='int register_virtio_device(struct virtio_device * )'/>
<use f='linux-4.18.y/drivers/virtio/virtio.c' l='355' c='register_virtio_device'/>
<use f='linux-4.18.y/drivers/virtio/virtio.c' l='355' u='a'/>
<use f='linux-4.18.y/drivers/virtio/virtio.c' l='355' u='a'/>
<doc f='linux-4.18.y/drivers/virtio/virtio.c' l='306'>/**
 * register_virtio_device - register virtio device
 * @dev        : virtio device to be registered
 *
 * On error, the caller must call put_device on &amp;@dev-&gt;dev (and not kfree),
 * as another code path may have obtained a reference to @dev.
 *
 * Returns: 0 on suceess, -error on failure
 */</doc>
<use f='linux-4.18.y/drivers/virtio/virtio_mmio.c' l='585' u='c' c='virtio_mmio_probe'/>
<use f='linux-4.18.y/drivers/virtio/virtio_pci_common.c' l='554' u='c' c='virtio_pci_probe'/>
