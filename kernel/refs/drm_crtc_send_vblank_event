<dec f='linux-4.18.y/include/drm/drm_vblank.h' l='182' type='void drm_crtc_send_vblank_event(struct drm_crtc * crtc, struct drm_pending_vblank_event * e)'/>
<use f='linux-4.18.y/drivers/gpu/drm/bochs/bochs_kms.c' l='111' u='c' c='bochs_crtc_page_flip'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='904' ll='921' type='void drm_crtc_send_vblank_event(struct drm_crtc * crtc, struct drm_pending_vblank_event * e)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='922' type='void drm_crtc_send_vblank_event(struct drm_crtc * , struct drm_pending_vblank_event * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='922' c='drm_crtc_send_vblank_event'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='922' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='922' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='893'>/**
 * drm_crtc_send_vblank_event - helper to send vblank event after pageflip
 * @crtc: the source CRTC of the vblank event
 * @e: the event to send
 *
 * Updates sequence # and timestamp on event for the most recently processed
 * vblank, and sends it to userspace.  Caller must hold event lock.
 *
 * See drm_crtc_arm_vblank_event() for a helper which can be used in certain
 * situation, especially to send out events for atomic commit operations.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_display.c' l='356' u='c' c='qxl_crtc_atomic_flush'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='157' u='c' c='virtio_gpu_crtc_atomic_flush'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='579' u='c' c='vmw_du_crtc_atomic_flush'/>
