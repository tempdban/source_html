<dec f='linux-4.18.y/include/linux/thermal.h' l='451' type='struct thermal_zone_device * thermal_zone_get_zone_by_name(const char * name)'/>
<def f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1369' ll='1394' type='struct thermal_zone_device * thermal_zone_get_zone_by_name(const char * name)'/>
<dec f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1395' type='struct thermal_zone_device * thermal_zone_get_zone_by_name(const char * )'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1395' c='thermal_zone_get_zone_by_name'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1395' u='a'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1395' u='a'/>
<doc f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1359'>/**
 * thermal_zone_get_zone_by_name() - search for a zone and returns its ref
 * @name: thermal zone name to fetch the temperature
 *
 * When only one zone is found with the passed name, returns a reference to it.
 *
 * Return: On success returns a reference to an unique thermal zone with
 * matching name equals to @name, an ERR_PTR otherwise (-EINVAL for invalid
 * paramenters, -ENODEV for not found and -EEXIST for multiple matches).
 */</doc>
