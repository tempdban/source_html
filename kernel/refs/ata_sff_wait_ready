<dec f='linux-4.14.y/include/linux/libata.h' l='1825' type='int ata_sff_wait_ready(struct ata_link * link, unsigned long deadline)'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='277' ll='280' type='int ata_sff_wait_ready(struct ata_link * link, unsigned long deadline)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='281' type='int ata_sff_wait_ready(struct ata_link * , unsigned long )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='281' c='ata_sff_wait_ready'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='281' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='281' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1776' u='c' c='ata_sff_prereset'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1931' u='c' c='ata_sff_wait_after_reset'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1960' u='c' c='ata_sff_wait_after_reset'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='263'>/**
 *	ata_sff_wait_ready - sleep until BSY clears, or timeout
 *	@link: SFF link to wait ready status for
 *	@deadline: deadline jiffies for the operation
 *
 *	Sleep until ATA Status register bit BSY clears, or timeout
 *	occurs.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep).
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
