<dec f='linux-4.18.y/include/linux/skbuff.h' l='1170' type='u32 skb_get_poff(const struct sk_buff * skb)'/>
<use f='linux-4.18.y/net/core/filter.c' l='126' u='c' c='____bpf_skb_get_pay_offset'/>
<def f='linux-4.18.y/net/core/flow_dissector.c' l='1315' ll='1323' type='u32 skb_get_poff(const struct sk_buff * skb)'/>
<doc f='linux-4.18.y/net/core/flow_dissector.c' l='1306'>/**
 * skb_get_poff - get the offset to the payload
 * @skb: sk_buff to get the payload offset from
 *
 * The function will get the offset to the payload as far as it could
 * be dissected.  The main user is currently BPF, so that we can dynamically
 * truncate packets without needing to push actual payload to the user
 * space and can analyze headers only, instead.
 */</doc>
