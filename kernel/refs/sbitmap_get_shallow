<dec f='linux-4.14.y/include/linux/sbitmap.h' l='194' type='int sbitmap_get_shallow(struct sbitmap * sb, unsigned int alloc_hint, unsigned long shallow_depth)'/>
<doc f='linux-4.14.y/include/linux/sbitmap.h' l='178'>/**
 * sbitmap_get_shallow() - Try to allocate a free bit from a &amp;struct sbitmap,
 * limiting the depth used from each word.
 * @sb: Bitmap to allocate from.
 * @alloc_hint: Hint for where to start searching for a free bit.
 * @shallow_depth: The maximum number of bits to allocate from a single word.
 *
 * This rather specific operation allows for having multiple users with
 * different allocation limits. E.g., there can be a high-priority class that
 * uses sbitmap_get() and a low-priority class that uses sbitmap_get_shallow()
 * with a @shallow_depth of (1 &lt;&lt; (@sb-&gt;shift - 1)). Then, the low-priority
 * class can only allocate half of the total bits in the bitmap, preventing it
 * from starving out the high-priority class.
 *
 * Return: Non-negative allocated bit number if successful, -1 otherwise.
 */</doc>
<def f='linux-4.14.y/lib/sbitmap.c' l='145' ll='173' type='int sbitmap_get_shallow(struct sbitmap * sb, unsigned int alloc_hint, unsigned long shallow_depth)'/>
<dec f='linux-4.14.y/lib/sbitmap.c' l='174' type='int sbitmap_get_shallow(struct sbitmap * , unsigned int , unsigned long )'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='174' c='sbitmap_get_shallow'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='174' u='a'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='174' u='a'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='389' u='c' c='__sbitmap_queue_get_shallow'/>
