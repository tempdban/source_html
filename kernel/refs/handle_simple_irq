<dec f='linux-4.18.y/include/linux/irq.h' l='589' type='void handle_simple_irq(struct irq_desc * desc)'/>
<use f='linux-4.18.y/drivers/i2c/i2c-core-base.c' l='1156' u='r' c='i2c_host_notify_irq_map'/>
<def f='linux-4.18.y/kernel/irq/chip.c' l='532' ll='551' type='void handle_simple_irq(struct irq_desc * desc)'/>
<dec f='linux-4.18.y/kernel/irq/chip.c' l='552' type='void handle_simple_irq(struct irq_desc * )'/>
<use f='linux-4.18.y/kernel/irq/chip.c' l='552' c='handle_simple_irq'/>
<use f='linux-4.18.y/kernel/irq/chip.c' l='552' u='a'/>
<use f='linux-4.18.y/kernel/irq/chip.c' l='552' u='a'/>
<doc f='linux-4.18.y/kernel/irq/chip.c' l='521'>/**
 *	handle_simple_irq - Simple and software-decoded IRQs.
 *	@desc:	the interrupt description structure for this irq
 *
 *	Simple interrupts are either sent from a demultiplexing interrupt
 *	handler or come from hardware, where no interrupt hardware control
 *	is necessary.
 *
 *	Note: The caller is expected to handle the ack, clear, mask and
 *	unmask issues if necessary.
 */</doc>
