<dec f='linux-4.18.y/drivers/scsi/scsi_priv.h' l='74' type='enum blk_eh_timer_return scsi_times_out(struct request * req)'/>
<def f='linux-4.18.y/drivers/scsi/scsi_error.c' l='283' ll='320' type='enum blk_eh_timer_return scsi_times_out(struct request * req)'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_error.c' l='273'>/**
 * scsi_times_out - Timeout function for normal scsi commands.
 * @req:	request that is timing out.
 *
 * Notes:
 *     We do not need to lock this.  There is the potential for a race
 *     only in that the normal completion handling might run, but if the
 *     normal completion function determines that the timer has already
 *     fired, then it mustn&apos;t do anything.
 */</doc>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2110' u='c' c='scsi_timeout'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='2262' u='r' c='scsi_old_alloc_queue'/>
