<dec f='linux-4.18.y/include/linux/irqdomain.h' l='256' type='struct irq_domain * irq_domain_add_legacy(struct device_node * of_node, unsigned int size, unsigned int first_irq, irq_hw_number_t first_hwirq, const struct irq_domain_ops * ops, void * host_data)'/>
<use f='linux-4.18.y/include/linux/irqdomain.h' l='339' u='c' c='irq_domain_add_legacy_isa'/>
<def f='linux-4.18.y/kernel/irq/irqdomain.c' l='359' ll='374' type='struct irq_domain * irq_domain_add_legacy(struct device_node * of_node, unsigned int size, unsigned int first_irq, irq_hw_number_t first_hwirq, const struct irq_domain_ops * ops, void * host_data)'/>
<dec f='linux-4.18.y/kernel/irq/irqdomain.c' l='375' type='struct irq_domain * irq_domain_add_legacy(struct device_node * , unsigned int , unsigned int , irq_hw_number_t , const struct irq_domain_ops * , void * )'/>
<use f='linux-4.18.y/kernel/irq/irqdomain.c' l='375' c='irq_domain_add_legacy'/>
<use f='linux-4.18.y/kernel/irq/irqdomain.c' l='375' u='a'/>
<use f='linux-4.18.y/kernel/irq/irqdomain.c' l='375' u='a'/>
<doc f='linux-4.18.y/kernel/irq/irqdomain.c' l='344'>/**
 * irq_domain_add_legacy() - Allocate and register a legacy revmap irq_domain.
 * @of_node: pointer to interrupt controller&apos;s device tree node.
 * @size: total number of irqs in legacy mapping
 * @first_irq: first number of irq block assigned to the domain
 * @first_hwirq: first hwirq number to use for the translation. Should normally
 *               be &apos;0&apos;, but a positive integer can be used if the effective
 *               hwirqs numbering does not begin at zero.
 * @ops: map/unmap domain callbacks
 * @host_data: Controller private data pointer
 *
 * Note: the map() callback will be called before this function returns
 * for all legacy interrupts except 0 (which is always the invalid irq for
 * a legacy controller).
 */</doc>
