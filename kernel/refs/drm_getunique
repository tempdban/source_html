<dec f='linux-4.14.y/drivers/gpu/drm/drm_internal.h' l='156' type='int drm_getunique(struct drm_device * , void * , struct drm_file * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioc32.c' l='142' u='r' c='compat_drm_getunique'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='110' ll='127' type='int drm_getunique(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='543'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='543'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='543'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='543'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='99'>/*
 * Get the bus id.
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg user argument, pointing to a drm_unique structure.
 * \return zero on success or a negative number on failure.
 *
 * Copies the bus id from drm_device::unique into user space.
 */</doc>
