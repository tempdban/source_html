<dec f='linux-4.14.y/include/linux/netdevice.h' l='2445' type='struct net_device * __dev_get_by_index(struct net * net, int ifindex)'/>
<def f='linux-4.14.y/net/core/dev.c' l='809' ll='819' type='struct net_device * __dev_get_by_index(struct net * net, int ifindex)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='820' type='struct net_device * __dev_get_by_index(struct net * , int )'/>
<use f='linux-4.14.y/net/core/dev.c' l='820' c='__dev_get_by_index'/>
<use f='linux-4.14.y/net/core/dev.c' l='820' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='820' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='7117' u='c' c='dev_new_index'/>
<use f='linux-4.14.y/net/core/dev.c' l='7587' u='c' c='register_netdevice'/>
<use f='linux-4.14.y/net/core/dev.c' l='8346' u='c' c='dev_change_net_namespace'/>
<doc f='linux-4.14.y/net/core/dev.c' l='797'>/**
 *	__dev_get_by_index - find a device by its ifindex
 *	@net: the applicable net namespace
 *	@ifindex: index of device
 *
 *	Search for an interface by index. Returns %NULL if the device
 *	is not found or a pointer to the device. The device has not
 *	had its reference counter increased so the caller must be careful
 *	about locking. The caller must hold either the RTNL semaphore
 *	or @dev_base_lock.
 */</doc>
<use f='linux-4.14.y/net/core/neighbour.c' l='1662' u='c' c='neigh_delete'/>
<use f='linux-4.14.y/net/core/neighbour.c' l='1727' u='c' c='neigh_add'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='1935' u='c' c='do_set_master'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2292' u='c' c='rtnl_setlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2379' u='c' c='rtnl_dellink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2515' u='c' c='rtnl_newlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2766' u='c' c='rtnl_getlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3066' u='c' c='rtnl_fdb_add'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3170' u='c' c='rtnl_fdb_del'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3307' u='c' c='rtnl_fdb_dump'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3621' u='c' c='rtnl_bridge_setlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3696' u='c' c='rtnl_bridge_dellink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='4066' u='c' c='rtnl_stats_get'/>
<use f='linux-4.14.y/net/ipv4/devinet.c' l='787' u='c' c='rtm_to_ifaddr'/>
<use f='linux-4.14.y/net/ipv4/devinet.c' l='1940' u='c' c='inet_netconf_get_devconf'/>
<use f='linux-4.14.y/net/ipv4/fib_semantics.c' l='807' u='c' c='fib_check_nh'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='577' u='c' c='prb_calc_retire_blk_tmo'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3536' u='c' c='packet_mc_add'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3595' u='c' c='packet_mc_drop'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3620' u='c' c='packet_flush_mclist'/>
<dec f='linux-4.14.y/include/linux/netdevice.h' l='2445' type='struct net_device * __dev_get_by_index(struct net * net, int ifindex)'/>
<def f='linux-4.14.y/net/core/dev.c' l='809' ll='819' type='struct net_device * __dev_get_by_index(struct net * net, int ifindex)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='820' type='struct net_device * __dev_get_by_index(struct net * , int )'/>
<use f='linux-4.14.y/net/core/dev.c' l='820' c='__dev_get_by_index'/>
<use f='linux-4.14.y/net/core/dev.c' l='820' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='820' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='7117' u='c' c='dev_new_index'/>
<use f='linux-4.14.y/net/core/dev.c' l='7587' u='c' c='register_netdevice'/>
<use f='linux-4.14.y/net/core/dev.c' l='8346' u='c' c='dev_change_net_namespace'/>
<doc f='linux-4.14.y/net/core/dev.c' l='797'>/**
 *	__dev_get_by_index - find a device by its ifindex
 *	@net: the applicable net namespace
 *	@ifindex: index of device
 *
 *	Search for an interface by index. Returns %NULL if the device
 *	is not found or a pointer to the device. The device has not
 *	had its reference counter increased so the caller must be careful
 *	about locking. The caller must hold either the RTNL semaphore
 *	or @dev_base_lock.
 */</doc>
<use f='linux-4.14.y/net/core/neighbour.c' l='1662' u='c' c='neigh_delete'/>
<use f='linux-4.14.y/net/core/neighbour.c' l='1727' u='c' c='neigh_add'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='1935' u='c' c='do_set_master'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2292' u='c' c='rtnl_setlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2379' u='c' c='rtnl_dellink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2515' u='c' c='rtnl_newlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2766' u='c' c='rtnl_getlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3066' u='c' c='rtnl_fdb_add'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3170' u='c' c='rtnl_fdb_del'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3307' u='c' c='rtnl_fdb_dump'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3621' u='c' c='rtnl_bridge_setlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='3696' u='c' c='rtnl_bridge_dellink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='4066' u='c' c='rtnl_stats_get'/>
<use f='linux-4.14.y/net/ipv4/devinet.c' l='787' u='c' c='rtm_to_ifaddr'/>
<use f='linux-4.14.y/net/ipv4/devinet.c' l='1940' u='c' c='inet_netconf_get_devconf'/>
<use f='linux-4.14.y/net/ipv4/fib_semantics.c' l='807' u='c' c='fib_check_nh'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='577' u='c' c='prb_calc_retire_blk_tmo'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3536' u='c' c='packet_mc_add'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3595' u='c' c='packet_mc_drop'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3620' u='c' c='packet_flush_mclist'/>
