<dec f='linux-4.14.y/include/drm/drm_plane.h' l='548' type='int drm_universal_plane_init(struct drm_device * dev, struct drm_plane * plane, uint32_t possible_crtcs, const struct drm_plane_funcs * funcs, const uint32_t * formats, unsigned int format_count, const uint64_t * format_modifiers, enum drm_plane_type type, const char * name)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_helper.c' l='123' u='c' c='create_primary_plane'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='164' ll='269' type='int drm_universal_plane_init(struct drm_device * dev, struct drm_plane * plane, uint32_t possible_crtcs, const struct drm_plane_funcs * funcs, const uint32_t * formats, unsigned int format_count, const uint64_t * format_modifiers, enum drm_plane_type type, const char * name)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' type='int drm_universal_plane_init(struct drm_device * , struct drm_plane * , uint32_t , const struct drm_plane_funcs * , const uint32_t * , unsigned int , const uint64_t * , enum drm_plane_type , const char * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' c='drm_universal_plane_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='323' u='c' c='drm_plane_init'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='146'>/**
 * drm_universal_plane_init - Initialize a new universal plane object
 * @dev: DRM device
 * @plane: plane object to init
 * @possible_crtcs: bitmask of possible CRTCs
 * @funcs: callbacks for the new plane
 * @formats: array of supported formats (DRM_FORMAT\_\*)
 * @format_count: number of elements in @formats
 * @format_modifiers: array of struct drm_format modifiers terminated by
 *                    DRM_FORMAT_MOD_INVALID
 * @type: type of plane (overlay, primary, cursor)
 * @name: printf style format string for the plane name, or NULL for default name
 *
 * Initializes a plane object of type @type.
 *
 * Returns:
 * Zero on success, error code on failure.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_simple_kms_helper.c' l='235' u='c' c='drm_simple_display_pipe_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='897' u='c' c='qxl_create_plane'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_plane.c' l='298' u='c' c='virtio_gpu_plane_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='427' u='c' c='vmw_ldu_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='442' u='c' c='vmw_ldu_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='638' u='c' c='vmw_sou_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='653' u='c' c='vmw_sou_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1458' u='c' c='vmw_stdu_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1473' u='c' c='vmw_stdu_init'/>
<dec f='linux-4.14.y/include/drm/drm_plane.h' l='548' type='int drm_universal_plane_init(struct drm_device * dev, struct drm_plane * plane, uint32_t possible_crtcs, const struct drm_plane_funcs * funcs, const uint32_t * formats, unsigned int format_count, const uint64_t * format_modifiers, enum drm_plane_type type, const char * name)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modeset_helper.c' l='123' u='c' c='create_primary_plane'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='164' ll='269' type='int drm_universal_plane_init(struct drm_device * dev, struct drm_plane * plane, uint32_t possible_crtcs, const struct drm_plane_funcs * funcs, const uint32_t * formats, unsigned int format_count, const uint64_t * format_modifiers, enum drm_plane_type type, const char * name)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' type='int drm_universal_plane_init(struct drm_device * , struct drm_plane * , uint32_t , const struct drm_plane_funcs * , const uint32_t * , unsigned int , const uint64_t * , enum drm_plane_type , const char * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' c='drm_universal_plane_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='270' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='323' u='c' c='drm_plane_init'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_plane.c' l='146'>/**
 * drm_universal_plane_init - Initialize a new universal plane object
 * @dev: DRM device
 * @plane: plane object to init
 * @possible_crtcs: bitmask of possible CRTCs
 * @funcs: callbacks for the new plane
 * @formats: array of supported formats (DRM_FORMAT\_\*)
 * @format_count: number of elements in @formats
 * @format_modifiers: array of struct drm_format modifiers terminated by
 *                    DRM_FORMAT_MOD_INVALID
 * @type: type of plane (overlay, primary, cursor)
 * @name: printf style format string for the plane name, or NULL for default name
 *
 * Initializes a plane object of type @type.
 *
 * Returns:
 * Zero on success, error code on failure.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_simple_kms_helper.c' l='235' u='c' c='drm_simple_display_pipe_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='897' u='c' c='qxl_create_plane'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_plane.c' l='298' u='c' c='virtio_gpu_plane_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='427' u='c' c='vmw_ldu_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='442' u='c' c='vmw_ldu_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='638' u='c' c='vmw_sou_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='653' u='c' c='vmw_sou_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1458' u='c' c='vmw_stdu_init'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1473' u='c' c='vmw_stdu_init'/>
