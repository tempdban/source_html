<def f='linux-4.18.y/include/linux/usb/tcpm.h' l='139' ll='161'/>
<size>120</size>
<doc f='linux-4.18.y/include/linux/usb/tcpm.h' l='110'>/**
 * struct tcpc_dev - Port configuration and callback functions
 * @config:	Pointer to port configuration
 * @get_vbus:	Called to read current VBUS state
 * @get_current_limit:
 *		Optional; called by the tcpm core when configured as a snk
 *		and cc=Rp-def. This allows the tcpm to provide a fallback
 *		current-limit detection method for the cc=Rp-def case.
 *		For example, some tcpcs may include BC1.2 charger detection
 *		and use that in this case.
 * @set_cc:	Called to set value of CC pins
 * @get_cc:	Called to read current CC pin values
 * @set_polarity:
 *		Called to set polarity
 * @set_vconn:	Called to enable or disable VCONN
 * @set_vbus:	Called to enable or disable VBUS
 * @set_current_limit:
 *		Optional; called to set current limit as negotiated
 *		with partner.
 * @set_pd_rx:	Called to enable or disable reception of PD messages
 * @set_roles:	Called to set power and data roles
 * @start_drp_toggling:
 *		Optional; if supported by hardware, called to start DRP
 *		toggling. DRP toggling is stopped automatically if
 *		a connection is established.
 * @try_role:	Optional; called to set a preferred role
 * @pd_transmit:Called to transmit PD message
 * @mux:	Pointer to multiplexer data
 */</doc>
<mbr r='tcpc_dev::config' o='0' t='const struct tcpc_config *'/>
<mbr r='tcpc_dev::init' o='64' t='int (*)(struct tcpc_dev *)'/>
<mbr r='tcpc_dev::get_vbus' o='128' t='int (*)(struct tcpc_dev *)'/>
<mbr r='tcpc_dev::get_current_limit' o='192' t='int (*)(struct tcpc_dev *)'/>
<mbr r='tcpc_dev::set_cc' o='256' t='int (*)(struct tcpc_dev *, enum typec_cc_status)'/>
<mbr r='tcpc_dev::get_cc' o='320' t='int (*)(struct tcpc_dev *, enum typec_cc_status *, enum typec_cc_status *)'/>
<mbr r='tcpc_dev::set_polarity' o='384' t='int (*)(struct tcpc_dev *, enum typec_cc_polarity)'/>
<mbr r='tcpc_dev::set_vconn' o='448' t='int (*)(struct tcpc_dev *, bool)'/>
<mbr r='tcpc_dev::set_vbus' o='512' t='int (*)(struct tcpc_dev *, bool, bool)'/>
<mbr r='tcpc_dev::set_current_limit' o='576' t='int (*)(struct tcpc_dev *, u32, u32)'/>
<mbr r='tcpc_dev::set_pd_rx' o='640' t='int (*)(struct tcpc_dev *, bool)'/>
<mbr r='tcpc_dev::set_roles' o='704' t='int (*)(struct tcpc_dev *, bool, enum typec_role, enum typec_data_role)'/>
<mbr r='tcpc_dev::start_drp_toggling' o='768' t='int (*)(struct tcpc_dev *, enum typec_cc_status)'/>
<mbr r='tcpc_dev::try_role' o='832' t='int (*)(struct tcpc_dev *, int)'/>
<mbr r='tcpc_dev::pd_transmit' o='896' t='int (*)(struct tcpc_dev *, enum tcpm_transmit_type, const struct pd_message *)'/>
