<dec f='linux-4.18.y/arch/x86/include/asm/msr.h' l='324' type='int msr_set_bit(u32 msr, u8 bit)'/>
<use f='linux-4.18.y/arch/x86/events/intel/core.c' l='3323' u='c' c='flip_smm_bit'/>
<use f='linux-4.18.y/arch/x86/kernel/amd_nb.c' l='419' u='c' c='__fix_erratum_688'/>
<use f='linux-4.18.y/arch/x86/kernel/amd_nb.c' l='420' u='c' c='__fix_erratum_688'/>
<use f='linux-4.18.y/arch/x86/kernel/cpu/amd.c' l='681' u='c' c='early_init_amd'/>
<use f='linux-4.18.y/arch/x86/kernel/cpu/amd.c' l='699' u='c' c='early_init_amd'/>
<use f='linux-4.18.y/arch/x86/kernel/cpu/amd.c' l='745' u='c' c='init_amd_k8'/>
<use f='linux-4.18.y/arch/x86/kernel/cpu/amd.c' l='768' u='c' c='init_amd_gh'/>
<use f='linux-4.18.y/arch/x86/kernel/cpu/amd.c' l='793' u='c' c='init_amd_ln'/>
<use f='linux-4.18.y/arch/x86/kernel/cpu/amd.c' l='883' u='c' c='init_amd'/>
<def f='linux-4.18.y/arch/x86/lib/msr.c' l='98' ll='101' type='int msr_set_bit(u32 msr, u8 bit)'/>
<doc f='linux-4.18.y/arch/x86/lib/msr.c' l='90'>/**
 * Set @bit in a MSR @msr.
 *
 * Retval:
 * &lt; 0: An error was encountered.
 * = 0: Bit was already set.
 * &gt; 0: Hardware accepted the MSR write.
 */</doc>
