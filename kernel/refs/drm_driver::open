<dec f='linux-4.14.y/include/drm/drm_drv.h' l='107' type='int (*)(struct drm_device *, struct drm_file *)'/>
<offset>64</offset>
<doc f='linux-4.14.y/include/drm/drm_drv.h' l='89'>/**
	 * @open:
	 *
	 * Driver callback when a new &amp;struct drm_file is opened. Useful for
	 * setting up driver-private data structures like buffer allocators,
	 * execution contexts or similar things. Such driver-private resources
	 * must be released again in @postclose.
	 *
	 * Since the display/modeset side of DRM can only be owned by exactly
	 * one &amp;struct drm_file (see &amp;drm_file.is_master and &amp;drm_device.master)
	 * there should never be a need to set up any modeset related resources
	 * in this callback. Doing so would be a driver design bug.
	 *
	 * Returns:
	 *
	 * 0 on success, a negative error code on failure, which will be
	 * promoted to userspace as the result of the open() system call.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='244' u='r' c='drm_open_helper'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='245' u='r' c='drm_open_helper'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='120' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1540' u='w'/>
<dec f='linux-4.14.y/include/drm/drm_drv.h' l='107' type='int (*)(struct drm_device *, struct drm_file *)'/>
<offset>64</offset>
<doc f='linux-4.14.y/include/drm/drm_drv.h' l='89'>/**
	 * @open:
	 *
	 * Driver callback when a new &amp;struct drm_file is opened. Useful for
	 * setting up driver-private data structures like buffer allocators,
	 * execution contexts or similar things. Such driver-private resources
	 * must be released again in @postclose.
	 *
	 * Since the display/modeset side of DRM can only be owned by exactly
	 * one &amp;struct drm_file (see &amp;drm_file.is_master and &amp;drm_device.master)
	 * there should never be a need to set up any modeset related resources
	 * in this callback. Doing so would be a driver design bug.
	 *
	 * Returns:
	 *
	 * 0 on success, a negative error code on failure, which will be
	 * promoted to userspace as the result of the open() system call.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='244' u='r' c='drm_open_helper'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='245' u='r' c='drm_open_helper'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='120' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1540' u='w'/>
