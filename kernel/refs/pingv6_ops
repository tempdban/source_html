<def f='linux-4.18.y/include/net/ping.h' l='33' ll='47'/>
<size>48</size>
<doc f='linux-4.18.y/include/net/ping.h' l='32'>/* Compatibility glue so we can support IPv6 when it&apos;s compiled as a module */</doc>
<mbr r='pingv6_ops::ipv6_recv_error' o='0' t='int (*)(struct sock *, struct msghdr *, int, int *)'/>
<mbr r='pingv6_ops::ip6_datagram_recv_common_ctl' o='64' t='void (*)(struct sock *, struct msghdr *, struct sk_buff *)'/>
<mbr r='pingv6_ops::ip6_datagram_recv_specific_ctl' o='128' t='void (*)(struct sock *, struct msghdr *, struct sk_buff *)'/>
<mbr r='pingv6_ops::icmpv6_err_convert' o='192' t='int (*)(u8, u8, int *)'/>
<mbr r='pingv6_ops::ipv6_icmp_error' o='256' t='void (*)(struct sock *, struct sk_buff *, int, __be16, u32, u8 *)'/>
<mbr r='pingv6_ops::ipv6_chk_addr' o='320' t='int (*)(struct net *, const struct in6_addr *, const struct net_device *, int)'/>
<def f='linux-4.18.y/net/ipv4/ping.c' l='62' type='struct pingv6_ops'/>
<dec f='linux-4.18.y/net/ipv4/ping.c' l='63' type='typeof (pingv6_ops)'/>
<use f='linux-4.18.y/net/ipv4/ping.c' l='63'/>
<use f='linux-4.18.y/net/ipv4/ping.c' l='63' u='a'/>
<use f='linux-4.18.y/net/ipv4/ping.c' l='63' u='a'/>
