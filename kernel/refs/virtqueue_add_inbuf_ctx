<dec f='linux-4.18.y/include/linux/virtio.h' l='48' type='int virtqueue_add_inbuf_ctx(struct virtqueue * vq, struct scatterlist * sg, unsigned int num, void * data, void * ctx, gfp_t gfp)'/>
<use f='linux-4.18.y/drivers/net/virtio_net.c' l='1035' u='c' c='add_recvbuf_small'/>
<use f='linux-4.18.y/drivers/net/virtio_net.c' l='1142' u='c' c='add_recvbuf_mergeable'/>
<def f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='529' ll='536' type='int virtqueue_add_inbuf_ctx(struct virtqueue * vq, struct scatterlist * sg, unsigned int num, void * data, void * ctx, gfp_t gfp)'/>
<dec f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='537' type='int virtqueue_add_inbuf_ctx(struct virtqueue * , struct scatterlist * , unsigned int , void * , void * , gfp_t )'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='537' c='virtqueue_add_inbuf_ctx'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='537' u='a'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='537' u='a'/>
<doc f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='515'>/**
 * virtqueue_add_inbuf_ctx - expose input buffers to other end
 * @vq: the struct virtqueue we&apos;re talking about.
 * @sg: scatterlist (must be well-formed and terminated!)
 * @num: the number of entries in @sg writable by other side
 * @data: the token identifying the buffer.
 * @ctx: extra context for the token
 * @gfp: how to do memory allocations (if necessary).
 *
 * Caller must ensure we don&apos;t call this with other virtqueue operations
 * at the same time (except where noted).
 *
 * Returns zero or a negative error (ie. ENOSPC, ENOMEM, EIO).
 */</doc>
