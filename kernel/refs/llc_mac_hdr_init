<dec f='linux-4.14.y/include/net/llc.h' l='100' type='int llc_mac_hdr_init(struct sk_buff * skb, const unsigned char * sa, const unsigned char * da)'/>
<use f='linux-4.14.y/net/bridge/br_stp_bpdu.c' l='59' u='c' c='br_send_bpdu'/>
<def f='linux-4.14.y/net/llc/llc_output.c' l='32' ll='49' type='int llc_mac_hdr_init(struct sk_buff * skb, const unsigned char * sa, const unsigned char * da)'/>
<use f='linux-4.14.y/net/llc/llc_output.c' l='72' u='c' c='llc_build_and_send_ui_pkt'/>
<dec f='linux-4.14.y/net/llc/llc_output.c' l='78' type='int llc_mac_hdr_init(struct sk_buff * , const unsigned char * , const unsigned char * )'/>
<use f='linux-4.14.y/net/llc/llc_output.c' l='78' c='llc_mac_hdr_init'/>
<use f='linux-4.14.y/net/llc/llc_output.c' l='78' u='a'/>
<use f='linux-4.14.y/net/llc/llc_output.c' l='78' u='a'/>
<doc f='linux-4.14.y/net/llc/llc_output.c' l='23'>/**
 *	llc_mac_hdr_init - fills MAC header fields
 *	@skb: Address of the frame to initialize its MAC header
 *	@sa: The MAC source address
 *	@da: The MAC destination address
 *
 *	Fills MAC header fields, depending on MAC type. Returns 0, If MAC type
 *	is a valid type and initialization completes correctly 1, otherwise.
 */</doc>
