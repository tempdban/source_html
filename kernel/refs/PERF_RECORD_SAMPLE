<dec f='linux-4.18.y/include/uapi/linux/perf_event.h' l='866' type='9'/>
<doc f='linux-4.18.y/include/uapi/linux/perf_event.h' l='809'>/*
	 * struct {
	 *	struct perf_event_header	header;
	 *
	 *	#
	 *	# Note that PERF_SAMPLE_IDENTIFIER duplicates PERF_SAMPLE_ID.
	 *	# The advantage of PERF_SAMPLE_IDENTIFIER is that its position
	 *	# is fixed relative to header.
	 *	#
	 *
	 *	{ u64			id;	  } &amp;&amp; PERF_SAMPLE_IDENTIFIER
	 *	{ u64			ip;	  } &amp;&amp; PERF_SAMPLE_IP
	 *	{ u32			pid, tid; } &amp;&amp; PERF_SAMPLE_TID
	 *	{ u64			time;     } &amp;&amp; PERF_SAMPLE_TIME
	 *	{ u64			addr;     } &amp;&amp; PERF_SAMPLE_ADDR
	 *	{ u64			id;	  } &amp;&amp; PERF_SAMPLE_ID
	 *	{ u64			stream_id;} &amp;&amp; PERF_SAMPLE_STREAM_ID
	 *	{ u32			cpu, res; } &amp;&amp; PERF_SAMPLE_CPU
	 *	{ u64			period;   } &amp;&amp; PERF_SAMPLE_PERIOD
	 *
	 *	{ struct read_format	values;	  } &amp;&amp; PERF_SAMPLE_READ
	 *
	 *	{ u64			nr,
	 *	  u64			ips[nr];  } &amp;&amp; PERF_SAMPLE_CALLCHAIN
	 *
	 *	#
	 *	# The RAW record below is opaque data wrt the ABI
	 *	#
	 *	# That is, the ABI doesn&apos;t make any promises wrt to
	 *	# the stability of its content, it may vary depending
	 *	# on event, hardware, kernel version and phase of
	 *	# the moon.
	 *	#
	 *	# In other words, PERF_SAMPLE_RAW contents are not an ABI.
	 *	#
	 *
	 *	{ u32			size;
	 *	  char                  data[size];}&amp;&amp; PERF_SAMPLE_RAW
	 *
	 *	{ u64                   nr;
	 *        { u64 from, to, flags } lbr[nr];} &amp;&amp; PERF_SAMPLE_BRANCH_STACK
	 *
	 * 	{ u64			abi; # enum perf_sample_regs_abi
	 * 	  u64			regs[weight(mask)]; } &amp;&amp; PERF_SAMPLE_REGS_USER
	 *
	 * 	{ u64			size;
	 * 	  char			data[size];
	 * 	  u64			dyn_size; } &amp;&amp; PERF_SAMPLE_STACK_USER
	 *
	 *	{ u64			weight;   } &amp;&amp; PERF_SAMPLE_WEIGHT
	 *	{ u64			data_src; } &amp;&amp; PERF_SAMPLE_DATA_SRC
	 *	{ u64			transaction; } &amp;&amp; PERF_SAMPLE_TRANSACTION
	 *	{ u64			abi; # enum perf_sample_regs_abi
	 *	  u64			regs[weight(mask)]; } &amp;&amp; PERF_SAMPLE_REGS_INTR
	 *	{ u64			phys_addr;} &amp;&amp; PERF_SAMPLE_PHYS_ADDR
	 * };
	 */</doc>
<use f='linux-4.18.y/kernel/events/core.c' l='6375' u='r' c='perf_prepare_sample'/>
