<dec f='linux-4.14.y/include/linux/msi.h' l='332' type='int pci_msi_domain_check_cap(struct irq_domain * domain, struct msi_domain_info * info, struct device * dev)'/>
<def f='linux-4.14.y/drivers/pci/msi.c' l='1349' ll='1362' type='int pci_msi_domain_check_cap(struct irq_domain * domain, struct msi_domain_info * info, struct device * dev)'/>
<use f='linux-4.14.y/drivers/pci/msi.c' l='1388'/>
<use f='linux-4.14.y/drivers/pci/msi.c' l='1388'/>
<use f='linux-4.14.y/drivers/pci/msi.c' l='1402' u='r' c='pci_msi_domain_update_dom_ops'/>
<doc f='linux-4.14.y/drivers/pci/msi.c' l='1338'>/**
 * pci_msi_domain_check_cap - Verify that @domain supports the capabilities for @dev
 * @domain:	The interrupt domain to check
 * @info:	The domain info for verification
 * @dev:	The device to check
 *
 * Returns:
 *  0 if the functionality is supported
 *  1 if Multi MSI is requested, but the domain does not support it
 *  -ENOTSUPP otherwise
 */</doc>
<dec f='linux-4.14.y/include/linux/msi.h' l='332' type='int pci_msi_domain_check_cap(struct irq_domain * domain, struct msi_domain_info * info, struct device * dev)'/>
<def f='linux-4.14.y/drivers/pci/msi.c' l='1349' ll='1362' type='int pci_msi_domain_check_cap(struct irq_domain * domain, struct msi_domain_info * info, struct device * dev)'/>
<use f='linux-4.14.y/drivers/pci/msi.c' l='1388'/>
<use f='linux-4.14.y/drivers/pci/msi.c' l='1388'/>
<use f='linux-4.14.y/drivers/pci/msi.c' l='1402' u='r' c='pci_msi_domain_update_dom_ops'/>
<doc f='linux-4.14.y/drivers/pci/msi.c' l='1338'>/**
 * pci_msi_domain_check_cap - Verify that @domain supports the capabilities for @dev
 * @domain:	The interrupt domain to check
 * @info:	The domain info for verification
 * @dev:	The device to check
 *
 * Returns:
 *  0 if the functionality is supported
 *  1 if Multi MSI is requested, but the domain does not support it
 *  -ENOTSUPP otherwise
 */</doc>
