<dec f='linux-4.14.y/include/drm/drm_crtc_helper.h' l='60' type='int drm_helper_crtc_mode_set(struct drm_crtc * crtc, struct drm_display_mode * mode, struct drm_display_mode * adjusted_mode, int x, int y, struct drm_framebuffer * old_fb)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1004' ll='1052' type='int drm_helper_crtc_mode_set(struct drm_crtc * crtc, struct drm_display_mode * mode, struct drm_display_mode * adjusted_mode, int x, int y, struct drm_framebuffer * old_fb)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' type='int drm_helper_crtc_mode_set(struct drm_crtc * , struct drm_display_mode * , struct drm_display_mode * , int , int , struct drm_framebuffer * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' c='drm_helper_crtc_mode_set'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='987'>/**
 * drm_helper_crtc_mode_set - mode_set implementation for atomic plane helpers
 * @crtc: DRM CRTC
 * @mode: DRM display mode which userspace requested
 * @adjusted_mode: DRM display mode adjusted by -&gt;mode_fixup callbacks
 * @x: x offset of the CRTC scanout area on the underlying framebuffer
 * @y: y offset of the CRTC scanout area on the underlying framebuffer
 * @old_fb: previous framebuffer
 *
 * This function implements a callback useable as the -&gt;mode_set callback
 * required by the CRTC helpers. Besides the atomic plane helper functions for
 * the primary plane the driver must also provide the -&gt;mode_set_nofb callback
 * to set up the CRTC.
 *
 * This is a transitional helper useful for converting drivers to the atomic
 * interfaces.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_crtc_helper.h' l='60' type='int drm_helper_crtc_mode_set(struct drm_crtc * crtc, struct drm_display_mode * mode, struct drm_display_mode * adjusted_mode, int x, int y, struct drm_framebuffer * old_fb)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1004' ll='1052' type='int drm_helper_crtc_mode_set(struct drm_crtc * crtc, struct drm_display_mode * mode, struct drm_display_mode * adjusted_mode, int x, int y, struct drm_framebuffer * old_fb)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' type='int drm_helper_crtc_mode_set(struct drm_crtc * , struct drm_display_mode * , struct drm_display_mode * , int , int , struct drm_framebuffer * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' c='drm_helper_crtc_mode_set'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1053' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='987'>/**
 * drm_helper_crtc_mode_set - mode_set implementation for atomic plane helpers
 * @crtc: DRM CRTC
 * @mode: DRM display mode which userspace requested
 * @adjusted_mode: DRM display mode adjusted by -&gt;mode_fixup callbacks
 * @x: x offset of the CRTC scanout area on the underlying framebuffer
 * @y: y offset of the CRTC scanout area on the underlying framebuffer
 * @old_fb: previous framebuffer
 *
 * This function implements a callback useable as the -&gt;mode_set callback
 * required by the CRTC helpers. Besides the atomic plane helper functions for
 * the primary plane the driver must also provide the -&gt;mode_set_nofb callback
 * to set up the CRTC.
 *
 * This is a transitional helper useful for converting drivers to the atomic
 * interfaces.
 */</doc>
