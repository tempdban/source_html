<dec f='linux-4.14.y/include/linux/usb/hcd.h' l='486' type='irqreturn_t usb_hcd_irq(int irq, void * __hcd)'/>
<doc f='linux-4.14.y/include/linux/usb/hcd.h' l='485'>/* generic bus glue, needed for host controllers that don&apos;t use PCI */</doc>
<use f='linux-4.14.y/drivers/usb/core/hcd-pci.c' l='345' u='c' c='usb_hcd_pci_remove'/>
<def f='linux-4.14.y/drivers/usb/core/hcd.c' l='2442' ll='2455' type='irqreturn_t usb_hcd_irq(int irq, void * __hcd)'/>
<dec f='linux-4.14.y/drivers/usb/core/hcd.c' l='2456' type='irqreturn_t usb_hcd_irq(int , void * )'/>
<use f='linux-4.14.y/drivers/usb/core/hcd.c' l='2456' c='usb_hcd_irq'/>
<use f='linux-4.14.y/drivers/usb/core/hcd.c' l='2456' u='a'/>
<use f='linux-4.14.y/drivers/usb/core/hcd.c' l='2456' u='a'/>
<use f='linux-4.14.y/drivers/usb/core/hcd.c' l='2689' u='a' c='usb_hcd_request_irqs'/>
<doc f='linux-4.14.y/drivers/usb/core/hcd.c' l='2432'>/**
 * usb_hcd_irq - hook IRQs to HCD framework (bus glue)
 * @irq: the IRQ being raised
 * @__hcd: pointer to the HCD whose IRQ is being signaled
 *
 * If the controller isn&apos;t HALTed, calls the driver&apos;s irq handler.
 * Checks whether the controller is now dead.
 *
 * Return: %IRQ_HANDLED if the IRQ was handled. %IRQ_NONE otherwise.
 */</doc>
<use f='linux-4.14.y/drivers/usb/host/xhci.c' l='381' u='a' c='xhci_try_enable_msi'/>
