<dec f='linux-4.18.y/include/linux/buffer_head.h' l='399' type='int __set_page_dirty_buffers(struct page * page)'/>
<def f='linux-4.18.y/fs/buffer.c' l='614' ll='649' type='int __set_page_dirty_buffers(struct page * page)'/>
<dec f='linux-4.18.y/fs/buffer.c' l='650' type='int __set_page_dirty_buffers(struct page * )'/>
<use f='linux-4.18.y/fs/buffer.c' l='650' c='__set_page_dirty_buffers'/>
<use f='linux-4.18.y/fs/buffer.c' l='650' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='650' u='a'/>
<doc f='linux-4.18.y/fs/buffer.c' l='589'>/*
 * Add a page to the dirty page list.
 *
 * It is a sad fact of life that this function is called from several places
 * deeply under spinlocking.  It may not sleep.
 *
 * If the page has buffers, the uptodate buffers are set dirty, to preserve
 * dirty-state coherency between the page and the buffers.  It the page does
 * not have buffers then when they are later attached they will all be set
 * dirty.
 *
 * The buffers are dirtied before the page is dirtied.  There&apos;s a small race
 * window in which a writepage caller may see the page cleanness but not the
 * buffer dirtiness.  That&apos;s fine.  If this code were to set the page dirty
 * before the buffers, a concurrent writepage caller could clear the page dirty
 * bit, see a bunch of clean buffers and we&apos;d end up with dirty buffers/clean
 * page on the dirty page list.
 *
 * We use private_lock to lock against try_to_free_buffers while using the
 * page&apos;s buffer list.  Also use this to protect against clean buffers being
 * added to the page after it was set dirty.
 *
 * FIXME: may need to call -&gt;reservepage here as well.  That&apos;s rather up to the
 * address_space though.
 */</doc>
<use f='linux-4.18.y/fs/ext4/inode.c' l='3897' u='c' c='ext4_set_page_dirty'/>
<use f='linux-4.18.y/fs/ntfs/aops.c' l='1674'/>
<use f='linux-4.18.y/fs/ntfs/aops.c' l='1674'/>
<use f='linux-4.18.y/fs/ntfs/aops.c' l='1689'/>
<use f='linux-4.18.y/fs/ntfs/aops.c' l='1689'/>
<use f='linux-4.18.y/mm/page-writeback.c' l='2564' u='r' c='set_page_dirty'/>
