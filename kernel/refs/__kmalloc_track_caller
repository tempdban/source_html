<dec f='linux-4.14.y/include/linux/slab.h' l='629' type='void * __kmalloc_track_caller(size_t , gfp_t , unsigned long )'/>
<doc f='linux-4.14.y/include/linux/slab.h' l='621'>/*
 * kmalloc_track_caller is a special version of kmalloc that records the
 * calling function of the routine calling it for slab leak tracking instead
 * of just the calling function (confusing, eh?).
 * It&apos;s useful when the call to kmalloc comes from a widely-used standard
 * allocator where we care about the real place the memory allocation
 * request comes from.
 */</doc>
<use f='linux-4.14.y/drivers/base/devres.c' l='91' macro='1' u='c'/>
<use f='linux-4.14.y/lib/kasprintf.c' l='25' macro='1' u='c'/>
<def f='linux-4.14.y/mm/slab.c' l='3726' ll='3729' type='void * __kmalloc_track_caller(size_t size, gfp_t flags, unsigned long caller)'/>
<dec f='linux-4.14.y/mm/slab.c' l='3730' type='void * __kmalloc_track_caller(size_t , gfp_t , unsigned long )'/>
<use f='linux-4.14.y/mm/slab.c' l='3730' c='__kmalloc_track_caller'/>
<use f='linux-4.14.y/mm/slab.c' l='3730' u='a'/>
<use f='linux-4.14.y/mm/slab.c' l='3730' u='a'/>
<use f='linux-4.14.y/mm/slab_common.c' l='1378' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='56' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='98' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='118' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='138' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='164' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='223' macro='1' u='c'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='137' macro='1' u='c'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='145' macro='1' u='c'/>
<dec f='linux-4.14.y/include/linux/slab.h' l='629' type='void * __kmalloc_track_caller(size_t , gfp_t , unsigned long )'/>
<doc f='linux-4.14.y/include/linux/slab.h' l='621'>/*
 * kmalloc_track_caller is a special version of kmalloc that records the
 * calling function of the routine calling it for slab leak tracking instead
 * of just the calling function (confusing, eh?).
 * It&apos;s useful when the call to kmalloc comes from a widely-used standard
 * allocator where we care about the real place the memory allocation
 * request comes from.
 */</doc>
<use f='linux-4.14.y/drivers/base/devres.c' l='91' macro='1' u='c'/>
<use f='linux-4.14.y/lib/kasprintf.c' l='25' macro='1' u='c'/>
<def f='linux-4.14.y/mm/slab.c' l='3726' ll='3729' type='void * __kmalloc_track_caller(size_t size, gfp_t flags, unsigned long caller)'/>
<dec f='linux-4.14.y/mm/slab.c' l='3730' type='void * __kmalloc_track_caller(size_t , gfp_t , unsigned long )'/>
<use f='linux-4.14.y/mm/slab.c' l='3730' c='__kmalloc_track_caller'/>
<use f='linux-4.14.y/mm/slab.c' l='3730' u='a'/>
<use f='linux-4.14.y/mm/slab.c' l='3730' u='a'/>
<use f='linux-4.14.y/mm/slab_common.c' l='1378' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='56' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='98' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='118' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='138' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='164' macro='1' u='c'/>
<use f='linux-4.14.y/mm/util.c' l='223' macro='1' u='c'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='137' macro='1' u='c'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='145' macro='1' u='c'/>
