<dec f='linux-4.18.y/include/linux/mm_types.h' l='369' type='atomic_t'/>
<offset>704</offset>
<doc f='linux-4.18.y/include/linux/mm_types.h' l='360'>/**
	 * @mm_users: The number of users including userspace.
	 *
	 * Use mmget()/mmget_not_zero()/mmput() to modify. When this drops
	 * to 0 (i.e. when the task exits and there are no other temporary
	 * reference holders), we also release a reference on @mm_count
	 * (which may then free the &amp;struct mm_struct if @mm_count also
	 * drops to 0).
	 */</doc>
<use f='linux-4.18.y/include/linux/sched/mm.h' l='70' u='a' c='mmget'/>
<use f='linux-4.18.y/include/linux/sched/mm.h' l='75' u='a' c='mmget_not_zero'/>
<use f='linux-4.18.y/drivers/iommu/intel-svm.c' l='524' u='a' c='intel_svm_is_pasid_valid'/>
<use f='linux-4.18.y/fs/coredump.c' l='353' u='a' c='zap_threads'/>
<use f='linux-4.18.y/fs/proc/base.c' l='1046' u='a' c='__set_oom_adj'/>
<use f='linux-4.18.y/kernel/events/uprobes.c' l='1125' u='a' c='uprobe_munmap'/>
<use f='linux-4.18.y/kernel/fork.c' l='921' u='a' c='mm_init'/>
<use f='linux-4.18.y/kernel/fork.c' l='986' u='a' c='__mmput'/>
<use f='linux-4.18.y/kernel/fork.c' l='1012' u='a' c='mmput'/>
<use f='linux-4.18.y/kernel/fork.c' l='1028' u='a' c='mmput_async'/>
<use f='linux-4.18.y/kernel/fork.c' l='1227' u='a' c='mm_release'/>
<use f='linux-4.18.y/kernel/sched/membarrier.c' l='198' u='a' c='membarrier_register_global_expedited'/>
<use f='linux-4.18.y/kernel/sched/membarrier.c' l='244' u='a' c='membarrier_register_private_expedited'/>
<use f='linux-4.18.y/lib/is_single_threaded.c' l='29' u='a' c='current_is_single_threaded'/>
<use f='linux-4.18.y/mm/init-mm.c' l='21' u='w'/>
<use f='linux-4.18.y/mm/mmu_notifier.c' l='277' u='a' c='do_mmu_notifier_register'/>
<use f='linux-4.18.y/mm/mmu_notifier.c' l='317' u='a' c='do_mmu_notifier_register'/>
<use f='linux-4.18.y/mm/mprotect.c' l='66' u='a' c='change_pte_range'/>
<use f='linux-4.18.y/mm/oom_kill.c' l='815' u='a' c='task_will_free_mem'/>
<use f='linux-4.18.y/mm/swapfile.c' l='2108' u='a' c='try_to_unuse'/>
