<dec f='linux-4.14.y/include/linux/netfilter/x_tables.h' l='285' type='bool xt_find_jump_offset(const unsigned int * offsets, unsigned int target, unsigned int size)'/>
<use f='linux-4.14.y/net/ipv4/netfilter/arp_tables.c' l='377' u='c' c='mark_source_chains'/>
<use f='linux-4.14.y/net/ipv4/netfilter/ip_tables.c' l='444' u='c' c='mark_source_chains'/>
<def f='linux-4.14.y/net/netfilter/x_tables.c' l='837' ll='854' type='bool xt_find_jump_offset(const unsigned int * offsets, unsigned int target, unsigned int size)'/>
<dec f='linux-4.14.y/net/netfilter/x_tables.c' l='855' type='bool xt_find_jump_offset(const unsigned int * , unsigned int , unsigned int )'/>
<use f='linux-4.14.y/net/netfilter/x_tables.c' l='855' c='xt_find_jump_offset'/>
<use f='linux-4.14.y/net/netfilter/x_tables.c' l='855' u='a'/>
<use f='linux-4.14.y/net/netfilter/x_tables.c' l='855' u='a'/>
<doc f='linux-4.14.y/net/netfilter/x_tables.c' l='830'>/**
 * xt_find_jump_offset - check if target is a valid jump offset
 *
 * @offsets: array containing all valid rule start offsets of a rule blob
 * @target: the jump target to search for
 * @size: entries in @offset
 */</doc>
