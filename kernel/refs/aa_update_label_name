<dec f='linux-4.14.y/security/apparmor/include/label.h' l='307' type='bool aa_update_label_name(struct aa_ns * ns, struct aa_label * label, gfp_t gfp)'/>
<def f='linux-4.14.y/security/apparmor/label.c' l='1421' ll='1447' type='bool aa_update_label_name(struct aa_ns * ns, struct aa_label * label, gfp_t gfp)'/>
<doc f='linux-4.14.y/security/apparmor/label.c' l='1410'>/**
 * aa_update_label_name - update a label to have a stored name
 * @ns: ns being viewed from (NOT NULL)
 * @label: label to update (NOT NULL)
 * @gfp: type of memory allocation
 *
 * Requires: labels_set(label) not locked in caller
 *
 * note: only updates the label name if it does not have a name already
 *       and if it is in the labelset
 */</doc>
<dec f='linux-4.14.y/security/apparmor/include/label.h' l='307' type='bool aa_update_label_name(struct aa_ns * ns, struct aa_label * label, gfp_t gfp)'/>
<def f='linux-4.14.y/security/apparmor/label.c' l='1421' ll='1447' type='bool aa_update_label_name(struct aa_ns * ns, struct aa_label * label, gfp_t gfp)'/>
<doc f='linux-4.14.y/security/apparmor/label.c' l='1410'>/**
 * aa_update_label_name - update a label to have a stored name
 * @ns: ns being viewed from (NOT NULL)
 * @label: label to update (NOT NULL)
 * @gfp: type of memory allocation
 *
 * Requires: labels_set(label) not locked in caller
 *
 * note: only updates the label name if it does not have a name already
 *       and if it is in the labelset
 */</doc>
