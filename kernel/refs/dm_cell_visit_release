<dec f='linux-4.18.y/drivers/md/dm-bio-prison-v1.h' l='100' type='void dm_cell_visit_release(struct dm_bio_prison * prison, void (*)(void *, struct dm_bio_prison_cell *) visit_fn, void * context, struct dm_bio_prison_cell * cell)'/>
<def f='linux-4.18.y/drivers/md/dm-bio-prison-v1.c' l='248' ll='259' type='void dm_cell_visit_release(struct dm_bio_prison * prison, void (*)(void *, struct dm_bio_prison_cell *) visit_fn, void * context, struct dm_bio_prison_cell * cell)'/>
<dec f='linux-4.18.y/drivers/md/dm-bio-prison-v1.c' l='260' type='void dm_cell_visit_release(struct dm_bio_prison * , void (*)(void *, struct dm_bio_prison_cell *) , void * , struct dm_bio_prison_cell * )'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v1.c' l='260' c='dm_cell_visit_release'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v1.c' l='260' u='a'/>
<use f='linux-4.18.y/drivers/md/dm-bio-prison-v1.c' l='260' u='a'/>
<doc f='linux-4.18.y/drivers/md/dm-bio-prison-v1.h' l='96'>/*
 * Visits the cell and then releases.  Guarantees no new inmates are
 * inserted between the visit and release.
 */</doc>
<use f='linux-4.18.y/drivers/md/dm-thin.c' l='441' u='c' c='cell_visit_release'/>
