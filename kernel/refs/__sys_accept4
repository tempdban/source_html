<dec f='linux-4.18.y/include/linux/socket.h' l='373' type='int __sys_accept4(int fd, struct sockaddr * upeer_sockaddr, int * upeer_addrlen, int flags)'/>
<use f='linux-4.18.y/net/compat.c' l='881' u='c' c='__do_compat_sys_socketcall'/>
<use f='linux-4.18.y/net/compat.c' l='934' u='c' c='__do_compat_sys_socketcall'/>
<def f='linux-4.18.y/net/socket.c' l='1553' ll='1632' type='int __sys_accept4(int fd, struct sockaddr * upeer_sockaddr, int * upeer_addrlen, int flags)'/>
<use f='linux-4.18.y/net/socket.c' l='1637' u='c' c='__do_sys_accept4'/>
<use f='linux-4.18.y/net/socket.c' l='1643' u='c' c='__do_sys_accept'/>
<use f='linux-4.18.y/net/socket.c' l='2559' u='c' c='__do_sys_socketcall'/>
<use f='linux-4.18.y/net/socket.c' l='2621' u='c' c='__do_sys_socketcall'/>
<doc f='linux-4.18.y/net/socket.c' l='1541'>/*
 *	For accept, we attempt to create a new socket, set up the link
 *	with the client, wake up the client, then return the new
 *	connected fd. We collect the address of the connector in kernel
 *	space and move it to user at the very end. This is unclean because
 *	we open the socket then return an error.
 *
 *	1003.1g adds the ability to recvmsg() to query connection pending
 *	status to recvmsg. We need to add that support in a way thats
 *	clean when we restructure accept also.
 */</doc>
