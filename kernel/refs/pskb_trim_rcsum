<def f='linux-4.18.y/include/linux/skbuff.h' l='3147' ll='3152' type='int pskb_trim_rcsum(struct sk_buff * skb, unsigned int len)'/>
<doc f='linux-4.18.y/include/linux/skbuff.h' l='3138'>/**
 *	pskb_trim_rcsum - trim received skb and update checksum
 *	@skb: buffer to trim
 *	@len: new length
 *
 *	This is exactly the same as pskb_trim except that it ensures the
 *	checksum of received packets are still valid after the operation.
 */</doc>
<use f='linux-4.18.y/net/bridge/br_netfilter_hooks.c' l='226' u='c' c='br_validate_ipv4'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='4725' u='c' c='skb_checksum_maybe_trim'/>
<use f='linux-4.18.y/net/ipv4/ip_fragment.c' l='339' u='c' c='ip_frag_queue'/>
<use f='linux-4.18.y/net/ipv4/ip_fragment.c' l='662' u='c' c='ip_check_defrag'/>
<use f='linux-4.18.y/net/ipv4/ip_input.c' l='478' u='c' c='ip_rcv'/>
<use f='linux-4.18.y/net/ipv4/udp.c' l='2183' u='c' c='__udp4_lib_rcv'/>
<use f='linux-4.18.y/net/llc/llc_input.c' l='136' u='c' c='llc_fixup_skb'/>
<use f='linux-4.18.y/net/openvswitch/conntrack.c' l='1250' u='c' c='ovs_skb_network_trim'/>
