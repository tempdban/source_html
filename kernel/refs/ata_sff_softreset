<dec f='linux-4.14.y/include/linux/libata.h' l='1857' type='int ata_sff_softreset(struct ata_link * link, unsigned int * classes, unsigned long deadline)'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='56'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='56'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2014' ll='2052' type='int ata_sff_softreset(struct ata_link * link, unsigned int * classes, unsigned long deadline)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' type='int ata_sff_softreset(struct ata_link * , unsigned int * , unsigned long )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' c='ata_sff_softreset'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' u='a'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2000'>/**
 *	ata_sff_softreset - reset host port via ATA SRST
 *	@link: ATA link to reset
 *	@classes: resulting classes of attached devices
 *	@deadline: deadline jiffies for the operation
 *
 *	Reset host port using ATA SRST.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
<dec f='linux-4.14.y/include/linux/libata.h' l='1857' type='int ata_sff_softreset(struct ata_link * link, unsigned int * classes, unsigned long deadline)'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='56'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='56'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2014' ll='2052' type='int ata_sff_softreset(struct ata_link * link, unsigned int * classes, unsigned long deadline)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' type='int ata_sff_softreset(struct ata_link * , unsigned int * , unsigned long )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' c='ata_sff_softreset'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2053' u='a'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2000'>/**
 *	ata_sff_softreset - reset host port via ATA SRST
 *	@link: ATA link to reset
 *	@classes: resulting classes of attached devices
 *	@deadline: deadline jiffies for the operation
 *
 *	Reset host port using ATA SRST.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
