<def f='linux-4.14.y/arch/x86/entry/entry_64_compat.S' l='49' macro='1' type='int'/>
<doc f='linux-4.14.y/arch/x86/entry/entry_64_compat.S' l='22'>/*
 * 32-bit SYSENTER entry.
 *
 * 32-bit system calls through the vDSO&apos;s __kernel_vsyscall enter here
 * on 64-bit kernels running on Intel CPUs.
 *
 * The SYSENTER instruction, in principle, should *only* occur in the
 * vDSO.  In practice, a small number of Android devices were shipped
 * with a copy of Bionic that inlined a SYSENTER instruction.  This
 * never happened in any of Google&apos;s Bionic versions -- it only happened
 * in a narrow range of Intel-provided versions.
 *
 * SYSENTER loads SS, RSP, CS, and RIP from previously programmed MSRs.
 * IF and VM in RFLAGS are cleared (IOW: interrupts are off).
 * SYSENTER does not save anything on the stack,
 * and does not save old RIP (!!!), RSP, or RFLAGS.
 *
 * Arguments:
 * eax  system call number
 * ebx  arg1
 * ecx  arg2
 * edx  arg3
 * esi  arg4
 * edi  arg5
 * ebp  user stack
 * 0(%ebp) arg6
 */</doc>
<dec f='linux-4.14.y/arch/x86/include/asm/proto.h' l='24' type='void entry_SYSENTER_compat()'/>
<use f='linux-4.14.y/arch/x86/kernel/cpu/common.c' l='1465' u='r' c='syscall_init'/>
<use f='linux-4.14.y/arch/x86/kernel/traps.c' l='682' u='r' c='is_sysenter_singlestep'/>
<use f='linux-4.14.y/arch/x86/kernel/traps.c' l='684' u='r' c='is_sysenter_singlestep'/>
