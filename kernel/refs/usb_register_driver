<dec f='linux-4.14.y/include/linux/usb.h' l='1249' type='int usb_register_driver(struct usb_driver * , struct module * , const char * )'/>
<doc f='linux-4.14.y/include/linux/usb.h' l='1245'>/*
 * use these in module_init()/module_exit()
 * and don&apos;t forget MODULE_DEVICE_TABLE(usb, ...)
 */</doc>
<use f='linux-4.14.y/drivers/hid/usbhid/hid-core.c' l='1647' macro='1' u='c'/>
<use f='linux-4.14.y/drivers/usb/class/cdc-acm.c' l='2045' macro='1' u='c'/>
<def f='linux-4.14.y/drivers/usb/core/driver.c' l='950' ll='989' type='int usb_register_driver(struct usb_driver * new_driver, struct module * owner, const char * mod_name)'/>
<dec f='linux-4.14.y/drivers/usb/core/driver.c' l='990' type='int usb_register_driver(struct usb_driver * , struct module * , const char * )'/>
<use f='linux-4.14.y/drivers/usb/core/driver.c' l='990' c='usb_register_driver'/>
<use f='linux-4.14.y/drivers/usb/core/driver.c' l='990' u='a'/>
<use f='linux-4.14.y/drivers/usb/core/driver.c' l='990' u='a'/>
<doc f='linux-4.14.y/drivers/usb/core/driver.c' l='934'>/**
 * usb_register_driver - register a USB interface driver
 * @new_driver: USB operations for the interface driver
 * @owner: module owner of this driver.
 * @mod_name: module name string
 *
 * Registers a USB interface driver with the USB core.  The list of
 * unattached interfaces will be rescanned whenever a new driver is
 * added, allowing the new driver to attach to any recognized interfaces.
 *
 * Return: A negative error code on failure and 0 on success.
 *
 * NOTE: if you want your driver to use the USB major number, you must call
 * usb_register_dev() to enable that functionality.  This function no longer
 * takes care of that.
 */</doc>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='5298' macro='1' u='c'/>
<use f='linux-4.14.y/drivers/usb/core/usb.c' l='1223' macro='1' u='c'/>
<use f='linux-4.14.y/drivers/usb/storage/usb.c' l='1172' macro='1' u='c'/>
