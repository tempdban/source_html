<dec f='linux-4.18.y/kernel/locking/rtmutex_common.h' l='142' type='int rt_mutex_start_proxy_lock(struct rt_mutex * lock, struct rt_mutex_waiter * waiter, struct task_struct * task)'/>
<use f='linux-4.18.y/kernel/futex.c' l='2074' u='c' c='futex_requeue'/>
<def f='linux-4.18.y/kernel/locking/rtmutex.c' l='1773' ll='1784' type='int rt_mutex_start_proxy_lock(struct rt_mutex * lock, struct rt_mutex_waiter * waiter, struct task_struct * task)'/>
<doc f='linux-4.18.y/kernel/locking/rtmutex.c' l='1760'>/**
 * rt_mutex_start_proxy_lock() - Start lock acquisition for another task
 * @lock:		the rt_mutex to take
 * @waiter:		the pre-initialized rt_mutex_waiter
 * @task:		the task to prepare
 *
 * Returns:
 *  0 - task blocked on lock
 *  1 - acquired the lock for task, caller should wake it up
 * &lt;0 - error
 *
 * Special API call for FUTEX_REQUEUE_PI support.
 */</doc>
