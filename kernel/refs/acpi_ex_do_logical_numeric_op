<dec f='linux-4.18.y/drivers/acpi/acpica/acinterp.h' l='193' type='acpi_status acpi_ex_do_logical_numeric_op(u16 opcode, u64 integer0, u64 integer1, u8 * logical_result)'/>
<def f='linux-4.18.y/drivers/acpi/acpica/exmisc.c' l='208' ll='244' type='acpi_status acpi_ex_do_logical_numeric_op(u16 opcode, u64 integer0, u64 integer1, u8 * logical_result)'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/exmisc.c' l='188'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_do_logical_numeric_op
 *
 * PARAMETERS:  opcode              - AML opcode
 *              integer0            - Integer operand #0
 *              integer1            - Integer operand #1
 *              logical_result      - TRUE/FALSE result of the operation
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Execute a logical &quot;Numeric&quot; AML opcode. For these Numeric
 *              operators (LAnd and LOr), both operands must be integers.
 *
 *              Note: cleanest machine code seems to be produced by the code
 *              below, rather than using statements of the form:
 *                  Result = (Integer0 &amp;&amp; Integer1);
 *
 ******************************************************************************/</doc>
<use f='linux-4.18.y/drivers/acpi/acpica/exoparg2.c' l='489' u='c' c='acpi_ex_opcode_2A_0T_1R'/>
