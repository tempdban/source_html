<dec f='linux-4.14.y/include/linux/net.h' l='224' type='void sock_unregister(int family)'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='4611' u='c' c='packet_exit'/>
<def f='linux-4.14.y/net/socket.c' l='2590' ll='2601' type='void sock_unregister(int family)'/>
<dec f='linux-4.14.y/net/socket.c' l='2602' type='void sock_unregister(int )'/>
<use f='linux-4.14.y/net/socket.c' l='2602' c='sock_unregister'/>
<use f='linux-4.14.y/net/socket.c' l='2602' u='a'/>
<use f='linux-4.14.y/net/socket.c' l='2602' u='a'/>
<doc f='linux-4.14.y/net/socket.c' l='2577'>/**
 *	sock_unregister - remove a protocol handler
 *	@family: protocol family to remove
 *
 *	This function is called by a protocol handler that wants to
 *	remove its address family, and have it unlinked from the
 *	new socket creation.
 *
 *	If protocol handler is a module, then it can use module reference
 *	counts to protect against new references. If protocol handler is not
 *	a module then it needs to provide its own protection in
 *	the ops-&gt;create routine.
 */</doc>
<use f='linux-4.14.y/net/unix/af_unix.c' l='2937' u='c' c='af_unix_exit'/>
<dec f='linux-4.14.y/include/linux/net.h' l='224' type='void sock_unregister(int family)'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='4611' u='c' c='packet_exit'/>
<def f='linux-4.14.y/net/socket.c' l='2590' ll='2601' type='void sock_unregister(int family)'/>
<dec f='linux-4.14.y/net/socket.c' l='2602' type='void sock_unregister(int )'/>
<use f='linux-4.14.y/net/socket.c' l='2602' c='sock_unregister'/>
<use f='linux-4.14.y/net/socket.c' l='2602' u='a'/>
<use f='linux-4.14.y/net/socket.c' l='2602' u='a'/>
<doc f='linux-4.14.y/net/socket.c' l='2577'>/**
 *	sock_unregister - remove a protocol handler
 *	@family: protocol family to remove
 *
 *	This function is called by a protocol handler that wants to
 *	remove its address family, and have it unlinked from the
 *	new socket creation.
 *
 *	If protocol handler is a module, then it can use module reference
 *	counts to protect against new references. If protocol handler is not
 *	a module then it needs to provide its own protection in
 *	the ops-&gt;create routine.
 */</doc>
<use f='linux-4.14.y/net/unix/af_unix.c' l='2937' u='c' c='af_unix_exit'/>
