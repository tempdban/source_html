<dec f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/phy.h' l='35' type='s32 e1000e_setup_copper_link(struct e1000_hw * hw)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/80003es2lan.c' l='1056' u='c' c='e1000_setup_copper_link_80003es2lan'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/82571.c' l='1445' u='c' c='e1000_setup_copper_link_82571'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5038' u='c' c='e1000_setup_copper_link_ich8lan'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5063' u='c' c='e1000_setup_copper_link_pch_lpt'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/phy.c' l='1130' ll='1171' type='s32 e1000e_setup_copper_link(struct e1000_hw * hw)'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/phy.c' l='1121'>/**
 *  e1000e_setup_copper_link - Configure copper link settings
 *  @hw: pointer to the HW structure
 *
 *  Calls the appropriate function to configure the link for auto-neg or forced
 *  speed and duplex.  Then we check for link, once link is established calls
 *  to configure collision distance and flow control are called.  If link is
 *  not established, we return -E1000_ERR_PHY (-2).
 **/</doc>
