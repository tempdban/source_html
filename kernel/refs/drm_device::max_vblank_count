<dec f='linux-4.18.y/include/drm/drm_device.h' l='158' type='u32'/>
<offset>3200</offset>
<doc f='linux-4.18.y/include/drm/drm_device.h' l='143'>/**
	 * @max_vblank_count:
	 *
	 * Maximum value of the vblank registers. This value +1 will result in a
	 * wrap-around of the vblank register. It is used by the vblank core to
	 * handle wrap-arounds.
	 *
	 * If set to zero the vblank core will try to guess the elapsed vblanks
	 * between times when the vblank interrupt is disabled through
	 * high-precision timestamps. That approach is suffering from small
	 * races and imprecision over longer time periods, hence exposing a
	 * hardware vblank counter is always recommended.
	 *
	 * If non-zeor, &amp;drm_crtc_funcs.get_vblank_counter must be set.
	 */</doc>
<doc f='linux-4.18.y/include/drm/drm_device.h' l='158'>/**&lt; size of vblank counter register */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='114' u='r' c='drm_vblank_no_hw_counter'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='219' u='r' c='drm_update_vblank_count'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='221' u='r' c='drm_update_vblank_count'/>
