<dec f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.h' l='499' type='void qxl_draw_dirty_fb(struct qxl_device * qdev, struct qxl_framebuffer * qxl_fb, struct qxl_bo * bo, unsigned int flags, unsigned int color, struct drm_clip_rect * clips, unsigned int num_clips, int inc)'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='350' u='c' c='qxl_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='596' u='c' c='qxl_primary_atomic_update'/>
<def f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_draw.c' l='264' ll='399' type='void qxl_draw_dirty_fb(struct qxl_device * qdev, struct qxl_framebuffer * qxl_fb, struct qxl_bo * bo, unsigned int flags, unsigned int color, struct drm_clip_rect * clips, unsigned int num_clips, int inc)'/>
<doc f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_draw.c' l='257'>/* push a draw command using the given clipping rectangles as
 * the sources from the shadow framebuffer.
 *
 * Right now implementing with a single draw and a clip list. Clip
 * lists are known to be a problem performance wise, this can be solved
 * by treating them differently in the server.
 */</doc>
<dec f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.h' l='499' type='void qxl_draw_dirty_fb(struct qxl_device * qdev, struct qxl_framebuffer * qxl_fb, struct qxl_bo * bo, unsigned int flags, unsigned int color, struct drm_clip_rect * clips, unsigned int num_clips, int inc)'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='350' u='c' c='qxl_framebuffer_surface_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='596' u='c' c='qxl_primary_atomic_update'/>
<def f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_draw.c' l='264' ll='399' type='void qxl_draw_dirty_fb(struct qxl_device * qdev, struct qxl_framebuffer * qxl_fb, struct qxl_bo * bo, unsigned int flags, unsigned int color, struct drm_clip_rect * clips, unsigned int num_clips, int inc)'/>
<doc f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_draw.c' l='257'>/* push a draw command using the given clipping rectangles as
 * the sources from the shadow framebuffer.
 *
 * Right now implementing with a single draw and a clip list. Clip
 * lists are known to be a problem performance wise, this can be solved
 * by treating them differently in the server.
 */</doc>
