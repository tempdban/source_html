<dec f='linux-4.18.y/include/drm/drm_syncobj.h' l='141' type='int drm_syncobj_find_fence(struct drm_file * file_private, u32 handle, struct dma_fence ** fence)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='246' ll='262' type='int drm_syncobj_find_fence(struct drm_file * file_private, u32 handle, struct dma_fence ** fence)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='263' type='int drm_syncobj_find_fence(struct drm_file * , u32 , struct dma_fence ** )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='263' c='drm_syncobj_find_fence'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='263' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='263' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='518' u='c' c='drm_syncobj_export_sync_file'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='233'>/**
 * drm_syncobj_find_fence - lookup and reference the fence in a sync object
 * @file_private: drm file private pointer
 * @handle: sync object handle to lookup.
 * @fence: out parameter for the fence
 *
 * This is just a convenience function that combines drm_syncobj_find() and
 * drm_syncobj_fence_get().
 *
 * Returns 0 on success or a negative error value on failure. On success @fence
 * contains a reference to the fence, which must be released by calling
 * dma_fence_put().
 */</doc>
