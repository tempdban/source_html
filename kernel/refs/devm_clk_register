<dec f='linux-4.18.y/include/linux/clk-provider.h' l='736' type='struct clk * devm_clk_register(struct device * dev, struct clk_hw * hw)'/>
<def f='linux-4.18.y/drivers/clk/clk.c' l='3202' ll='3220' type='struct clk * devm_clk_register(struct device * dev, struct clk_hw * hw)'/>
<dec f='linux-4.18.y/drivers/clk/clk.c' l='3221' type='struct clk * devm_clk_register(struct device * , struct clk_hw * )'/>
<use f='linux-4.18.y/drivers/clk/clk.c' l='3221' c='devm_clk_register'/>
<use f='linux-4.18.y/drivers/clk/clk.c' l='3221' u='a'/>
<use f='linux-4.18.y/drivers/clk/clk.c' l='3221' u='a'/>
<doc f='linux-4.18.y/drivers/clk/clk.c' l='3193'>/**
 * devm_clk_register - resource managed clk_register()
 * @dev: device that is registering this clock
 * @hw: link to hardware-specific clock data
 *
 * Managed clk_register(). Clocks returned from this function are
 * automatically clk_unregister()ed on driver detach. See clk_register() for
 * more information.
 */</doc>
