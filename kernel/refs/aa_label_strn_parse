<dec f='linux-4.18.y/security/apparmor/include/label.h' l='330' type='struct aa_label * aa_label_strn_parse(struct aa_label * base, const char * str, size_t n, gfp_t gfp, bool create, bool force_stack)'/>
<def f='linux-4.18.y/security/apparmor/label.c' l='1859' ll='1938' type='struct aa_label * aa_label_strn_parse(struct aa_label * base, const char * str, size_t n, gfp_t gfp, bool create, bool force_stack)'/>
<use f='linux-4.18.y/security/apparmor/label.c' l='1943' u='c' c='aa_label_parse'/>
<doc f='linux-4.18.y/security/apparmor/label.c' l='1847'>/**
 * aa_label_strn_parse - parse, validate and convert a text string to a label
 * @base: base label to use for lookups (NOT NULL)
 * @str: null terminated text string (NOT NULL)
 * @n: length of str to parse, will stop at \0 if encountered before n
 * @gfp: allocation type
 * @create: true if should create compound labels if they don&apos;t exist
 * @force_stack: true if should stack even if no leading &amp;
 *
 * Returns: the matching refcounted label if present
 *     else ERRPTR
 */</doc>
<use f='linux-4.18.y/security/apparmor/secid.c' l='108' u='c' c='apparmor_secctx_to_secid'/>
