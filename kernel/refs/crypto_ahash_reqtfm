<def f='linux-4.14.y/include/crypto/hash.h' l='371' ll='375' type='struct crypto_ahash * crypto_ahash_reqtfm(struct ahash_request * req)'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='462' u='c' c='crypto_ahash_export'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='478' u='c' c='crypto_ahash_import'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='500' u='c' c='crypto_ahash_init'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='522' u='c' c='crypto_ahash_update'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='588' u='c' c='ahash_request_zero'/>
<use f='linux-4.14.y/crypto/ahash.c' l='144' u='c' c='crypto_hash_walk_first'/>
<use f='linux-4.14.y/crypto/ahash.c' l='162' u='c' c='crypto_ahash_walk_first'/>
<use f='linux-4.14.y/crypto/ahash.c' l='226' u='c' c='ahash_save_req'/>
<use f='linux-4.14.y/crypto/ahash.c' l='287' u='c' c='ahash_restore_req'/>
<use f='linux-4.14.y/crypto/ahash.c' l='287' u='c' c='ahash_restore_req'/>
<use f='linux-4.14.y/crypto/ahash.c' l='358' u='c' c='crypto_ahash_op'/>
<use f='linux-4.14.y/crypto/ahash.c' l='369' u='c' c='crypto_ahash_final'/>
<use f='linux-4.14.y/crypto/ahash.c' l='375' u='c' c='crypto_ahash_finup'/>
<use f='linux-4.14.y/crypto/ahash.c' l='381' u='c' c='crypto_ahash_digest'/>
<use f='linux-4.14.y/crypto/ahash.c' l='409' u='c' c='ahash_def_finup_finish1'/>
<use f='linux-4.14.y/crypto/ahash.c' l='440' u='c' c='ahash_def_finup'/>
<doc f='linux-4.14.y/include/crypto/hash.h' l='361'>/**
 * crypto_ahash_reqtfm() - obtain cipher handle from request
 * @req: asynchronous request handle that contains the reference to the ahash
 *	 cipher handle
 *
 * Return the ahash cipher handle that is registered with the asynchronous
 * request handle ahash_request.
 *
 * Return: ahash cipher handle
 */</doc>
<use f='linux-4.14.y/crypto/shash.c' l='223' u='c' c='shash_async_init'/>
<use f='linux-4.14.y/crypto/shash.c' l='278' u='c' c='shash_async_finup'/>
<use f='linux-4.14.y/crypto/shash.c' l='314' u='c' c='shash_async_digest'/>
<use f='linux-4.14.y/crypto/shash.c' l='330' u='c' c='shash_async_import'/>
<def f='linux-4.14.y/include/crypto/hash.h' l='371' ll='375' type='struct crypto_ahash * crypto_ahash_reqtfm(struct ahash_request * req)'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='462' u='c' c='crypto_ahash_export'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='478' u='c' c='crypto_ahash_import'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='500' u='c' c='crypto_ahash_init'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='522' u='c' c='crypto_ahash_update'/>
<use f='linux-4.14.y/include/crypto/hash.h' l='588' u='c' c='ahash_request_zero'/>
<use f='linux-4.14.y/crypto/ahash.c' l='144' u='c' c='crypto_hash_walk_first'/>
<use f='linux-4.14.y/crypto/ahash.c' l='162' u='c' c='crypto_ahash_walk_first'/>
<use f='linux-4.14.y/crypto/ahash.c' l='226' u='c' c='ahash_save_req'/>
<use f='linux-4.14.y/crypto/ahash.c' l='287' u='c' c='ahash_restore_req'/>
<use f='linux-4.14.y/crypto/ahash.c' l='287' u='c' c='ahash_restore_req'/>
<use f='linux-4.14.y/crypto/ahash.c' l='358' u='c' c='crypto_ahash_op'/>
<use f='linux-4.14.y/crypto/ahash.c' l='369' u='c' c='crypto_ahash_final'/>
<use f='linux-4.14.y/crypto/ahash.c' l='375' u='c' c='crypto_ahash_finup'/>
<use f='linux-4.14.y/crypto/ahash.c' l='381' u='c' c='crypto_ahash_digest'/>
<use f='linux-4.14.y/crypto/ahash.c' l='409' u='c' c='ahash_def_finup_finish1'/>
<use f='linux-4.14.y/crypto/ahash.c' l='440' u='c' c='ahash_def_finup'/>
<doc f='linux-4.14.y/include/crypto/hash.h' l='361'>/**
 * crypto_ahash_reqtfm() - obtain cipher handle from request
 * @req: asynchronous request handle that contains the reference to the ahash
 *	 cipher handle
 *
 * Return the ahash cipher handle that is registered with the asynchronous
 * request handle ahash_request.
 *
 * Return: ahash cipher handle
 */</doc>
<use f='linux-4.14.y/crypto/shash.c' l='223' u='c' c='shash_async_init'/>
<use f='linux-4.14.y/crypto/shash.c' l='278' u='c' c='shash_async_finup'/>
<use f='linux-4.14.y/crypto/shash.c' l='314' u='c' c='shash_async_digest'/>
<use f='linux-4.14.y/crypto/shash.c' l='330' u='c' c='shash_async_import'/>
