<dec f='linux-4.18.y/include/linux/skbuff.h' l='3551' type='void skb_tstamp_tx(struct sk_buff * orig_skb, struct skb_shared_hwtstamps * hwtstamps)'/>
<use f='linux-4.18.y/include/linux/skbuff.h' l='3570' u='c' c='skb_tx_timestamp'/>
<doc f='linux-4.18.y/include/linux/skbuff.h' l='3540'>/**
 * skb_tstamp_tx - queue clone of skb with send time stamps
 * @orig_skb:	the original outgoing packet
 * @hwtstamps:	hardware time stamps, may be NULL if not available
 *
 * If the skb has a socket associated, then this function clones the
 * skb (thus sharing the actual data and optional structures), stores
 * the optional hardware time stamping information (if non NULL) or
 * generates a software time stamp (otherwise), then queues the clone
 * to the error queue of the socket.  Errors are silently ignored.
 */</doc>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-drv.c' l='1556' u='c' c='xgbe_tx_tstamp'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='1187' u='c' c='e1000e_tx_hwtstamp_work'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_ptp.c' l='386' u='c' c='i40e_ptp_tx_hwtstamp'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_ptp.c' l='785' u='c' c='igb_ptp_tx_hwtstamp'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ptp.c' l='696' u='c' c='ixgbe_ptp_tx_hwtstamp'/>
<def f='linux-4.18.y/net/core/skbuff.c' l='4402' ll='4407' type='void skb_tstamp_tx(struct sk_buff * orig_skb, struct skb_shared_hwtstamps * hwtstamps)'/>
<dec f='linux-4.18.y/net/core/skbuff.c' l='4408' type='void skb_tstamp_tx(struct sk_buff * , struct skb_shared_hwtstamps * )'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='4408' c='skb_tstamp_tx'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='4408' u='a'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='4408' u='a'/>
