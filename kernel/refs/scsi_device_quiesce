<dec f='linux-4.14.y/include/scsi/scsi_device.h' l='410' type='int scsi_device_quiesce(struct scsi_device * sdev)'/>
<def f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2951' ll='2969' type='int scsi_device_quiesce(struct scsi_device * sdev)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' type='int scsi_device_quiesce(struct scsi_device * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' c='scsi_device_quiesce'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2998' u='c' c='device_quiesce_fn'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2936'>/**
 *	scsi_device_quiesce - Block user issued commands.
 *	@sdev:	scsi device to quiesce.
 *
 *	This works by trying to transition to the SDEV_QUIESCE state
 *	(which must be a legal transition).  When the device is in this
 *	state, only special requests will be accepted, all others will
 *	be deferred.  Since special requests may also be requeued requests,
 *	a successful return doesn&apos;t guarantee the device will be 
 *	totally quiescent.
 *
 *	Must be called with user context, may sleep.
 *
 *	Returns zero if unsuccessful or an error if not.
 */</doc>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_spi.c' l='1024' u='c' c='spi_dv_device'/>
<dec f='linux-4.14.y/include/scsi/scsi_device.h' l='410' type='int scsi_device_quiesce(struct scsi_device * sdev)'/>
<def f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2951' ll='2969' type='int scsi_device_quiesce(struct scsi_device * sdev)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' type='int scsi_device_quiesce(struct scsi_device * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' c='scsi_device_quiesce'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2970' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2998' u='c' c='device_quiesce_fn'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='2936'>/**
 *	scsi_device_quiesce - Block user issued commands.
 *	@sdev:	scsi device to quiesce.
 *
 *	This works by trying to transition to the SDEV_QUIESCE state
 *	(which must be a legal transition).  When the device is in this
 *	state, only special requests will be accepted, all others will
 *	be deferred.  Since special requests may also be requeued requests,
 *	a successful return doesn&apos;t guarantee the device will be 
 *	totally quiescent.
 *
 *	Must be called with user context, may sleep.
 *
 *	Returns zero if unsuccessful or an error if not.
 */</doc>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_spi.c' l='1024' u='c' c='spi_dv_device'/>
