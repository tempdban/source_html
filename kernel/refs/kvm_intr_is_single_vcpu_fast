<dec f='linux-4.14.y/arch/x86/kvm/lapic.h' l='214' type='bool kvm_intr_is_single_vcpu_fast(struct kvm * kvm, struct kvm_lapic_irq * irq, struct kvm_vcpu ** dest_vcpu)'/>
<use f='linux-4.14.y/arch/x86/kvm/irq_comm.c' l='341' u='c' c='kvm_intr_is_single_vcpu'/>
<def f='linux-4.14.y/arch/x86/kvm/lapic.c' l='923' ll='949' type='bool kvm_intr_is_single_vcpu_fast(struct kvm * kvm, struct kvm_lapic_irq * irq, struct kvm_vcpu ** dest_vcpu)'/>
<doc f='linux-4.14.y/arch/x86/kvm/lapic.c' l='909'>/*
 * This routine tries to handler interrupts in posted mode, here is how
 * it deals with different cases:
 * - For single-destination interrupts, handle it in posted mode
 * - Else if vector hashing is enabled and it is a lowest-priority
 *   interrupt, handle it in posted mode and use the following mechanism
 *   to find the destinaiton vCPU.
 *	1. For lowest-priority interrupts, store all the possible
 *	   destination vCPUs in an array.
 *	2. Use &quot;guest vector % max number of destination vCPUs&quot; to find
 *	   the right destination vCPU in the array for the lowest-priority
 *	   interrupt.
 * - Otherwise, use remapped mode to inject the interrupt.
 */</doc>
