<dec f='linux-4.18.y/include/linux/lz4.h' l='346' type='int LZ4_compress_HC(const char * src, char * dst, int srcSize, int dstCapacity, int compressionLevel, void * wrkmem)'/>
<doc f='linux-4.18.y/include/linux/lz4.h' l='327'>/**
 * LZ4_compress_HC() - Compress data from `src` into `dst`, using HC algorithm
 * @src: source address of the original data
 * @dst: output buffer address of the compressed data
 * @srcSize: size of the input data. Max supported value is LZ4_MAX_INPUT_SIZE
 * @dstCapacity: full or partial size of buffer &apos;dst&apos;,
 *	which must be already allocated
 * @compressionLevel: Recommended values are between 4 and 9, although any
 *	value between 1 and LZ4HC_MAX_CLEVEL will work.
 *	Values &gt;LZ4HC_MAX_CLEVEL behave the same as 16.
 * @wrkmem: address of the working memory.
 *	This requires &apos;wrkmem&apos; of size LZ4HC_MEM_COMPRESS.
 *
 * Compress data from &apos;src&apos; into &apos;dst&apos;, using the more powerful
 * but slower &quot;HC&quot; algorithm. Compression is guaranteed to succeed if
 * `dstCapacity &gt;= LZ4_compressBound(srcSize)
 *
 * Return : the number of bytes written into &apos;dst&apos; or 0 if compression fails.
 */</doc>
