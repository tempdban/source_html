<def f='linux-4.18.y/drivers/base/base.h' l='72' ll='79'/>
<size>160</size>
<doc f='linux-4.18.y/drivers/base/base.h' l='56'>/**
 * struct device_private - structure to hold the private to the driver core portions of the device structure.
 *
 * @klist_children - klist containing all children of this device
 * @knode_parent - node in sibling list
 * @knode_driver - node in driver list
 * @knode_bus - node in bus list
 * @deferred_probe - entry in deferred_probe_list which is used to retry the
 *	binding of drivers which were unable to get all the resources needed by
 *	the device; typically because it depends on another driver getting
 *	probed first.
 * @device - pointer back to the struct device that this structure is
 * associated with.
 *
 * Nothing outside of the driver core should ever touch these fields.
 */</doc>
<mbr r='device_private::klist_children' o='0' t='struct klist'/>
<mbr r='device_private::knode_parent' o='320' t='struct klist_node'/>
<mbr r='device_private::knode_driver' o='576' t='struct klist_node'/>
<mbr r='device_private::knode_bus' o='832' t='struct klist_node'/>
<mbr r='device_private::deferred_probe' o='1088' t='struct list_head'/>
<mbr r='device_private::device' o='1216' t='struct device *'/>
