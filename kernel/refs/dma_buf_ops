<def f='linux-4.14.y/include/linux/dma-buf.h' l='53' ll='253'/>
<size>112</size>
<doc f='linux-4.14.y/include/linux/dma-buf.h' l='40'>/**
 * struct dma_buf_ops - operations possible on struct dma_buf
 * @map_atomic: maps a page from the buffer into kernel address
 *		space, users may not block until the subsequent unmap call.
 *		This callback must not sleep.
 * @unmap_atomic: [optional] unmaps a atomically mapped page from the buffer.
 *		  This Callback must not sleep.
 * @map: maps a page from the buffer into kernel address space.
 * @unmap: [optional] unmaps a page from the buffer.
 * @vmap: [optional] creates a virtual mapping for the buffer into kernel
 *	  address space. Same restrictions as for vmap and friends apply.
 * @vunmap: [optional] unmaps a vmap from the buffer
 */</doc>
<mbr r='dma_buf_ops::attach' o='0' t='int (*)(struct dma_buf *, struct device *, struct dma_buf_attachment *)'/>
<mbr r='dma_buf_ops::detach' o='64' t='void (*)(struct dma_buf *, struct dma_buf_attachment *)'/>
<mbr r='dma_buf_ops::map_dma_buf' o='128' t='struct sg_table *(*)(struct dma_buf_attachment *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::unmap_dma_buf' o='192' t='void (*)(struct dma_buf_attachment *, struct sg_table *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::release' o='256' t='void (*)(struct dma_buf *)'/>
<mbr r='dma_buf_ops::begin_cpu_access' o='320' t='int (*)(struct dma_buf *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::end_cpu_access' o='384' t='int (*)(struct dma_buf *, enum dma_data_direction)'/>
<mbr r='dma_buf_ops::map_atomic' o='448' t='void *(*)(struct dma_buf *, unsigned long)'/>
<mbr r='dma_buf_ops::unmap_atomic' o='512' t='void (*)(struct dma_buf *, unsigned long, void *)'/>
<mbr r='dma_buf_ops::map' o='576' t='void *(*)(struct dma_buf *, unsigned long)'/>
<mbr r='dma_buf_ops::unmap' o='640' t='void (*)(struct dma_buf *, unsigned long, void *)'/>
<mbr r='dma_buf_ops::mmap' o='704' t='int (*)(struct dma_buf *, struct vm_area_struct *)'/>
<mbr r='dma_buf_ops::vmap' o='768' t='void *(*)(struct dma_buf *)'/>
<mbr r='dma_buf_ops::vunmap' o='832' t='void (*)(struct dma_buf *, void *)'/>
