<dec f='linux-4.18.y/include/linux/bio.h' l='483' type='bool __bio_try_merge_page(struct bio * bio, struct page * page, unsigned int len, unsigned int off)'/>
<def f='linux-4.18.y/block/bio.c' l='837' ll='853' type='bool __bio_try_merge_page(struct bio * bio, struct page * page, unsigned int len, unsigned int off)'/>
<dec f='linux-4.18.y/block/bio.c' l='854' type='bool __bio_try_merge_page(struct bio * , struct page * , unsigned int , unsigned int )'/>
<use f='linux-4.18.y/block/bio.c' l='854' c='__bio_try_merge_page'/>
<use f='linux-4.18.y/block/bio.c' l='854' u='a'/>
<use f='linux-4.18.y/block/bio.c' l='854' u='a'/>
<use f='linux-4.18.y/block/bio.c' l='896' u='c' c='bio_add_page'/>
<doc f='linux-4.18.y/block/bio.c' l='824'>/**
 * __bio_try_merge_page - try appending data to an existing bvec.
 * @bio: destination bio
 * @page: page to add
 * @len: length of the data to add
 * @off: offset of the data in @page
 *
 * Try to add the data at @page + @off to the last bvec of @bio.  This is a
 * a useful optimisation for file systems with a block size smaller than the
 * page size.
 *
 * Return %true on success or %false on failure.
 */</doc>
