<dec f='linux-4.14.y/arch/x86/include/asm/acpi.h' l='53' type='void acpi_pic_sci_set_trigger(unsigned int , u16 )'/>
<def f='linux-4.14.y/arch/x86/kernel/acpi/boot.c' l='581' ll='615' type='void acpi_pic_sci_set_trigger(unsigned int irq, u16 trigger)'/>
<doc f='linux-4.14.y/arch/x86/kernel/acpi/boot.c' l='567'>/*
 * acpi_pic_sci_set_trigger()
 *
 * use ELCR to set PIC-mode trigger type for SCI
 *
 * If a PIC-mode SCI is not recognized or gives spurious IRQ7&apos;s
 * it may require Edge Trigger -- use &quot;acpi_sci=edge&quot;
 *
 * Port 0x4d0-4d1 are ECLR1 and ECLR2, the Edge/Level Control Registers
 * for the 8259 PIC.  bit[n] = 1 means irq[n] is Level, otherwise Edge.
 * ECLR1 is IRQs 0-7 (IRQ 0, 1, 2 must be 0)
 * ECLR2 is IRQs 8-15 (IRQ 8, 13 must be 0)
 */</doc>
<use f='linux-4.14.y/drivers/acpi/bus.c' l='1072' u='c' c='acpi_early_init'/>
<dec f='linux-4.14.y/arch/x86/include/asm/acpi.h' l='53' type='void acpi_pic_sci_set_trigger(unsigned int , u16 )'/>
<def f='linux-4.14.y/arch/x86/kernel/acpi/boot.c' l='581' ll='615' type='void acpi_pic_sci_set_trigger(unsigned int irq, u16 trigger)'/>
<doc f='linux-4.14.y/arch/x86/kernel/acpi/boot.c' l='567'>/*
 * acpi_pic_sci_set_trigger()
 *
 * use ELCR to set PIC-mode trigger type for SCI
 *
 * If a PIC-mode SCI is not recognized or gives spurious IRQ7&apos;s
 * it may require Edge Trigger -- use &quot;acpi_sci=edge&quot;
 *
 * Port 0x4d0-4d1 are ECLR1 and ECLR2, the Edge/Level Control Registers
 * for the 8259 PIC.  bit[n] = 1 means irq[n] is Level, otherwise Edge.
 * ECLR1 is IRQs 0-7 (IRQ 0, 1, 2 must be 0)
 * ECLR2 is IRQs 8-15 (IRQ 8, 13 must be 0)
 */</doc>
<use f='linux-4.14.y/drivers/acpi/bus.c' l='1072' u='c' c='acpi_early_init'/>
