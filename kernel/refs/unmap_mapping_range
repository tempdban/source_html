<dec f='linux-4.14.y/include/linux/mm.h' l='1303' type='void unmap_mapping_range(struct address_space * mapping, const loff_t holebegin, const loff_t holelen, int even_cows)'/>
<use f='linux-4.14.y/include/linux/mm.h' l='1318' u='c' c='unmap_shared_mapping_range'/>
<use f='linux-4.14.y/include/drm/drm_vma_manager.h' l='210' u='c' c='drm_vma_node_unmap'/>
<use f='linux-4.14.y/fs/kernfs/file.c' l='810' u='c' c='kernfs_drain_open_files'/>
<def f='linux-4.14.y/mm/memory.c' l='2806' ll='2831' type='void unmap_mapping_range(struct address_space * mapping, const loff_t holebegin, const loff_t holelen, int even_cows)'/>
<dec f='linux-4.14.y/mm/memory.c' l='2832' type='void unmap_mapping_range(struct address_space * , const loff_t , const loff_t , int )'/>
<use f='linux-4.14.y/mm/memory.c' l='2832' c='unmap_mapping_range'/>
<use f='linux-4.14.y/mm/memory.c' l='2832' u='a'/>
<use f='linux-4.14.y/mm/memory.c' l='2832' u='a'/>
<doc f='linux-4.14.y/mm/memory.c' l='2789'>/**
 * unmap_mapping_range - unmap the portion of all mmaps in the specified
 * address_space corresponding to the specified page range in the underlying
 * file.
 *
 * @mapping: the address space containing mmaps to be unmapped.
 * @holebegin: byte in first page to unmap, relative to the start of
 * the underlying file.  This will be rounded down to a PAGE_SIZE
 * boundary.  Note that this is different from truncate_pagecache(), which
 * must keep the partial page.  In contrast, we must get rid of
 * partial pages.
 * @holelen: size of prospective hole in bytes.  This will be rounded
 * up to a PAGE_SIZE boundary.  A holelen of zero truncates to the
 * end of the file.
 * @even_cows: 1 when truncating a file, unmap even private COWed pages;
 * but 0 when invalidating pagecache, don&apos;t throw away private data.
 */</doc>
<use f='linux-4.14.y/mm/shmem.c' l='1032' u='c' c='shmem_setattr'/>
<use f='linux-4.14.y/mm/shmem.c' l='1039' u='c' c='shmem_setattr'/>
<use f='linux-4.14.y/mm/shmem.c' l='2872' u='c' c='shmem_fallocate'/>
<use f='linux-4.14.y/mm/truncate.c' l='188' u='c' c='truncate_inode_page'/>
<use f='linux-4.14.y/mm/truncate.c' l='665' u='c' c='invalidate_inode_pages2_range'/>
<use f='linux-4.14.y/mm/truncate.c' l='675' u='c' c='invalidate_inode_pages2_range'/>
<use f='linux-4.14.y/mm/truncate.c' l='703' u='c' c='invalidate_inode_pages2_range'/>
<use f='linux-4.14.y/mm/truncate.c' l='756' u='c' c='truncate_pagecache'/>
<use f='linux-4.14.y/mm/truncate.c' l='758' u='c' c='truncate_pagecache'/>
<use f='linux-4.14.y/mm/truncate.c' l='869' u='c' c='truncate_pagecache_range'/>
