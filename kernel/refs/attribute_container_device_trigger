<dec f='linux-4.18.y/include/linux/attribute_container.h' l='54' type='void attribute_container_device_trigger(struct device * dev, int (*)(struct attribute_container *, struct device *, struct device *) fn)'/>
<def f='linux-4.18.y/drivers/base/attribute_container.c' l='249' ll='276' type='void attribute_container_device_trigger(struct device * dev, int (*)(struct attribute_container *, struct device *, struct device *) fn)'/>
<doc f='linux-4.18.y/drivers/base/attribute_container.c' l='239'>/**
 * attribute_container_device_trigger - execute a trigger for each matching classdev
 *
 * @dev:  The generic device to run the trigger for
 * @fn	  the function to execute for each classdev.
 *
 * This function is for executing a trigger when you need to know both
 * the container and the classdev.  If you only care about the
 * container, then use attribute_container_trigger() instead.
 */</doc>
<use f='linux-4.18.y/drivers/base/transport_class.c' l='178' u='c' c='transport_add_device'/>
<use f='linux-4.18.y/drivers/base/transport_class.c' l='209' u='c' c='transport_configure_device'/>
<use f='linux-4.18.y/drivers/base/transport_class.c' l='248' u='c' c='transport_remove_device'/>
