<def f='linux-4.18.y/include/linux/kobject.h' l='171' ll='176'/>
<size>96</size>
<doc f='linux-4.18.y/include/linux/kobject.h' l='154'>/**
 * struct kset - a set of kobjects of a specific type, belonging to a specific subsystem.
 *
 * A kset defines a group of kobjects.  They can be individually
 * different &quot;types&quot; but overall these kobjects all want to be grouped
 * together and operated on in the same manner.  ksets are used to
 * define the attribute callbacks and other common events that happen to
 * a kobject.
 *
 * @list: the list of all kobjects for this kset
 * @list_lock: a lock for iterating over the kobjects
 * @kobj: the embedded kobject for this kset (recursion, isn&apos;t it fun...)
 * @uevent_ops: the set of uevent operations for this kset.  These are
 * called whenever a kobject has something happen to it so that the kset
 * can add new environment variables, or filter out the uevents if so
 * desired.
 */</doc>
<mbr r='kset::list' o='0' t='struct list_head'/>
<mbr r='kset::list_lock' o='128' t='spinlock_t'/>
<mbr r='kset::kobj' o='192' t='struct kobject'/>
<mbr r='kset::uevent_ops' o='704' t='const struct kset_uevent_ops *'/>
