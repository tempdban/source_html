<dec f='linux-4.18.y/include/linux/percpu-refcount.h' l='104' type='void percpu_ref_exit(struct percpu_ref * ref)'/>
<use f='linux-4.18.y/include/linux/genhd.h' l='680' u='c' c='hd_free_part'/>
<use f='linux-4.18.y/block/blk-core.c' l='820' u='c' c='blk_cleanup_queue'/>
<use f='linux-4.18.y/block/blk-core.c' l='1084' u='c' c='blk_alloc_queue_node'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5227' u='c' c='md_free'/>
<use f='linux-4.18.y/fs/aio.c' l='577' u='c' c='free_ioctx'/>
<use f='linux-4.18.y/fs/aio.c' l='578' u='c' c='free_ioctx'/>
<use f='linux-4.18.y/fs/aio.c' l='791' u='c' c='ioctx_alloc'/>
<use f='linux-4.18.y/fs/aio.c' l='792' u='c' c='ioctx_alloc'/>
<use f='linux-4.18.y/kernel/cgroup/cgroup.c' l='1987' u='c' c='cgroup_setup_root'/>
<use f='linux-4.18.y/kernel/cgroup/cgroup.c' l='4569' u='c' c='css_free_rwork_fn'/>
<use f='linux-4.18.y/kernel/cgroup/cgroup.c' l='4900' u='c' c='cgroup_create'/>
<def f='linux-4.18.y/lib/percpu-refcount.c' l='101' ll='111' type='void percpu_ref_exit(struct percpu_ref * ref)'/>
<dec f='linux-4.18.y/lib/percpu-refcount.c' l='112' type='void percpu_ref_exit(struct percpu_ref * )'/>
<use f='linux-4.18.y/lib/percpu-refcount.c' l='112' c='percpu_ref_exit'/>
<use f='linux-4.18.y/lib/percpu-refcount.c' l='112' u='a'/>
<use f='linux-4.18.y/lib/percpu-refcount.c' l='112' u='a'/>
<doc f='linux-4.18.y/lib/percpu-refcount.c' l='91'>/**
 * percpu_ref_exit - undo percpu_ref_init()
 * @ref: percpu_ref to exit
 *
 * This function exits @ref.  The caller is responsible for ensuring that
 * @ref is no longer in active use.  The usual places to invoke this
 * function from are the @ref-&gt;release() callback or in init failure path
 * where percpu_ref_init() succeeded but other parts of the initialization
 * of the embedding object failed.
 */</doc>
