<dec f='linux-4.18.y/include/linux/vmalloc.h' l='135' type='struct vm_struct * remove_vm_area(const void * addr)'/>
<use f='linux-4.18.y/arch/x86/mm/ioremap.c' l='428' u='c' c='iounmap'/>
<def f='linux-4.18.y/mm/vmalloc.c' l='1473' ll='1495' type='struct vm_struct * remove_vm_area(const void * addr)'/>
<use f='linux-4.18.y/mm/vmalloc.c' l='1518' u='c' c='__vunmap'/>
<use f='linux-4.18.y/mm/vmalloc.c' l='1677' u='c' c='__vmalloc_area_node'/>
<use f='linux-4.18.y/mm/vmalloc.c' l='2356' u='c' c='free_vm_area'/>
<doc f='linux-4.18.y/mm/vmalloc.c' l='1465'>/**
 *	remove_vm_area  -  find and remove a continuous kernel virtual area
 *	@addr:		base address
 *
 *	Search for the kernel VM area starting at @addr, and remove it.
 *	This function returns the found VM area, but using it is NOT safe
 *	on SMP machines, except for its size or flags.
 */</doc>
