<dec f='linux-4.18.y/include/linux/idr.h' l='231' type='void ida_destroy(struct ida * ida)'/>
<use f='linux-4.18.y/drivers/dax/super.c' l='657' u='c' c='dax_fs_exit'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='105' u='c' c='drm_connector_ida_destroy'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_mode_config.c' l='481' u='c' c='drm_mode_config_cleanup'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_gmrid_manager.c' l='153' u='c' c='vmw_gmrid_man_takedown'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_main.c' l='176' u='c' c='ipvlan_port_destroy'/>
<use f='linux-4.18.y/drivers/ptp/ptp_clock.c' l='390' u='c' c='ptp_exit'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='584' u='c' c='scsi_exit_hosts'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1353' u='c' c='thermal_zone_device_unregister'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1554' u='c' c='thermal_init'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1555' u='c' c='thermal_init'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1569' u='c' c='thermal_exit'/>
<use f='linux-4.18.y/drivers/thermal/thermal_core.c' l='1570' u='c' c='thermal_exit'/>
<use f='linux-4.18.y/drivers/usb/typec/class.c' l='1441' u='c' c='typec_exit'/>
<use f='linux-4.18.y/drivers/virtio/virtio.c' l='439' u='c' c='virtio_exit'/>
<use f='linux-4.18.y/fs/devpts/inode.c' l='517' u='c' c='devpts_kill_sb'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='3335' u='c' c='rcu_free_pool'/>
<def f='linux-4.18.y/lib/idr.c' l='534' ll='545' type='void ida_destroy(struct ida * ida)'/>
<dec f='linux-4.18.y/lib/idr.c' l='546' type='void ida_destroy(struct ida * )'/>
<use f='linux-4.18.y/lib/idr.c' l='546' c='ida_destroy'/>
<use f='linux-4.18.y/lib/idr.c' l='546' u='a'/>
<use f='linux-4.18.y/lib/idr.c' l='546' u='a'/>
<doc f='linux-4.18.y/lib/idr.c' l='525'>/**
 * ida_destroy - Free the contents of an ida
 * @ida: ida handle
 *
 * Calling this function releases all resources associated with an IDA.  When
 * this call returns, the IDA is empty and can be reused or freed.  The caller
 * should not allow ida_remove() or ida_get_new_above() to be called at the
 * same time.
 */</doc>
