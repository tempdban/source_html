<dec f='linux-4.18.y/include/acpi/acpi_io.h' l='21' type='void acpi_os_unmap_iomem(void * virt, acpi_size size)'/>
<def f='linux-4.18.y/drivers/acpi/osl.c' l='406' ll='426' type='void acpi_os_unmap_iomem(void * virt, acpi_size size)'/>
<dec f='linux-4.18.y/drivers/acpi/osl.c' l='427' type='void acpi_os_unmap_iomem(void * , acpi_size )'/>
<use f='linux-4.18.y/drivers/acpi/osl.c' l='427' c='acpi_os_unmap_iomem'/>
<use f='linux-4.18.y/drivers/acpi/osl.c' l='427' u='a'/>
<use f='linux-4.18.y/drivers/acpi/osl.c' l='427' u='a'/>
<use f='linux-4.18.y/drivers/acpi/osl.c' l='431' u='c' c='acpi_os_unmap_memory'/>
<doc f='linux-4.18.y/drivers/acpi/osl.c' l='392'>/**
 * acpi_os_unmap_iomem - Drop a memory mapping reference.
 * @virt: Start of the address range to drop a reference to.
 * @size: Size of the address range to drop a reference to.
 *
 * Look up the given virtual address range in the list of existing ACPI memory
 * mappings, drop a reference to it and unmap it if there are no more active
 * references to it.
 *
 * During early init (when acpi_permanent_mmap has not been set yet) this
 * routine simply calls __acpi_unmap_table() to get the job done.  Since
 * __acpi_unmap_table() is an __init function, the __ref annotation is needed
 * here.
 */</doc>
