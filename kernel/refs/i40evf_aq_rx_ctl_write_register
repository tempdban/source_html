<dec f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40e_prototype.h' l='110' type='i40e_status i40evf_aq_rx_ctl_write_register(struct i40e_hw * hw, u32 reg_addr, u32 reg_val, struct i40e_asq_cmd_details * cmd_details)'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40e_common.c' l='993' ll='1011' type='i40e_status i40evf_aq_rx_ctl_write_register(struct i40e_hw * hw, u32 reg_addr, u32 reg_val, struct i40e_asq_cmd_details * cmd_details)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40e_common.c' l='1030' u='c' c='i40evf_write_rx_ctl'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/i40evf/i40e_common.c' l='983'>/**
 * i40evf_aq_rx_ctl_write_register
 * @hw: pointer to the hw struct
 * @reg_addr: register address
 * @reg_val: register value
 * @cmd_details: pointer to command details structure or NULL
 *
 * Use the firmware to write to an Rx control register,
 * especially useful if the Rx unit is under heavy pressure
 **/</doc>
