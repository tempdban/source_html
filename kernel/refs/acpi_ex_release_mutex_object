<dec f='linux-4.14.y/drivers/acpi/acpica/acinterp.h' l='286' type='acpi_status acpi_ex_release_mutex_object(union acpi_operand_object * obj_desc)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxface.c' l='1099' u='c' c='acpi_release_global_lock'/>
<def f='linux-4.14.y/drivers/acpi/acpica/exmutex.c' l='317' ll='357' type='acpi_status acpi_ex_release_mutex_object(union acpi_operand_object * obj_desc)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/exmutex.c' l='454' u='c' c='acpi_ex_release_mutex'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/exmutex.c' l='295'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_release_mutex_object
 *
 * PARAMETERS:  obj_desc            - The object descriptor for this op
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Release a previously acquired Mutex, low level interface.
 *              Provides a common path that supports multiple releases (after
 *              previous multiple acquires) by the same thread.
 *
 * MUTEX:       Interpreter must be locked
 *
 * NOTE: This interface is called from three places:
 * 1) From acpi_ex_release_mutex, via an AML Acquire() operator
 * 2) From acpi_ex_release_global_lock when an AML Field access requires the
 *    global lock
 * 3) From the external interface, acpi_release_global_lock
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/acpica/exutils.c' l='255' u='c' c='acpi_ex_release_global_lock'/>
