<dec f='linux-4.14.y/include/linux/mbcache.h' l='47' type='struct mb_cache_entry * mb_cache_entry_find_next(struct mb_cache * cache, struct mb_cache_entry * entry)'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='1501' u='c' c='ext4_xattr_inode_cache_find'/>
<use f='linux-4.14.y/fs/ext4/xattr.c' l='3058' u='c' c='ext4_xattr_block_cache_find'/>
<def f='linux-4.14.y/fs/mbcache.c' l='184' ll='188' type='struct mb_cache_entry * mb_cache_entry_find_next(struct mb_cache * cache, struct mb_cache_entry * entry)'/>
<dec f='linux-4.14.y/fs/mbcache.c' l='189' type='struct mb_cache_entry * mb_cache_entry_find_next(struct mb_cache * , struct mb_cache_entry * )'/>
<use f='linux-4.14.y/fs/mbcache.c' l='189' c='mb_cache_entry_find_next'/>
<use f='linux-4.14.y/fs/mbcache.c' l='189' u='a'/>
<use f='linux-4.14.y/fs/mbcache.c' l='189' u='a'/>
<doc f='linux-4.14.y/fs/mbcache.c' l='174'>/*
 * mb_cache_entry_find_next - find next reusable entry with the same key
 * @cache: cache where we should search
 * @entry: entry to start search from
 *
 * Finds next reusable entry in the hash chain which has the same key as @entry.
 * If @entry is unhashed (which can happen when deletion of entry races with the
 * search), finds the first reusable entry in the hash chain. The function drops
 * reference to @entry and returns with a reference to the found entry.
 */</doc>
