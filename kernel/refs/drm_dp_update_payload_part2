<dec f='linux-4.18.y/include/drm/drm_dp_mst_helper.h' l='617' type='int drm_dp_update_payload_part2(struct drm_dp_mst_topology_mgr * mgr)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1952' ll='1978' type='int drm_dp_update_payload_part2(struct drm_dp_mst_topology_mgr * mgr)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1979' type='int drm_dp_update_payload_part2(struct drm_dp_mst_topology_mgr * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1979' c='drm_dp_update_payload_part2'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1979' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1979' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='1943'>/**
 * drm_dp_update_payload_part2() - Execute payload update part 2
 * @mgr: manager to use.
 *
 * This iterates over all proposed virtual channels, and tries to
 * allocate space in the link for them. For 0-&gt;slots transitions,
 * this step writes the remote VC payload commands. For slots-&gt;0
 * this just resets some internal state.
 */</doc>
