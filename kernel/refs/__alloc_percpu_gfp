<dec f='linux-4.14.y/include/linux/percpu.h' l='140' type='void * __alloc_percpu_gfp(size_t size, size_t align, gfp_t gfp)'/>
<use f='linux-4.14.y/drivers/net/loopback.c' l='152' macro='1' u='c'/>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='1412' macro='1' u='c'/>
<use f='linux-4.14.y/lib/percpu-refcount.c' l='67' u='c' c='percpu_ref_init'/>
<use f='linux-4.14.y/lib/percpu_counter.c' l='131' macro='1' u='c'/>
<use f='linux-4.14.y/lib/sbitmap.c' l='299' macro='1' u='c'/>
<def f='linux-4.14.y/mm/percpu.c' l='1525' ll='1528' type='void * __alloc_percpu_gfp(size_t size, size_t align, gfp_t gfp)'/>
<dec f='linux-4.14.y/mm/percpu.c' l='1529' type='void * __alloc_percpu_gfp(size_t , size_t , gfp_t )'/>
<use f='linux-4.14.y/mm/percpu.c' l='1529' c='__alloc_percpu_gfp'/>
<use f='linux-4.14.y/mm/percpu.c' l='1529' u='a'/>
<use f='linux-4.14.y/mm/percpu.c' l='1529' u='a'/>
<doc f='linux-4.14.y/mm/percpu.c' l='1510'>/**
 * __alloc_percpu_gfp - allocate dynamic percpu area
 * @size: size of area to allocate in bytes
 * @align: alignment of area (max PAGE_SIZE)
 * @gfp: allocation flags
 *
 * Allocate zero-filled percpu area of @size bytes aligned at @align.  If
 * @gfp doesn&apos;t contain %GFP_KERNEL, the allocation doesn&apos;t block and can
 * be called from any context but is a lot more likely to fail. If @gfp
 * has __GFP_NOWARN then no warning will be triggered on invalid or failed
 * allocation requests.
 *
 * RETURNS:
 * Percpu pointer to the allocated area on success, NULL on failure.
 */</doc>
<use f='linux-4.14.y/net/core/dst.c' l='314' u='c' c='metadata_dst_alloc_percpu'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='1240' macro='1' u='c'/>
<use f='linux-4.14.y/net/netfilter/nft_counter.c' l='239' macro='1' u='c'/>
