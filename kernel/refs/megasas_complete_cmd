<dec f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='190' type='void megasas_complete_cmd(struct megasas_instance * instance, struct megasas_cmd * cmd, u8 alt_status)'/>
<use f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='2041' u='c' c='megasas_complete_outstanding_ioctls'/>
<use f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='2051' u='c' c='megasas_complete_outstanding_ioctls'/>
<use f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='2138' u='c' c='megasas_complete_cmd_dpc'/>
<def f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='3225' ll='3431' type='void megasas_complete_cmd(struct megasas_instance * instance, struct megasas_cmd * cmd, u8 alt_status)'/>
<doc f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='3215'>/**
 * megasas_complete_cmd -	Completes a command
 * @instance:			Adapter soft state
 * @cmd:			Command to be completed
 * @alt_status:			If non-zero, use this value as status to
 *				SCSI mid-layer instead of the value returned
 *				by the FW. This should be used if caller wants
 *				an alternate status (as in the case of aborted
 *				commands)
 */</doc>
<dec f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_fusion.c' l='67' type='void megasas_complete_cmd(struct megasas_instance * instance, struct megasas_cmd * cmd, u8 alt_status)'/>
<use f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_fusion.c' l='3414' u='c' c='complete_cmd_fusion'/>
<use f='linux-4.18.y/drivers/scsi/megaraid/megaraid_sas_fusion.c' l='4000' u='c' c='megasas_refire_mgmt_cmd'/>
