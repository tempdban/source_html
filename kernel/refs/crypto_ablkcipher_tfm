<def f='linux-4.18.y/include/linux/crypto.h' l='779' ll='783' type='struct crypto_tfm * crypto_ablkcipher_tfm(struct crypto_ablkcipher * tfm)'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='791' u='c' c='crypto_free_ablkcipher'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='814' u='c' c='crypto_ablkcipher_crt'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='845' u='c' c='crypto_ablkcipher_blocksize'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='851' u='c' c='crypto_ablkcipher_alignmask'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='856' u='c' c='crypto_ablkcipher_get_flags'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='862' u='c' c='crypto_ablkcipher_set_flags'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='868' u='c' c='crypto_ablkcipher_clear_flags'/>
<use f='linux-4.18.y/include/linux/crypto.h' l='980' u='c' c='ablkcipher_request_set_tfm'/>
<doc f='linux-4.18.y/include/linux/crypto.h' l='749'>/**
 * DOC: Asynchronous Block Cipher API
 *
 * Asynchronous block cipher API is used with the ciphers of type
 * CRYPTO_ALG_TYPE_ABLKCIPHER (listed as type &quot;ablkcipher&quot; in /proc/crypto).
 *
 * Asynchronous cipher operations imply that the function invocation for a
 * cipher request returns immediately before the completion of the operation.
 * The cipher request is scheduled as a separate kernel thread and therefore
 * load-balanced on the different CPUs via the process scheduler. To allow
 * the kernel crypto API to inform the caller about the completion of a cipher
 * request, the caller must provide a callback function. That function is
 * invoked with the cipher handle when the request completes.
 *
 * To support the asynchronous operation, additional information than just the
 * cipher handle must be supplied to the kernel crypto API. That additional
 * information is given by filling in the ablkcipher_request data structure.
 *
 * For the asynchronous block cipher API, the state is maintained with the tfm
 * cipher handle. A single tfm can be used across multiple calls and in
 * parallel. For asynchronous block cipher calls, context data supplied and
 * only used by the caller can be referenced the request data structure in
 * addition to the IV used for the cipher request. The maintenance of such
 * state information would be important for a crypto driver implementer to
 * have, because when calling the callback function upon completion of the
 * cipher operation, that callback function may need some information about
 * which operation just finished if it invoked multiple in parallel. This
 * state information is unused by the kernel crypto API.
 */</doc>
<use f='linux-4.18.y/include/crypto/algapi.h' l='280' u='c' c='crypto_ablkcipher_alg'/>
<use f='linux-4.18.y/include/crypto/algapi.h' l='380' u='c' c='ablkcipher_tfm_in_queue'/>
<use f='linux-4.18.y/crypto/blkcipher.c' l='414' u='c' c='async_setkey'/>
