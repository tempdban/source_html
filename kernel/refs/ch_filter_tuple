<def f='linux-4.18.y/drivers/net/cxgbe/cxgbe_filter.h' l='39' ll='74'/>
<size>64</size>
<doc f='linux-4.18.y/drivers/net/cxgbe/cxgbe_filter.h' l='26'>/*
 * Filter matching rules.  These consist of a set of ingress packet field
 * (value, mask) tuples.  The associated ingress packet field matches the
 * tuple when ((field &amp; mask) == value).  (Thus a wildcard &quot;don&apos;t care&quot; field
 * rule can be constructed by specifying a tuple of (0, 0).)  A filter rule
 * matches an ingress packet when all of the individual individual field
 * matching rules are true.
 *
 * Partial field masks are always valid, however, while it may be easy to
 * understand their meanings for some fields (e.g. IP address to match a
 * subnet), for others making sensible partial masks is less intuitive (e.g.
 * MPS match type) ...
 */</doc>
<mbr r='ch_filter_tuple::ethtype' o='0' t='uint32_t'/>
<mbr r='ch_filter_tuple::frag' o='16' t='uint32_t'/>
<mbr r='ch_filter_tuple::ivlan_vld' o='17' t='uint32_t'/>
<mbr r='ch_filter_tuple::ovlan_vld' o='18' t='uint32_t'/>
<mbr r='ch_filter_tuple::pfvf_vld' o='19' t='uint32_t'/>
<mbr r='ch_filter_tuple::macidx' o='20' t='uint32_t'/>
<mbr r='ch_filter_tuple::fcoe' o='29' t='uint32_t'/>
<mbr r='ch_filter_tuple::iport' o='32' t='uint32_t'/>
<mbr r='ch_filter_tuple::matchtype' o='35' t='uint32_t'/>
<mbr r='ch_filter_tuple::proto' o='38' t='uint32_t'/>
<mbr r='ch_filter_tuple::tos' o='46' t='uint32_t'/>
<mbr r='ch_filter_tuple::pf' o='54' t='uint32_t'/>
<mbr r='ch_filter_tuple::vf' o='64' t='uint32_t'/>
<mbr r='ch_filter_tuple::ivlan' o='72' t='uint32_t'/>
<mbr r='ch_filter_tuple::ovlan' o='96' t='uint32_t'/>
<mbr r='ch_filter_tuple::lip' o='112' t='uint8_t [16]'/>
<mbr r='ch_filter_tuple::fip' o='240' t='uint8_t [16]'/>
<mbr r='ch_filter_tuple::lport' o='368' t='uint16_t'/>
<mbr r='ch_filter_tuple::fport' o='384' t='uint16_t'/>
<mbr r='ch_filter_tuple::rsvd' o='400' t='uint8_t [12]'/>
