<dec f='linux-4.18.y/include/linux/spi/spi.h' l='640' type='void spi_unregister_controller(struct spi_controller * ctlr)'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2246' u='c' c='devm_spi_unregister'/>
<def f='linux-4.18.y/drivers/spi/spi.c' l='2302' ll='2327' type='void spi_unregister_controller(struct spi_controller * ctlr)'/>
<dec f='linux-4.18.y/drivers/spi/spi.c' l='2328' type='void spi_unregister_controller(struct spi_controller * )'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2328' c='spi_unregister_controller'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2328' u='a'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2328' u='a'/>
<doc f='linux-4.18.y/drivers/spi/spi.c' l='2290'>/**
 * spi_unregister_controller - unregister SPI master or slave controller
 * @ctlr: the controller being unregistered
 * Context: can sleep
 *
 * This call is used only by SPI controller drivers, which are the
 * only ones directly touching chip registers.
 *
 * This must be called from context that can sleep.
 *
 * Note that this function also drops a reference to the controller.
 */</doc>
