<dec f='linux-4.14.y/fs/ntfs/inode.h' l='305' type='int ntfs_truncate(struct inode * vi)'/>
<use f='linux-4.14.y/fs/ntfs/file.c' l='1772' u='c' c='ntfs_perform_write'/>
<def f='linux-4.14.y/fs/ntfs/inode.c' l='2363' ll='2860' type='int ntfs_truncate(struct inode * vi)'/>
<use f='linux-4.14.y/fs/ntfs/inode.c' l='2872' u='c' c='ntfs_truncate_vfs'/>
<doc f='linux-4.14.y/fs/ntfs/inode.c' l='2345'>/**
 * ntfs_truncate - called when the i_size of an ntfs inode is changed
 * @vi:		inode for which the i_size was changed
 *
 * We only support i_size changes for normal files at present, i.e. not
 * compressed and not encrypted.  This is enforced in ntfs_setattr(), see
 * below.
 *
 * The kernel guarantees that @vi is a regular file (S_ISREG() is true) and
 * that the change is allowed.
 *
 * This implies for us that @vi is a file inode rather than a directory, index,
 * or attribute inode as well as that @vi is a base inode.
 *
 * Returns 0 on success or -errno on error.
 *
 * Called with -&gt;i_mutex held.
 */</doc>
