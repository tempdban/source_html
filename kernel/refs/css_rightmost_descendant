<dec f='linux-4.18.y/include/linux/cgroup.h' l='135' type='struct cgroup_subsys_state * css_rightmost_descendant(struct cgroup_subsys_state * pos)'/>
<def f='linux-4.18.y/kernel/cgroup/cgroup.c' l='3964' ll='3980' type='struct cgroup_subsys_state * css_rightmost_descendant(struct cgroup_subsys_state * pos)'/>
<doc f='linux-4.18.y/kernel/cgroup/cgroup.c' l='3951'>/**
 * css_rightmost_descendant - return the rightmost descendant of a css
 * @pos: css of interest
 *
 * Return the rightmost descendant of @pos.  If there&apos;s no descendant, @pos
 * is returned.  This can be used during pre-order traversal to skip
 * subtree of @pos.
 *
 * While this function requires cgroup_mutex or RCU read locking, it
 * doesn&apos;t require the whole traversal to be contained in a single critical
 * section.  This function will return the correct rightmost descendant as
 * long as @pos is accessible.
 */</doc>
<use f='linux-4.18.y/kernel/cgroup/cpuset.c' l='580' u='c' c='update_domain_attr_tree'/>
<use f='linux-4.18.y/kernel/cgroup/cpuset.c' l='713' u='c' c='generate_sched_domains'/>
<use f='linux-4.18.y/kernel/cgroup/cpuset.c' l='917' u='c' c='update_cpumasks_hier'/>
<use f='linux-4.18.y/kernel/cgroup/cpuset.c' l='1170' u='c' c='update_nodemasks_hier'/>
