<def f='linux-4.14.y/include/linux/clk-provider.h' l='528' ll='532'/>
<size>32</size>
<doc f='linux-4.14.y/include/linux/clk-provider.h' l='516'>/**
 * struct clk_fixed_factor - fixed multiplier and divider clock
 *
 * @hw:		handle between common and hardware-specific interfaces
 * @mult:	multiplier
 * @div:	divider
 *
 * Clock with a fixed multiplier and divider. The output frequency is the
 * parent clock rate divided by div and multiplied by mult.
 * Implements .recalc_rate, .set_rate and .round_rate
 */</doc>
<mbr r='clk_fixed_factor::hw' o='0' t='struct clk_hw'/>
<mbr r='clk_fixed_factor::mult' o='192' t='unsigned int'/>
<mbr r='clk_fixed_factor::div' o='224' t='unsigned int'/>
<def f='linux-4.14.y/include/linux/clk-provider.h' l='528' ll='532'/>
<size>32</size>
<doc f='linux-4.14.y/include/linux/clk-provider.h' l='516'>/**
 * struct clk_fixed_factor - fixed multiplier and divider clock
 *
 * @hw:		handle between common and hardware-specific interfaces
 * @mult:	multiplier
 * @div:	divider
 *
 * Clock with a fixed multiplier and divider. The output frequency is the
 * parent clock rate divided by div and multiplied by mult.
 * Implements .recalc_rate, .set_rate and .round_rate
 */</doc>
<mbr r='clk_fixed_factor::hw' o='0' t='struct clk_hw'/>
<mbr r='clk_fixed_factor::mult' o='192' t='unsigned int'/>
<mbr r='clk_fixed_factor::div' o='224' t='unsigned int'/>
