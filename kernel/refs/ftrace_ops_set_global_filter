<dec f='linux-4.14.y/include/linux/ftrace.h' l='418' type='void ftrace_ops_set_global_filter(struct ftrace_ops * ops)'/>
<def f='linux-4.14.y/kernel/trace/ftrace.c' l='4841' ll='4848' type='void ftrace_ops_set_global_filter(struct ftrace_ops * ops)'/>
<dec f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' type='void ftrace_ops_set_global_filter(struct ftrace_ops * )'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' c='ftrace_ops_set_global_filter'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' u='a'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' u='a'/>
<doc f='linux-4.14.y/kernel/trace/ftrace.c' l='4834'>/**
 * ftrace_ops_set_global_filter - setup ops to use global filters
 * @ops - the ops which will use the global filters
 *
 * ftrace users who need global function trace filtering should call this.
 * It can set the global filter only if ops were not initialized before.
 */</doc>
<dec f='linux-4.14.y/include/linux/ftrace.h' l='418' type='void ftrace_ops_set_global_filter(struct ftrace_ops * ops)'/>
<def f='linux-4.14.y/kernel/trace/ftrace.c' l='4841' ll='4848' type='void ftrace_ops_set_global_filter(struct ftrace_ops * ops)'/>
<dec f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' type='void ftrace_ops_set_global_filter(struct ftrace_ops * )'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' c='ftrace_ops_set_global_filter'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' u='a'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='4849' u='a'/>
<doc f='linux-4.14.y/kernel/trace/ftrace.c' l='4834'>/**
 * ftrace_ops_set_global_filter - setup ops to use global filters
 * @ops - the ops which will use the global filters
 *
 * ftrace users who need global function trace filtering should call this.
 * It can set the global filter only if ops were not initialized before.
 */</doc>
