<def f='linux-4.14.y/include/linux/async_tx.h' l='42' ll='47'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/async_tx.h' l='33'>/**
 * dma_chan_ref - object used to manage dma channels received from the
 *   dmaengine core.
 * @chan - the channel being tracked
 * @node - node for the channel to be placed on async_tx_master_list
 * @rcu - for list_del_rcu
 * @count - number of times this channel is listed in the pool
 *	(for channels with multiple capabiities)
 */</doc>
<mbr r='dma_chan_ref::chan' o='0' t='struct dma_chan *'/>
<mbr r='dma_chan_ref::node' o='64' t='struct list_head'/>
<mbr r='dma_chan_ref::rcu' o='192' t='struct callback_head'/>
<mbr r='dma_chan_ref::count' o='320' t='atomic_t'/>
<def f='linux-4.14.y/include/linux/async_tx.h' l='42' ll='47'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/async_tx.h' l='33'>/**
 * dma_chan_ref - object used to manage dma channels received from the
 *   dmaengine core.
 * @chan - the channel being tracked
 * @node - node for the channel to be placed on async_tx_master_list
 * @rcu - for list_del_rcu
 * @count - number of times this channel is listed in the pool
 *	(for channels with multiple capabiities)
 */</doc>
<mbr r='dma_chan_ref::chan' o='0' t='struct dma_chan *'/>
<mbr r='dma_chan_ref::node' o='64' t='struct list_head'/>
<mbr r='dma_chan_ref::rcu' o='192' t='struct callback_head'/>
<mbr r='dma_chan_ref::count' o='320' t='atomic_t'/>
