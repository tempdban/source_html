<dec f='linux-4.14.y/include/drm/drm_connector.h' l='564' type='struct drm_connector_state *(*)(struct drm_connector *)'/>
<offset>576</offset>
<doc f='linux-4.14.y/include/drm/drm_connector.h' l='535'>/**
	 * @atomic_duplicate_state:
	 *
	 * Duplicate the current atomic state for this connector and return it.
	 * The core and helpers guarantee that any atomic state duplicated with
	 * this hook and still owned by the caller (i.e. not transferred to the
	 * driver by calling &amp;drm_mode_config_funcs.atomic_commit) will be
	 * cleaned up by calling the @atomic_destroy_state hook in this
	 * structure.
	 *
	 * Atomic drivers which don&apos;t subclass &amp;struct drm_connector_state should use
	 * drm_atomic_helper_connector_duplicate_state(). Drivers that subclass the
	 * state structure to extend it with driver-private state should use
	 * __drm_atomic_helper_connector_duplicate_state() to make sure shared state is
	 * duplicated in a consistent fashion across drivers.
	 *
	 * It is an error to call this hook before &amp;drm_connector.state has been
	 * initialized correctly.
	 *
	 * NOTE:
	 *
	 * If the duplicate state references refcounted resources this hook must
	 * acquire a reference for each of them. The driver must release these
	 * references again in @atomic_destroy_state.
	 *
	 * RETURNS:
	 *
	 * Duplicated atomic state or NULL when the allocation failed.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/bridge/panel.c' l='56' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1112' u='r' c='drm_atomic_get_connector_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='1138' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='259' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='269' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='423' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1086' u='w'/>
<dec f='linux-4.14.y/include/drm/drm_connector.h' l='564' type='struct drm_connector_state *(*)(struct drm_connector *)'/>
<offset>576</offset>
<doc f='linux-4.14.y/include/drm/drm_connector.h' l='535'>/**
	 * @atomic_duplicate_state:
	 *
	 * Duplicate the current atomic state for this connector and return it.
	 * The core and helpers guarantee that any atomic state duplicated with
	 * this hook and still owned by the caller (i.e. not transferred to the
	 * driver by calling &amp;drm_mode_config_funcs.atomic_commit) will be
	 * cleaned up by calling the @atomic_destroy_state hook in this
	 * structure.
	 *
	 * Atomic drivers which don&apos;t subclass &amp;struct drm_connector_state should use
	 * drm_atomic_helper_connector_duplicate_state(). Drivers that subclass the
	 * state structure to extend it with driver-private state should use
	 * __drm_atomic_helper_connector_duplicate_state() to make sure shared state is
	 * duplicated in a consistent fashion across drivers.
	 *
	 * It is an error to call this hook before &amp;drm_connector.state has been
	 * initialized correctly.
	 *
	 * NOTE:
	 *
	 * If the duplicate state references refcounted resources this hook must
	 * acquire a reference for each of them. The driver must release these
	 * references again in @atomic_destroy_state.
	 *
	 * RETURNS:
	 *
	 * Duplicated atomic state or NULL when the allocation failed.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/bridge/panel.c' l='56' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1112' u='r' c='drm_atomic_get_connector_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='1138' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='259' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='269' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='423' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1086' u='w'/>
