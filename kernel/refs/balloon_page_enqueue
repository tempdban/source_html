<dec f='linux-4.14.y/include/linux/balloon_compaction.h' l='70' type='struct page * balloon_page_enqueue(struct balloon_dev_info * b_dev_info)'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='155' u='c' c='fill_balloon'/>
<def f='linux-4.14.y/mm/balloon_compaction.c' l='23' ll='43' type='struct page * balloon_page_enqueue(struct balloon_dev_info * b_dev_info)'/>
<dec f='linux-4.14.y/mm/balloon_compaction.c' l='44' type='struct page * balloon_page_enqueue(struct balloon_dev_info * )'/>
<use f='linux-4.14.y/mm/balloon_compaction.c' l='44' c='balloon_page_enqueue'/>
<use f='linux-4.14.y/mm/balloon_compaction.c' l='44' u='a'/>
<use f='linux-4.14.y/mm/balloon_compaction.c' l='44' u='a'/>
<doc f='linux-4.14.y/mm/balloon_compaction.c' l='13'>/*
 * balloon_page_enqueue - allocates a new page and inserts it into the balloon
 *			  page list.
 * @b_dev_info: balloon device descriptor where we will insert a new page to
 *
 * Driver must call it to properly allocate a new enlisted balloon page
 * before definitively removing it from the guest system.
 * This function returns the page address for the recently enqueued page or
 * NULL in the case we fail to allocate a new page this turn.
 */</doc>
<dec f='linux-4.14.y/include/linux/balloon_compaction.h' l='70' type='struct page * balloon_page_enqueue(struct balloon_dev_info * b_dev_info)'/>
<use f='linux-4.14.y/drivers/virtio/virtio_balloon.c' l='155' u='c' c='fill_balloon'/>
<def f='linux-4.14.y/mm/balloon_compaction.c' l='23' ll='43' type='struct page * balloon_page_enqueue(struct balloon_dev_info * b_dev_info)'/>
<dec f='linux-4.14.y/mm/balloon_compaction.c' l='44' type='struct page * balloon_page_enqueue(struct balloon_dev_info * )'/>
<use f='linux-4.14.y/mm/balloon_compaction.c' l='44' c='balloon_page_enqueue'/>
<use f='linux-4.14.y/mm/balloon_compaction.c' l='44' u='a'/>
<use f='linux-4.14.y/mm/balloon_compaction.c' l='44' u='a'/>
<doc f='linux-4.14.y/mm/balloon_compaction.c' l='13'>/*
 * balloon_page_enqueue - allocates a new page and inserts it into the balloon
 *			  page list.
 * @b_dev_info: balloon device descriptor where we will insert a new page to
 *
 * Driver must call it to properly allocate a new enlisted balloon page
 * before definitively removing it from the guest system.
 * This function returns the page address for the recently enqueued page or
 * NULL in the case we fail to allocate a new page this turn.
 */</doc>
