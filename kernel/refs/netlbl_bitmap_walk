<dec f='linux-4.18.y/include/net/netlabel.h' l='478' type='int netlbl_bitmap_walk(const unsigned char * bitmap, u32 bitmap_len, u32 offset, u8 state)'/>
<use f='linux-4.18.y/net/ipv4/cipso_ipv4.c' l='773' u='c' c='cipso_v4_map_cat_rbm_valid'/>
<use f='linux-4.18.y/net/ipv4/cipso_ipv4.c' l='884' u='c' c='cipso_v4_map_cat_rbm_ntoh'/>
<doc f='linux-4.18.y/include/net/netlabel.h' l='476'>/* Bitmap functions
 */</doc>
<def f='linux-4.18.y/net/netlabel/netlabel_kapi.c' l='888' ll='915' type='int netlbl_bitmap_walk(const unsigned char * bitmap, u32 bitmap_len, u32 offset, u8 state)'/>
<dec f='linux-4.18.y/net/netlabel/netlabel_kapi.c' l='916' type='int netlbl_bitmap_walk(const unsigned char * , u32 , u32 , u8 )'/>
<use f='linux-4.18.y/net/netlabel/netlabel_kapi.c' l='916' c='netlbl_bitmap_walk'/>
<use f='linux-4.18.y/net/netlabel/netlabel_kapi.c' l='916' u='a'/>
<use f='linux-4.18.y/net/netlabel/netlabel_kapi.c' l='916' u='a'/>
<doc f='linux-4.18.y/net/netlabel/netlabel_kapi.c' l='876'>/**
 * netlbl_bitmap_walk - Walk a bitmap looking for a bit
 * @bitmap: the bitmap
 * @bitmap_len: length in bits
 * @offset: starting offset
 * @state: if non-zero, look for a set (1) bit else look for a cleared (0) bit
 *
 * Description:
 * Starting at @offset, walk the bitmap from left to right until either the
 * desired bit is found or we reach the end.  Return the bit offset, -1 if
 * not found, or -2 if error.
 */</doc>
