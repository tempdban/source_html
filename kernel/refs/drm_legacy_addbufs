<dec f='linux-4.18.y/drivers/gpu/drm/drm_legacy.h' l='70' type='int drm_legacy_addbufs(struct drm_device * d, void * v, struct drm_file * f)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_bufs.c' l='1217' ll='1242' type='int drm_legacy_addbufs(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_bufs.c' l='1203'>/**
 * Add buffers for DMA transfers (ioctl).
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg pointer to a struct drm_buf_desc request.
 * \return zero on success or a negative number on failure.
 *
 * According with the memory type specified in drm_buf_desc::flags and the
 * build options, it dispatches the call either to addbufs_agp(),
 * addbufs_sg() or addbufs_pci() for AGP, scatter-gather or consistent
 * PCI memory respectively.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioc32.c' l='329' u='r' c='compat_drm_addbufs'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='586'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='586'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='586'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='586'/>
