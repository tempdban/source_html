<dec f='linux-4.18.y/drivers/net/dpaa2/mc/fsl_dpni.h' l='80' type='int dpni_open(struct fsl_mc_io * mc_io, uint32_t cmd_flags, int dpni_id, uint16_t * token)'/>
<use f='linux-4.18.y/drivers/net/dpaa2/dpaa2_ethdev.c' l='1815' u='c' c='dpaa2_dev_init'/>
<def f='linux-4.18.y/drivers/net/dpaa2/mc/dpni.c' l='29' ll='55' type='int dpni_open(struct fsl_mc_io * mc_io, uint32_t cmd_flags, int dpni_id, uint16_t * token)'/>
<doc f='linux-4.18.y/drivers/net/dpaa2/mc/dpni.c' l='12'>/**
 * dpni_open() - Open a control session for the specified object
 * @mc_io:	Pointer to MC portal&apos;s I/O object
 * @cmd_flags:	Command flags; one or more of &apos;MC_CMD_FLAG_&apos;
 * @dpni_id:	DPNI unique ID
 * @token:	Returned token; use in subsequent API calls
 *
 * This function can be used to open a control session for an
 * already created object; an object may have been declared in
 * the DPL or by calling the dpni_create() function.
 * This function returns a unique authentication token,
 * associated with the specific object ID and the specific MC
 * portal; this token must be used in all subsequent commands for
 * this specific object.
 *
 * Return:	&apos;0&apos; on Success; Error code otherwise.
 */</doc>
