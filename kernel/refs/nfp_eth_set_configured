<dec f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp.h' l='233' type='int nfp_eth_set_configured(struct nfp_cpp * cpp, unsigned int idx, int configed)'/>
<use f='linux-4.18.y/drivers/net/nfp/nfp_net.c' l='771' u='c' c='nfp_net_start'/>
<use f='linux-4.18.y/drivers/net/nfp/nfp_net.c' l='822' u='c' c='nfp_net_stop'/>
<def f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp_eth.c' l='478' ll='512' type='int nfp_eth_set_configured(struct nfp_cpp * cpp, unsigned int idx, int configed)'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_nsp_eth.c' l='465'>/*
 * nfp_eth_set_configured() - set PHY module configured control bit
 * @cpp:	NFP CPP handle
 * @idx:	NFP chip-wide port index
 * @configed:	Desired state
 *
 * Set the ifup/ifdown state on the PHY.
 *
 * Return:
 * 0 - configuration successful;
 * 1 - no changes were needed;
 * -ERRNO - configuration failed.
 */</doc>
