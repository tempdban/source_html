<dec f='linux-4.18.y/arch/x86/include/asm/fpu/internal.h' l='31' type='void fpu__restore(struct fpu * fpu)'/>
<def f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='318' ll='329' type='void fpu__restore(struct fpu * fpu)'/>
<dec f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='330' type='void fpu__restore(struct fpu * )'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='330' c='fpu__restore'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='330' u='a'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='330' u='a'/>
<doc f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='308'>/*
 * &apos;fpu__restore()&apos; is called to copy FPU registers from
 * the FPU fpstate to the live hw registers and to activate
 * access to the hardware registers, so that FPU instructions
 * can be used afterwards.
 *
 * Must be called with kernel preemption disabled (for example
 * with local interrupts disabled, as it is in the case of
 * do_device_not_available()).
 */</doc>
<use f='linux-4.18.y/arch/x86/kernel/fpu/signal.c' l='350' u='c' c='__fpu__restore_sig'/>
