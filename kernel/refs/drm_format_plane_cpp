<dec f='linux-4.18.y/include/drm/drm_fourcc.h' l='68' type='int drm_format_plane_cpp(uint32_t format, int plane)'/>
<use f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_fbdev.c' l='146' u='c' c='cirrusfb_create_object'/>
<use f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_main.c' l='67' u='c' c='cirrus_user_framebuffer_create'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='258' ll='267' type='int drm_format_plane_cpp(uint32_t format, int plane)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='268' type='int drm_format_plane_cpp(uint32_t , int )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='268' c='drm_format_plane_cpp'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='268' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='268' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='250'>/**
 * drm_format_plane_cpp - determine the bytes per pixel value
 * @format: pixel format (DRM_FORMAT_*)
 * @plane: plane index
 *
 * Returns:
 * The bytes per pixel value for the specified plane.
 */</doc>
