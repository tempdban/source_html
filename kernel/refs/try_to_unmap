<dec f='linux-4.14.y/include/linux/rmap.h' l='198' type='bool try_to_unmap(struct page * , enum ttu_flags flags)'/>
<def f='linux-4.14.y/mm/rmap.c' l='1606' ll='1633' type='bool try_to_unmap(struct page * page, enum ttu_flags flags)'/>
<doc f='linux-4.14.y/mm/rmap.c' l='1596'>/**
 * try_to_unmap - try to remove all page table mappings to a page
 * @page: the page to get unmapped
 * @flags: action and flags
 *
 * Tries to remove all the page table entries which are mapping this
 * page, used in the pageout path.  Caller must hold the page lock.
 *
 * If unmap is successful, return true. Otherwise, false.
 */</doc>
<use f='linux-4.14.y/mm/vmscan.c' l='1188' u='c' c='shrink_page_list'/>
<dec f='linux-4.14.y/include/linux/rmap.h' l='198' type='bool try_to_unmap(struct page * , enum ttu_flags flags)'/>
<def f='linux-4.14.y/mm/rmap.c' l='1606' ll='1633' type='bool try_to_unmap(struct page * page, enum ttu_flags flags)'/>
<doc f='linux-4.14.y/mm/rmap.c' l='1596'>/**
 * try_to_unmap - try to remove all page table mappings to a page
 * @page: the page to get unmapped
 * @flags: action and flags
 *
 * Tries to remove all the page table entries which are mapping this
 * page, used in the pageout path.  Caller must hold the page lock.
 *
 * If unmap is successful, return true. Otherwise, false.
 */</doc>
<use f='linux-4.14.y/mm/vmscan.c' l='1188' u='c' c='shrink_page_list'/>
