<dec f='linux-4.14.y/include/linux/filter.h' l='707' type='struct bpf_prog * bpf_int_jit_compile(struct bpf_prog * prog)'/>
<use f='linux-4.14.y/kernel/bpf/core.c' l='1377' u='c' c='bpf_prog_select_runtime'/>
<def f='linux-4.14.y/kernel/bpf/core.c' l='1482' ll='1485' type='struct bpf_prog * bpf_int_jit_compile(struct bpf_prog * prog)'/>
<doc f='linux-4.14.y/kernel/bpf/core.c' l='1478'>/* Stub for JITs that only support cBPF. eBPF programs are interpreted.
 * It is encouraged to implement bpf_int_jit_compile() instead, so that
 * eBPF and implicitly also cBPF can get JITed!
 */</doc>
<dec f='linux-4.14.y/include/linux/filter.h' l='707' type='struct bpf_prog * bpf_int_jit_compile(struct bpf_prog * prog)'/>
<use f='linux-4.14.y/kernel/bpf/core.c' l='1377' u='c' c='bpf_prog_select_runtime'/>
<def f='linux-4.14.y/kernel/bpf/core.c' l='1482' ll='1485' type='struct bpf_prog * bpf_int_jit_compile(struct bpf_prog * prog)'/>
<doc f='linux-4.14.y/kernel/bpf/core.c' l='1478'>/* Stub for JITs that only support cBPF. eBPF programs are interpreted.
 * It is encouraged to implement bpf_int_jit_compile() instead, so that
 * eBPF and implicitly also cBPF can get JITed!
 */</doc>
