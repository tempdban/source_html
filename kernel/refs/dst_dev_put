<dec f='linux-4.14.y/include/net/dst.h' l='412' type='void dst_dev_put(struct dst_entry * dst)'/>
<use f='linux-4.14.y/include/net/ip6_fib.h' l='231' u='c' c='rt6_release'/>
<def f='linux-4.14.y/net/core/dst.c' l='163' ll='175' type='void dst_dev_put(struct dst_entry * dst)'/>
<dec f='linux-4.14.y/net/core/dst.c' l='176' type='void dst_dev_put(struct dst_entry * )'/>
<use f='linux-4.14.y/net/core/dst.c' l='176' c='dst_dev_put'/>
<use f='linux-4.14.y/net/core/dst.c' l='176' u='a'/>
<use f='linux-4.14.y/net/core/dst.c' l='176' u='a'/>
<doc f='linux-4.14.y/net/core/dst.c' l='154'>/* Operations to mark dst as DEAD and clean up the net device referenced
 * by dst:
 * 1. put the dst under loopback interface and discard all tx/rx packets
 *    on this route.
 * 2. release the net_device
 * This function should be called when removing routes from the fib tree
 * in preparation for a NETDEV_DOWN/NETDEV_UNREGISTER event and also to
 * make the next dst_ops-&gt;check() fail.
 */</doc>
<use f='linux-4.14.y/net/ipv4/fib_semantics.c' l='156' u='c' c='rt_fibinfo_free'/>
<use f='linux-4.14.y/net/ipv4/fib_semantics.c' l='200' u='c' c='rt_fibinfo_free_cpus'/>
<use f='linux-4.14.y/net/ipv4/route.c' l='604' u='c' c='fnhe_flush_routes'/>
<use f='linux-4.14.y/net/ipv4/route.c' l='610' u='c' c='fnhe_flush_routes'/>
<use f='linux-4.14.y/net/ipv4/route.c' l='1386' u='c' c='rt_bind_exception'/>
<use f='linux-4.14.y/net/ipv4/route.c' l='1418' u='c' c='rt_cache_route'/>
