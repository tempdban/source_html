<dec f='linux-4.18.y/include/net/dst.h' l='397' type='void dst_dev_put(struct dst_entry * dst)'/>
<def f='linux-4.18.y/net/core/dst.c' l='166' ll='178' type='void dst_dev_put(struct dst_entry * dst)'/>
<dec f='linux-4.18.y/net/core/dst.c' l='179' type='void dst_dev_put(struct dst_entry * )'/>
<use f='linux-4.18.y/net/core/dst.c' l='179' c='dst_dev_put'/>
<use f='linux-4.18.y/net/core/dst.c' l='179' u='a'/>
<use f='linux-4.18.y/net/core/dst.c' l='179' u='a'/>
<doc f='linux-4.18.y/net/core/dst.c' l='157'>/* Operations to mark dst as DEAD and clean up the net device referenced
 * by dst:
 * 1. put the dst under loopback interface and discard all tx/rx packets
 *    on this route.
 * 2. release the net_device
 * This function should be called when removing routes from the fib tree
 * in preparation for a NETDEV_DOWN/NETDEV_UNREGISTER event and also to
 * make the next dst_ops-&gt;check() fail.
 */</doc>
<use f='linux-4.18.y/net/ipv4/fib_semantics.c' l='156' u='c' c='rt_fibinfo_free'/>
<use f='linux-4.18.y/net/ipv4/fib_semantics.c' l='200' u='c' c='rt_fibinfo_free_cpus'/>
<use f='linux-4.18.y/net/ipv4/route.c' l='587' u='c' c='fnhe_flush_routes'/>
<use f='linux-4.18.y/net/ipv4/route.c' l='593' u='c' c='fnhe_flush_routes'/>
<use f='linux-4.18.y/net/ipv4/route.c' l='1410' u='c' c='rt_bind_exception'/>
<use f='linux-4.18.y/net/ipv4/route.c' l='1442' u='c' c='rt_cache_route'/>
