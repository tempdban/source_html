<def f='linux-4.14.y/include/linux/fsnotify_backend.h' l='130' ll='197'/>
<size>200</size>
<doc f='linux-4.14.y/include/linux/fsnotify_backend.h' l='124'>/*
 * A group is a &quot;thing&quot; that wants to receive notification about filesystem
 * events.  The mask holds the subset of event types this group cares about.
 * refcnt on a group is up to the implementor and at any moment if it goes 0
 * everything will be cleaned up.
 */</doc>
<mbr r='fsnotify_group::refcnt' o='0' t='atomic_t'/>
<mbr r='fsnotify_group::ops' o='64' t='const struct fsnotify_ops *'/>
<mbr r='fsnotify_group::notification_lock' o='128' t='spinlock_t'/>
<mbr r='fsnotify_group::notification_list' o='192' t='struct list_head'/>
<mbr r='fsnotify_group::notification_waitq' o='320' t='wait_queue_head_t'/>
<mbr r='fsnotify_group::q_len' o='512' t='unsigned int'/>
<mbr r='fsnotify_group::max_events' o='544' t='unsigned int'/>
<mbr r='fsnotify_group::priority' o='576' t='unsigned int'/>
<mbr r='fsnotify_group::shutdown' o='608' t='bool'/>
<mbr r='fsnotify_group::mark_mutex' o='640' t='struct mutex'/>
<mbr r='fsnotify_group::num_marks' o='896' t='atomic_t'/>
<mbr r='fsnotify_group::marks_list' o='960' t='struct list_head'/>
<mbr r='fsnotify_group::fsn_fa' o='1088' t='struct fasync_struct *'/>
<mbr r='fsnotify_group::overflow_event' o='1152' t='struct fsnotify_event *'/>
<mbr r='fsnotify_group::user_waits' o='1216' t='atomic_t'/>
