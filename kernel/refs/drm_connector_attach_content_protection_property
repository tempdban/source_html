<dec f='linux-4.18.y/include/drm/drm_connector.h' l='1094' type='int drm_connector_attach_content_protection_property(struct drm_connector * connector)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1215' ll='1233' type='int drm_connector_attach_content_protection_property(struct drm_connector * connector)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1234' type='int drm_connector_attach_content_protection_property(struct drm_connector * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1234' c='drm_connector_attach_content_protection_property'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1234' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1234' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1200'>/**
 * drm_connector_attach_content_protection_property - attach content protection
 * property
 *
 * @connector: connector to attach CP property on.
 *
 * This is used to add support for content protection on select connectors.
 * Content Protection is intentionally vague to allow for different underlying
 * technologies, however it is most implemented by HDCP.
 *
 * The content protection will be set to &amp;drm_connector_state.content_protection
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
