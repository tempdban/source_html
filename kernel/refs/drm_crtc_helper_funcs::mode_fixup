<dec f='linux-4.14.y/include/drm/drm_modeset_helper_vtables.h' l='185' type='bool (*)(struct drm_crtc *, const struct drm_display_mode *, struct drm_display_mode *)'/>
<offset>256</offset>
<doc f='linux-4.14.y/include/drm/drm_modeset_helper_vtables.h' l='142'>/**
	 * @mode_fixup:
	 *
	 * This callback is used to validate a mode. The parameter mode is the
	 * display mode that userspace requested, adjusted_mode is the mode the
	 * encoders need to be fed with. Note that this is the inverse semantics
	 * of the meaning for the &amp;drm_encoder and &amp;drm_bridge_funcs.mode_fixup
	 * vfunc. If the CRTC cannot support the requested conversion from mode
	 * to adjusted_mode it should reject the modeset. See also
	 * &amp;drm_crtc_state.adjusted_mode for more details.
	 *
	 * This function is used by both legacy CRTC helpers and atomic helpers.
	 * With atomic helpers it is optional.
	 *
	 * NOTE:
	 *
	 * This function is called in the check phase of atomic modesets, which
	 * can be aborted for any reason (including on userspace&apos;s request to
	 * just check whether a configuration would be possible). Atomic drivers
	 * MUST NOT touch any persistent state (hardware or software) or data
	 * structures except the passed in adjusted_mode parameter.
	 *
	 * This is in contrast to the legacy CRTC helpers where this was
	 * allowed.
	 *
	 * Atomic drivers which need to inspect and adjust more state should
	 * instead use the @atomic_check callback, but note that they&apos;re not
	 * perfectly equivalent: @mode_valid is called from
	 * drm_atomic_helper_check_modeset(), but @atomic_check is called from
	 * drm_atomic_helper_check_planes(), because originally it was meant for
	 * plane update checks only.
	 *
	 * Also beware that userspace can request its own custom modes, neither
	 * core nor helpers filter modes to the list of probe modes reported by
	 * the GETCONNECTOR IOCTL and stored in &amp;drm_connector.modes. To ensure
	 * that modes are filtered consistently put any CRTC constraints and
	 * limits checks into @mode_valid.
	 *
	 * RETURNS:
	 *
	 * True if an acceptable configuration is possible, false if the modeset
	 * operation should be rejected.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='441' u='r' c='mode_fixup'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='444' u='r' c='mode_fixup'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='338' u='r' c='drm_crtc_helper_set_mode'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='339' u='r' c='drm_crtc_helper_set_mode'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='471' u='w'/>
