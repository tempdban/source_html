<dec f='linux-4.18.y/include/linux/pci.h' l='1496' type='int pci_ats_queue_depth(struct pci_dev * dev)'/>
<use f='linux-4.18.y/drivers/iommu/amd_iommu.c' l='2087' u='c' c='attach_device'/>
<use f='linux-4.18.y/drivers/iommu/amd_iommu.c' l='2093' u='c' c='attach_device'/>
<use f='linux-4.18.y/drivers/iommu/intel-iommu.c' l='1535' u='c' c='iommu_enable_dev_iotlb'/>
<def f='linux-4.18.y/drivers/pci/ats.c' l='130' ll='142' type='int pci_ats_queue_depth(struct pci_dev * dev)'/>
<dec f='linux-4.18.y/drivers/pci/ats.c' l='143' type='int pci_ats_queue_depth(struct pci_dev * )'/>
<use f='linux-4.18.y/drivers/pci/ats.c' l='143' c='pci_ats_queue_depth'/>
<use f='linux-4.18.y/drivers/pci/ats.c' l='143' u='a'/>
<use f='linux-4.18.y/drivers/pci/ats.c' l='143' u='a'/>
<doc f='linux-4.18.y/drivers/pci/ats.c' l='118'>/**
 * pci_ats_queue_depth - query the ATS Invalidate Queue Depth
 * @dev: the PCI device
 *
 * Returns the queue depth on success, or negative on failure.
 *
 * The ATS spec uses 0 in the Invalidate Queue Depth field to
 * indicate that the function can accept 32 Invalidate Request.
 * But here we use the `real&apos; values (i.e. 1~32) for the Queue
 * Depth; and 0 indicates the function shares the Queue with
 * other functions (doesn&apos;t exclusively own a Queue).
 */</doc>
