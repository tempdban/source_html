<dec f='linux-4.18.y/include/scsi/scsi_common.h' l='62' type='bool scsi_normalize_sense(const u8 * sense_buffer, int sb_len, struct scsi_sense_hdr * sshdr)'/>
<def f='linux-4.18.y/drivers/scsi/scsi_common.c' l='138' ll='180' type='bool scsi_normalize_sense(const u8 * sense_buffer, int sb_len, struct scsi_sense_hdr * sshdr)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi_common.c' l='181' type='bool scsi_normalize_sense(const u8 * , int , struct scsi_sense_hdr * )'/>
<use f='linux-4.18.y/drivers/scsi/scsi_common.c' l='181' c='scsi_normalize_sense'/>
<use f='linux-4.18.y/drivers/scsi/scsi_common.c' l='181' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_common.c' l='181' u='a'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_common.c' l='119'>/**
 * scsi_normalize_sense - normalize main elements from either fixed or
 *			descriptor sense data format into a common format.
 *
 * @sense_buffer:	byte array containing sense data returned by device
 * @sb_len:		number of valid bytes in sense_buffer
 * @sshdr:		pointer to instance of structure that common
 *			elements are written to.
 *
 * Notes:
 *	The &quot;main elements&quot; from sense data are: response_code, sense_key,
 *	asc, ascq and additional_length (only for descriptor format).
 *
 *	Typically this function can be called after a device has
 *	responded to a SCSI command with the CHECK_CONDITION status.
 *
 * Return value:
 *	true if valid sense data information found, else false;
 */</doc>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='2407' u='c' c='scsi_command_normalize_sense'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='305' u='c' c='scsi_execute'/>
<use f='linux-4.18.y/drivers/scsi/scsi_logging.c' l='395' u='c' c='scsi_log_print_sense'/>
<use f='linux-4.18.y/drivers/scsi/sg.c' l='1379' u='c' c='sg_rq_end_io'/>
<use f='linux-4.18.y/drivers/scsi/st.c' l='329' u='c' c='st_analyze_sense'/>
<use f='linux-4.18.y/drivers/usb/storage/transport.c' l='787' u='c' c='usb_stor_invoke_transport'/>
