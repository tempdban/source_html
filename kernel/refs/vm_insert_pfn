<dec f='linux-4.18.y/include/linux/mm.h' l='2489' type='int vm_insert_pfn(struct vm_area_struct * vma, unsigned long addr, unsigned long pfn)'/>
<use f='linux-4.18.y/include/linux/mm.h' l='2528' u='c' c='vmf_insert_pfn'/>
<use f='linux-4.18.y/arch/x86/entry/vdso/vma.c' l='111' u='c' c='vvar_fault'/>
<use f='linux-4.18.y/arch/x86/entry/vdso/vma.c' l='127' u='c' c='vvar_fault'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_bo_vm.c' l='272' u='c' c='ttm_bo_vm_fault'/>
<def f='linux-4.18.y/mm/memory.c' l='1855' ll='1859' type='int vm_insert_pfn(struct vm_area_struct * vma, unsigned long addr, unsigned long pfn)'/>
<dec f='linux-4.18.y/mm/memory.c' l='1860' type='int vm_insert_pfn(struct vm_area_struct * , unsigned long , unsigned long )'/>
<use f='linux-4.18.y/mm/memory.c' l='1860' c='vm_insert_pfn'/>
<use f='linux-4.18.y/mm/memory.c' l='1860' u='a'/>
<use f='linux-4.18.y/mm/memory.c' l='1860' u='a'/>
<doc f='linux-4.18.y/mm/memory.c' l='1838'>/**
 * vm_insert_pfn - insert single pfn into user vma
 * @vma: user vma to map to
 * @addr: target user address of this page
 * @pfn: source kernel pfn
 *
 * Similar to vm_insert_page, this allows drivers to insert individual pages
 * they&apos;ve allocated into a user vma. Same comments apply.
 *
 * This function should only be called from a vm_ops-&gt;fault handler, and
 * in that case the handler should return NULL.
 *
 * vma cannot be a COW mapping.
 *
 * As this is called only for pages that do not currently exist, we
 * do not need to flush old virtual caches or the TLB.
 */</doc>
