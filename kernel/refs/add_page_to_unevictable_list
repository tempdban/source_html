<dec f='linux-4.14.y/include/linux/swap.h' l='329' type='void add_page_to_unevictable_list(struct page * page)'/>
<def f='linux-4.14.y/mm/swap.c' l='458' ll='470' type='void add_page_to_unevictable_list(struct page * page)'/>
<use f='linux-4.14.y/mm/swap.c' l='503' u='c' c='lru_cache_add_active_or_unevictable'/>
<doc f='linux-4.14.y/mm/swap.c' l='448'>/**
 * add_page_to_unevictable_list - add a page to the unevictable list
 * @page:  the page to be added to the unevictable list
 *
 * Add page directly to its zone&apos;s unevictable list.  To avoid races with
 * tasks that might be making the page evictable, through eg. munlock,
 * munmap or exit, while it&apos;s not on the lru, we want to add the page
 * while it&apos;s locked or otherwise &quot;invisible&quot; to other tasks.  This is
 * difficult to do when using the pagevec cache, so bypass that.
 */</doc>
<use f='linux-4.14.y/mm/vmscan.c' l='816' u='c' c='putback_lru_page'/>
