<def f='linux-4.14.y/drivers/dma/dmaengine.h' l='151' ll='159' type='void dmaengine_desc_get_callback_invoke(struct dma_async_tx_descriptor * tx, const struct dmaengine_result * result)'/>
<doc f='linux-4.14.y/drivers/dma/dmaengine.h' l='141'>/**
 * dmaengine_desc_get_callback_invoke - get the callback in tx descriptor and
 * 					then immediately call the callback.
 * @tx: dma async tx descriptor
 * @result: transaction result
 *
 * Call dmaengine_desc_get_callback() and dmaengine_desc_callback_invoke()
 * in a single function since no work is necessary in between for the driver.
 * Locking is dependent on the driver.
 */</doc>
<use f='linux-4.14.y/drivers/dma/ioat/dma.c' l='613' u='c' c='__cleanup'/>
<use f='linux-4.14.y/drivers/dma/ioat/dma.c' l='729' u='c' c='ioat_abort_descs'/>
<use f='linux-4.14.y/drivers/dma/ioat/dma.c' l='831' u='c' c='ioat_eh'/>
<def f='linux-4.14.y/drivers/dma/dmaengine.h' l='151' ll='159' type='void dmaengine_desc_get_callback_invoke(struct dma_async_tx_descriptor * tx, const struct dmaengine_result * result)'/>
<doc f='linux-4.14.y/drivers/dma/dmaengine.h' l='141'>/**
 * dmaengine_desc_get_callback_invoke - get the callback in tx descriptor and
 * 					then immediately call the callback.
 * @tx: dma async tx descriptor
 * @result: transaction result
 *
 * Call dmaengine_desc_get_callback() and dmaengine_desc_callback_invoke()
 * in a single function since no work is necessary in between for the driver.
 * Locking is dependent on the driver.
 */</doc>
<use f='linux-4.14.y/drivers/dma/ioat/dma.c' l='613' u='c' c='__cleanup'/>
<use f='linux-4.14.y/drivers/dma/ioat/dma.c' l='729' u='c' c='ioat_abort_descs'/>
<use f='linux-4.14.y/drivers/dma/ioat/dma.c' l='831' u='c' c='ioat_eh'/>
