<def f='linux-4.18.y/security/apparmor/include/label.h' l='129' ll='139'/>
<size>80</size>
<doc f='linux-4.18.y/security/apparmor/include/label.h' l='118'>/* struct aa_label - lazy labeling struct
 * @count: ref count of active users
 * @node: rbtree position
 * @rcu: rcu callback struct
 * @proxy: is set to the label that replaced this label
 * @hname: text representation of the label (MAYBE_NULL)
 * @flags: stale and other flags - values may change under label set lock
 * @secid: secid that references this label
 * @size: number of entries in @ent[]
 * @ent: set of profiles for label, actual size determined by @size
 */</doc>
<mbr r='aa_label::count' o='0' t='struct kref'/>
<mbr r='aa_label::node' o='64' t='struct rb_node'/>
<mbr r='aa_label::rcu' o='256' t='struct callback_head'/>
<mbr r='aa_label::proxy' o='384' t='struct aa_proxy *'/>
<mbr r='aa_label::hname' o='448' t='char *'/>
<mbr r='aa_label::flags' o='512' t='long'/>
<mbr r='aa_label::secid' o='576' t='u32'/>
<mbr r='aa_label::size' o='608' t='int'/>
<mbr r='aa_label::vec' o='640' t='struct aa_profile *[]'/>
