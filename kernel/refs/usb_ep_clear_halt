<dec f='linux-4.14.y/include/linux/usb/gadget.h' l='244' type='int usb_ep_clear_halt(struct usb_ep * ep)'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/f_fs.c' l='1234' u='c' c='ffs_epfile_ioctl'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/f_mass_storage.c' l='2399' u='c' c='handle_exception'/>
<def f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='349' ll='357' type='int usb_ep_clear_halt(struct usb_ep * ep)'/>
<dec f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='358' type='int usb_ep_clear_halt(struct usb_ep * )'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='358' c='usb_ep_clear_halt'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='358' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='358' u='a'/>
<doc f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='336'>/**
 * usb_ep_clear_halt - clears endpoint halt, and resets toggle
 * @ep:the bulk or interrupt endpoint being reset
 *
 * Use this when responding to the standard usb &quot;set interface&quot; request,
 * for endpoints that aren&apos;t reconfigured, after clearing any other state
 * in the endpoint&apos;s i/o queue.
 *
 * Returns zero, or a negative error code.  On success, this call clears
 * the underlying hardware state reflecting endpoint halt and data toggle.
 * Note that some hardware can&apos;t support this request (like pxa2xx_udc),
 * and accordingly can&apos;t correctly implement interface altsettings.
 */</doc>
