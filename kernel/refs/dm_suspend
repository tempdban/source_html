<dec f='linux-4.14.y/include/linux/device-mapper.h' l='436' type='int dm_suspend(struct mapped_device * md, unsigned int suspend_flags)'/>
<doc f='linux-4.14.y/include/linux/device-mapper.h' l='433'>/*
 * A device can still be used while suspended, but I/O is deferred.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-ioctl.c' l='996' u='c' c='do_suspend'/>
<use f='linux-4.14.y/drivers/md/dm-ioctl.c' l='1042' u='c' c='do_resume'/>
<def f='linux-4.14.y/drivers/md/dm.c' l='2448' ll='2481' type='int dm_suspend(struct mapped_device * md, unsigned int suspend_flags)'/>
<doc f='linux-4.14.y/drivers/md/dm.c' l='2439'>/*
 * Suspend mechanism in request-based dm.
 *
 * 1. Flush all I/Os by lock_fs() if needed.
 * 2. Stop dispatching any I/O by stopping the request_queue.
 * 3. Wait for all in-flight I/Os to be completed or requeued.
 *
 * To abort suspend, start the request_queue.
 */</doc>
