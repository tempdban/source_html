<dec f='linux-4.18.y/include/scsi/scsi_device.h' l='388' type='int scsi_track_queue_full(struct scsi_device * , int )'/>
<use f='linux-4.18.y/drivers/message/fusion/mptsas.c' l='4087' u='c' c='mptsas_handle_queue_full_event'/>
<def f='linux-4.18.y/drivers/scsi/scsi.c' l='291' ll='314' type='int scsi_track_queue_full(struct scsi_device * sdev, int depth)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi.c' l='315' type='int scsi_track_queue_full(struct scsi_device * , int )'/>
<use f='linux-4.18.y/drivers/scsi/scsi.c' l='315' c='scsi_track_queue_full'/>
<use f='linux-4.18.y/drivers/scsi/scsi.c' l='315' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi.c' l='315' u='a'/>
<doc f='linux-4.18.y/drivers/scsi/scsi.c' l='272'>/**
 * scsi_track_queue_full - track QUEUE_FULL events to adjust queue depth
 * @sdev: SCSI Device in question
 * @depth: Current number of outstanding SCSI commands on this device,
 *         not counting the one returned as QUEUE_FULL.
 *
 * Description:	This function will track successive QUEUE_FULL events on a
 * 		specific SCSI device to determine if and when there is a
 * 		need to adjust the queue depth on the device.
 *
 * Returns:	0 - No change needed, &gt;0 - Adjust queue depth to this new depth,
 * 		-1 - Drop back to untagged operation using host-&gt;cmd_per_lun
 * 			as the untagged command depth
 *
 * Lock Status:	None held on entry
 *
 * Notes:	Low level drivers may call this at any time and we will do
 * 		&quot;The Right Thing.&quot;  We are interrupt context safe.
 */</doc>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='694' u='c' c='scsi_handle_queue_full'/>
