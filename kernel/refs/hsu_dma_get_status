<dec f='linux-4.14.y/include/linux/dma/hsu.h' l='42' type='int hsu_dma_get_status(struct hsu_dma_chip * chip, unsigned short nr, u32 * status)'/>
<def f='linux-4.14.y/drivers/dma/hsu/hsu.c' l='146' ll='188' type='int hsu_dma_get_status(struct hsu_dma_chip * chip, unsigned short nr, u32 * status)'/>
<dec f='linux-4.14.y/drivers/dma/hsu/hsu.c' l='189' type='int hsu_dma_get_status(struct hsu_dma_chip * , unsigned short , u32 * )'/>
<use f='linux-4.14.y/drivers/dma/hsu/hsu.c' l='189' c='hsu_dma_get_status'/>
<use f='linux-4.14.y/drivers/dma/hsu/hsu.c' l='189' u='a'/>
<use f='linux-4.14.y/drivers/dma/hsu/hsu.c' l='189' u='a'/>
<doc f='linux-4.14.y/drivers/dma/hsu/hsu.c' l='129'>/*
 *      hsu_dma_get_status() - get DMA channel status
 *      @chip: HSUART DMA chip
 *      @nr: DMA channel number
 *      @status: pointer for DMA Channel Status Register value
 *
 *      Description:
 *      The function reads and clears the DMA Channel Status Register, checks
 *      if it was a timeout interrupt and returns a corresponding value.
 *
 *      Caller should provide a valid pointer for the DMA Channel Status
 *      Register value that will be returned in @status.
 *
 *      Return:
 *      1 for DMA timeout status, 0 for other DMA status, or error code for
 *      invalid parameters or no interrupt pending.
 */</doc>
<doc f='linux-4.14.y/include/linux/dma/hsu.h' l='41'>/* Export to the internal users */</doc>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_mid.c' l='90' u='c' c='tng_handle_irq'/>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_mid.c' l='98' u='c' c='tng_handle_irq'/>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_mid.c' l='139' u='c' c='dnv_handle_irq'/>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_mid.c' l='147' u='c' c='dnv_handle_irq'/>
