<dec f='linux-4.14.y/drivers/scsi/scsi_priv.h' l='73' type='int scsi_decide_disposition(struct scsi_cmnd * cmd)'/>
<use f='linux-4.14.y/drivers/scsi/scsi_error.c' l='1205' u='c' c='scsi_eh_get_sense'/>
<def f='linux-4.14.y/drivers/scsi/scsi_error.c' l='1719' ll='1903' type='int scsi_decide_disposition(struct scsi_cmnd * scmd)'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_error.c' l='1705'>/**
 * scsi_decide_disposition - Disposition a cmd on return from LLD.
 * @scmd:	SCSI cmd to examine.
 *
 * Notes:
 *    This is *only* called when we are examining the status after sending
 *    out the actual data command.  any commands that are queued for error
 *    recovery (e.g. test_unit_ready) do *not* come through here.
 *
 *    When this routine returns failed, it means the error handler thread
 *    is woken.  In cases where the error code indicates an error that
 *    doesn&apos;t require the error handler read (i.e. we don&apos;t need to
 *    abort/reset), this function should return SUCCESS.
 */</doc>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='1649' u='c' c='scsi_softirq_done'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_priv.h' l='73' type='int scsi_decide_disposition(struct scsi_cmnd * cmd)'/>
<use f='linux-4.14.y/drivers/scsi/scsi_error.c' l='1205' u='c' c='scsi_eh_get_sense'/>
<def f='linux-4.14.y/drivers/scsi/scsi_error.c' l='1719' ll='1903' type='int scsi_decide_disposition(struct scsi_cmnd * scmd)'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_error.c' l='1705'>/**
 * scsi_decide_disposition - Disposition a cmd on return from LLD.
 * @scmd:	SCSI cmd to examine.
 *
 * Notes:
 *    This is *only* called when we are examining the status after sending
 *    out the actual data command.  any commands that are queued for error
 *    recovery (e.g. test_unit_ready) do *not* come through here.
 *
 *    When this routine returns failed, it means the error handler thread
 *    is woken.  In cases where the error code indicates an error that
 *    doesn&apos;t require the error handler read (i.e. we don&apos;t need to
 *    abort/reset), this function should return SUCCESS.
 */</doc>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='1649' u='c' c='scsi_softirq_done'/>
