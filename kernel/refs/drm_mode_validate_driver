<dec f='linux-4.18.y/include/drm/drm_modes.h' l='523' type='enum drm_mode_status drm_mode_validate_driver(struct drm_device * dev, const struct drm_display_mode * mode)'/>
<doc f='linux-4.18.y/include/drm/drm_modes.h' l='522'>/* for use by the crtc helper probe functions */</doc>
<def f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1140' ll='1154' type='enum drm_mode_status drm_mode_validate_driver(struct drm_device * dev, const struct drm_display_mode * mode)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1155' type='enum drm_mode_status drm_mode_validate_driver(struct drm_device * , const struct drm_display_mode * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1155' c='drm_mode_validate_driver'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1155' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1155' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1741' u='c' c='drm_mode_convert_umode'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='1128'>/**
 * drm_mode_validate_driver - make sure the mode is somewhat sane
 * @dev: drm device
 * @mode: mode to check
 *
 * First do basic validation on the mode, and then allow the driver
 * to check for device/driver specific limitations via the optional
 * &amp;drm_mode_config_helper_funcs.mode_valid hook.
 *
 * Returns:
 * The mode status
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='502' u='c' c='drm_helper_probe_single_connector_modes'/>
