<dec f='linux-4.14.y/net/netlabel/netlabel_domainhash.h' l='86' type='int netlbl_domhsh_add(struct netlbl_dom_map * entry, struct netlbl_audit * audit_info)'/>
<doc f='linux-4.14.y/net/netlabel/netlabel_domainhash.h' l='85'>/* Manipulate the domain hash table */</doc>
<def f='linux-4.14.y/net/netlabel/netlabel_domainhash.c' l='417' ll='560' type='int netlbl_domhsh_add(struct netlbl_dom_map * entry, struct netlbl_audit * audit_info)'/>
<use f='linux-4.14.y/net/netlabel/netlabel_domainhash.c' l='576' u='c' c='netlbl_domhsh_add_default'/>
<doc f='linux-4.14.y/net/netlabel/netlabel_domainhash.c' l='403'>/**
 * netlbl_domhsh_add - Adds a entry to the domain hash table
 * @entry: the entry to add
 * @audit_info: NetLabel audit information
 *
 * Description:
 * Adds a new entry to the domain hash table and handles any updates to the
 * lower level protocol handler (i.e. CIPSO).  @entry-&gt;family may be set to
 * %AF_UNSPEC which will add an entry that matches all address families.  This
 * is only useful for the unlabelled type and will only succeed if there is no
 * existing entry for any address family with the same domain.  Returns zero
 * on success, negative on failure.
 *
 */</doc>
<use f='linux-4.14.y/net/netlabel/netlabel_kapi.c' l='190' u='c' c='netlbl_cfg_unlbl_map_add'/>
<use f='linux-4.14.y/net/netlabel/netlabel_kapi.c' l='392' u='c' c='netlbl_cfg_cipsov4_map_add'/>
<use f='linux-4.14.y/net/netlabel/netlabel_mgmt.c' l='263' u='c' c='netlbl_mgmt_add_common'/>
