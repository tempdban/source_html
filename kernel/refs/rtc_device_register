<dec f='linux-4.18.y/include/linux/rtc.h' l='177' type='struct rtc_device * rtc_device_register(const char * name, struct device * dev, const struct rtc_class_ops * ops, struct module * owner)'/>
<def f='linux-4.18.y/drivers/rtc/class.c' l='290' ll='354' type='struct rtc_device * rtc_device_register(const char * name, struct device * dev, const struct rtc_class_ops * ops, struct module * owner)'/>
<dec f='linux-4.18.y/drivers/rtc/class.c' l='355' type='struct rtc_device * rtc_device_register(const char * , struct device * , const struct rtc_class_ops * , struct module * )'/>
<use f='linux-4.18.y/drivers/rtc/class.c' l='355' c='rtc_device_register'/>
<use f='linux-4.18.y/drivers/rtc/class.c' l='355' u='a'/>
<use f='linux-4.18.y/drivers/rtc/class.c' l='355' u='a'/>
<use f='linux-4.18.y/drivers/rtc/class.c' l='418' u='c' c='devm_rtc_device_register'/>
<doc f='linux-4.18.y/drivers/rtc/class.c' l='281'>/**
 * rtc_device_register - register w/ RTC class
 * @dev: the device to register
 *
 * rtc_device_unregister() must be called when the class device is no
 * longer needed.
 *
 * Returns the pointer to the new struct class device.
 */</doc>
