<def f='linux-4.18.y/include/linux/nvmem-provider.h' l='50' ll='68'/>
<size>104</size>
<doc f='linux-4.18.y/include/linux/nvmem-provider.h' l='25'>/**
 * struct nvmem_config - NVMEM device configuration
 *
 * @dev:	Parent device.
 * @name:	Optional name.
 * @id:		Optional device ID used in full name. Ignored if name is NULL.
 * @owner:	Pointer to exporter module. Used for refcounting.
 * @cells:	Optional array of pre-defined NVMEM cells.
 * @ncells:	Number of elements in cells.
 * @read_only:	Device is read-only.
 * @root_only:	Device is accessibly to root only.
 * @reg_read:	Callback to read data.
 * @reg_write:	Callback to write data.
 * @size:	Device size.
 * @word_size:	Minimum read/write access granularity.
 * @stride:	Minimum read/write access stride.
 * @priv:	User context passed to read/write callbacks.
 *
 * Note: A default &quot;nvmem&lt;id&gt;&quot; name will be assigned to the device if
 * no name is specified in its configuration. In such case &quot;&lt;id&gt;&quot; is
 * generated with ida_simple_get() and provided id field is ignored.
 *
 * Note: Specifying name and setting id to -1 implies a unique device
 * whose name is provided as-is (kept unaltered).
 */</doc>
<mbr r='nvmem_config::dev' o='0' t='struct device *'/>
<mbr r='nvmem_config::name' o='64' t='const char *'/>
<mbr r='nvmem_config::id' o='128' t='int'/>
<mbr r='nvmem_config::owner' o='192' t='struct module *'/>
<mbr r='nvmem_config::cells' o='256' t='const struct nvmem_cell_info *'/>
<mbr r='nvmem_config::ncells' o='320' t='int'/>
<mbr r='nvmem_config::read_only' o='352' t='bool'/>
<mbr r='nvmem_config::root_only' o='360' t='bool'/>
<mbr r='nvmem_config::reg_read' o='384' t='nvmem_reg_read_t'/>
<mbr r='nvmem_config::reg_write' o='448' t='nvmem_reg_write_t'/>
<mbr r='nvmem_config::size' o='512' t='int'/>
<mbr r='nvmem_config::word_size' o='544' t='int'/>
<mbr r='nvmem_config::stride' o='576' t='int'/>
<mbr r='nvmem_config::priv' o='640' t='void *'/>
<mbr r='nvmem_config::compat' o='704' t='bool'/>
<mbr r='nvmem_config::base_dev' o='768' t='struct device *'/>
