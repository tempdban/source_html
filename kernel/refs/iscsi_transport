<def f='linux-4.14.y/include/scsi/scsi_transport_iscsi.h' l='87' ll='171'/>
<size>384</size>
<doc f='linux-4.14.y/include/scsi/scsi_transport_iscsi.h' l='45'>/**
 * struct iscsi_transport - iSCSI Transport template
 *
 * @name:		transport name
 * @caps:		iSCSI Data-Path capabilities
 * @create_session:	create new iSCSI session object
 * @destroy_session:	destroy existing iSCSI session object
 * @create_conn:	create new iSCSI connection
 * @bind_conn:		associate this connection with existing iSCSI session
 *			and specified transport descriptor
 * @destroy_conn:	destroy inactive iSCSI connection
 * @set_param:		set iSCSI parameter. Return 0 on success, -ENODATA
 *			when param is not supported, and a -Exx value on other
 *			error.
 * @get_param		get iSCSI parameter. Must return number of bytes
 *			copied to buffer on success, -ENODATA when param
 *			is not supported, and a -Exx value on other error
 * @start_conn:		set connection to be operational
 * @stop_conn:		suspend/recover/terminate connection
 * @send_pdu:		send iSCSI PDU, Login, Logout, NOP-Out, Reject, Text.
 * @session_recovery_timedout: notify LLD a block during recovery timed out
 * @init_task:		Initialize a iscsi_task and any internal structs.
 *			When offloading the data path, this is called from
 *			queuecommand with the session lock, or from the
 *			iscsi_conn_send_pdu context with the session lock.
 *			When not offloading the data path, this is called
 *			from the scsi work queue without the session lock.
 * @xmit_task		Requests LLD to transfer cmd task. Returns 0 or the
 *			the number of bytes transferred on success, and -Exyz
 *			value on error. When offloading the data path, this
 *			is called from queuecommand with the session lock, or
 *			from the iscsi_conn_send_pdu context with the session
 *			lock. When not offloading the data path, this is called
 *			from the scsi work queue without the session lock.
 * @cleanup_task:	requests LLD to fail task. Called with session lock
 *			and after the connection has been suspended and
 *			terminated during recovery. If called
 *			from abort task then connection is not suspended
 *			or terminated but sk_callback_lock is held
 *
 * Template API provided by iSCSI Transport
 */</doc>
<mbr r='iscsi_transport::owner' o='0' t='struct module *'/>
<mbr r='iscsi_transport::name' o='64' t='char *'/>
<mbr r='iscsi_transport::caps' o='128' t='unsigned int'/>
<mbr r='iscsi_transport::create_session' o='192' t='struct iscsi_cls_session *(*)(struct iscsi_endpoint *, uint16_t, uint16_t, uint32_t)'/>
<mbr r='iscsi_transport::destroy_session' o='256' t='void (*)(struct iscsi_cls_session *)'/>
<mbr r='iscsi_transport::create_conn' o='320' t='struct iscsi_cls_conn *(*)(struct iscsi_cls_session *, uint32_t)'/>
<mbr r='iscsi_transport::bind_conn' o='384' t='int (*)(struct iscsi_cls_session *, struct iscsi_cls_conn *, uint64_t, int)'/>
<mbr r='iscsi_transport::start_conn' o='448' t='int (*)(struct iscsi_cls_conn *)'/>
<mbr r='iscsi_transport::stop_conn' o='512' t='void (*)(struct iscsi_cls_conn *, int)'/>
<mbr r='iscsi_transport::destroy_conn' o='576' t='void (*)(struct iscsi_cls_conn *)'/>
<mbr r='iscsi_transport::set_param' o='640' t='int (*)(struct iscsi_cls_conn *, enum iscsi_param, char *, int)'/>
<mbr r='iscsi_transport::get_ep_param' o='704' t='int (*)(struct iscsi_endpoint *, enum iscsi_param, char *)'/>
<mbr r='iscsi_transport::get_conn_param' o='768' t='int (*)(struct iscsi_cls_conn *, enum iscsi_param, char *)'/>
<mbr r='iscsi_transport::get_session_param' o='832' t='int (*)(struct iscsi_cls_session *, enum iscsi_param, char *)'/>
<mbr r='iscsi_transport::get_host_param' o='896' t='int (*)(struct Scsi_Host *, enum iscsi_host_param, char *)'/>
<mbr r='iscsi_transport::set_host_param' o='960' t='int (*)(struct Scsi_Host *, enum iscsi_host_param, char *, int)'/>
<mbr r='iscsi_transport::send_pdu' o='1024' t='int (*)(struct iscsi_cls_conn *, struct iscsi_hdr *, char *, uint32_t)'/>
<mbr r='iscsi_transport::get_stats' o='1088' t='void (*)(struct iscsi_cls_conn *, struct iscsi_stats *)'/>
<mbr r='iscsi_transport::init_task' o='1152' t='int (*)(struct iscsi_task *)'/>
<mbr r='iscsi_transport::xmit_task' o='1216' t='int (*)(struct iscsi_task *)'/>
<mbr r='iscsi_transport::cleanup_task' o='1280' t='void (*)(struct iscsi_task *)'/>
<mbr r='iscsi_transport::alloc_pdu' o='1344' t='int (*)(struct iscsi_task *, uint8_t)'/>
<mbr r='iscsi_transport::xmit_pdu' o='1408' t='int (*)(struct iscsi_task *)'/>
<mbr r='iscsi_transport::init_pdu' o='1472' t='int (*)(struct iscsi_task *, unsigned int, unsigned int)'/>
<mbr r='iscsi_transport::parse_pdu_itt' o='1536' t='void (*)(struct iscsi_conn *, itt_t, int *, int *)'/>
<mbr r='iscsi_transport::session_recovery_timedout' o='1600' t='void (*)(struct iscsi_cls_session *)'/>
<mbr r='iscsi_transport::ep_connect' o='1664' t='struct iscsi_endpoint *(*)(struct Scsi_Host *, struct sockaddr *, int)'/>
<mbr r='iscsi_transport::ep_poll' o='1728' t='int (*)(struct iscsi_endpoint *, int)'/>
<mbr r='iscsi_transport::ep_disconnect' o='1792' t='void (*)(struct iscsi_endpoint *)'/>
<mbr r='iscsi_transport::tgt_dscvr' o='1856' t='int (*)(struct Scsi_Host *, enum iscsi_tgt_dscvr, uint32_t, struct sockaddr *)'/>
<mbr r='iscsi_transport::set_path' o='1920' t='int (*)(struct Scsi_Host *, struct iscsi_path *)'/>
<mbr r='iscsi_transport::set_iface_param' o='1984' t='int (*)(struct Scsi_Host *, void *, uint32_t)'/>
<mbr r='iscsi_transport::get_iface_param' o='2048' t='int (*)(struct iscsi_iface *, enum iscsi_param_type, int, char *)'/>
<mbr r='iscsi_transport::attr_is_visible' o='2112' t='umode_t (*)(int, int)'/>
<mbr r='iscsi_transport::bsg_request' o='2176' t='int (*)(struct bsg_job *)'/>
<mbr r='iscsi_transport::send_ping' o='2240' t='int (*)(struct Scsi_Host *, uint32_t, uint32_t, uint32_t, uint32_t, struct sockaddr *)'/>
<mbr r='iscsi_transport::get_chap' o='2304' t='int (*)(struct Scsi_Host *, uint16_t, uint32_t *, char *)'/>
<mbr r='iscsi_transport::delete_chap' o='2368' t='int (*)(struct Scsi_Host *, uint16_t)'/>
<mbr r='iscsi_transport::set_chap' o='2432' t='int (*)(struct Scsi_Host *, void *, int)'/>
<mbr r='iscsi_transport::get_flashnode_param' o='2496' t='int (*)(struct iscsi_bus_flash_session *, int, char *)'/>
<mbr r='iscsi_transport::set_flashnode_param' o='2560' t='int (*)(struct iscsi_bus_flash_session *, struct iscsi_bus_flash_conn *, void *, int)'/>
<mbr r='iscsi_transport::new_flashnode' o='2624' t='int (*)(struct Scsi_Host *, const char *, int)'/>
<mbr r='iscsi_transport::del_flashnode' o='2688' t='int (*)(struct iscsi_bus_flash_session *)'/>
<mbr r='iscsi_transport::login_flashnode' o='2752' t='int (*)(struct iscsi_bus_flash_session *, struct iscsi_bus_flash_conn *)'/>
<mbr r='iscsi_transport::logout_flashnode' o='2816' t='int (*)(struct iscsi_bus_flash_session *, struct iscsi_bus_flash_conn *)'/>
<mbr r='iscsi_transport::logout_flashnode_sid' o='2880' t='int (*)(struct iscsi_cls_session *)'/>
<mbr r='iscsi_transport::get_host_stats' o='2944' t='int (*)(struct Scsi_Host *, char *, int)'/>
<mbr r='iscsi_transport::check_protection' o='3008' t='u8 (*)(struct iscsi_task *, sector_t *)'/>
