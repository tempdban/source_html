<dec f='linux-4.14.y/include/linux/capability.h' l='207' type='bool has_ns_capability_noaudit(struct task_struct * t, struct user_namespace * ns, int cap)'/>
<def f='linux-4.14.y/kernel/capability.c' l='337' ll='347' type='bool has_ns_capability_noaudit(struct task_struct * t, struct user_namespace * ns, int cap)'/>
<use f='linux-4.14.y/kernel/capability.c' l='363' u='c' c='has_capability_noaudit'/>
<doc f='linux-4.14.y/kernel/capability.c' l='324'>/**
 * has_ns_capability_noaudit - Does a task have a capability (unaudited)
 * in a specific user ns.
 * @t: The task in question
 * @ns: target user namespace
 * @cap: The capability to be tested for
 *
 * Return true if the specified task has the given superior capability
 * currently in effect to the specified user namespace, false if not.
 * Do not write an audit message for the check.
 *
 * Note that this does not set PF_SUPERPRIV on the task.
 */</doc>
<use f='linux-4.14.y/kernel/ptrace.c' l='265' u='c' c='ptrace_has_cap'/>
