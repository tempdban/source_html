<dec f='linux-4.18.y/include/linux/usb/hcd.h' l='495' type='void usb_hc_died(struct usb_hcd * hcd)'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='1116' u='c' c='register_root_hub'/>
<def f='linux-4.18.y/drivers/usb/core/hcd.c' l='2474' ll='2506' type='void usb_hc_died(struct usb_hcd * hcd)'/>
<dec f='linux-4.18.y/drivers/usb/core/hcd.c' l='2507' type='void usb_hc_died(struct usb_hcd * )'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2507' c='usb_hc_died'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2507' u='a'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2507' u='a'/>
<doc f='linux-4.18.y/drivers/usb/core/hcd.c' l='2464'>/**
 * usb_hc_died - report abnormal shutdown of a host controller (bus glue)
 * @hcd: pointer to the HCD representing the controller
 *
 * This is called by bus glue to report a USB host controller that died
 * while operations may still have been pending.  It&apos;s called automatically
 * by the PCI glue, so only glue for non-PCI busses should need to call it.
 *
 * Only call this function with the primary HCD.
 */</doc>
<use f='linux-4.18.y/drivers/usb/host/ehci-hcd.c' l='816' u='c' c='ehci_irq'/>
<use f='linux-4.18.y/drivers/usb/host/ohci-hcd.c' l='753' u='c' c='io_watchdog_func'/>
<use f='linux-4.18.y/drivers/usb/host/ohci-hcd.c' l='875' u='c' c='ohci_irq'/>
<use f='linux-4.18.y/drivers/usb/host/ohci-hcd.c' l='900' u='c' c='ohci_irq'/>
<use f='linux-4.18.y/drivers/usb/host/xhci-ring.c' l='918' u='c' c='xhci_hc_died'/>
