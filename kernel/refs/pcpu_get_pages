<def f='linux-4.14.y/mm/percpu-vm.c' l='32' ll='42' type='struct page ** pcpu_get_pages()'/>
<use f='linux-4.14.y/mm/percpu-vm.c' l='281' u='c' c='pcpu_populate_chunk'/>
<use f='linux-4.14.y/mm/percpu-vm.c' l='319' u='c' c='pcpu_depopulate_chunk'/>
<doc f='linux-4.14.y/mm/percpu-vm.c' l='22'>/**
 * pcpu_get_pages - get temp pages array
 *
 * Returns pointer to array of pointers to struct page which can be indexed
 * with pcpu_page_idx().  Note that there is only one array and accesses
 * should be serialized by pcpu_alloc_mutex.
 *
 * RETURNS:
 * Pointer to temp pages array on success.
 */</doc>
<def f='linux-4.14.y/mm/percpu-vm.c' l='32' ll='42' type='struct page ** pcpu_get_pages()'/>
<use f='linux-4.14.y/mm/percpu-vm.c' l='281' u='c' c='pcpu_populate_chunk'/>
<use f='linux-4.14.y/mm/percpu-vm.c' l='319' u='c' c='pcpu_depopulate_chunk'/>
<doc f='linux-4.14.y/mm/percpu-vm.c' l='22'>/**
 * pcpu_get_pages - get temp pages array
 *
 * Returns pointer to array of pointers to struct page which can be indexed
 * with pcpu_page_idx().  Note that there is only one array and accesses
 * should be serialized by pcpu_alloc_mutex.
 *
 * RETURNS:
 * Pointer to temp pages array on success.
 */</doc>
