<def f='linux-4.14.y/include/uapi/drm/vmwgfx_drm.h' l='487' ll='505'/>
<size>88</size>
<doc f='linux-4.14.y/include/uapi/drm/vmwgfx_drm.h' l='469'>/**
 * struct drm_vmw_control_stream_arg
 *
 * @stream_id: Stearm to control
 * @enabled: If false all following arguments are ignored.
 * @handle: Handle to buffer for getting data from.
 * @format: Format of the overlay as understood by the host.
 * @width: Width of the overlay.
 * @height: Height of the overlay.
 * @size: Size of the overlay in bytes.
 * @pitch: Array of pitches, the two last are only used for YUV12 formats.
 * @offset: Offset from start of dma buffer to overlay.
 * @src: Source rect, must be within the defined area above.
 * @dst: Destination rect, x and y may be negative.
 *
 * Argument to the DRM_VMW_CONTROL_STREAM Ioctl.
 */</doc>
<mbr r='drm_vmw_control_stream_arg::stream_id' o='0' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::enabled' o='32' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::flags' o='64' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::color_key' o='96' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::handle' o='128' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::offset' o='160' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::format' o='192' t='__s32'/>
<mbr r='drm_vmw_control_stream_arg::size' o='224' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::width' o='256' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::height' o='288' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::pitch' o='320' t='__u32 [3]'/>
<mbr r='drm_vmw_control_stream_arg::pad64' o='416' t='__u32'/>
<mbr r='drm_vmw_control_stream_arg::src' o='448' t='struct drm_vmw_rect'/>
<mbr r='drm_vmw_control_stream_arg::dst' o='576' t='struct drm_vmw_rect'/>
