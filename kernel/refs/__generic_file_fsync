<dec f='linux-4.18.y/include/linux/fs.h' l='3195' type='int __generic_file_fsync(struct file * , loff_t , loff_t , int )'/>
<use f='linux-4.18.y/fs/ext4/fsync.c' l='120' u='c' c='ext4_sync_file'/>
<def f='linux-4.18.y/fs/libfs.c' l='970' ll='999' type='int __generic_file_fsync(struct file * file, loff_t start, loff_t end, int datasync)'/>
<dec f='linux-4.18.y/fs/libfs.c' l='1000' type='int __generic_file_fsync(struct file * , loff_t , loff_t , int )'/>
<use f='linux-4.18.y/fs/libfs.c' l='1000' c='__generic_file_fsync'/>
<use f='linux-4.18.y/fs/libfs.c' l='1000' u='a'/>
<use f='linux-4.18.y/fs/libfs.c' l='1000' u='a'/>
<use f='linux-4.18.y/fs/libfs.c' l='1018' u='c' c='generic_file_fsync'/>
<doc f='linux-4.18.y/fs/libfs.c' l='958'>/**
 * __generic_file_fsync - generic fsync implementation for simple filesystems
 *
 * @file:	file to synchronize
 * @start:	start offset in bytes
 * @end:	end offset in bytes (inclusive)
 * @datasync:	only synchronize essential metadata if true
 *
 * This is a generic implementation of the fsync method for simple
 * filesystems which track all non-inode metadata in the buffers list
 * hanging off the address_space structure.
 */</doc>
