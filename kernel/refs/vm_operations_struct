<def f='linux-4.18.y/include/linux/mm.h' l='393' ll='453'/>
<size>104</size>
<doc f='linux-4.18.y/include/linux/mm.h' l='388'>/*
 * These are the virtual MM functions - opening of an area, closing and
 * unmapping it (needed to keep files on disk up-to-date etc), pointer
 * to the functions called when a no-page or a wp-page exception occurs.
 */</doc>
<mbr r='vm_operations_struct::open' o='0' t='void (*)(struct vm_area_struct *)'/>
<mbr r='vm_operations_struct::close' o='64' t='void (*)(struct vm_area_struct *)'/>
<mbr r='vm_operations_struct::split' o='128' t='int (*)(struct vm_area_struct *, unsigned long)'/>
<mbr r='vm_operations_struct::mremap' o='192' t='int (*)(struct vm_area_struct *)'/>
<mbr r='vm_operations_struct::fault' o='256' t='vm_fault_t (*)(struct vm_fault *)'/>
<mbr r='vm_operations_struct::huge_fault' o='320' t='vm_fault_t (*)(struct vm_fault *, enum page_entry_size)'/>
<mbr r='vm_operations_struct::map_pages' o='384' t='void (*)(struct vm_fault *, unsigned long, unsigned long)'/>
<mbr r='vm_operations_struct::pagesize' o='448' t='unsigned long (*)(struct vm_area_struct *)'/>
<mbr r='vm_operations_struct::page_mkwrite' o='512' t='vm_fault_t (*)(struct vm_fault *)'/>
<mbr r='vm_operations_struct::pfn_mkwrite' o='576' t='vm_fault_t (*)(struct vm_fault *)'/>
<mbr r='vm_operations_struct::access' o='640' t='int (*)(struct vm_area_struct *, unsigned long, void *, int, int)'/>
<mbr r='vm_operations_struct::name' o='704' t='const char *(*)(struct vm_area_struct *)'/>
<mbr r='vm_operations_struct::find_special_page' o='768' t='struct page *(*)(struct vm_area_struct *, unsigned long)'/>
