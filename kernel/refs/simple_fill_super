<dec f='linux-4.18.y/include/linux/fs.h' l='3185' type='int simple_fill_super(struct super_block * , unsigned long , const struct tree_descr * )'/>
<use f='linux-4.18.y/fs/debugfs/inode.c' l='219' u='c' c='debug_fill_super'/>
<use f='linux-4.18.y/fs/fuse/control.c' l='306' u='c' c='fuse_ctl_fill_super'/>
<def f='linux-4.18.y/fs/libfs.c' l='509' ll='570' type='int simple_fill_super(struct super_block * s, unsigned long magic, const struct tree_descr * files)'/>
<dec f='linux-4.18.y/fs/libfs.c' l='571' type='int simple_fill_super(struct super_block * , unsigned long , const struct tree_descr * )'/>
<use f='linux-4.18.y/fs/libfs.c' l='571' c='simple_fill_super'/>
<use f='linux-4.18.y/fs/libfs.c' l='571' u='a'/>
<use f='linux-4.18.y/fs/libfs.c' l='571' u='a'/>
<doc f='linux-4.18.y/fs/libfs.c' l='504'>/*
 * the inodes created here are not hashed. If you use iunique to generate
 * unique inode values later for this filesystem, then you must take care
 * to pass it an appropriate max_reserved value to avoid collisions.
 */</doc>
<use f='linux-4.18.y/fs/tracefs/inode.c' l='284' u='c' c='trace_fill_super'/>
<use f='linux-4.18.y/security/apparmor/apparmorfs.c' l='145' u='c' c='fill_super'/>
<use f='linux-4.18.y/security/inode.c' l='47' u='c' c='fill_super'/>
<use f='linux-4.18.y/security/selinux/selinuxfs.c' l='1931' u='c' c='sel_fill_super'/>
<use f='linux-4.18.y/security/smack/smackfs.c' l='2913' u='c' c='smk_fill_super'/>
