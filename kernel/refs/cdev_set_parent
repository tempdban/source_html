<dec f='linux-4.18.y/include/linux/cdev.h' l='31' type='void cdev_set_parent(struct cdev * p, struct kobject * kobj)'/>
<def f='linux-4.18.y/fs/char_dev.c' l='508' ll='512' type='void cdev_set_parent(struct cdev * p, struct kobject * kobj)'/>
<use f='linux-4.18.y/fs/char_dev.c' l='542' u='c' c='cdev_device_add'/>
<dec f='linux-4.18.y/fs/char_dev.c' l='681' type='void cdev_set_parent(struct cdev * , struct kobject * )'/>
<use f='linux-4.18.y/fs/char_dev.c' l='681' c='cdev_set_parent'/>
<use f='linux-4.18.y/fs/char_dev.c' l='681' u='a'/>
<use f='linux-4.18.y/fs/char_dev.c' l='681' u='a'/>
<doc f='linux-4.18.y/fs/char_dev.c' l='499'>/**
 * cdev_set_parent() - set the parent kobject for a char device
 * @p: the cdev structure
 * @kobj: the kobject to take a reference to
 *
 * cdev_set_parent() sets a parent kobject which will be referenced
 * appropriately so the parent is not freed before the cdev. This
 * should be called before cdev_add.
 */</doc>
