<def f='linux-4.18.y/include/linux/mm.h' l='1369' ll='1386'/>
<size>72</size>
<doc f='linux-4.18.y/include/linux/mm.h' l='1345'>/**
 * mm_walk - callbacks for walk_page_range
 * @pud_entry: if set, called for each non-empty PUD (2nd-level) entry
 *	       this handler should only handle pud_trans_huge() puds.
 *	       the pmd_entry or pte_entry callbacks will be used for
 *	       regular PUDs.
 * @pmd_entry: if set, called for each non-empty PMD (3rd-level) entry
 *	       this handler is required to be able to handle
 *	       pmd_trans_huge() pmds.  They may simply choose to
 *	       split_huge_page() instead of handling it explicitly.
 * @pte_entry: if set, called for each non-empty PTE (4th-level) entry
 * @pte_hole: if set, called for each hole at all levels
 * @hugetlb_entry: if set, called for each hugetlb entry
 * @test_walk: caller specific callback function to determine whether
 *             we walk over the current vma or not. Returning 0
 *             value means &quot;do page table walk over the current vma,&quot;
 *             and a negative one means &quot;abort current page table walk
 *             right now.&quot; 1 means &quot;skip the current vma.&quot;
 * @mm:        mm_struct representing the target process of page table walk
 * @vma:       vma currently walked (NULL if walking outside vmas)
 * @private:   private data for callbacks&apos; usage
 *
 * (see the comment on walk_page_range() for more details)
 */</doc>
<mbr r='mm_walk::pud_entry' o='0' t='int (*)(pud_t *, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::pmd_entry' o='64' t='int (*)(pmd_t *, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::pte_entry' o='128' t='int (*)(pte_t *, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::pte_hole' o='192' t='int (*)(unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::hugetlb_entry' o='256' t='int (*)(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::test_walk' o='320' t='int (*)(unsigned long, unsigned long, struct mm_walk *)'/>
<mbr r='mm_walk::mm' o='384' t='struct mm_struct *'/>
<mbr r='mm_walk::vma' o='448' t='struct vm_area_struct *'/>
<mbr r='mm_walk::private' o='512' t='void *'/>
