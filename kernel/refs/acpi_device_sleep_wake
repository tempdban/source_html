<dec f='linux-4.18.y/drivers/acpi/internal.h' l='137' type='int acpi_device_sleep_wake(struct acpi_device * dev, int enable, int sleep_state, int dev_state)'/>
<def f='linux-4.18.y/drivers/acpi/power.c' l='506' ll='548' type='int acpi_device_sleep_wake(struct acpi_device * dev, int enable, int sleep_state, int dev_state)'/>
<use f='linux-4.18.y/drivers/acpi/power.c' l='593' u='c' c='acpi_enable_wakeup_device_power'/>
<use f='linux-4.18.y/drivers/acpi/power.c' l='628' u='c' c='acpi_disable_wakeup_device_power'/>
<doc f='linux-4.18.y/drivers/acpi/power.c' l='489'>/**
 * acpi_device_sleep_wake - execute _DSW (Device Sleep Wake) or (deprecated in
 *                          ACPI 3.0) _PSW (Power State Wake)
 * @dev: Device to handle.
 * @enable: 0 - disable, 1 - enable the wake capabilities of the device.
 * @sleep_state: Target sleep state of the system.
 * @dev_state: Target power state of the device.
 *
 * Execute _DSW (Device Sleep Wake) or (deprecated in ACPI 3.0) _PSW (Power
 * State Wake) for the device, if present.  On failure reset the device&apos;s
 * wakeup.flags.valid flag.
 *
 * RETURN VALUE:
 * 0 if either _DSW or _PSW has been successfully executed
 * 0 if neither _DSW nor _PSW has been found
 * -ENODEV if the execution of either _DSW or _PSW has failed
 */</doc>
<use f='linux-4.18.y/drivers/acpi/scan.c' l='902' u='c' c='acpi_bus_get_wakeup_device_flags'/>
