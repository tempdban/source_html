<dec f='linux-4.14.y/security/selinux/include/security.h' l='255' type='struct page * selinux_kernel_status_page()'/>
<doc f='linux-4.14.y/security/selinux/include/security.h' l='252'>/*
 * status notifier using mmap interface
 */</doc>
<use f='linux-4.14.y/security/selinux/selinuxfs.c' l='195' u='c' c='sel_open_handle_status'/>
<def f='linux-4.14.y/security/selinux/ss/status.c' l='47' ll='76' type='struct page * selinux_kernel_status_page()'/>
<doc f='linux-4.14.y/security/selinux/ss/status.c' l='41'>/*
 * selinux_kernel_status_page
 *
 * It returns a reference to selinux_status_page. If the status page is
 * not allocated yet, it also tries to allocate it at the first time.
 */</doc>
<dec f='linux-4.14.y/security/selinux/include/security.h' l='255' type='struct page * selinux_kernel_status_page()'/>
<doc f='linux-4.14.y/security/selinux/include/security.h' l='252'>/*
 * status notifier using mmap interface
 */</doc>
<use f='linux-4.14.y/security/selinux/selinuxfs.c' l='195' u='c' c='sel_open_handle_status'/>
<def f='linux-4.14.y/security/selinux/ss/status.c' l='47' ll='76' type='struct page * selinux_kernel_status_page()'/>
<doc f='linux-4.14.y/security/selinux/ss/status.c' l='41'>/*
 * selinux_kernel_status_page
 *
 * It returns a reference to selinux_status_page. If the status page is
 * not allocated yet, it also tries to allocate it at the first time.
 */</doc>
