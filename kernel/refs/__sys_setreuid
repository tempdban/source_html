<dec f='linux-4.18.y/kernel/uid16.h' l='7' type='long __sys_setreuid(uid_t ruid, uid_t euid)'/>
<def f='linux-4.18.y/kernel/sys.c' l='493' ll='551' type='long __sys_setreuid(uid_t ruid, uid_t euid)'/>
<use f='linux-4.18.y/kernel/sys.c' l='555' u='c' c='__do_sys_setreuid'/>
<doc f='linux-4.18.y/kernel/sys.c' l='478'>/*
 * Unprivileged users may change the real uid to the effective uid
 * or vice versa.  (BSD-style)
 *
 * If you set the real uid at all, or set the effective uid to a value not
 * equal to the real uid, then the saved uid is set to the new effective uid.
 *
 * This makes it possible for a setuid program to completely drop its
 * privileges, which is often a useful assertion to make when you are doing
 * a security audit over a program.
 *
 * The general idea is that a program which uses just setreuid() will be
 * 100% compatible with BSD.  A program which uses just setuid() will be
 * 100% compatible with POSIX with saved IDs.
 */</doc>
<use f='linux-4.18.y/kernel/uid16.c' l='50' u='c' c='__do_sys_setreuid16'/>
