<dec f='linux-4.18.y/include/acpi/acpixf.h' l='783' type='acpi_status acpi_get_vendor_resource(acpi_handle device, char * name, struct acpi_vendor_uuid * uuid, struct acpi_buffer * ret_buffer)'/>
<def f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='397' ll='426' type='acpi_status acpi_get_vendor_resource(acpi_handle device_handle, char * name, struct acpi_vendor_uuid * uuid, struct acpi_buffer * ret_buffer)'/>
<dec f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='428' type='acpi_status acpi_get_vendor_resource(acpi_handle , char * , struct acpi_vendor_uuid * , struct acpi_buffer * )'/>
<use f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='428' c='acpi_get_vendor_resource'/>
<use f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='428' u='a'/>
<use f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='428' u='a'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/rsxface.c' l='379'>/*******************************************************************************
 *
 * FUNCTION:    acpi_get_vendor_resource
 *
 * PARAMETERS:  device_handle   - Handle for the parent device object
 *              name            - Method name for the parent resource
 *                                (METHOD_NAME__CRS or METHOD_NAME__PRS)
 *              uuid            - Pointer to the UUID to be matched.
 *                                includes both subtype and 16-byte UUID
 *              ret_buffer      - Where the vendor resource is returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Walk a resource template for the specified device to find a
 *              vendor-defined resource that matches the supplied UUID and
 *              UUID subtype. Returns a struct acpi_resource of type Vendor.
 *
 ******************************************************************************/</doc>
