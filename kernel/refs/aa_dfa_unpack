<dec f='linux-4.18.y/security/apparmor/include/match.h' l='127' type='struct aa_dfa * aa_dfa_unpack(void * blob, size_t size, int flags)'/>
<use f='linux-4.18.y/security/apparmor/match.c' l='42' u='c' c='aa_setup_dfa_engine'/>
<use f='linux-4.18.y/security/apparmor/match.c' l='51' u='c' c='aa_setup_dfa_engine'/>
<def f='linux-4.18.y/security/apparmor/match.c' l='285' ll='372' type='struct aa_dfa * aa_dfa_unpack(void * blob, size_t size, int flags)'/>
<doc f='linux-4.18.y/security/apparmor/match.c' l='273'>/**
 * aa_dfa_unpack - unpack the binary tables of a serialized dfa
 * @blob: aligned serialized stream of data to unpack  (NOT NULL)
 * @size: size of data to unpack
 * @flags: flags controlling what type of accept tables are acceptable
 *
 * Unpack a dfa that has been serialized.  To find information on the dfa
 * format look in Documentation/admin-guide/LSM/apparmor.rst
 * Assumes the dfa @blob stream has been aligned on a 8 byte boundary
 *
 * Returns: an unpacked dfa ready for matching or ERR_PTR on failure
 */</doc>
<use f='linux-4.18.y/security/apparmor/policy_unpack.c' l='443' u='c' c='unpack_dfa'/>
