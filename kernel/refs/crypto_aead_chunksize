<def f='linux-4.14.y/include/crypto/internal/aead.h' l='178' ll='181' type='unsigned int crypto_aead_chunksize(struct crypto_aead * tfm)'/>
<doc f='linux-4.14.y/include/crypto/internal/aead.h' l='167'>/**
 * crypto_aead_chunksize() - obtain chunk size
 * @tfm: cipher handle
 *
 * The block size is set to one for ciphers such as CCM.  However,
 * you still need to provide incremental updates in multiples of
 * the underlying block size as the IV does not have sub-block
 * granularity.  This is known in this API as the chunk size.
 *
 * Return: chunk size in bytes
 */</doc>
<use f='linux-4.14.y/crypto/skcipher.c' l='535' u='c' c='skcipher_walk_aead_common'/>
<def f='linux-4.14.y/include/crypto/internal/aead.h' l='178' ll='181' type='unsigned int crypto_aead_chunksize(struct crypto_aead * tfm)'/>
<doc f='linux-4.14.y/include/crypto/internal/aead.h' l='167'>/**
 * crypto_aead_chunksize() - obtain chunk size
 * @tfm: cipher handle
 *
 * The block size is set to one for ciphers such as CCM.  However,
 * you still need to provide incremental updates in multiples of
 * the underlying block size as the IV does not have sub-block
 * granularity.  This is known in this API as the chunk size.
 *
 * Return: chunk size in bytes
 */</doc>
<use f='linux-4.14.y/crypto/skcipher.c' l='535' u='c' c='skcipher_walk_aead_common'/>
