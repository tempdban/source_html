<def f='linux-4.14.y/include/linux/list_nulls.h' l='21' ll='23'/>
<size>8</size>
<doc f='linux-4.14.y/include/linux/list_nulls.h' l='8'>/*
 * Special version of lists, where end of list is not a NULL pointer,
 * but a &apos;nulls&apos; marker, which can have many different values.
 * (up to 2^31 different values guaranteed on all platforms)
 *
 * In the standard hlist, termination of a list is the NULL pointer.
 * In this special &apos;nulls&apos; variant, we use the fact that objects stored in
 * a list are aligned on a word (4 or 8 bytes alignment).
 * We therefore use the last significant bit of &apos;ptr&apos; :
 * Set to 1 : This is a &apos;nulls&apos; end-of-list marker (ptr &gt;&gt; 1)
 * Set to 0 : This is a pointer to some object (ptr)
 */</doc>
<mbr r='hlist_nulls_head::first' o='0' t='struct hlist_nulls_node *'/>
<def f='linux-4.14.y/include/linux/list_nulls.h' l='21' ll='23'/>
<size>8</size>
<doc f='linux-4.14.y/include/linux/list_nulls.h' l='8'>/*
 * Special version of lists, where end of list is not a NULL pointer,
 * but a &apos;nulls&apos; marker, which can have many different values.
 * (up to 2^31 different values guaranteed on all platforms)
 *
 * In the standard hlist, termination of a list is the NULL pointer.
 * In this special &apos;nulls&apos; variant, we use the fact that objects stored in
 * a list are aligned on a word (4 or 8 bytes alignment).
 * We therefore use the last significant bit of &apos;ptr&apos; :
 * Set to 1 : This is a &apos;nulls&apos; end-of-list marker (ptr &gt;&gt; 1)
 * Set to 0 : This is a pointer to some object (ptr)
 */</doc>
<mbr r='hlist_nulls_head::first' o='0' t='struct hlist_nulls_node *'/>
