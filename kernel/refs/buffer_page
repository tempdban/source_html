<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='299' ll='306'/>
<size>56</size>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='291'>/*
 * Note, the buffer_page list must be first. The buffer pages
 * are allocated in cache lines, which means that each buffer
 * page will be at the beginning of a cache line, and thus
 * the least significant bits will be zero. We use this to
 * add flags in the list struct pointers, to make the ring buffer
 * lockless.
 */</doc>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='299' ll='306'/>
<size>56</size>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='291'>/*
 * Note, the buffer_page list must be first. The buffer pages
 * are allocated in cache lines, which means that each buffer
 * page will be at the beginning of a cache line, and thus
 * the least significant bits will be zero. We use this to
 * add flags in the list struct pointers, to make the ring buffer
 * lockless.
 */</doc>
