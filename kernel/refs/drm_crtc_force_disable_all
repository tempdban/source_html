<dec f='linux-4.18.y/include/drm/drm_crtc.h' l='947' type='int drm_crtc_force_disable_all(struct drm_device * dev)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='127' ll='142' type='int drm_crtc_force_disable_all(struct drm_device * dev)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='143' type='int drm_crtc_force_disable_all(struct drm_device * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='143' c='drm_crtc_force_disable_all'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='143' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='143' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='114'>/**
 * drm_crtc_force_disable_all - Forcibly turn off all enabled CRTCs
 * @dev: DRM device whose CRTCs to turn off
 *
 * Drivers may want to call this on unload to ensure that all displays are
 * unlit and the GPU is in a consistent, low power state. Takes modeset locks.
 *
 * Note: This should only be used by non-atomic legacy drivers. For an atomic
 * version look at drm_atomic_helper_shutdown().
 *
 * Returns:
 * Zero on success, error code on failure.
 */</doc>
