<dec f='linux-4.18.y/include/linux/virtio.h' l='74' type='bool virtqueue_enable_cb(struct virtqueue * vq)'/>
<use f='linux-4.18.y/drivers/block/virtio_blk.c' l='209' u='c' c='virtblk_done'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_vq.c' l='211' u='c' c='virtio_gpu_dequeue_ctrl_func'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_vq.c' l='253' u='c' c='virtio_gpu_dequeue_cursor_func'/>
<use f='linux-4.18.y/drivers/scsi/virtio_scsi.c' l='227' u='c' c='virtscsi_vq_done'/>
<def f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='847' ll='851' type='bool virtqueue_enable_cb(struct virtqueue * _vq)'/>
<dec f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='852' type='bool virtqueue_enable_cb(struct virtqueue * )'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='852' c='virtqueue_enable_cb'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='852' u='a'/>
<use f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='852' u='a'/>
<doc f='linux-4.18.y/drivers/virtio/virtio_ring.c' l='836'>/**
 * virtqueue_enable_cb - restart callbacks after disable_cb.
 * @vq: the struct virtqueue we&apos;re talking about.
 *
 * This re-enables callbacks; it returns &quot;false&quot; if there are pending
 * buffers in the queue, to detect a possible race between the driver
 * checking for more work, and enabling callbacks.
 *
 * Caller must ensure we don&apos;t call this with other virtqueue
 * operations at the same time (except where noted).
 */</doc>
