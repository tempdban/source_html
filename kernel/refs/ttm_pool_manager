<def f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_page_alloc.c' l='114' ll='130'/>
<size>528</size>
<doc f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_page_alloc.c' l='101'>/**
 * struct ttm_pool_manager - Holds memory pools for fst allocation
 *
 * Manager is read only object for pool code so it doesn&apos;t need locking.
 *
 * @free_interval: minimum number of jiffies between freeing pages from pool.
 * @page_alloc_inited: reference counting for pool allocation.
 * @work: Work that is used to shrink the pool. Work is only run when there is
 * some pages to free.
 * @small_allocation: Limit in number of pages what is small allocation.
 *
 * @pools: All pool objects in use.
 **/</doc>
<def f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c' l='168' ll='175'/>
<size>192</size>
<doc f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c' l='159'>/*
 * struct ttm_pool_manager - Holds memory pools for fast allocation
 *
 * @lock: Lock used when adding/removing from pools
 * @pools: List of &apos;struct device&apos; and &apos;struct dma_pool&apos; tuples.
 * @options: Limits for the pool.
 * @npools: Total amount of pools in existence.
 * @shrinker: The structure used by [un|]register_shrinker
 */</doc>
