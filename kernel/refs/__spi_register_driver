<dec f='linux-4.14.y/include/linux/spi/spi.h' l='267' type='int __spi_register_driver(struct module * owner, struct spi_driver * sdrv)'/>
<def f='linux-4.14.y/drivers/spi/spi.c' l='394' ll='405' type='int __spi_register_driver(struct module * owner, struct spi_driver * sdrv)'/>
<dec f='linux-4.14.y/drivers/spi/spi.c' l='406' type='int __spi_register_driver(struct module * , struct spi_driver * )'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='406' c='__spi_register_driver'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='406' u='a'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='406' u='a'/>
<doc f='linux-4.14.y/drivers/spi/spi.c' l='386'>/**
 * __spi_register_driver - register a SPI driver
 * @owner: owner module of the driver to register
 * @sdrv: the driver to register
 * Context: can sleep
 *
 * Return: zero on success, else a negative error code.
 */</doc>
<dec f='linux-4.14.y/include/linux/spi/spi.h' l='267' type='int __spi_register_driver(struct module * owner, struct spi_driver * sdrv)'/>
<def f='linux-4.14.y/drivers/spi/spi.c' l='394' ll='405' type='int __spi_register_driver(struct module * owner, struct spi_driver * sdrv)'/>
<dec f='linux-4.14.y/drivers/spi/spi.c' l='406' type='int __spi_register_driver(struct module * , struct spi_driver * )'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='406' c='__spi_register_driver'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='406' u='a'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='406' u='a'/>
<doc f='linux-4.14.y/drivers/spi/spi.c' l='386'>/**
 * __spi_register_driver - register a SPI driver
 * @owner: owner module of the driver to register
 * @sdrv: the driver to register
 * Context: can sleep
 *
 * Return: zero on success, else a negative error code.
 */</doc>
