<dec f='linux-4.14.y/fs/pnode.h' l='45' type='int propagate_mount_busy(struct mount * , int )'/>
<use f='linux-4.14.y/fs/namespace.c' l='1402' u='c' c='may_umount'/>
<use f='linux-4.14.y/fs/namespace.c' l='1613' u='c' c='do_umount'/>
<use f='linux-4.14.y/fs/namespace.c' l='2602' u='c' c='mark_mounts_for_expiry'/>
<use f='linux-4.14.y/fs/namespace.c' l='2647' u='c' c='select_submounts'/>
<def f='linux-4.14.y/fs/pnode.c' l='376' ll='412' type='int propagate_mount_busy(struct mount * mnt, int refcnt)'/>
<doc f='linux-4.14.y/fs/pnode.c' l='366'>/*
 * check if the mount &apos;mnt&apos; can be unmounted successfully.
 * @mnt: the mount to be checked for unmount
 * NOTE: unmounting &apos;mnt&apos; would naturally propagate to all
 * other mounts its parent propagates to.
 * Check if any of these mounts that **do not have submounts**
 * have more references than &apos;refcnt&apos;. If so return busy.
 *
 * vfsmount lock must be held for write
 */</doc>
