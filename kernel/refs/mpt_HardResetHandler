<dec f='linux-4.18.y/drivers/message/fusion/mptbase.h' l='934' type='int mpt_HardResetHandler(MPT_ADAPTER * ioc, int sleepFlag)'/>
<use f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='407' u='c' c='mpt_fault_reset_work'/>
<use f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='6530' u='c' c='mpt_config'/>
<use f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='7113' u='c' c='mpt_Soft_Hard_ResetHandler'/>
<def f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='7139' ll='7233' type='int mpt_HardResetHandler(MPT_ADAPTER * ioc, int sleepFlag)'/>
<dec f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='8461' type='int mpt_HardResetHandler(MPT_ADAPTER * , int )'/>
<use f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='8461' c='mpt_HardResetHandler'/>
<use f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='8461' u='a'/>
<use f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='8461' u='a'/>
<doc f='linux-4.18.y/drivers/message/fusion/mptbase.c' l='7123'>/**
 *	mpt_HardResetHandler - Generic reset handler
 *	@ioc: Pointer to MPT_ADAPTER structure
 *	@sleepFlag: Indicates if sleep or schedule must be called.
 *
 *	Issues SCSI Task Management call based on input arg values.
 *	If TaskMgmt fails, returns associated SCSI request.
 *
 *	Remark: _HardResetHandler can be invoked from an interrupt thread (timer)
 *	or a non-interrupt thread.  In the former, must not call schedule().
 *
 *	Note: A return of -1 is a FATAL error case, as it means a
 *	FW reload/initialization failed.
 *
 *	Returns 0 for SUCCESS or -1 if FAILED.
 */</doc>
<use f='linux-4.18.y/drivers/message/fusion/mptscsih.c' l='1533' u='c' c='mptscsih_IssueTaskMgmt'/>
<use f='linux-4.18.y/drivers/message/fusion/mptscsih.c' l='1645' u='c' c='mptscsih_IssueTaskMgmt'/>
<use f='linux-4.18.y/drivers/message/fusion/mptspi.c' l='674' u='c' c='mptscsih_quiesce_raid'/>
