<dec f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.h' l='46' type='s32 e1000e_read_kmrn_reg(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2583' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2593' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2641' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='2651' u='c' c='e1000_lv_jumbo_workaround_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5003' u='c' c='e1000_setup_copper_link_ich8lan'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/ich8lan.c' l='5270' u='c' c='e1000e_gig_downshift_workaround_ich8lan'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.c' l='509' ll='512' type='s32 e1000e_read_kmrn_reg(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/e1000e/phy.c' l='499'>/**
 *  e1000e_read_kmrn_reg -  Read kumeran register
 *  @hw: pointer to the HW structure
 *  @offset: register offset to be read
 *  @data: pointer to the read data
 *
 *  Acquires semaphore then reads the PHY register at offset using the
 *  kumeran interface.  The information retrieved is stored in data.
 *  Release the acquired semaphore before exiting.
 **/</doc>
