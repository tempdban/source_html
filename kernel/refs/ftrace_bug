<dec f='linux-4.14.y/include/linux/ftrace.h' l='355' type='void ftrace_bug(int err, struct dyn_ftrace * rec)'/>
<use f='linux-4.14.y/arch/x86/kernel/ftrace.c' l='604' u='c' c='ftrace_replace_code'/>
<def f='linux-4.14.y/kernel/trace/ftrace.c' l='2083' ll='2137' type='void ftrace_bug(int failed, struct dyn_ftrace * rec)'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='2499' u='c' c='ftrace_replace_code'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='2589' u='c' c='ftrace_code_disable'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='5840' u='c' c='ftrace_module_enable'/>
<doc f='linux-4.14.y/kernel/trace/ftrace.c' l='2071'>/**
 * ftrace_bug - report and shutdown function tracer
 * @failed: The failed type (EFAULT, EINVAL, EPERM)
 * @rec: The record that failed
 *
 * The arch code that enables or disables the function tracing
 * can call ftrace_bug() when it has detected a problem in
 * modifying the code. @failed should be one of either:
 * EFAULT - if the problem happens on reading the @ip address
 * EINVAL - if what is read at @ip is not what was expected
 * EPERM - if the problem happens on writting to the @ip address
 */</doc>
