<dec f='linux-4.18.y/include/linux/dax.h' l='35' type='void kill_dax(struct dax_device * dax_dev)'/>
<def f='linux-4.18.y/drivers/dax/super.c' l='357' ll='371' type='void kill_dax(struct dax_device * dax_dev)'/>
<dec f='linux-4.18.y/drivers/dax/super.c' l='372' type='void kill_dax(struct dax_device * )'/>
<use f='linux-4.18.y/drivers/dax/super.c' l='372' c='kill_dax'/>
<use f='linux-4.18.y/drivers/dax/super.c' l='372' u='a'/>
<use f='linux-4.18.y/drivers/dax/super.c' l='372' u='a'/>
<doc f='linux-4.18.y/drivers/dax/super.c' l='351'>/*
 * Note, rcu is not protecting the liveness of dax_dev, rcu is ensuring
 * that any fault handlers or operations that might have seen
 * dax_alive(), have completed.  Any operations that start after
 * synchronize_srcu() has run will abort upon seeing !dax_alive().
 */</doc>
<use f='linux-4.18.y/drivers/md/dm.c' l='1814' u='c' c='cleanup_mapped_device'/>
