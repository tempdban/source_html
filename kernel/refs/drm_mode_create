<dec f='linux-4.18.y/include/drm/drm_modes.h' l='462' type='struct drm_display_mode * drm_mode_create(struct drm_device * dev)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_crtc.c' l='628' u='c' c='drm_mode_setcrtc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='2259' u='c' c='drm_mode_detailed'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='4591' u='c' c='drm_mode_displayid_detailed'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='66' ll='80' type='struct drm_display_mode * drm_mode_create(struct drm_device * dev)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='81' type='struct drm_display_mode * drm_mode_create(struct drm_device * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='81' c='drm_mode_create'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='81' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='81' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='167' u='c' c='drm_cvt_mode'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='398' u='c' c='drm_gtf_mode_complex'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='932' u='c' c='drm_mode_duplicate'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_modes.c' l='56'>/**
 * drm_mode_create - create a new display mode
 * @dev: DRM device
 *
 * Create a new, cleared drm_display_mode with kzalloc, allocate an ID for it
 * and return it.
 *
 * Returns:
 * Pointer to new mode on success, NULL on error.
 */</doc>
