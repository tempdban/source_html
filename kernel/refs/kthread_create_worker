<dec f='linux-4.14.y/include/linux/kthread.h' l='177' type='struct kthread_worker * kthread_create_worker(unsigned int flags, const char * namefmt)'/>
<use f='linux-4.14.y/arch/x86/kvm/i8254.c' l='670' u='c' c='kvm_create_pit'/>
<use f='linux-4.14.y/drivers/ptp/ptp_clock.c' l='238' u='c' c='ptp_clock_register'/>
<def f='linux-4.14.y/kernel/kthread.c' l='690' ll='701' type='struct kthread_worker * kthread_create_worker(unsigned int flags, const char * namefmt)'/>
<dec f='linux-4.14.y/kernel/kthread.c' l='702' type='struct kthread_worker * kthread_create_worker(unsigned int , const char * )'/>
<use f='linux-4.14.y/kernel/kthread.c' l='702' c='kthread_create_worker'/>
<use f='linux-4.14.y/kernel/kthread.c' l='702' u='a'/>
<use f='linux-4.14.y/kernel/kthread.c' l='702' u='a'/>
<doc f='linux-4.14.y/kernel/kthread.c' l='681'>/**
 * kthread_create_worker - create a kthread worker
 * @flags: flags modifying the default behavior of the worker
 * @namefmt: printf-style name for the kthread worker (task).
 *
 * Returns a pointer to the allocated worker on success, ERR_PTR(-ENOMEM)
 * when the needed structures could not get allocated, and ERR_PTR(-EINTR)
 * when the worker was SIGKILLed.
 */</doc>
