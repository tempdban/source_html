<dec f='linux-4.14.y/arch/x86/include/asm/set_memory.h' l='37' type='int _set_memory_uc(unsigned long addr, int numpages)'/>
<doc f='linux-4.14.y/arch/x86/include/asm/set_memory.h' l='8'>/*
 * The set_memory_* API can be used to change various attributes of a virtual
 * address range. The attributes include:
 * Cachability   : UnCached, WriteCombining, WriteThrough, WriteBack
 * Executability : eXeutable, NoteXecutable
 * Read/Write    : ReadOnly, ReadWrite
 * Presence      : NotPresent
 * Encryption    : Encrypted, Decrypted
 *
 * Within a category, the attributes are mutually exclusive.
 *
 * The implementation of this API will take care of various aspects that
 * are associated with changing such attributes, such as:
 * - Flushing TLBs
 * - Flushing CPU caches
 * - Making sure aliases of the memory behind the mapping don&apos;t violate
 *   coherency rules as defined by the CPU in the system.
 *
 * What this API does not do:
 * - Provide exclusion between various callers - including callers that
 *   operation on other mappings of the same physical page
 * - Restore default attributes when a page is freed
 * - Guarantee that mappings other than the requested one are
 *   in any state, other than that these do not violate rules for
 *   the CPU you have. Do not depend on any effects on other mappings,
 *   CPUs other than the one you have may have more relaxed rules.
 * The caller is required to take care of these.
 */</doc>
<use f='linux-4.14.y/arch/x86/mm/ioremap.c' l='43' u='c' c='ioremap_change_attr'/>
<def f='linux-4.14.y/arch/x86/mm/pageattr.c' l='1550' ll='1561' type='int _set_memory_uc(unsigned long addr, int numpages)'/>
<use f='linux-4.14.y/arch/x86/mm/pageattr.c' l='1575' u='c' c='set_memory_uc'/>
