<def f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='42' ll='62'/>
<size>56</size>
<doc f='linux-4.14.y/include/drm/drm_modeset_lock.h' l='31'>/**
 * struct drm_modeset_acquire_ctx - locking context (see ww_acquire_ctx)
 * @ww_ctx: base acquire ctx
 * @contended: used internally for -EDEADLK handling
 * @locked: list of held locks
 * @trylock_only: trylock mode used in atomic contexts/panic notifiers
 *
 * Each thread competing for a set of locks must use one acquire
 * ctx.  And if any lock fxn returns -EDEADLK, it must backoff and
 * retry.
 */</doc>
<mbr r='drm_modeset_acquire_ctx::ww_ctx' o='0' t='struct ww_acquire_ctx'/>
<mbr r='drm_modeset_acquire_ctx::contended' o='192' t='struct drm_modeset_lock *'/>
<mbr r='drm_modeset_acquire_ctx::locked' o='256' t='struct list_head'/>
<mbr r='drm_modeset_acquire_ctx::trylock_only' o='384' t='bool'/>
