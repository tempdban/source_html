<dec f='linux-4.18.y/include/linux/property.h' l='84' type='struct fwnode_handle * fwnode_get_next_child_node(const struct fwnode_handle * fwnode, struct fwnode_handle * child)'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1015' u='c' c='acpi_graph_get_next_endpoint'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1027' u='c' c='acpi_graph_get_next_endpoint'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1029' u='c' c='acpi_graph_get_next_endpoint'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1033' u='c' c='acpi_graph_get_next_endpoint'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1060' macro='1' u='c'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1060' macro='1' u='c'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1199' macro='1' u='c'/>
<use f='linux-4.18.y/drivers/acpi/property.c' l='1199' macro='1' u='c'/>
<def f='linux-4.18.y/drivers/base/property.c' l='1051' ll='1056' type='struct fwnode_handle * fwnode_get_next_child_node(const struct fwnode_handle * fwnode, struct fwnode_handle * child)'/>
<dec f='linux-4.18.y/drivers/base/property.c' l='1057' type='struct fwnode_handle * fwnode_get_next_child_node(const struct fwnode_handle * , struct fwnode_handle * )'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1057' c='fwnode_get_next_child_node'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1057' u='a'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1057' u='a'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1075' u='c' c='fwnode_get_next_available_child_node'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1101' u='c' c='device_get_next_child_node'/>
<doc f='linux-4.18.y/drivers/base/property.c' l='1046'>/**
 * fwnode_get_next_child_node - Return the next child node handle for a node
 * @fwnode: Firmware node to find the next child node for.
 * @child: Handle to one of the node&apos;s child nodes or a %NULL handle.
 */</doc>
