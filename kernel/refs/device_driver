<def f='linux-4.14.y/include/linux/device.h' l='266' ll='289'/>
<size>120</size>
<doc f='linux-4.14.y/include/linux/device.h' l='233'>/**
 * struct device_driver - The basic device driver structure
 * @name:	Name of the device driver.
 * @bus:	The bus which the device of this driver belongs to.
 * @owner:	The module owner.
 * @mod_name:	Used for built-in modules.
 * @suppress_bind_attrs: Disables bind/unbind via sysfs.
 * @probe_type:	Type of the probe (synchronous or asynchronous) to use.
 * @of_match_table: The open firmware table.
 * @acpi_match_table: The ACPI match table.
 * @probe:	Called to query the existence of a specific device,
 *		whether this driver can work with it, and bind the driver
 *		to a specific device.
 * @remove:	Called when the device is removed from the system to
 *		unbind a device from this driver.
 * @shutdown:	Called at shut-down time to quiesce the device.
 * @suspend:	Called to put the device to sleep mode. Usually to a
 *		low power state.
 * @resume:	Called to bring a device from sleep mode.
 * @groups:	Default attributes that get created by the driver core
 *		automatically.
 * @pm:		Power management operations of the device which matched
 *		this driver.
 * @p:		Driver core&apos;s private data, no one other than the driver
 *		core can touch this.
 *
 * The device driver-model tracks all of the drivers known to the system.
 * The main reason for this tracking is to enable the driver core to match
 * up drivers with new devices. Once drivers are known objects within the
 * system, however, a number of other things become possible. Device drivers
 * can export information and configuration variables that are independent
 * of any specific device.
 */</doc>
<mbr r='device_driver::name' o='0' t='const char *'/>
<mbr r='device_driver::bus' o='64' t='struct bus_type *'/>
<mbr r='device_driver::owner' o='128' t='struct module *'/>
<mbr r='device_driver::mod_name' o='192' t='const char *'/>
<mbr r='device_driver::suppress_bind_attrs' o='256' t='bool'/>
<mbr r='device_driver::probe_type' o='288' t='enum probe_type'/>
<mbr r='device_driver::of_match_table' o='320' t='const struct of_device_id *'/>
<mbr r='device_driver::acpi_match_table' o='384' t='const struct acpi_device_id *'/>
<mbr r='device_driver::probe' o='448' t='int (*)(struct device *)'/>
<mbr r='device_driver::remove' o='512' t='int (*)(struct device *)'/>
<mbr r='device_driver::shutdown' o='576' t='void (*)(struct device *)'/>
<mbr r='device_driver::suspend' o='640' t='int (*)(struct device *, pm_message_t)'/>
<mbr r='device_driver::resume' o='704' t='int (*)(struct device *)'/>
<mbr r='device_driver::groups' o='768' t='const struct attribute_group **'/>
<mbr r='device_driver::pm' o='832' t='const struct dev_pm_ops *'/>
<mbr r='device_driver::p' o='896' t='struct driver_private *'/>
