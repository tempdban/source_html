<dec f='linux-4.14.y/include/drm/drm_connector.h' l='991' type='const char * drm_get_subpixel_order_name(enum subpixel_order order)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='600' ll='603' type='const char * drm_get_subpixel_order_name(enum subpixel_order order)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' type='const char * drm_get_subpixel_order_name(enum subpixel_order )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' c='drm_get_subpixel_order_name'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='593'>/**
 * drm_get_subpixel_order_name - return a string for a given subpixel enum
 * @order: enum of subpixel_order
 *
 * Note you could abuse this and return something out of bounds, but that
 * would be a caller error.  No unscrubbed user data should make it here.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_connector.h' l='991' type='const char * drm_get_subpixel_order_name(enum subpixel_order order)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='600' ll='603' type='const char * drm_get_subpixel_order_name(enum subpixel_order order)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' type='const char * drm_get_subpixel_order_name(enum subpixel_order )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' c='drm_get_subpixel_order_name'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='604' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_connector.c' l='593'>/**
 * drm_get_subpixel_order_name - return a string for a given subpixel enum
 * @order: enum of subpixel_order
 *
 * Note you could abuse this and return something out of bounds, but that
 * would be a caller error.  No unscrubbed user data should make it here.
 */</doc>
