<dec f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='722' type='void (*)(struct drm_encoder *)'/>
<offset>640</offset>
<doc f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='706'>/**
	 * @enable:
	 *
	 * This callback should be used to enable the encoder. With the atomic
	 * drivers it is called after this encoder&apos;s CRTC has been enabled using
	 * their own &amp;drm_crtc_helper_funcs.enable hook.  If that sequence is
	 * too simple drivers can just add their own driver private encoder
	 * hooks and call them from CRTC&apos;s callback by looping over all encoders
	 * connected to it using for_each_encoder_on_crtc().
	 *
	 * This hook is used only by atomic helpers, for symmetry with @disable.
	 * Atomic drivers don&apos;t need to implement it if there&apos;s no need to
	 * enable anything at the encoder level. To ensure that runtime PM handling
	 * (using either DPMS or the new &quot;ACTIVE&quot; property) works
	 * @enable must be the inverse of @disable for atomic drivers.
	 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1246' u='r' c='drm_atomic_helper_commit_modeset_enables'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='1247' u='r' c='drm_atomic_helper_commit_modeset_enables'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='235' u='w'/>
