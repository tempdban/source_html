<dec f='linux-4.14.y/include/drm/drm_framebuffer.h' l='210' type='void drm_framebuffer_cleanup(struct drm_framebuffer * fb)'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_fbdev.c' l='152' u='c' c='bochs_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_mm.c' l='471' u='c' c='bochs_user_framebuffer_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_fbdev.c' l='261' u='c' c='cirrus_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_main.c' l='22' u='c' c='cirrus_user_framebuffer_destroy'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='759' ll='767' type='void drm_framebuffer_cleanup(struct drm_framebuffer * fb)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' type='void drm_framebuffer_cleanup(struct drm_framebuffer * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' c='drm_framebuffer_cleanup'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='742'>/**
 * drm_framebuffer_cleanup - remove a framebuffer object
 * @fb: framebuffer to remove
 *
 * Cleanup framebuffer. This function is intended to be used from the drivers
 * &amp;drm_framebuffer_funcs.destroy callback. It can also be used to clean up
 * driver private framebuffers embedded into a larger structure.
 *
 * Note that this function does not remove the fb from active usage - if it is
 * still used anywhere, hilarity can ensue since userspace could call getfb on
 * the id and get back -EINVAL. Obviously no concern at driver unload time.
 *
 * Also, the framebuffer will not be removed from the lookup idr - for
 * user-created framebuffers this will happen in in the rmfb ioctl. For
 * driver-private objects (e.g. for fbdev) drivers need to explicitly call
 * drm_framebuffer_unregister_private.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='98' u='c' c='drm_gem_fb_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='313' u='c' c='qxl_user_framebuffer_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_fb.c' l='323' u='c' c='qxlfb_create'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_fb.c' l='360' u='c' c='qxl_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='57' u='c' c='virtio_gpu_user_framebuffer_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_fb.c' l='307' u='c' c='virtio_gpu_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='864' u='c' c='vmw_framebuffer_surface_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='1069' u='c' c='vmw_framebuffer_dmabuf_destroy'/>
<dec f='linux-4.14.y/include/drm/drm_framebuffer.h' l='210' type='void drm_framebuffer_cleanup(struct drm_framebuffer * fb)'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_fbdev.c' l='152' u='c' c='bochs_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_mm.c' l='471' u='c' c='bochs_user_framebuffer_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_fbdev.c' l='261' u='c' c='cirrus_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_main.c' l='22' u='c' c='cirrus_user_framebuffer_destroy'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='759' ll='767' type='void drm_framebuffer_cleanup(struct drm_framebuffer * fb)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' type='void drm_framebuffer_cleanup(struct drm_framebuffer * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' c='drm_framebuffer_cleanup'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='768' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='742'>/**
 * drm_framebuffer_cleanup - remove a framebuffer object
 * @fb: framebuffer to remove
 *
 * Cleanup framebuffer. This function is intended to be used from the drivers
 * &amp;drm_framebuffer_funcs.destroy callback. It can also be used to clean up
 * driver private framebuffers embedded into a larger structure.
 *
 * Note that this function does not remove the fb from active usage - if it is
 * still used anywhere, hilarity can ensue since userspace could call getfb on
 * the id and get back -EINVAL. Obviously no concern at driver unload time.
 *
 * Also, the framebuffer will not be removed from the lookup idr - for
 * user-created framebuffers this will happen in in the rmfb ioctl. For
 * driver-private objects (e.g. for fbdev) drivers need to explicitly call
 * drm_framebuffer_unregister_private.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem_framebuffer_helper.c' l='98' u='c' c='drm_gem_fb_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='313' u='c' c='qxl_user_framebuffer_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_fb.c' l='323' u='c' c='qxlfb_create'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_fb.c' l='360' u='c' c='qxl_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='57' u='c' c='virtio_gpu_user_framebuffer_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_fb.c' l='307' u='c' c='virtio_gpu_fbdev_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='864' u='c' c='vmw_framebuffer_surface_destroy'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='1069' u='c' c='vmw_framebuffer_dmabuf_destroy'/>
