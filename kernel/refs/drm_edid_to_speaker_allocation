<dec f='linux-4.14.y/include/drm/drm_edid.h' l='338' type='int drm_edid_to_speaker_allocation(struct edid * edid, u8 ** sadb)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='3993' ll='4033' type='int drm_edid_to_speaker_allocation(struct edid * edid, u8 ** sadb)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' type='int drm_edid_to_speaker_allocation(struct edid * , u8 ** )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' c='drm_edid_to_speaker_allocation'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='3981'>/**
 * drm_edid_to_speaker_allocation - extracts Speaker Allocation Data Blocks from EDID
 * @edid: EDID to parse
 * @sadb: pointer to the speaker block
 *
 * Looks for CEA EDID block and extracts the Speaker Allocation Data Block from it.
 *
 * Note: The returned pointer needs to be freed using kfree().
 *
 * Return: The number of found Speaker Allocation Blocks or negative number on
 * error.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_edid.h' l='338' type='int drm_edid_to_speaker_allocation(struct edid * edid, u8 ** sadb)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='3993' ll='4033' type='int drm_edid_to_speaker_allocation(struct edid * edid, u8 ** sadb)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' type='int drm_edid_to_speaker_allocation(struct edid * , u8 ** )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' c='drm_edid_to_speaker_allocation'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='4034' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_edid.c' l='3981'>/**
 * drm_edid_to_speaker_allocation - extracts Speaker Allocation Data Blocks from EDID
 * @edid: EDID to parse
 * @sadb: pointer to the speaker block
 *
 * Looks for CEA EDID block and extracts the Speaker Allocation Data Block from it.
 *
 * Note: The returned pointer needs to be freed using kfree().
 *
 * Return: The number of found Speaker Allocation Blocks or negative number on
 * error.
 */</doc>
