<dec f='linux-4.18.y/include/linux/printk.h' l='492' type='void print_hex_dump(const char * level, const char * prefix_str, int prefix_type, int rowsize, int groupsize, const void * buf, size_t len, bool ascii)'/>
<use f='linux-4.18.y/arch/x86/kernel/mpparse.c' l='197' u='c' c='smp_dump_mptable'/>
<use f='linux-4.18.y/include/linux/filter.h' l='826' u='c' c='bpf_jit_dump'/>
<use f='linux-4.18.y/arch/x86/pci/early.c' l='70' u='c' c='early_dump_pci_device'/>
<use f='linux-4.18.y/crypto/ansi_cprng.c' l='62' u='c' c='hexdump'/>
<use f='linux-4.18.y/drivers/ata/libata-core.c' l='1952' u='c' c='ata_dev_read_id'/>
<use f='linux-4.18.y/drivers/block/floppy.c' l='1812' u='c' c='show_floppy'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='337' u='c' c='drm_dp_sideband_msg_build'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1427' u='c' c='drm_edid_block_valid'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1546' u='c' c='connector_bad_edid'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000/e1000_main.c' l='736' u='c' c='e1000_dump_eeprom'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='185' u='c' c='e1000e_dump_ps_pages'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='314' u='c' c='e1000e_dump'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='458' u='c' c='e1000e_dump'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_common.c' l='318' u='c' c='i40e_debug_aq'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='468' u='c' c='i40e_dbg_dump_aq_desc'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='481' u='c' c='i40e_dbg_dump_aq_desc'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='1101' u='c' c='i40e_dbg_command_write'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='1312' u='c' c='i40e_dbg_command_write'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='1397' u='c' c='i40e_dbg_command_write'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='1425' u='c' c='i40e_dbg_command_write'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='1509' u='c' c='i40e_dbg_command_write'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40e_common.c' l='323' u='c' c='i40evf_debug_aq'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='463' u='c' c='igb_dump'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/igb/igb_main.c' l='548' u='c' c='igb_dump'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='696' u='c' c='ixgbe_dump'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='812' u='c' c='ixgbe_dump'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='2099' u='c' c='tun_put_user'/>
<use f='linux-4.18.y/drivers/usb/core/devio.c' l='487' u='c' c='snoop_urb'/>
<use f='linux-4.18.y/drivers/usb/core/devio.c' l='501' u='c' c='snoop_urb_data'/>
<use f='linux-4.18.y/drivers/usb/core/devio.c' l='508' u='c' c='snoop_urb_data'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_ncm.c' l='1194' u='c' c='ncm_unwrap_ntb'/>
<use f='linux-4.18.y/fs/ext4/super.c' l='1058' u='c' c='ext4_destroy_inode'/>
<def f='linux-4.18.y/lib/hexdump.c' l='243' ll='274' type='void print_hex_dump(const char * level, const char * prefix_str, int prefix_type, int rowsize, int groupsize, const void * buf, size_t len, bool ascii)'/>
<dec f='linux-4.18.y/lib/hexdump.c' l='275' type='void print_hex_dump(const char * , const char * , int , int , int , const void * , size_t , bool )'/>
<use f='linux-4.18.y/lib/hexdump.c' l='275' c='print_hex_dump'/>
<use f='linux-4.18.y/lib/hexdump.c' l='275' u='a'/>
<use f='linux-4.18.y/lib/hexdump.c' l='275' u='a'/>
<use f='linux-4.18.y/lib/hexdump.c' l='293' u='c' c='print_hex_dump_bytes'/>
<doc f='linux-4.18.y/lib/hexdump.c' l='212'>/**
 * print_hex_dump - print a text hex dump to syslog for a binary blob of data
 * @level: kernel log level (e.g. KERN_DEBUG)
 * @prefix_str: string to prefix each line with;
 *  caller supplies trailing spaces for alignment if desired
 * @prefix_type: controls whether prefix of an offset, address, or none
 *  is printed (%DUMP_PREFIX_OFFSET, %DUMP_PREFIX_ADDRESS, %DUMP_PREFIX_NONE)
 * @rowsize: number of bytes to print per line; must be 16 or 32
 * @groupsize: number of bytes to print at a time (1, 2, 4, 8; default = 1)
 * @buf: data blob to dump
 * @len: number of bytes in the @buf
 * @ascii: include ASCII after the hex output
 *
 * Given a buffer of u8 data, print_hex_dump() prints a hex + ASCII dump
 * to the kernel log at the specified kernel log level, with an optional
 * leading prefix.
 *
 * print_hex_dump() works on one &quot;line&quot; of output at a time, i.e.,
 * 16 or 32 bytes of input data converted to hex + ASCII output.
 * print_hex_dump() iterates over the entire input @buf, breaking it into
 * &quot;line size&quot; chunks to format and print.
 *
 * E.g.:
 *   print_hex_dump(KERN_DEBUG, &quot;raw data: &quot;, DUMP_PREFIX_ADDRESS,
 *		    16, 1, frame-&gt;data, frame-&gt;len, true);
 *
 * Example output using %DUMP_PREFIX_OFFSET and 1-byte mode:
 * 0009ab42: 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f  @ABCDEFGHIJKLMNO
 * Example output using %DUMP_PREFIX_ADDRESS and 4-byte mode:
 * ffffffff88089af0: 73727170 77767574 7b7a7978 7f7e7d7c  pqrstuvwxyz{|}~.
 */</doc>
<use f='linux-4.18.y/mm/debug.c' l='77' u='c' c='__dump_page'/>
