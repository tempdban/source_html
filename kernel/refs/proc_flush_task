<dec f='linux-4.14.y/include/linux/proc_fs.h' l='16' type='void proc_flush_task(struct task_struct * )'/>
<def f='linux-4.14.y/fs/proc/base.c' l='3122' ll='3136' type='void proc_flush_task(struct task_struct * task)'/>
<doc f='linux-4.14.y/fs/proc/base.c' l='3097'>/**
 * proc_flush_task -  Remove dcache entries for @task from the /proc dcache.
 * @task: task that should be flushed.
 *
 * When flushing dentries from proc, one needs to flush them from global
 * proc (proc_mnt) and from all the namespaces&apos; procs this task was seen
 * in. This call is supposed to do all of this job.
 *
 * Looks in the dcache for
 * /proc/@pid
 * /proc/@tgid/task/@pid
 * if either directory is present flushes it and all of it&apos;ts children
 * from the dcache.
 *
 * It is safe and reasonable to cache /proc entries for a task until
 * that task exits.  After that they just clog up the dcache with
 * useless entries, possibly causing useful dcache entries to be
 * flushed instead.  This routine is proved to flush those useless
 * dcache entries at process exit time.
 *
 * NOTE: This routine is just an optimization so it does not guarantee
 *       that no dcache entries will exist at process exit time it
 *       just makes it very unlikely that any will persist.
 */</doc>
<use f='linux-4.14.y/kernel/exit.c' l='195' u='c' c='release_task'/>
<dec f='linux-4.14.y/include/linux/proc_fs.h' l='16' type='void proc_flush_task(struct task_struct * )'/>
<def f='linux-4.14.y/fs/proc/base.c' l='3122' ll='3136' type='void proc_flush_task(struct task_struct * task)'/>
<doc f='linux-4.14.y/fs/proc/base.c' l='3097'>/**
 * proc_flush_task -  Remove dcache entries for @task from the /proc dcache.
 * @task: task that should be flushed.
 *
 * When flushing dentries from proc, one needs to flush them from global
 * proc (proc_mnt) and from all the namespaces&apos; procs this task was seen
 * in. This call is supposed to do all of this job.
 *
 * Looks in the dcache for
 * /proc/@pid
 * /proc/@tgid/task/@pid
 * if either directory is present flushes it and all of it&apos;ts children
 * from the dcache.
 *
 * It is safe and reasonable to cache /proc entries for a task until
 * that task exits.  After that they just clog up the dcache with
 * useless entries, possibly causing useful dcache entries to be
 * flushed instead.  This routine is proved to flush those useless
 * dcache entries at process exit time.
 *
 * NOTE: This routine is just an optimization so it does not guarantee
 *       that no dcache entries will exist at process exit time it
 *       just makes it very unlikely that any will persist.
 */</doc>
<use f='linux-4.14.y/kernel/exit.c' l='195' u='c' c='release_task'/>
