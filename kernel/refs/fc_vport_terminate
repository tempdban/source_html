<dec f='linux-4.18.y/include/scsi/scsi_transport_fc.h' l='808' type='int fc_vport_terminate(struct fc_vport * vport)'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='1949' u='c' c='store_fc_host_vport_delete'/>
<def f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3494' ll='3536' type='int fc_vport_terminate(struct fc_vport * vport)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3537' type='int fc_vport_terminate(struct fc_vport * )'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3537' c='fc_vport_terminate'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3537' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3537' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3550' u='c' c='fc_vport_sched_delete'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_transport_fc.c' l='3484'>/**
 * fc_vport_terminate - Admin App or LLDD requests termination of a vport
 * @vport:	fc_vport to be terminated
 *
 * Calls the LLDD vport_delete() function, then deallocates and removes
 * the vport from the shost and object tree.
 *
 * Notes:
 *	This routine assumes no locks are held on entry.
 */</doc>
