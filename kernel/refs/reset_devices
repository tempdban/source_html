<dec f='linux-4.14.y/include/linux/init.h' l='131' type='unsigned int'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='274' u='r' c='megasas_return_cmd'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='3985' u='r' c='megasas_create_frame_pool'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='5102' u='r' c='megasas_setup_jbod_map'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='6134' u='r' c='megasas_probe_one'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='6208' u='r' c='megasas_probe_one'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='7653' u='r' c='megasas_init'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_fusion.c' l='271' u='r' c='megasas_fusion_update_can_queue'/>
<def f='linux-4.14.y/init/main.c' l='154' type='unsigned int'/>
<dec f='linux-4.14.y/init/main.c' l='155' type='typeof (reset_devices)'/>
<use f='linux-4.14.y/init/main.c' l='155'/>
<use f='linux-4.14.y/init/main.c' l='155' u='a'/>
<use f='linux-4.14.y/init/main.c' l='155' u='a'/>
<use f='linux-4.14.y/init/main.c' l='159' u='w' c='set_reset_devices'/>
<doc f='linux-4.14.y/init/main.c' l='145'>/*
 * If set, this is an indication to the drivers that reset the underlying
 * device before going ahead with the initialization otherwise driver might
 * rely on the BIOS and skip the reset operation.
 *
 * This is useful if kernel is booting in an unreliable environment.
 * For ex. kdump situation where previous kernel has crashed, BIOS has been
 * skipped and devices will be in unknown state.
 */</doc>
<dec f='linux-4.14.y/include/linux/init.h' l='131' type='unsigned int'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='274' u='r' c='megasas_return_cmd'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='3985' u='r' c='megasas_create_frame_pool'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='5102' u='r' c='megasas_setup_jbod_map'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='6134' u='r' c='megasas_probe_one'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='6208' u='r' c='megasas_probe_one'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='7653' u='r' c='megasas_init'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_fusion.c' l='271' u='r' c='megasas_fusion_update_can_queue'/>
<def f='linux-4.14.y/init/main.c' l='154' type='unsigned int'/>
<dec f='linux-4.14.y/init/main.c' l='155' type='typeof (reset_devices)'/>
<use f='linux-4.14.y/init/main.c' l='155'/>
<use f='linux-4.14.y/init/main.c' l='155' u='a'/>
<use f='linux-4.14.y/init/main.c' l='155' u='a'/>
<use f='linux-4.14.y/init/main.c' l='159' u='w' c='set_reset_devices'/>
<doc f='linux-4.14.y/init/main.c' l='145'>/*
 * If set, this is an indication to the drivers that reset the underlying
 * device before going ahead with the initialization otherwise driver might
 * rely on the BIOS and skip the reset operation.
 *
 * This is useful if kernel is booting in an unreliable environment.
 * For ex. kdump situation where previous kernel has crashed, BIOS has been
 * skipped and devices will be in unknown state.
 */</doc>
