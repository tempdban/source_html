<def f='linux-4.18.y/include/linux/namei.h' l='112' ll='116' type='bool retry_estale(const long error, const unsigned int flags)'/>
<doc f='linux-4.18.y/include/linux/namei.h' l='102'>/**
 * retry_estale - determine whether the caller should retry an operation
 * @error: the error that would currently be returned
 * @flags: flags being used for next lookup attempt
 *
 * Check to see if the error code was -ESTALE, and then determine whether
 * to retry the call based on whether &quot;flags&quot; already has LOOKUP_REVAL set.
 *
 * Returns true if the caller should try the operation again.
 */</doc>
<use f='linux-4.18.y/fs/namei.c' l='3790' u='c' c='do_mknodat'/>
<use f='linux-4.18.y/fs/namei.c' l='3852' u='c' c='do_mkdirat'/>
<use f='linux-4.18.y/fs/namei.c' l='3960' u='c' c='do_rmdir'/>
<use f='linux-4.18.y/fs/namei.c' l='4089' u='c' c='do_unlinkat'/>
<use f='linux-4.18.y/fs/namei.c' l='4166' u='c' c='do_symlinkat'/>
<use f='linux-4.18.y/fs/namei.c' l='4329' u='c' c='do_linkat'/>
<use f='linux-4.18.y/fs/namei.c' l='4653' u='c' c='do_renameat2'/>
<use f='linux-4.18.y/fs/open.c' l='146' u='c' c='do_sys_truncate'/>
<use f='linux-4.18.y/fs/open.c' l='424' u='c' c='do_faccessat'/>
<use f='linux-4.18.y/fs/open.c' l='462' u='c' c='ksys_chdir'/>
<use f='linux-4.18.y/fs/open.c' l='522' u='c' c='ksys_chroot'/>
<use f='linux-4.18.y/fs/open.c' l='592' u='c' c='do_fchmodat'/>
<use f='linux-4.18.y/fs/open.c' l='677' u='c' c='do_fchownat'/>
<use f='linux-4.18.y/fs/stat.c' l='191' u='c' c='vfs_statx'/>
<use f='linux-4.18.y/fs/stat.c' l='410' u='c' c='do_readlinkat'/>
<use f='linux-4.18.y/fs/statfs.c' l='91' u='c' c='user_statfs'/>
<use f='linux-4.18.y/fs/utimes.c' l='158' u='c' c='do_utimes'/>
<use f='linux-4.18.y/fs/xattr.c' l='474' u='c' c='path_setxattr'/>
<use f='linux-4.18.y/fs/xattr.c' l='568' u='c' c='path_getxattr'/>
<use f='linux-4.18.y/fs/xattr.c' l='644' u='c' c='path_listxattr'/>
<use f='linux-4.18.y/fs/xattr.c' l='709' u='c' c='path_removexattr'/>
