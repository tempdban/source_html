<def f='linux-4.14.y/include/linux/namei.h' l='111' ll='115' type='bool retry_estale(const long error, const unsigned int flags)'/>
<doc f='linux-4.14.y/include/linux/namei.h' l='101'>/**
 * retry_estale - determine whether the caller should retry an operation
 * @error: the error that would currently be returned
 * @flags: flags being used for next lookup attempt
 *
 * Check to see if the error code was -ESTALE, and then determine whether
 * to retry the call based on whether &quot;flags&quot; already has LOOKUP_REVAL set.
 *
 * Returns true if the caller should try the operation again.
 */</doc>
<use f='linux-4.14.y/fs/namei.c' l='3768' u='c' c='SYSC_mknodat'/>
<use f='linux-4.14.y/fs/namei.c' l='3824' u='c' c='SYSC_mkdirat'/>
<use f='linux-4.14.y/fs/namei.c' l='3927' u='c' c='do_rmdir'/>
<use f='linux-4.14.y/fs/namei.c' l='4059' u='c' c='do_unlinkat'/>
<use f='linux-4.14.y/fs/namei.c' l='4135' u='c' c='SYSC_symlinkat'/>
<use f='linux-4.14.y/fs/namei.c' l='4292' u='c' c='SYSC_linkat'/>
<use f='linux-4.14.y/fs/namei.c' l='4610' u='c' c='SYSC_renameat2'/>
<use f='linux-4.14.y/fs/open.c' l='146' u='c' c='do_sys_truncate'/>
<use f='linux-4.14.y/fs/open.c' l='419' u='c' c='SYSC_faccessat'/>
<use f='linux-4.14.y/fs/open.c' l='452' u='c' c='SYSC_chdir'/>
<use f='linux-4.14.y/fs/open.c' l='507' u='c' c='SYSC_chroot'/>
<use f='linux-4.14.y/fs/open.c' l='567' u='c' c='SYSC_fchmodat'/>
<use f='linux-4.14.y/fs/open.c' l='646' u='c' c='SYSC_fchownat'/>
<use f='linux-4.14.y/fs/stat.c' l='191' u='c' c='vfs_statx'/>
<use f='linux-4.14.y/fs/stat.c' l='410' u='c' c='SYSC_readlinkat'/>
<use f='linux-4.14.y/fs/statfs.c' l='91' u='c' c='user_statfs'/>
<use f='linux-4.14.y/fs/utimes.c' l='158' u='c' c='do_utimes'/>
<use f='linux-4.14.y/fs/xattr.c' l='476' u='c' c='path_setxattr'/>
<use f='linux-4.14.y/fs/xattr.c' l='570' u='c' c='path_getxattr'/>
<use f='linux-4.14.y/fs/xattr.c' l='646' u='c' c='path_listxattr'/>
<use f='linux-4.14.y/fs/xattr.c' l='711' u='c' c='path_removexattr'/>
