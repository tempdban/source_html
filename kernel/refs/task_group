<def f='linux-4.14.y/kernel/sched/sched.h' l='295' ll='334'/>
<def f='linux-4.14.y/kernel/sched/sched.h' l='1171' ll='1174' type='struct task_group * task_group(struct task_struct * p)'/>
<use f='linux-4.14.y/kernel/sched/sched.h' l='1180' u='c' c='set_task_rq'/>
<size>384</size>
<doc f='linux-4.14.y/kernel/sched/sched.h' l='294'>/* task group related information */</doc>
<doc f='linux-4.14.y/kernel/sched/sched.h' l='1158'>/*
 * Return the group to which this tasks belongs.
 *
 * We cannot use task_css() and friends because the cgroup subsystem
 * changes that value before the cgroup_subsys::attach() method is called,
 * therefore we cannot pin it and might observe the wrong value.
 *
 * The same is true for autogroup&apos;s p-&gt;signal-&gt;autogroup-&gt;tg, the autogroup
 * core changes this before calling sched_move_task().
 *
 * Instead we use a &apos;copy&apos; which is updated from sched_move_task() while
 * holding both task_struct::pi_lock and rq::lock.
 */</doc>
<mbr r='task_group::css' o='0' t='struct cgroup_subsys_state'/>
<mbr r='task_group::se' o='1472' t='struct sched_entity **'/>
<mbr r='task_group::cfs_rq' o='1536' t='struct cfs_rq **'/>
<mbr r='task_group::shares' o='1600' t='unsigned long'/>
<mbr r='task_group::load_avg' o='2048' t='atomic_long_t'/>
<mbr r='task_group::rcu' o='2112' t='struct callback_head'/>
<mbr r='task_group::list' o='2240' t='struct list_head'/>
<mbr r='task_group::parent' o='2368' t='struct task_group *'/>
<mbr r='task_group::siblings' o='2432' t='struct list_head'/>
<mbr r='task_group::children' o='2560' t='struct list_head'/>
<mbr r='task_group::cfs_bandwidth' o='2688' t='struct cfs_bandwidth'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='492' u='c' c='print_task'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='492' u='c' c='print_task'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='6705' u='c' c='can_migrate_task'/>
<def f='linux-4.14.y/kernel/sched/sched.h' l='295' ll='334'/>
<def f='linux-4.14.y/kernel/sched/sched.h' l='1171' ll='1174' type='struct task_group * task_group(struct task_struct * p)'/>
<use f='linux-4.14.y/kernel/sched/sched.h' l='1180' u='c' c='set_task_rq'/>
<size>384</size>
<doc f='linux-4.14.y/kernel/sched/sched.h' l='294'>/* task group related information */</doc>
<doc f='linux-4.14.y/kernel/sched/sched.h' l='1158'>/*
 * Return the group to which this tasks belongs.
 *
 * We cannot use task_css() and friends because the cgroup subsystem
 * changes that value before the cgroup_subsys::attach() method is called,
 * therefore we cannot pin it and might observe the wrong value.
 *
 * The same is true for autogroup&apos;s p-&gt;signal-&gt;autogroup-&gt;tg, the autogroup
 * core changes this before calling sched_move_task().
 *
 * Instead we use a &apos;copy&apos; which is updated from sched_move_task() while
 * holding both task_struct::pi_lock and rq::lock.
 */</doc>
<mbr r='task_group::css' o='0' t='struct cgroup_subsys_state'/>
<mbr r='task_group::se' o='1472' t='struct sched_entity **'/>
<mbr r='task_group::cfs_rq' o='1536' t='struct cfs_rq **'/>
<mbr r='task_group::shares' o='1600' t='unsigned long'/>
<mbr r='task_group::load_avg' o='2048' t='atomic_long_t'/>
<mbr r='task_group::rcu' o='2112' t='struct callback_head'/>
<mbr r='task_group::list' o='2240' t='struct list_head'/>
<mbr r='task_group::parent' o='2368' t='struct task_group *'/>
<mbr r='task_group::siblings' o='2432' t='struct list_head'/>
<mbr r='task_group::children' o='2560' t='struct list_head'/>
<mbr r='task_group::cfs_bandwidth' o='2688' t='struct cfs_bandwidth'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='492' u='c' c='print_task'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='492' u='c' c='print_task'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='6705' u='c' c='can_migrate_task'/>
