<dec f='linux-4.14.y/include/linux/device.h' l='677' type='char * devm_kstrdup(struct device * dev, const char * s, gfp_t gfp)'/>
<def f='linux-4.14.y/drivers/base/devres.c' l='805' ll='818' type='char * devm_kstrdup(struct device * dev, const char * s, gfp_t gfp)'/>
<dec f='linux-4.14.y/drivers/base/devres.c' l='819' type='char * devm_kstrdup(struct device * , const char * , gfp_t )'/>
<use f='linux-4.14.y/drivers/base/devres.c' l='819' c='devm_kstrdup'/>
<use f='linux-4.14.y/drivers/base/devres.c' l='819' u='a'/>
<use f='linux-4.14.y/drivers/base/devres.c' l='819' u='a'/>
<doc f='linux-4.14.y/drivers/base/devres.c' l='795'>/**
 * devm_kstrdup - Allocate resource managed space and
 *                copy an existing string into that.
 * @dev: Device to allocate memory for
 * @s: the string to duplicate
 * @gfp: the GFP mask used in the devm_kmalloc() call when
 *       allocating memory
 * RETURNS:
 * Pointer to allocated string on success, NULL on failure.
 */</doc>
<dec f='linux-4.14.y/include/linux/device.h' l='677' type='char * devm_kstrdup(struct device * dev, const char * s, gfp_t gfp)'/>
<def f='linux-4.14.y/drivers/base/devres.c' l='805' ll='818' type='char * devm_kstrdup(struct device * dev, const char * s, gfp_t gfp)'/>
<dec f='linux-4.14.y/drivers/base/devres.c' l='819' type='char * devm_kstrdup(struct device * , const char * , gfp_t )'/>
<use f='linux-4.14.y/drivers/base/devres.c' l='819' c='devm_kstrdup'/>
<use f='linux-4.14.y/drivers/base/devres.c' l='819' u='a'/>
<use f='linux-4.14.y/drivers/base/devres.c' l='819' u='a'/>
<doc f='linux-4.14.y/drivers/base/devres.c' l='795'>/**
 * devm_kstrdup - Allocate resource managed space and
 *                copy an existing string into that.
 * @dev: Device to allocate memory for
 * @s: the string to duplicate
 * @gfp: the GFP mask used in the devm_kmalloc() call when
 *       allocating memory
 * RETURNS:
 * Pointer to allocated string on success, NULL on failure.
 */</doc>
