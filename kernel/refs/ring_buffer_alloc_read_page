<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='185' type='void * ring_buffer_alloc_read_page(struct ring_buffer * buffer, int cpu)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='4397' ll='4433' type='void * ring_buffer_alloc_read_page(struct ring_buffer * buffer, int cpu)'/>
<dec f='linux-4.14.y/kernel/trace/ring_buffer.c' l='4434' type='void * ring_buffer_alloc_read_page(struct ring_buffer * , int )'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='4434' c='ring_buffer_alloc_read_page'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='4434' u='a'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='4434' u='a'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='4381'>/**
 * ring_buffer_alloc_read_page - allocate a page to read from buffer
 * @buffer: the buffer to allocate for.
 * @cpu: the cpu buffer to allocate.
 *
 * This function is used in conjunction with ring_buffer_read_page.
 * When reading a full page from the ring buffer, these functions
 * can be used to speed up the process. The calling function should
 * allocate a few pages first with this function. Then when it
 * needs to get pages from the ring buffer, it passes the result
 * of this function into ring_buffer_read_page, which will swap
 * the page that was allocated, with the read page of the buffer.
 *
 * Returns:
 *  The page allocated, or ERR_PTR
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='6624' u='c' c='tracing_buffers_read'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='6808' u='c' c='tracing_buffers_splice_read'/>
