<dec f='linux-4.18.y/include/scsi/scsi_cmnd.h' l='175' type='int scsi_init_io(struct scsi_cmnd * cmd)'/>
<def f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1098' ll='1172' type='int scsi_init_io(struct scsi_cmnd * cmd)'/>
<dec f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1173' type='int scsi_init_io(struct scsi_cmnd * )'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1173' c='scsi_init_io'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1173' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1173' u='a'/>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1268' u='c' c='scsi_setup_scsi_cmnd'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1087'>/*
 * Function:    scsi_init_io()
 *
 * Purpose:     SCSI I/O initialize function.
 *
 * Arguments:   cmd   - Command descriptor we wish to initialize
 *
 * Returns:     0 on success
 *		BLKPREP_DEFER if the failure is retryable
 *		BLKPREP_KILL if the failure is fatal
 */</doc>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='784' u='c' c='sd_setup_unmap_cmnd'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='814' u='c' c='sd_setup_write_same16_cmnd'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='844' u='c' c='sd_setup_write_same10_cmnd'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='989' u='c' c='sd_setup_write_same_cmnd'/>
<use f='linux-4.18.y/drivers/scsi/sd.c' l='1024' u='c' c='sd_setup_read_write_cmnd'/>
<use f='linux-4.18.y/drivers/scsi/sr.c' l='393' u='c' c='sr_init_command'/>
