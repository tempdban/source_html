<dec f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e.h' l='983' type='struct i40e_vsi * i40e_vsi_setup(struct i40e_pf * pf, u8 type, u16 uplink, u32 param1)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='753' u='c' c='i40e_dbg_command_write'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='9063' u='c' c='i40e_fdir_sb_setup'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='12563' ll='12734' type='struct i40e_vsi * i40e_vsi_setup(struct i40e_pf * pf, u8 type, u16 uplink_seid, u32 param1)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='13285' u='c' c='i40e_setup_pf_switch'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='12550'>/**
 * i40e_vsi_setup - Set up a VSI by a given type
 * @pf: board private structure
 * @type: VSI type
 * @uplink_seid: the switch element to link to
 * @param1: usage depends upon VSI type. For VF types, indicates VF id
 *
 * This allocates the sw VSI structure and its queue resources, then add a VSI
 * to the identified VEB.
 *
 * Returns pointer to the successfully allocated and configure VSI sw struct on
 * success, otherwise returns NULL on failure.
 **/</doc>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c' l='694' u='c' c='i40e_alloc_vsi_res'/>
