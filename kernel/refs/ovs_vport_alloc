<dec f='linux-4.14.y/net/openvswitch/vport.h' l='149' type='struct vport * ovs_vport_alloc(int priv_size, const struct vport_ops * , const struct vport_parms * )'/>
<use f='linux-4.14.y/net/openvswitch/vport-internal_dev.c' l='181' u='c' c='internal_dev_create'/>
<use f='linux-4.14.y/net/openvswitch/vport-netdev.c' l='143' u='c' c='netdev_create'/>
<def f='linux-4.14.y/net/openvswitch/vport.c' l='131' ll='158' type='struct vport * ovs_vport_alloc(int priv_size, const struct vport_ops * ops, const struct vport_parms * parms)'/>
<dec f='linux-4.14.y/net/openvswitch/vport.c' l='159' type='struct vport * ovs_vport_alloc(int , const struct vport_ops * , const struct vport_parms * )'/>
<use f='linux-4.14.y/net/openvswitch/vport.c' l='159' c='ovs_vport_alloc'/>
<use f='linux-4.14.y/net/openvswitch/vport.c' l='159' u='a'/>
<use f='linux-4.14.y/net/openvswitch/vport.c' l='159' u='a'/>
<doc f='linux-4.14.y/net/openvswitch/vport.c' l='120'>/**
 *	ovs_vport_alloc - allocate and initialize new vport
 *
 * @priv_size: Size of private data area to allocate.
 * @ops: vport device ops
 *
 * Allocate and initialize a new vport defined by @ops.  The vport will contain
 * a private data area of size @priv_size that can be accessed using
 * vport_priv().  vports that are no longer needed should be released with
 * vport_free().
 */</doc>
