<dec f='linux-4.18.y/include/linux/buffer_head.h' l='155' type='void mark_buffer_dirty(struct buffer_head * bh)'/>
<doc f='linux-4.18.y/include/linux/buffer_head.h' l='151'>/*
 * Declarations
 */</doc>
<use f='linux-4.18.y/fs/buffer.c' l='548' u='c' c='mark_buffer_dirty_inode'/>
<def f='linux-4.18.y/fs/buffer.c' l='1077' ll='1109' type='void mark_buffer_dirty(struct buffer_head * bh)'/>
<dec f='linux-4.18.y/fs/buffer.c' l='1110' type='void mark_buffer_dirty(struct buffer_head * )'/>
<use f='linux-4.18.y/fs/buffer.c' l='1110' c='mark_buffer_dirty'/>
<use f='linux-4.18.y/fs/buffer.c' l='1110' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='1110' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='1856' u='c' c='page_zero_new_buffers'/>
<use f='linux-4.18.y/fs/buffer.c' l='1970' u='c' c='__block_write_begin_int'/>
<use f='linux-4.18.y/fs/buffer.c' l='2031' u='c' c='__block_commit_write'/>
<use f='linux-4.18.y/fs/buffer.c' l='2896' u='c' c='block_truncate_page'/>
<doc f='linux-4.18.y/fs/buffer.c' l='1065'>/**
 * mark_buffer_dirty - mark a buffer_head as needing writeout
 * @bh: the buffer_head to mark dirty
 *
 * mark_buffer_dirty() will set the dirty bit against the buffer, then set its
 * backing page dirty, then tag the page as dirty in its address_space&apos;s radix
 * tree and then attach the address_space&apos;s inode to its superblock&apos;s dirty
 * inode list.
 *
 * mark_buffer_dirty() is atomic.  It takes bh-&gt;b_page-&gt;mapping-&gt;private_lock,
 * i_pages lock and mapping-&gt;host-&gt;i_lock.
 */</doc>
<use f='linux-4.18.y/fs/ext4/ext4_jbd2.c' l='298' u='c' c='__ext4_handle_dirty_metadata'/>
<use f='linux-4.18.y/fs/ext4/ext4_jbd2.c' l='330' u='c' c='__ext4_handle_dirty_super'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='1201' u='c' c='ext4_block_write_begin'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='4057' u='c' c='__ext4_block_zero_page_range'/>
<use f='linux-4.18.y/fs/ext4/resize.c' l='1166' u='c' c='update_backups'/>
<use f='linux-4.18.y/fs/ext4/super.c' l='4855' u='c' c='ext4_commit_super'/>
<use f='linux-4.18.y/fs/fat/inode.c' l='705' u='c' c='fat_set_state'/>
<use f='linux-4.18.y/fs/fat/inode.c' l='897' u='c' c='__fat_write_inode'/>
<use f='linux-4.18.y/fs/fat/misc.c' l='88' u='c' c='fat_clusters_flush'/>
<use f='linux-4.18.y/fs/jbd2/recovery.c' l='634' u='c' c='do_one_pass'/>
<use f='linux-4.18.y/fs/jbd2/transaction.c' l='1893' u='c' c='__jbd2_journal_temp_unlink_buffer'/>
<use f='linux-4.18.y/fs/ntfs/file.c' l='745' u='c' c='ntfs_prepare_pages_for_non_resident_write'/>
<use f='linux-4.18.y/fs/ntfs/file.c' l='801' u='c' c='ntfs_prepare_pages_for_non_resident_write'/>
<use f='linux-4.18.y/fs/ntfs/file.c' l='1367' u='c' c='ntfs_prepare_pages_for_non_resident_write'/>
<use f='linux-4.18.y/fs/ntfs/file.c' l='1436' u='c' c='ntfs_commit_pages_after_non_resident_write'/>
<use f='linux-4.18.y/fs/ntfs/super.c' l='740' u='c' c='read_ntfs_boot_sector'/>
<use f='linux-4.18.y/fs/udf/balloc.c' l='160' u='c' c='udf_bitmap_free_blocks'/>
<use f='linux-4.18.y/fs/udf/balloc.c' l='212' u='c' c='udf_bitmap_prealloc_blocks'/>
<use f='linux-4.18.y/fs/udf/balloc.c' l='335' u='c' c='udf_bitmap_new_block'/>
<use f='linux-4.18.y/fs/udf/inode.c' l='1818' u='c' c='udf_update_inode'/>
<use f='linux-4.18.y/fs/udf/partition.c' l='207' u='c' c='udf_relocate_blocks'/>
<use f='linux-4.18.y/fs/udf/partition.c' l='253' u='c' c='udf_relocate_blocks'/>
<use f='linux-4.18.y/fs/udf/super.c' l='2014' u='c' c='udf_open_lvid'/>
<use f='linux-4.18.y/fs/udf/super.c' l='2061' u='c' c='udf_close_lvid'/>
<use f='linux-4.18.y/fs/udf/super.c' l='2090' u='c' c='lvid_get_unique_id'/>
<use f='linux-4.18.y/fs/udf/super.c' l='2361' u='c' c='udf_sync_fs'/>
