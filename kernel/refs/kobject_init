<dec f='linux-4.18.y/include/linux/kobject.h' l='93' type='void kobject_init(struct kobject * kobj, struct kobj_type * ktype)'/>
<use f='linux-4.18.y/block/blk-core.c' l='1047' u='c' c='blk_alloc_queue_node'/>
<use f='linux-4.18.y/block/blk-mq-sysfs.c' l='270' u='c' c='blk_mq_hctx_kobj_init'/>
<use f='linux-4.18.y/block/blk-mq-sysfs.c' l='290' u='c' c='blk_mq_sysfs_init'/>
<use f='linux-4.18.y/block/blk-mq-sysfs.c' l='294' u='c' c='blk_mq_sysfs_init'/>
<use f='linux-4.18.y/block/elevator.c' l='184' u='c' c='elevator_alloc'/>
<use f='linux-4.18.y/drivers/base/core.c' l='1435' u='c' c='device_initialize'/>
<use f='linux-4.18.y/drivers/base/core.c' l='1500' u='c' c='class_dir_create_and_add'/>
<use f='linux-4.18.y/drivers/firmware/memmap.c' l='160' u='c' c='firmware_map_add_entry'/>
<use f='linux-4.18.y/drivers/md/md.c' l='559' u='c' c='mddev_init'/>
<use f='linux-4.18.y/drivers/md/md.c' l='3480' u='c' c='md_import_device'/>
<use f='linux-4.18.y/drivers/uio/uio.c' l='310' u='c' c='uio_dev_add_attributes'/>
<use f='linux-4.18.y/drivers/uio/uio.c' l='339' u='c' c='uio_dev_add_attributes'/>
<use f='linux-4.18.y/fs/char_dev.c' l='638' u='c' c='cdev_alloc'/>
<use f='linux-4.18.y/fs/char_dev.c' l='655' u='c' c='cdev_init'/>
<use f='linux-4.18.y/kernel/irq/irqdesc.c' l='396' u='c' c='alloc_desc'/>
<def f='linux-4.18.y/lib/kobject.c' l='322' ll='348' type='void kobject_init(struct kobject * kobj, struct kobj_type * ktype)'/>
<dec f='linux-4.18.y/lib/kobject.c' l='349' type='void kobject_init(struct kobject * , struct kobj_type * )'/>
<use f='linux-4.18.y/lib/kobject.c' l='349' c='kobject_init'/>
<use f='linux-4.18.y/lib/kobject.c' l='349' u='a'/>
<use f='linux-4.18.y/lib/kobject.c' l='349' u='a'/>
<use f='linux-4.18.y/lib/kobject.c' l='431' u='c' c='kobject_init_and_add'/>
<use f='linux-4.18.y/lib/kobject.c' l='724' u='c' c='kobject_create'/>
<doc f='linux-4.18.y/lib/kobject.c' l='310'>/**
 * kobject_init - initialize a kobject structure
 * @kobj: pointer to the kobject to initialize
 * @ktype: pointer to the ktype for this kobject.
 *
 * This function will properly initialize a kobject such that it can then
 * be passed to the kobject_add() call.
 *
 * After this function is called, the kobject MUST be cleaned up by a call
 * to kobject_put(), not by a call to kfree directly to ensure that all of
 * the memory is cleaned up properly.
 */</doc>
