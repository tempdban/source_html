<def f='linux-4.14.y/include/uapi/linux/vfio.h' l='75' ll='79'/>
<size>8</size>
<doc f='linux-4.14.y/include/uapi/linux/vfio.h' l='63'>/*
 * For extension of INFO ioctls, VFIO makes use of a capability chain
 * designed after PCI/e capabilities.  A flag bit indicates whether
 * this capability chain is supported and a field defined in the fixed
 * structure defines the offset of the first capability in the chain.
 * This field is only valid when the corresponding bit in the flags
 * bitmap is set.  This offset field is relative to the start of the
 * INFO buffer, as is the next field within each capability header.
 * The id within the header is a shared address space per INFO ioctl,
 * while the version field is specific to the capability id.  The
 * contents following the header are specific to the capability id.
 */</doc>
<mbr r='vfio_info_cap_header::id' o='0' t='__u16'/>
<mbr r='vfio_info_cap_header::version' o='16' t='__u16'/>
<mbr r='vfio_info_cap_header::next' o='32' t='__u32'/>
<def f='linux-4.14.y/include/uapi/linux/vfio.h' l='75' ll='79'/>
<size>8</size>
<doc f='linux-4.14.y/include/uapi/linux/vfio.h' l='63'>/*
 * For extension of INFO ioctls, VFIO makes use of a capability chain
 * designed after PCI/e capabilities.  A flag bit indicates whether
 * this capability chain is supported and a field defined in the fixed
 * structure defines the offset of the first capability in the chain.
 * This field is only valid when the corresponding bit in the flags
 * bitmap is set.  This offset field is relative to the start of the
 * INFO buffer, as is the next field within each capability header.
 * The id within the header is a shared address space per INFO ioctl,
 * while the version field is specific to the capability id.  The
 * contents following the header are specific to the capability id.
 */</doc>
<mbr r='vfio_info_cap_header::id' o='0' t='__u16'/>
<mbr r='vfio_info_cap_header::version' o='16' t='__u16'/>
<mbr r='vfio_info_cap_header::next' o='32' t='__u32'/>
