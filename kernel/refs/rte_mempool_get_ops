<def f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='617' ll='623' type='struct rte_mempool_ops * rte_mempool_get_ops(int ops_index)'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='656' u='c' c='rte_mempool_ops_dequeue_bulk'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='679' u='c' c='rte_mempool_ops_dequeue_contig_blocks'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='703' u='c' c='rte_mempool_ops_enqueue_bulk'/>
<doc f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='608'>/**
 * @internal Get the mempool ops struct from its index.
 *
 * @param ops_index
 *   The index of the ops struct in the ops struct table. It must be a valid
 *   index: (0 &lt;= idx &lt; num_ops).
 * @return
 *   The pointer to the ops struct in the table.
 */</doc>
<use f='linux-4.18.y/drivers/net/octeontx/octeontx_ethdev.c' l='793' u='c' c='octeontx_dev_rx_queue_setup'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool_ops.c' l='76' u='c' c='rte_mempool_ops_alloc'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool_ops.c' l='86' u='c' c='rte_mempool_ops_free'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool_ops.c' l='98' u='c' c='rte_mempool_ops_get_count'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool_ops.c' l='110' u='c' c='rte_mempool_ops_calc_mem_size'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool_ops.c' l='128' u='c' c='rte_mempool_ops_populate'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool_ops.c' l='146' u='c' c='rte_mempool_ops_get_info'/>
