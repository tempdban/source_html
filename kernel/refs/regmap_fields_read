<dec f='linux-4.14.y/include/linux/regmap.h' l='888' type='int regmap_fields_read(struct regmap_field * field, unsigned int id, unsigned int * val)'/>
<def f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2519' ll='2539' type='int regmap_fields_read(struct regmap_field * field, unsigned int id, unsigned int * val)'/>
<dec f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' type='int regmap_fields_read(struct regmap_field * , unsigned int , unsigned int * )'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' c='regmap_fields_read'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' u='a'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' u='a'/>
<doc f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2509'>/**
 * regmap_fields_read() - Read a value to a single register field with port ID
 *
 * @field: Register field to read from
 * @id: port ID
 * @val: Pointer to store read value
 *
 * A value of zero will be returned on success, a negative errno will
 * be returned in error cases.
 */</doc>
<dec f='linux-4.14.y/include/linux/regmap.h' l='888' type='int regmap_fields_read(struct regmap_field * field, unsigned int id, unsigned int * val)'/>
<def f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2519' ll='2539' type='int regmap_fields_read(struct regmap_field * field, unsigned int id, unsigned int * val)'/>
<dec f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' type='int regmap_fields_read(struct regmap_field * , unsigned int , unsigned int * )'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' c='regmap_fields_read'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' u='a'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2540' u='a'/>
<doc f='linux-4.14.y/drivers/base/regmap/regmap.c' l='2509'>/**
 * regmap_fields_read() - Read a value to a single register field with port ID
 *
 * @field: Register field to read from
 * @id: port ID
 * @val: Pointer to store read value
 *
 * A value of zero will be returned on success, a negative errno will
 * be returned in error cases.
 */</doc>
