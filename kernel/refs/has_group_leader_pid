<def f='linux-4.14.y/include/linux/sched/signal.h' l='547' ll='550' type='bool has_group_leader_pid(struct task_struct * p)'/>
<doc f='linux-4.14.y/include/linux/sched/signal.h' l='541'>/* Do to the insanities of de_thread it is possible for a process
 * to have the pid of the thread group leader without actually being
 * the thread group leader.  For iteration through the pids in proc
 * all we care about is that we have a task with the appropriate
 * pid, we don&apos;t actually care if we have the right task.
 */</doc>
<use f='linux-4.14.y/fs/exec.c' l='1129' u='c' c='de_thread'/>
<use f='linux-4.14.y/fs/proc/base.c' l='3223' u='c' c='next_tgid'/>
<use f='linux-4.14.y/kernel/exit.c' l='112' u='c' c='__exit_signal'/>
<use f='linux-4.14.y/kernel/time/posix-cpu-timers.c' l='52' u='c' c='check_clock'/>
<use f='linux-4.14.y/kernel/time/posix-cpu-timers.c' l='349' u='c' c='posix_cpu_timer_create'/>
<def f='linux-4.14.y/include/linux/sched/signal.h' l='547' ll='550' type='bool has_group_leader_pid(struct task_struct * p)'/>
<doc f='linux-4.14.y/include/linux/sched/signal.h' l='541'>/* Do to the insanities of de_thread it is possible for a process
 * to have the pid of the thread group leader without actually being
 * the thread group leader.  For iteration through the pids in proc
 * all we care about is that we have a task with the appropriate
 * pid, we don&apos;t actually care if we have the right task.
 */</doc>
<use f='linux-4.14.y/fs/exec.c' l='1129' u='c' c='de_thread'/>
<use f='linux-4.14.y/fs/proc/base.c' l='3223' u='c' c='next_tgid'/>
<use f='linux-4.14.y/kernel/exit.c' l='112' u='c' c='__exit_signal'/>
<use f='linux-4.14.y/kernel/time/posix-cpu-timers.c' l='52' u='c' c='check_clock'/>
<use f='linux-4.14.y/kernel/time/posix-cpu-timers.c' l='349' u='c' c='posix_cpu_timer_create'/>
