<dec f='linux-4.18.y/fs/ntfs/ntfs.h' l='72' type='const struct export_operations'/>
<def f='linux-4.18.y/fs/ntfs/namei.c' l='400' ll='405' type='const struct export_operations'/>
<doc f='linux-4.18.y/fs/ntfs/namei.c' l='381'>/**
 * Export operations allowing NFS exporting of mounted NTFS partitions.
 *
 * We use the default -&gt;encode_fh() for now.  Note that they
 * use 32 bits to store the inode number which is an unsigned long so on 64-bit
 * architectures is usually 64 bits so it would all fail horribly on huge
 * volumes.  I guess we need to define our own encode and decode fh functions
 * that store 64-bit inode numbers at some point but for now we will ignore the
 * problem...
 *
 * We also use the default -&gt;get_name() helper (used by -&gt;decode_fh() via
 * fs/exportfs/expfs.c::find_exported_dentry()) as that is completely fs
 * independent.
 *
 * The default -&gt;get_parent() just returns -EACCES so we have to provide our
 * own and the default -&gt;get_dentry() is incompatible with NTFS due to not
 * allowing the inode number 0 which is used in NTFS for the system file $MFT
 * and due to using iget() whereas NTFS needs ntfs_iget().
 */</doc>
<use f='linux-4.18.y/fs/ntfs/super.c' l='2924' u='a' c='ntfs_fill_super'/>
