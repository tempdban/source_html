<dec f='linux-4.14.y/include/linux/mount.h' l='77' type='int mnt_want_write_file(struct file * file)'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='631' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='660' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='708' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='761' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='798' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='825' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='847' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='860' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='888' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='1027' u='c' c='ext4_ioctl'/>
<def f='linux-4.14.y/fs/namespace.c' l='491' ll='503' type='int mnt_want_write_file(struct file * file)'/>
<dec f='linux-4.14.y/fs/namespace.c' l='504' type='int mnt_want_write_file(struct file * )'/>
<use f='linux-4.14.y/fs/namespace.c' l='504' c='mnt_want_write_file'/>
<use f='linux-4.14.y/fs/namespace.c' l='504' u='a'/>
<use f='linux-4.14.y/fs/namespace.c' l='504' u='a'/>
<doc f='linux-4.14.y/fs/namespace.c' l='480'>/**
 * mnt_want_write_file - get write access to a file&apos;s mount
 * @file: the file who&apos;s mount on which to take a write
 *
 * This is like mnt_want_write, but it takes a file and can
 * do some optimisations if the file is open for write already
 *
 * Mostly called by filesystems from their ioctl operation before performing
 * modification.  On overlayfs this needs to check if the file is on a read-only
 * lower layer and deny access in that case.
 */</doc>
<use f='linux-4.14.y/fs/read_write.c' l='2017' u='c' c='vfs_dedupe_file_range'/>
<dec f='linux-4.14.y/include/linux/mount.h' l='77' type='int mnt_want_write_file(struct file * file)'/>
<use f='linux-4.14.y/fs/crypto/policy.c' l='74' u='c' c='fscrypt_ioctl_set_policy'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='631' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='660' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='708' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='761' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='798' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='825' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='847' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='860' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='888' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='956' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/ext4/ioctl.c' l='1027' u='c' c='ext4_ioctl'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1596' u='c' c='f2fs_ioc_setflags'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1627' u='c' c='f2fs_ioc_start_atomic_write'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1675' u='c' c='f2fs_ioc_commit_atomic_write'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1715' u='c' c='f2fs_ioc_start_volatile_write'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1747' u='c' c='f2fs_ioc_release_volatile_write'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1776' u='c' c='f2fs_ioc_abort_volatile_write'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1811' u='c' c='f2fs_ioc_shutdown'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1863' u='c' c='f2fs_ioc_fitrim'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1917' u='c' c='f2fs_ioc_get_encryption_pwsalt'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1955' u='c' c='f2fs_ioc_gc'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1992' u='c' c='f2fs_ioc_gc_range'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='2030' u='c' c='f2fs_ioc_write_checkpoint'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='2208' u='c' c='f2fs_ioc_defragment'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='2349' u='c' c='f2fs_ioc_move_range'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='2397' u='c' c='f2fs_ioc_flush_device'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='2615' u='c' c='f2fs_ioc_fssetxattr'/>
<use f='linux-4.14.y/fs/fat/file.c' l='47' u='c' c='fat_ioctl_set_attributes'/>
<def f='linux-4.14.y/fs/namespace.c' l='491' ll='503' type='int mnt_want_write_file(struct file * file)'/>
<dec f='linux-4.14.y/fs/namespace.c' l='504' type='int mnt_want_write_file(struct file * )'/>
<use f='linux-4.14.y/fs/namespace.c' l='504' c='mnt_want_write_file'/>
<use f='linux-4.14.y/fs/namespace.c' l='504' u='a'/>
<use f='linux-4.14.y/fs/namespace.c' l='504' u='a'/>
<doc f='linux-4.14.y/fs/namespace.c' l='480'>/**
 * mnt_want_write_file - get write access to a file&apos;s mount
 * @file: the file who&apos;s mount on which to take a write
 *
 * This is like mnt_want_write, but it takes a file and can
 * do some optimisations if the file is open for write already
 *
 * Mostly called by filesystems from their ioctl operation before performing
 * modification.  On overlayfs this needs to check if the file is on a read-only
 * lower layer and deny access in that case.
 */</doc>
<use f='linux-4.14.y/fs/read_write.c' l='2017' u='c' c='vfs_dedupe_file_range'/>
