<dec f='linux-4.14.y/drivers/acpi/acpica/acinterp.h' l='220' type='acpi_status acpi_ex_do_concatenate(union acpi_operand_object * obj_desc, union acpi_operand_object * obj_desc2, union acpi_operand_object ** actual_return_desc, struct acpi_walk_state * walk_state)'/>
<def f='linux-4.14.y/drivers/acpi/acpica/exconcat.c' l='80' ll='317' type='acpi_status acpi_ex_do_concatenate(union acpi_operand_object * operand0, union acpi_operand_object * operand1, union acpi_operand_object ** actual_return_desc, struct acpi_walk_state * walk_state)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/exconcat.c' l='57'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_do_concatenate
 *
 * PARAMETERS:  operand0            - First source object
 *              operand1            - Second source object
 *              actual_return_desc  - Where to place the return object
 *              walk_state          - Current walk state
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Concatenate two objects with the ACPI-defined conversion
 *              rules as necessary.
 * NOTE:
 * Per the ACPI spec (up to 6.1), Concatenate only supports Integer,
 * String, and Buffer objects. However, we support all objects here
 * as an extension. This improves the usefulness of both Concatenate
 * and the Printf/Fprintf macros. The extension returns a string
 * describing the object type for the other objects.
 * 02/2016.
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/acpica/exoparg2.c' l='304' u='c' c='acpi_ex_opcode_2A_1T_1R'/>
<dec f='linux-4.14.y/drivers/acpi/acpica/acinterp.h' l='220' type='acpi_status acpi_ex_do_concatenate(union acpi_operand_object * obj_desc, union acpi_operand_object * obj_desc2, union acpi_operand_object ** actual_return_desc, struct acpi_walk_state * walk_state)'/>
<def f='linux-4.14.y/drivers/acpi/acpica/exconcat.c' l='80' ll='317' type='acpi_status acpi_ex_do_concatenate(union acpi_operand_object * operand0, union acpi_operand_object * operand1, union acpi_operand_object ** actual_return_desc, struct acpi_walk_state * walk_state)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/exconcat.c' l='57'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_do_concatenate
 *
 * PARAMETERS:  operand0            - First source object
 *              operand1            - Second source object
 *              actual_return_desc  - Where to place the return object
 *              walk_state          - Current walk state
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Concatenate two objects with the ACPI-defined conversion
 *              rules as necessary.
 * NOTE:
 * Per the ACPI spec (up to 6.1), Concatenate only supports Integer,
 * String, and Buffer objects. However, we support all objects here
 * as an extension. This improves the usefulness of both Concatenate
 * and the Printf/Fprintf macros. The extension returns a string
 * describing the object type for the other objects.
 * 02/2016.
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/acpica/exoparg2.c' l='304' u='c' c='acpi_ex_opcode_2A_1T_1R'/>
