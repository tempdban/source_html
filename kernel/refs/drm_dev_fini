<dec f='linux-4.18.y/include/drm/drm_drv.h' l='616' type='void drm_dev_fini(struct drm_device * dev)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='590' ll='609' type='void drm_dev_fini(struct drm_device * dev)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='610' type='void drm_dev_fini(struct drm_device * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='610' c='drm_dev_fini'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='610' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='610' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='661' u='c' c='drm_dev_release'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='578'>/**
 * drm_dev_fini - Finalize a dead DRM device
 * @dev: DRM device
 *
 * Finalize a dead DRM device. This is the converse to drm_dev_init() and
 * frees up all data allocated by it. All driver private data should be
 * finalized first. Note that this function does not free the @dev, that is
 * left to the caller.
 *
 * The ref-count of @dev must be zero, and drm_dev_fini() should only be called
 * from a &amp;drm_driver.release callback.
 */</doc>
