<dec f='linux-4.14.y/include/linux/mailbox_client.h' l='45' type='struct mbox_chan * mbox_request_channel(struct mbox_client * cl, int index)'/>
<def f='linux-4.14.y/drivers/mailbox/mailbox.c' l='303' ll='370' type='struct mbox_chan * mbox_request_channel(struct mbox_client * cl, int index)'/>
<dec f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' type='struct mbox_chan * mbox_request_channel(struct mbox_client * , int )'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' c='mbox_request_channel'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='398' u='c' c='mbox_request_channel_byname'/>
<doc f='linux-4.14.y/drivers/mailbox/mailbox.c' l='286'>/**
 * mbox_request_channel - Request a mailbox channel.
 * @cl: Identity of the client requesting the channel.
 * @index: Index of mailbox specifier in &apos;mboxes&apos; property.
 *
 * The Client specifies its requirements and capabilities while asking for
 * a mailbox channel. It can&apos;t be called from atomic context.
 * The channel is exclusively allocated and can&apos;t be used by another
 * client before the owner calls mbox_free_channel.
 * After assignment, any packet received on this channel will be
 * handed over to the client via the &apos;rx_callback&apos;.
 * The framework holds reference to the client, so the mbox_client
 * structure shouldn&apos;t be modified until the mbox_free_channel returns.
 *
 * Return: Pointer to the channel assigned to the client if successful.
 *		ERR_PTR for request failure.
 */</doc>
<dec f='linux-4.14.y/include/linux/mailbox_client.h' l='45' type='struct mbox_chan * mbox_request_channel(struct mbox_client * cl, int index)'/>
<def f='linux-4.14.y/drivers/mailbox/mailbox.c' l='303' ll='370' type='struct mbox_chan * mbox_request_channel(struct mbox_client * cl, int index)'/>
<dec f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' type='struct mbox_chan * mbox_request_channel(struct mbox_client * , int )'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' c='mbox_request_channel'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='371' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='398' u='c' c='mbox_request_channel_byname'/>
<doc f='linux-4.14.y/drivers/mailbox/mailbox.c' l='286'>/**
 * mbox_request_channel - Request a mailbox channel.
 * @cl: Identity of the client requesting the channel.
 * @index: Index of mailbox specifier in &apos;mboxes&apos; property.
 *
 * The Client specifies its requirements and capabilities while asking for
 * a mailbox channel. It can&apos;t be called from atomic context.
 * The channel is exclusively allocated and can&apos;t be used by another
 * client before the owner calls mbox_free_channel.
 * After assignment, any packet received on this channel will be
 * handed over to the client via the &apos;rx_callback&apos;.
 * The framework holds reference to the client, so the mbox_client
 * structure shouldn&apos;t be modified until the mbox_free_channel returns.
 *
 * Return: Pointer to the channel assigned to the client if successful.
 *		ERR_PTR for request failure.
 */</doc>
