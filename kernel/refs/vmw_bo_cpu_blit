<dec f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='1220' type='int vmw_bo_cpu_blit(struct ttm_buffer_object * dst, u32 dst_offset, u32 dst_stride, struct ttm_buffer_object * src, u32 src_offset, u32 src_stride, u32 w, u32 h, struct vmw_diff_cpy * diff)'/>
<def f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_blit.c' l='444' ll='506' type='int vmw_bo_cpu_blit(struct ttm_buffer_object * dst, u32 dst_offset, u32 dst_stride, struct ttm_buffer_object * src, u32 src_offset, u32 src_stride, u32 w, u32 h, struct vmw_diff_cpy * diff)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_blit.c' l='421'>/**
 * ttm_bo_cpu_blit - in-kernel cpu blit.
 *
 * @dst: Destination buffer object.
 * @dst_offset: Destination offset of blit start in bytes.
 * @dst_stride: Destination stride in bytes.
 * @src: Source buffer object.
 * @src_offset: Source offset of blit start in bytes.
 * @src_stride: Source stride in bytes.
 * @w: Width of blit.
 * @h: Height of blit.
 * return: Zero on success. Negative error value on failure. Will print out
 * kernel warnings on caller bugs.
 *
 * Performs a CPU blit from one buffer object to another avoiding a full
 * bo vmap which may exhaust- or fragment vmalloc space.
 * On supported architectures (x86), we&apos;re using kmap_atomic which avoids
 * cross-processor TLB- and cache flushes and may, on non-HIGHMEM systems
 * reference already set-up mappings.
 *
 * Neither of the buffer objects may be placed in PCI memory
 * (Fixed memory in TTM terminology) when using this function.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='670' u='c' c='vmw_stdu_dmabuf_cpu_commit'/>
