<dec f='linux-4.18.y/drivers/net/bnxt/bnxt_ring.h' l='68' type='int bnxt_alloc_rings(struct bnxt * bp, uint16_t qidx, struct bnxt_tx_queue * txq, struct bnxt_rx_queue * rxq, struct bnxt_cp_ring_info * cp_ring_info, const char * suffix)'/>
<def f='linux-4.18.y/drivers/net/bnxt/bnxt_ring.c' l='66' ll='259' type='int bnxt_alloc_rings(struct bnxt * bp, uint16_t qidx, struct bnxt_tx_queue * txq, struct bnxt_rx_queue * rxq, struct bnxt_cp_ring_info * cp_ring_info, const char * suffix)'/>
<doc f='linux-4.18.y/drivers/net/bnxt/bnxt_ring.c' l='52'>/*
 * Allocates a completion ring with vmem and stats optionally also allocating
 * a TX and/or RX ring.  Passing NULL as tx_ring_info and/or rx_ring_info
 * to not allocate them.
 *
 * Order in the allocation is:
 * stats - Always non-zero length
 * cp vmem - Always zero-length, supported for the bnxt_ring abstraction
 * tx vmem - Only non-zero length if tx_ring_info is not NULL
 * rx vmem - Only non-zero length if rx_ring_info is not NULL
 * cp bd ring - Always non-zero length
 * tx bd ring - Only non-zero length if tx_ring_info is not NULL
 * rx bd ring - Only non-zero length if rx_ring_info is not NULL
 */</doc>
<use f='linux-4.18.y/drivers/net/bnxt/bnxt_rxq.c' l='341' u='c' c='bnxt_rx_queue_setup_op'/>
<use f='linux-4.18.y/drivers/net/bnxt/bnxt_txq.c' l='125' u='c' c='bnxt_tx_queue_setup_op'/>
