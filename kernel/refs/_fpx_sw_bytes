<def f='linux-4.14.y/arch/x86/include/uapi/asm/sigcontext.h' l='40' ll='70'/>
<size>48</size>
<doc f='linux-4.14.y/arch/x86/include/uapi/asm/sigcontext.h' l='25'>/*
 * Bytes 464..511 in the current 512-byte layout of the FXSAVE/FXRSTOR frame
 * are reserved for SW usage. On CPUs supporting XSAVE/XRSTOR, these bytes are
 * used to extend the fpstate pointer in the sigcontext, which now includes the
 * extended state information along with fpstate information.
 *
 * If sw_reserved.magic1 == FP_XSTATE_MAGIC1 then there&apos;s a
 * sw_reserved.extended_size bytes large extended context area present. (The
 * last 32-bit word of this extended area (at the
 * fpstate+extended_size-FP_XSTATE_MAGIC2_SIZE address) is set to
 * FP_XSTATE_MAGIC2 so that you can sanity check your size calculations.)
 *
 * This extended area typically grows with newer CPUs that have larger and
 * larger XSAVE areas.
 */</doc>
<mbr r='_fpx_sw_bytes::magic1' o='0' t='__u32'/>
<mbr r='_fpx_sw_bytes::extended_size' o='32' t='__u32'/>
<mbr r='_fpx_sw_bytes::xfeatures' o='64' t='__u64'/>
<mbr r='_fpx_sw_bytes::xstate_size' o='128' t='__u32'/>
<mbr r='_fpx_sw_bytes::padding' o='160' t='__u32 [7]'/>
<def f='include/bits/sigcontext.h' l='29' ll='36'/>
<size>48</size>
<mbr r='_fpx_sw_bytes::magic1' o='0' t='__uint32_t'/>
<mbr r='_fpx_sw_bytes::extended_size' o='32' t='__uint32_t'/>
<mbr r='_fpx_sw_bytes::xstate_bv' o='64' t='__uint64_t'/>
<mbr r='_fpx_sw_bytes::xstate_size' o='128' t='__uint32_t'/>
<mbr r='_fpx_sw_bytes::padding' o='160' t='__uint32_t [7]'/>
<def f='linux-4.14.y/arch/x86/include/uapi/asm/sigcontext.h' l='40' ll='70'/>
<size>48</size>
<doc f='linux-4.14.y/arch/x86/include/uapi/asm/sigcontext.h' l='25'>/*
 * Bytes 464..511 in the current 512-byte layout of the FXSAVE/FXRSTOR frame
 * are reserved for SW usage. On CPUs supporting XSAVE/XRSTOR, these bytes are
 * used to extend the fpstate pointer in the sigcontext, which now includes the
 * extended state information along with fpstate information.
 *
 * If sw_reserved.magic1 == FP_XSTATE_MAGIC1 then there&apos;s a
 * sw_reserved.extended_size bytes large extended context area present. (The
 * last 32-bit word of this extended area (at the
 * fpstate+extended_size-FP_XSTATE_MAGIC2_SIZE address) is set to
 * FP_XSTATE_MAGIC2 so that you can sanity check your size calculations.)
 *
 * This extended area typically grows with newer CPUs that have larger and
 * larger XSAVE areas.
 */</doc>
<mbr r='_fpx_sw_bytes::magic1' o='0' t='__u32'/>
<mbr r='_fpx_sw_bytes::extended_size' o='32' t='__u32'/>
<mbr r='_fpx_sw_bytes::xfeatures' o='64' t='__u64'/>
<mbr r='_fpx_sw_bytes::xstate_size' o='128' t='__u32'/>
<mbr r='_fpx_sw_bytes::padding' o='160' t='__u32 [7]'/>
