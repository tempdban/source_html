<dec f='linux-4.14.y/include/linux/klist.h' l='67' type='struct klist_node * klist_next(struct klist_iter * i)'/>
<use f='linux-4.14.y/drivers/base/attribute_container.c' l='185' u='c' c='attribute_container_remove_device'/>
<use f='linux-4.14.y/drivers/base/attribute_container.c' l='185' u='c' c='attribute_container_device_trigger'/>
<use f='linux-4.14.y/drivers/base/attribute_container.c' l='185' u='c' c='attribute_container_find_class_device'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='270' u='c' c='next_device'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='421' u='c' c='next_driver'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='1061' u='c' c='subsys_dev_iter_next'/>
<use f='linux-4.14.y/drivers/base/class.c' l='306' u='c' c='class_dev_iter_next'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2055' u='c' c='next_device'/>
<use f='linux-4.14.y/drivers/base/driver.c' l='23' u='c' c='next_device'/>
<def f='linux-4.14.y/lib/klist.c' l='375' ll='405' type='struct klist_node * klist_next(struct klist_iter * i)'/>
<dec f='linux-4.14.y/lib/klist.c' l='406' type='struct klist_node * klist_next(struct klist_iter * )'/>
<use f='linux-4.14.y/lib/klist.c' l='406' c='klist_next'/>
<use f='linux-4.14.y/lib/klist.c' l='406' u='a'/>
<use f='linux-4.14.y/lib/klist.c' l='406' u='a'/>
<doc f='linux-4.14.y/lib/klist.c' l='367'>/**
 * klist_next - Ante up next node in list.
 * @i: Iterator structure.
 *
 * First grab list lock. Decrement the reference count of the previous
 * node, if there was one. Grab the next node, increment its reference
 * count, drop the lock, and return that next node.
 */</doc>
