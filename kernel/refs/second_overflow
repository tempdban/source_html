<dec f='linux-4.14.y/kernel/time/ntp_internal.h' l='10' type='int second_overflow(time64_t secs)'/>
<def f='linux-4.14.y/kernel/time/ntp.c' l='399' ll='494' type='int second_overflow(time64_t secs)'/>
<doc f='linux-4.14.y/kernel/time/ntp.c' l='389'>/*
 * this routine handles the overflow of the microsecond field
 *
 * The tricky bits of code to handle the accurate clock support
 * were provided by Dave Mills (Mills@UDEL.EDU) of NTP fame.
 * They were originally developed for SUN and DEC kernels.
 * All the kudos should go to Dave for this stuff.
 *
 * Also handles leap second processing, and returns leap offset
 */</doc>
<use f='linux-4.14.y/kernel/time/timekeeping.c' l='1974' u='c' c='accumulate_nsecs_to_secs'/>
<dec f='linux-4.14.y/kernel/time/ntp_internal.h' l='10' type='int second_overflow(time64_t secs)'/>
<def f='linux-4.14.y/kernel/time/ntp.c' l='399' ll='494' type='int second_overflow(time64_t secs)'/>
<doc f='linux-4.14.y/kernel/time/ntp.c' l='389'>/*
 * this routine handles the overflow of the microsecond field
 *
 * The tricky bits of code to handle the accurate clock support
 * were provided by Dave Mills (Mills@UDEL.EDU) of NTP fame.
 * They were originally developed for SUN and DEC kernels.
 * All the kudos should go to Dave for this stuff.
 *
 * Also handles leap second processing, and returns leap offset
 */</doc>
<use f='linux-4.14.y/kernel/time/timekeeping.c' l='1974' u='c' c='accumulate_nsecs_to_secs'/>
