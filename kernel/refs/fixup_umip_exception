<dec f='linux-4.18.y/arch/x86/include/asm/umip.h' l='8' type='bool fixup_umip_exception(struct pt_regs * regs)'/>
<use f='linux-4.18.y/arch/x86/kernel/traps.c' l='542' u='c' c='do_general_protection'/>
<def f='linux-4.18.y/arch/x86/kernel/umip.c' l='314' ll='429' type='bool fixup_umip_exception(struct pt_regs * regs)'/>
<doc f='linux-4.18.y/arch/x86/kernel/umip.c' l='295'>/**
 * fixup_umip_exception() - Fixup a general protection fault caused by UMIP
 * @regs:	Registers as saved when entering the #GP handler
 *
 * The instructions sgdt, sidt, str, smsw, sldt cause a general protection
 * fault if executed with CPL &gt; 0 (i.e., from user space). If the offending
 * user-space process is not in long mode, this function fixes the exception
 * up and provides dummy results for sgdt, sidt and smsw; str and sldt are not
 * fixed up. Also long mode user-space processes are not fixed up.
 *
 * If operands are memory addresses, results are copied to user-space memory as
 * indicated by the instruction pointed by eIP using the registers indicated in
 * the instruction operands. If operands are registers, results are copied into
 * the context that was saved when entering kernel mode.
 *
 * Returns:
 *
 * True if emulation was successful; false if not.
 */</doc>
