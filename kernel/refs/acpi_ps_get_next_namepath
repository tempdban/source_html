<dec f='linux-4.18.y/drivers/acpi/acpica/acparser.h' l='61' type='acpi_status acpi_ps_get_next_namepath(struct acpi_walk_state * walk_state, struct acpi_parse_state * parser_state, union acpi_parse_object * arg, u8 possible_method_call)'/>
<def f='linux-4.18.y/drivers/acpi/acpica/psargs.c' l='196' ll='345' type='acpi_status acpi_ps_get_next_namepath(struct acpi_walk_state * walk_state, struct acpi_parse_state * parser_state, union acpi_parse_object * arg, u8 possible_method_call)'/>
<use f='linux-4.18.y/drivers/acpi/acpica/psargs.c' l='820' u='c' c='acpi_ps_get_next_arg'/>
<use f='linux-4.18.y/drivers/acpi/acpica/psargs.c' l='854' u='c' c='acpi_ps_get_next_arg'/>
<doc f='linux-4.18.y/drivers/acpi/acpica/psargs.c' l='175'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ps_get_next_namepath
 *
 * PARAMETERS:  parser_state        - Current parser state object
 *              arg                 - Where the namepath will be stored
 *              arg_count           - If the namepath points to a control method
 *                                    the method&apos;s argument is returned here.
 *              possible_method_call - Whether the namepath can possibly be the
 *                                    start of a method call
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Get next name (if method call, return # of required args).
 *              Names are looked up in the internal namespace to determine
 *              if the name represents a control method. If a method
 *              is found, the number of arguments to the method is returned.
 *              This information is critical for parsing to continue correctly.
 *
 ******************************************************************************/</doc>
<use f='linux-4.18.y/drivers/acpi/acpica/psloop.c' l='84' u='c' c='acpi_ps_get_arguments'/>
