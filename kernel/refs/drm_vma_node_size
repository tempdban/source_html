<def f='linux-4.14.y/include/drm/drm_vma_manager.h' l='172' ll='175' type='unsigned long drm_vma_node_size(struct drm_vma_offset_node * node)'/>
<use f='linux-4.14.y/include/drm/drm_vma_manager.h' l='212' u='c' c='drm_vma_node_unmap'/>
<doc f='linux-4.14.y/include/drm/drm_vma_manager.h' l='160'>/**
 * drm_vma_node_size() - Return size (page-based)
 * @node: Node to inspect
 *
 * Return the size as number of pages for the given node. This is the same size
 * that was passed to drm_vma_offset_add(). If no offset is allocated for the
 * node, this is 0.
 *
 * RETURNS:
 * Size of @node as number of pages. 0 if the node does not have an offset
 * allocated.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem.c' l='1038' u='c' c='drm_gem_mmap'/>
<def f='linux-4.14.y/include/drm/drm_vma_manager.h' l='172' ll='175' type='unsigned long drm_vma_node_size(struct drm_vma_offset_node * node)'/>
<use f='linux-4.14.y/include/drm/drm_vma_manager.h' l='212' u='c' c='drm_vma_node_unmap'/>
<doc f='linux-4.14.y/include/drm/drm_vma_manager.h' l='160'>/**
 * drm_vma_node_size() - Return size (page-based)
 * @node: Node to inspect
 *
 * Return the size as number of pages for the given node. This is the same size
 * that was passed to drm_vma_offset_add(). If no offset is allocated for the
 * node, this is 0.
 *
 * RETURNS:
 * Size of @node as number of pages. 0 if the node does not have an offset
 * allocated.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_gem.c' l='1038' u='c' c='drm_gem_mmap'/>
