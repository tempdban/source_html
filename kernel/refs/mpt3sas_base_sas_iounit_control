<dec f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_base.h' l='1466' type='int mpt3sas_base_sas_iounit_control(struct MPT3SAS_ADAPTER * ioc, Mpi2SasIoUnitControlReply_t * mpi_reply, Mpi2SasIoUnitControlRequest_t * mpi_request)'/>
<def f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_base.c' l='5352' ll='5442' type='int mpt3sas_base_sas_iounit_control(struct MPT3SAS_ADAPTER * ioc, Mpi2SasIoUnitControlReply_t * mpi_reply, Mpi2SasIoUnitControlRequest_t * mpi_request)'/>
<doc f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_base.c' l='5338'>/**
 * mpt3sas_base_sas_iounit_control - send sas iounit control to FW
 * @ioc: per adapter object
 * @mpi_reply: the reply payload from FW
 * @mpi_request: the request payload sent to FW
 *
 * The SAS IO Unit Control Request message allows the host to perform low-level
 * operations, such as resets on the PHYs of the IO Unit, also allows the host
 * to obtain the IOC assigned device handles for a device if it has other
 * identifying information about the device, in addition allows the host to
 * remove IOC resources associated with the device.
 *
 * Returns 0 for success, non-zero for failure.
 */</doc>
<use f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_transport.c' l='1605' u='c' c='_transport_phy_reset'/>
