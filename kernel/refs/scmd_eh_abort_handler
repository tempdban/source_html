<dec f='linux-4.18.y/drivers/scsi/scsi_priv.h' l='73' type='void scmd_eh_abort_handler(struct work_struct * work)'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_priv.h' l='72'>/* scsi_error.c */</doc>
<def f='linux-4.18.y/drivers/scsi/scsi_error.c' l='128' ll='176' type='void scmd_eh_abort_handler(struct work_struct * work)'/>
<doc f='linux-4.18.y/drivers/scsi/scsi_error.c' l='118'>/**
 * scmd_eh_abort_handler - Handle command aborts
 * @work:	command to be aborted.
 *
 * Note: this function must be called only for a command that has timed out.
 * Because the block layer marks a request as complete before it calls
 * scsi_times_out(), a .scsi_done() call from the LLD for a command that has
 * timed out do not have any effect. Hence it is safe to call
 * scsi_finish_command() from this function.
 */</doc>
<use f='linux-4.18.y/drivers/scsi/scsi_lib.c' l='1250' u='r' c='scsi_init_command'/>
