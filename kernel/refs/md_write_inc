<dec f='linux-4.18.y/drivers/md/md.h' l='681' type='void md_write_inc(struct mddev * mddev, struct bio * bi)'/>
<def f='linux-4.18.y/drivers/md/md.c' l='8161' ll='8167' type='void md_write_inc(struct mddev * mddev, struct bio * bi)'/>
<dec f='linux-4.18.y/drivers/md/md.c' l='8168' type='void md_write_inc(struct mddev * , struct bio * )'/>
<use f='linux-4.18.y/drivers/md/md.c' l='8168' c='md_write_inc'/>
<use f='linux-4.18.y/drivers/md/md.c' l='8168' u='a'/>
<use f='linux-4.18.y/drivers/md/md.c' l='8168' u='a'/>
<doc f='linux-4.18.y/drivers/md/md.c' l='8153'>/* md_write_inc can only be called when md_write_start() has
 * already been called at least once of the current request.
 * It increments the counter and is useful when a single request
 * is split into several parts.  Each part causes an increment and
 * so needs a matching md_write_end().
 * Unlike md_write_start(), it is safe to call md_write_inc() inside
 * a spinlocked region.
 */</doc>
<use f='linux-4.18.y/drivers/md/raid5.c' l='3268' u='c' c='add_stripe_bio'/>
<use f='linux-4.18.y/drivers/md/raid5.c' l='5540' u='c' c='make_discard_request'/>
