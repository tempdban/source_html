<def f='linux-4.18.y/include/drm/drm_fourcc.h' l='43' ll='51'/>
<dec f='linux-4.18.y/include/drm/drm_fourcc.h' l='62' type='const struct drm_format_info * drm_format_info(u32 format)'/>
<size>12</size>
<doc f='linux-4.18.y/include/drm/drm_fourcc.h' l='31'>/**
 * struct drm_format_info - information about a DRM format
 * @format: 4CC format identifier (DRM_FORMAT_*)
 * @depth: Color depth (number of bits per pixel excluding padding bits),
 *	valid for a subset of RGB formats only. This is a legacy field, do not
 *	use in new code and set to 0 for new formats.
 * @num_planes: Number of color planes (1 to 3)
 * @cpp: Number of bytes per pixel (per plane)
 * @hsub: Horizontal chroma subsampling factor
 * @vsub: Vertical chroma subsampling factor
 * @has_alpha: Does the format embeds an alpha component?
 */</doc>
<mbr r='drm_format_info::format' o='0' t='u32'/>
<mbr r='drm_format_info::depth' o='32' t='u8'/>
<mbr r='drm_format_info::num_planes' o='40' t='u8'/>
<mbr r='drm_format_info::cpp' o='48' t='u8 [3]'/>
<mbr r='drm_format_info::hsub' o='72' t='u8'/>
<mbr r='drm_format_info::vsub' o='80' t='u8'/>
<mbr r='drm_format_info::has_alpha' o='88' t='bool'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='199' ll='206' type='const struct drm_format_info * drm_format_info(u32 format)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='207' type='const struct drm_format_info * drm_format_info(u32 )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='207' c='drm_format_info'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='207' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='207' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='228' u='c' c='drm_get_format_info'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='245' u='c' c='drm_format_num_planes'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='262' u='c' c='drm_format_plane_cpp'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='282' u='c' c='drm_format_horz_chroma_subsampling'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='299' u='c' c='drm_format_vert_chroma_subsampling'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='317' u='c' c='drm_format_plane_width'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='341' u='c' c='drm_format_plane_height'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_fourcc.c' l='188'>/**
 * drm_format_info - query information for a given format
 * @format: pixel format (DRM_FORMAT_*)
 *
 * The caller should only pass a supported pixel format to this function.
 * Unsupported pixel formats will generate a warning in the kernel log.
 *
 * Returns:
 * The instance of struct drm_format_info that describes the pixel format, or
 * NULL if the format is unsupported.
 */</doc>
