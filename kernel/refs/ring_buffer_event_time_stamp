<dec f='linux-4.18.y/include/linux/ring_buffer.h' l='64' type='u64 ring_buffer_event_time_stamp(struct ring_buffer_event * event)'/>
<def f='linux-4.18.y/kernel/trace/ring_buffer.c' l='294' ll='303' type='u64 ring_buffer_event_time_stamp(struct ring_buffer_event * event)'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='2567' u='c' c='rb_update_write_stamp'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='2570' u='c' c='rb_update_write_stamp'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='3581' u='c' c='rb_update_read_stamp'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='3586' u='c' c='rb_update_read_stamp'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='3611' u='c' c='rb_update_iter_read_stamp'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='3616' u='c' c='rb_update_iter_read_stamp'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='3880' u='c' c='rb_buffer_peek'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='3970' u='c' c='rb_iter_peek'/>
<doc f='linux-4.18.y/kernel/trace/ring_buffer.c' l='284'>/**
 * ring_buffer_event_time_stamp - return the event&apos;s extended timestamp
 * @event: the event to get the timestamp of
 *
 * Returns the extended timestamp associated with a data event.
 * An extended time_stamp is a 64-bit timestamp represented
 * internally in a special way that makes the best use of space
 * contained within a ring buffer event.  This function decodes
 * it and maps it to a straight u64 value.
 */</doc>
