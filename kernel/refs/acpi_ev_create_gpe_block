<dec f='linux-4.14.y/drivers/acpi/acpica/acevents.h' l='110' type='acpi_status acpi_ev_create_gpe_block(struct acpi_namespace_node * gpe_device, u64 address, u8 space_id, u32 register_count, u16 gpe_block_base_number, u32 interrupt_number, struct acpi_gpe_block_info ** return_gpe_block)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/acevents.h' l='106'>/*
 * evgpeblk - Upper-level GPE block support
 */</doc>
<def f='linux-4.14.y/drivers/acpi/acpica/evgpeblk.c' l='332' ll='421' type='acpi_status acpi_ev_create_gpe_block(struct acpi_namespace_node * gpe_device, u64 address, u8 space_id, u32 register_count, u16 gpe_block_base_number, u32 interrupt_number, struct acpi_gpe_block_info ** return_gpe_block)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/evgpeblk.c' l='313'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ev_create_gpe_block
 *
 * PARAMETERS:  gpe_device          - Handle to the parent GPE block
 *              gpe_block_address   - Address and space_ID
 *              register_count      - Number of GPE register pairs in the block
 *              gpe_block_base_number - Starting GPE number for the block
 *              interrupt_number    - H/W interrupt for the block
 *              return_gpe_block    - Where the new block descriptor is returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Create and Install a block of GPE registers. All GPEs within
 *              the block are disabled at exit.
 *              Note: Assumes namespace is locked.
 *
 ******************************************************************************/</doc>
<use f='linux-4.14.y/drivers/acpi/acpica/evgpeinit.c' l='133' u='c' c='acpi_ev_gpe_initialize'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evgpeinit.c' l='173' u='c' c='acpi_ev_gpe_initialize'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evxfgpe.c' l='849' u='c' c='acpi_install_gpe_block'/>
