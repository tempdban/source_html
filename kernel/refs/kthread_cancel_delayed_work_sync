<dec f='linux-4.14.y/include/linux/kthread.h' l='198' type='bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work * work)'/>
<use f='linux-4.14.y/drivers/ptp/ptp_clock.c' l='309' u='c' c='ptp_clock_unregister'/>
<def f='linux-4.14.y/kernel/kthread.c' l='1111' ll='1114' type='bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work * dwork)'/>
<dec f='linux-4.14.y/kernel/kthread.c' l='1115' type='bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work * )'/>
<use f='linux-4.14.y/kernel/kthread.c' l='1115' c='kthread_cancel_delayed_work_sync'/>
<use f='linux-4.14.y/kernel/kthread.c' l='1115' u='a'/>
<use f='linux-4.14.y/kernel/kthread.c' l='1115' u='a'/>
<doc f='linux-4.14.y/kernel/kthread.c' l='1102'>/**
 * kthread_cancel_delayed_work_sync - cancel a kthread delayed work and
 *	wait for it to finish.
 * @dwork: the kthread delayed work to cancel
 *
 * This is kthread_cancel_work_sync() for delayed works.
 *
 * Return: %true if @dwork was pending, %false otherwise.
 */</doc>
<dec f='linux-4.14.y/include/linux/kthread.h' l='198' type='bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work * work)'/>
<use f='linux-4.14.y/drivers/ptp/ptp_clock.c' l='309' u='c' c='ptp_clock_unregister'/>
<def f='linux-4.14.y/kernel/kthread.c' l='1111' ll='1114' type='bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work * dwork)'/>
<dec f='linux-4.14.y/kernel/kthread.c' l='1115' type='bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work * )'/>
<use f='linux-4.14.y/kernel/kthread.c' l='1115' c='kthread_cancel_delayed_work_sync'/>
<use f='linux-4.14.y/kernel/kthread.c' l='1115' u='a'/>
<use f='linux-4.14.y/kernel/kthread.c' l='1115' u='a'/>
<doc f='linux-4.14.y/kernel/kthread.c' l='1102'>/**
 * kthread_cancel_delayed_work_sync - cancel a kthread delayed work and
 *	wait for it to finish.
 * @dwork: the kthread delayed work to cancel
 *
 * This is kthread_cancel_work_sync() for delayed works.
 *
 * Return: %true if @dwork was pending, %false otherwise.
 */</doc>
