<def f='linux-4.14.y/include/drm/drm_atomic.h' l='223' ll='246'/>
<size>112</size>
<doc f='linux-4.14.y/include/drm/drm_atomic.h' l='208'>/**
 * struct drm_atomic_state - the global state object for atomic updates
 * @ref: count of all references to this state (will not be freed until zero)
 * @dev: parent DRM device
 * @allow_modeset: allow full modeset
 * @legacy_cursor_update: hint to enforce legacy cursor IOCTL semantics
 * @async_update: hint for asynchronous plane update
 * @planes: pointer to array of structures with per-plane data
 * @crtcs: pointer to array of CRTC pointers
 * @num_connector: size of the @connectors and @connector_states arrays
 * @connectors: pointer to array of structures with per-connector data
 * @num_private_objs: size of the @private_objs array
 * @private_objs: pointer to array of private object pointers
 * @acquire_ctx: acquire context for this atomic modeset state update
 */</doc>
<mbr r='drm_atomic_state::ref' o='0' t='struct kref'/>
<mbr r='drm_atomic_state::dev' o='64' t='struct drm_device *'/>
<mbr r='drm_atomic_state::allow_modeset' o='128' t='bool'/>
<mbr r='drm_atomic_state::legacy_cursor_update' o='129' t='bool'/>
<mbr r='drm_atomic_state::async_update' o='130' t='bool'/>
<mbr r='drm_atomic_state::planes' o='192' t='struct __drm_planes_state *'/>
<mbr r='drm_atomic_state::crtcs' o='256' t='struct __drm_crtcs_state *'/>
<mbr r='drm_atomic_state::num_connector' o='320' t='int'/>
<mbr r='drm_atomic_state::connectors' o='384' t='struct __drm_connnectors_state *'/>
<mbr r='drm_atomic_state::num_private_objs' o='448' t='int'/>
<mbr r='drm_atomic_state::private_objs' o='512' t='struct __drm_private_objs_state *'/>
<mbr r='drm_atomic_state::acquire_ctx' o='576' t='struct drm_modeset_acquire_ctx *'/>
<mbr r='drm_atomic_state::commit_work' o='640' t='struct work_struct'/>
<def f='linux-4.14.y/include/drm/drm_atomic.h' l='223' ll='246'/>
<size>112</size>
<doc f='linux-4.14.y/include/drm/drm_atomic.h' l='208'>/**
 * struct drm_atomic_state - the global state object for atomic updates
 * @ref: count of all references to this state (will not be freed until zero)
 * @dev: parent DRM device
 * @allow_modeset: allow full modeset
 * @legacy_cursor_update: hint to enforce legacy cursor IOCTL semantics
 * @async_update: hint for asynchronous plane update
 * @planes: pointer to array of structures with per-plane data
 * @crtcs: pointer to array of CRTC pointers
 * @num_connector: size of the @connectors and @connector_states arrays
 * @connectors: pointer to array of structures with per-connector data
 * @num_private_objs: size of the @private_objs array
 * @private_objs: pointer to array of private object pointers
 * @acquire_ctx: acquire context for this atomic modeset state update
 */</doc>
<mbr r='drm_atomic_state::ref' o='0' t='struct kref'/>
<mbr r='drm_atomic_state::dev' o='64' t='struct drm_device *'/>
<mbr r='drm_atomic_state::allow_modeset' o='128' t='bool'/>
<mbr r='drm_atomic_state::legacy_cursor_update' o='129' t='bool'/>
<mbr r='drm_atomic_state::async_update' o='130' t='bool'/>
<mbr r='drm_atomic_state::planes' o='192' t='struct __drm_planes_state *'/>
<mbr r='drm_atomic_state::crtcs' o='256' t='struct __drm_crtcs_state *'/>
<mbr r='drm_atomic_state::num_connector' o='320' t='int'/>
<mbr r='drm_atomic_state::connectors' o='384' t='struct __drm_connnectors_state *'/>
<mbr r='drm_atomic_state::num_private_objs' o='448' t='int'/>
<mbr r='drm_atomic_state::private_objs' o='512' t='struct __drm_private_objs_state *'/>
<mbr r='drm_atomic_state::acquire_ctx' o='576' t='struct drm_modeset_acquire_ctx *'/>
<mbr r='drm_atomic_state::commit_work' o='640' t='struct work_struct'/>
