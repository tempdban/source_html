<dec f='linux-4.18.y/fs/ext4/ext4_jbd2.h' l='213' type='int ext4_mark_iloc_dirty(handle_t * handle, struct inode * inode, struct ext4_iloc * iloc)'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='306' u='c' c='ext4_create_inline_data'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='371' u='c' c='ext4_update_inline_data'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='452' u='c' c='ext4_destroy_inline_data_nolock'/>
<def f='linux-4.18.y/fs/ext4/inode.c' l='5761' ll='5779' type='int ext4_mark_iloc_dirty(handle_t * handle, struct inode * inode, struct ext4_iloc * iloc)'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='5916' u='c' c='ext4_expand_extra_isize'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='5955' u='c' c='ext4_mark_inode_dirty'/>
<doc f='linux-4.18.y/fs/ext4/inode.c' l='5757'>/*
 * The caller must have previously called ext4_reserve_inode_write().
 * Give this, we know that the caller already has write access to iloc-&gt;bh.
 */</doc>
<use f='linux-4.18.y/fs/ext4/ioctl.c' l='283' u='c' c='ext4_ioctl_setflags'/>
<use f='linux-4.18.y/fs/ext4/ioctl.c' l='712' u='c' c='ext4_ioctl'/>
<use f='linux-4.18.y/fs/ext4/namei.c' l='2801' u='c' c='ext4_orphan_add'/>
<use f='linux-4.18.y/fs/ext4/namei.c' l='2890' u='c' c='ext4_orphan_del'/>
<use f='linux-4.18.y/fs/ext4/namei.c' l='2896' u='c' c='ext4_orphan_del'/>
<use f='linux-4.18.y/fs/ext4/resize.c' l='871' u='c' c='add_new_gdb'/>
<use f='linux-4.18.y/fs/ext4/resize.c' l='1043' u='c' c='reserve_backup_gdb'/>
<use f='linux-4.18.y/fs/ext4/xattr.c' l='1082' u='c' c='ext4_xattr_inode_update_ref'/>
<use f='linux-4.18.y/fs/ext4/xattr.c' l='2427' u='c' c='ext4_xattr_set_handle'/>
