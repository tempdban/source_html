<dec f='linux-4.18.y/include/linux/skbuff.h' l='2478' type='void skb_trim(struct sk_buff * skb, unsigned int len)'/>
<use f='linux-4.18.y/include/net/netlink.h' l='550' u='c' c='nlmsg_trim'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000/e1000_main.c' l='4454' u='c' c='e1000_clean_rx_irq'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='662' u='c' c='e1000_alloc_rx_buffers'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e1000e/netdev.c' l='834' u='c' c='e1000_alloc_jumbo_rx_buffers'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_iscsi.c' l='2605' u='c' c='iscsi_if_get_stats'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_iscsi.c' l='3051' u='c' c='iscsi_get_chap'/>
<use f='linux-4.18.y/drivers/scsi/scsi_transport_iscsi.c' l='3458' u='c' c='iscsi_get_host_stats'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_eem.c' l='442' u='c' c='eem_unwrap'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_eem.c' l='503' u='c' c='eem_unwrap'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/rndis.c' l='1078' u='c' c='rndis_rm_hdr'/>
<def f='linux-4.18.y/net/core/skbuff.c' l='1746' ll='1750' type='void skb_trim(struct sk_buff * skb, unsigned int len)'/>
<dec f='linux-4.18.y/net/core/skbuff.c' l='1751' type='void skb_trim(struct sk_buff * , unsigned int )'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='1751' c='skb_trim'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='1751' u='a'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='1751' u='a'/>
<doc f='linux-4.18.y/net/core/skbuff.c' l='1737'>/**
 *	skb_trim - remove end from a buffer
 *	@skb: buffer to alter
 *	@len: new length
 *
 *	Cut the length of a buffer down by removing data from the tail. If
 *	the buffer is already under the length specified it is not modified.
 *	The skb must be linear.
 */</doc>
<use f='linux-4.18.y/net/ipv4/route.c' l='2877' u='c' c='inet_rtm_getroute'/>
<use f='linux-4.18.y/net/ipv4/tcp_output.c' l='3425' u='c' c='tcp_send_syn_data'/>
