<def f='linux-4.14.y/include/net/sock.h' l='868' ll='873' type='bool sk_rcvqueues_full(const struct sock * sk, unsigned int limit)'/>
<use f='linux-4.14.y/include/net/sock.h' l='879' u='c' c='sk_add_backlog'/>
<doc f='linux-4.14.y/include/net/sock.h' l='863'>/*
 * Take into account size of receive queue and backlog queue
 * Do not take into account this skb truesize,
 * to allow even a single big packet to come.
 */</doc>
<use f='linux-4.14.y/net/core/sock.c' l='497' u='c' c='__sk_receive_skb'/>
<def f='linux-4.14.y/include/net/sock.h' l='868' ll='873' type='bool sk_rcvqueues_full(const struct sock * sk, unsigned int limit)'/>
<use f='linux-4.14.y/include/net/sock.h' l='879' u='c' c='sk_add_backlog'/>
<doc f='linux-4.14.y/include/net/sock.h' l='863'>/*
 * Take into account size of receive queue and backlog queue
 * Do not take into account this skb truesize,
 * to allow even a single big packet to come.
 */</doc>
<use f='linux-4.14.y/net/core/sock.c' l='497' u='c' c='__sk_receive_skb'/>
