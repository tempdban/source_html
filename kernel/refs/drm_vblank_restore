<dec f='linux-4.18.y/include/drm/drm_vblank.h' l='199' type='void drm_vblank_restore(struct drm_device * dev, unsigned int pipe)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1262' ll='1295' type='void drm_vblank_restore(struct drm_device * dev, unsigned int pipe)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1296' type='void drm_vblank_restore(struct drm_device * , unsigned int )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1296' c='drm_vblank_restore'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1296' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1296' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1310' u='c' c='drm_crtc_vblank_restore'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='1249'>/**
 * drm_vblank_restore - estimate missed vblanks and update vblank count.
 * @dev: DRM device
 * @pipe: CRTC index
 *
 * Power manamement features can cause frame counter resets between vblank
 * disable and enable. Drivers can use this function in their
 * &amp;drm_crtc_funcs.enable_vblank implementation to estimate missed vblanks since
 * the last &amp;drm_crtc_funcs.disable_vblank using timestamps and update the
 * vblank counter.
 *
 * This function is the legacy version of drm_crtc_vblank_restore().
 */</doc>
