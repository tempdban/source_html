<dec f='linux-4.18.y/include/linux/serial_core.h' l='414' type='int uart_remove_one_port(struct uart_driver * reg, struct uart_port * port)'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='975' u='c' c='serial8250_register_8250_port'/>
<use f='linux-4.18.y/drivers/tty/serial/8250/8250_core.c' l='1086' u='c' c='serial8250_unregister_port'/>
<def f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='2814' ll='2883' type='int uart_remove_one_port(struct uart_driver * drv, struct uart_port * uport)'/>
<dec f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='3014' type='int uart_remove_one_port(struct uart_driver * , struct uart_port * )'/>
<use f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='3014' c='uart_remove_one_port'/>
<use f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='3014' u='a'/>
<use f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='3014' u='a'/>
<doc f='linux-4.18.y/drivers/tty/serial/serial_core.c' l='2805'>/**
 *	uart_remove_one_port - detach a driver defined port structure
 *	@drv: pointer to the uart low level driver structure for this port
 *	@uport: uart port structure for this port
 *
 *	This unhooks (and hangs up) the specified port structure from the
 *	core driver.  No further calls will be made to the low-level code
 *	for this port.
 */</doc>
