<dec f='linux-4.14.y/include/linux/property.h' l='54' type='bool fwnode_device_is_available(const struct fwnode_handle * fwnode)'/>
<def f='linux-4.14.y/drivers/base/property.c' l='1072' ll='1075' type='bool fwnode_device_is_available(const struct fwnode_handle * fwnode)'/>
<dec f='linux-4.14.y/drivers/base/property.c' l='1076' type='bool fwnode_device_is_available(const struct fwnode_handle * )'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1076' c='fwnode_device_is_available'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1076' u='a'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1076' u='a'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1314' u='c' c='fwnode_graph_get_remote_node'/>
<doc f='linux-4.14.y/drivers/base/property.c' l='1068'>/**
 * fwnode_device_is_available - check if a device is available for use
 * @fwnode: Pointer to the fwnode of the device.
 */</doc>
<dec f='linux-4.14.y/include/linux/property.h' l='54' type='bool fwnode_device_is_available(const struct fwnode_handle * fwnode)'/>
<def f='linux-4.14.y/drivers/base/property.c' l='1072' ll='1075' type='bool fwnode_device_is_available(const struct fwnode_handle * fwnode)'/>
<dec f='linux-4.14.y/drivers/base/property.c' l='1076' type='bool fwnode_device_is_available(const struct fwnode_handle * )'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1076' c='fwnode_device_is_available'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1076' u='a'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1076' u='a'/>
<use f='linux-4.14.y/drivers/base/property.c' l='1314' u='c' c='fwnode_graph_get_remote_node'/>
<doc f='linux-4.14.y/drivers/base/property.c' l='1068'>/**
 * fwnode_device_is_available - check if a device is available for use
 * @fwnode: Pointer to the fwnode of the device.
 */</doc>
