<dec f='linux-4.14.y/include/linux/kallsyms.h' l='40' type='int sprint_symbol_no_offset(char * buffer, unsigned long address)'/>
<use f='linux-4.14.y/init/main.c' l='765' u='c' c='initcall_blacklisted'/>
<def f='linux-4.14.y/kernel/kallsyms.c' l='437' ll='440' type='int sprint_symbol_no_offset(char * buffer, unsigned long address)'/>
<dec f='linux-4.14.y/kernel/kallsyms.c' l='441' type='int sprint_symbol_no_offset(char * , unsigned long )'/>
<use f='linux-4.14.y/kernel/kallsyms.c' l='441' c='sprint_symbol_no_offset'/>
<use f='linux-4.14.y/kernel/kallsyms.c' l='441' u='a'/>
<use f='linux-4.14.y/kernel/kallsyms.c' l='441' u='a'/>
<doc f='linux-4.14.y/kernel/kallsyms.c' l='426'>/**
 * sprint_symbol_no_offset - Look up a kernel symbol and return it in a text buffer
 * @buffer: buffer to be stored
 * @address: address to lookup
 *
 * This function looks up a kernel symbol with @address and stores its name
 * and module name to @buffer if possible. If no symbol was found, just saves
 * its @address as is.
 *
 * This function returns the number of bytes stored in @buffer.
 */</doc>
<use f='linux-4.14.y/lib/vsprintf.c' l='687' u='c' c='symbol_string'/>
