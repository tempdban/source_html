<def f='linux-4.14.y/include/crypto/rng.h' l='139' ll='144' type='int crypto_rng_generate(struct crypto_rng * tfm, const u8 * src, unsigned int slen, u8 * dst, unsigned int dlen)'/>
<use f='linux-4.14.y/include/crypto/rng.h' l='160' u='c' c='crypto_rng_get_bytes'/>
<doc f='linux-4.14.y/include/crypto/rng.h' l='125'>/**
 * crypto_rng_generate() - get random number
 * @tfm: cipher handle
 * @src: Input buffer holding additional data, may be NULL
 * @slen: Length of additional data
 * @dst: output buffer holding the random numbers
 * @dlen: length of the output buffer
 *
 * This function fills the caller-allocated buffer with random
 * numbers using the random number generator referenced by the
 * cipher handle.
 *
 * Return: 0 function was successful; &lt; 0 if an error occurred
 */</doc>
<use f='linux-4.14.y/include/crypto/drbg.h' l='211' u='c' c='crypto_drbg_get_bytes_addtl'/>
<use f='linux-4.14.y/include/crypto/drbg.h' l='239' u='c' c='crypto_drbg_get_bytes_addtl_test'/>
