<dec f='linux-4.18.y/include/linux/sysctl.h' l='195' type='struct ctl_table_header * register_sysctl_paths(const struct ctl_path * path, struct ctl_table * table)'/>
<def f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1564' ll='1569' type='struct ctl_table_header * register_sysctl_paths(const struct ctl_path * path, struct ctl_table * table)'/>
<dec f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1570' type='struct ctl_table_header * register_sysctl_paths(const struct ctl_path * , struct ctl_table * )'/>
<use f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1570' c='register_sysctl_paths'/>
<use f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1570' u='a'/>
<use f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1570' u='a'/>
<use f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1585' u='c' c='register_sysctl_table'/>
<doc f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1554'>/**
 * register_sysctl_table_path - register a sysctl table hierarchy
 * @path: The path to the directory the sysctl table is in.
 * @table: the top-level table structure
 *
 * Register a sysctl table hierarchy. @table should be a filled in ctl_table
 * array. A completely 0 filled entry terminates the table.
 *
 * See __register_sysctl_paths for more details.
 */</doc>
<use f='linux-4.18.y/kernel/seccomp.c' l='1333' u='c' c='seccomp_sysctl_init'/>
<use f='linux-4.18.y/security/apparmor/lsm.c' l='1531' u='c' c='apparmor_init_sysctl'/>
<use f='linux-4.18.y/security/yama/yama_lsm.c' l='473' u='c' c='yama_init_sysctl'/>
