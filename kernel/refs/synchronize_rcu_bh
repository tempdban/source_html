<dec f='linux-4.14.y/include/linux/rcutree.h' l='47' type='void synchronize_rcu_bh()'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<def f='linux-4.14.y/kernel/rcu/tree.c' l='3240' ll='3252' type='void synchronize_rcu_bh()'/>
<dec f='linux-4.14.y/kernel/rcu/tree.c' l='3253' type='void synchronize_rcu_bh()'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='3253' c='synchronize_rcu_bh'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='3253' u='a'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='3253' u='a'/>
<doc f='linux-4.14.y/kernel/rcu/tree.c' l='3228'>/**
 * synchronize_rcu_bh - wait until an rcu_bh grace period has elapsed.
 *
 * Control will return to the caller some time after a full rcu_bh grace
 * period has elapsed, in other words after all currently executing rcu_bh
 * read-side critical sections have completed.  RCU read-side critical
 * sections are delimited by rcu_read_lock_bh() and rcu_read_unlock_bh(),
 * and may be nested.
 *
 * See the description of synchronize_sched() for more detailed information
 * on memory ordering guarantees.
 */</doc>
<use f='linux-4.14.y/kernel/rcu/update.c' l='205' u='c' c='rcu_test_sync_prims'/>
<dec f='linux-4.14.y/include/linux/rcutree.h' l='47' type='void synchronize_rcu_bh()'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<use f='linux-4.14.y/kernel/rcu/sync.c' l='53' u='r'/>
<def f='linux-4.14.y/kernel/rcu/tree.c' l='3240' ll='3252' type='void synchronize_rcu_bh()'/>
<dec f='linux-4.14.y/kernel/rcu/tree.c' l='3253' type='void synchronize_rcu_bh()'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='3253' c='synchronize_rcu_bh'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='3253' u='a'/>
<use f='linux-4.14.y/kernel/rcu/tree.c' l='3253' u='a'/>
<doc f='linux-4.14.y/kernel/rcu/tree.c' l='3228'>/**
 * synchronize_rcu_bh - wait until an rcu_bh grace period has elapsed.
 *
 * Control will return to the caller some time after a full rcu_bh grace
 * period has elapsed, in other words after all currently executing rcu_bh
 * read-side critical sections have completed.  RCU read-side critical
 * sections are delimited by rcu_read_lock_bh() and rcu_read_unlock_bh(),
 * and may be nested.
 *
 * See the description of synchronize_sched() for more detailed information
 * on memory ordering guarantees.
 */</doc>
<use f='linux-4.14.y/kernel/rcu/update.c' l='205' u='c' c='rcu_test_sync_prims'/>
