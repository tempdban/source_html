<dec f='linux-4.18.y/include/drm/drm_scdc_helper.h' l='93' type='ssize_t drm_scdc_write(struct i2c_adapter * adapter, u8 offset, const void * buffer, size_t size)'/>
<use f='linux-4.18.y/include/drm/drm_scdc_helper.h' l='129' u='c' c='drm_scdc_writeb'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='93' ll='124' type='ssize_t drm_scdc_write(struct i2c_adapter * adapter, u8 offset, const void * buffer, size_t size)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='125' type='ssize_t drm_scdc_write(struct i2c_adapter * , u8 , const void * , size_t )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='125' c='drm_scdc_write'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='125' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='125' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='81'>/**
 * drm_scdc_write - write a block of data to SCDC
 * @adapter: I2C controller
 * @offset: start offset of block to write
 * @buffer: block of data to write
 * @size: size of the block to write
 *
 * Writes a block of data to SCDC, starting at a given offset.
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
