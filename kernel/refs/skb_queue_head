<dec f='linux-4.18.y/include/linux/skbuff.h' l='1809' type='void skb_queue_head(struct sk_buff_head * list, struct sk_buff * newsk)'/>
<doc f='linux-4.18.y/include/linux/skbuff.h' l='1799'>/**
 *	__skb_queue_head - queue a buffer at the list head
 *	@list: list to use
 *	@newsk: buffer to queue
 *
 *	Queue a buffer at the start of a list. This function takes no locks
 *	and you must therefore hold required locks before calling it.
 *
 *	A buffer cannot be placed on two lists at the same time.
 */</doc>
<use f='linux-4.18.y/kernel/audit.c' l='563' u='c' c='kauditd_rehold_skb'/>
<use f='linux-4.18.y/kernel/audit.c' l='766' u='c' c='kauditd_send_queue'/>
<def f='linux-4.18.y/net/core/skbuff.c' l='2888' ll='2895' type='void skb_queue_head(struct sk_buff_head * list, struct sk_buff * newsk)'/>
<dec f='linux-4.18.y/net/core/skbuff.c' l='2896' type='void skb_queue_head(struct sk_buff_head * , struct sk_buff * )'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='2896' c='skb_queue_head'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='2896' u='a'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='2896' u='a'/>
<doc f='linux-4.18.y/net/core/skbuff.c' l='2877'>/**
 *	skb_queue_head - queue a buffer at the list head
 *	@list: list to use
 *	@newsk: buffer to queue
 *
 *	Queue a buffer at the start of the list. This function takes the
 *	list lock and can be used safely with other locking &amp;sk_buff functions
 *	safely.
 *
 *	A buffer cannot be placed on two lists at the same time.
 */</doc>
