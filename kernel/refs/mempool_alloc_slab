<dec f='linux-4.18.y/include/linux/mempool.h' l='56' type='void * mempool_alloc_slab(gfp_t gfp_mask, void * pool_data)'/>
<use f='linux-4.18.y/include/linux/mempool.h' l='62' u='r' c='mempool_init_slab_pool'/>
<use f='linux-4.18.y/include/linux/mempool.h' l='69' u='r' c='mempool_create_slab_pool'/>
<doc f='linux-4.18.y/include/linux/mempool.h' l='51'>/*
 * A mempool_alloc_t and mempool_free_t that get the memory from
 * a slab cache that is passed in through pool_data.
 * Note: the slab cache may not have a ctor function.
 */</doc>
<use f='linux-4.18.y/mm/mempool.c' l='108' u='r' c='kasan_poison_element'/>
<use f='linux-4.18.y/mm/mempool.c' l='116' u='r' c='kasan_unpoison_element'/>
<def f='linux-4.18.y/mm/mempool.c' l='500' ll='505' type='void * mempool_alloc_slab(gfp_t gfp_mask, void * pool_data)'/>
<dec f='linux-4.18.y/mm/mempool.c' l='506' type='void * mempool_alloc_slab(gfp_t , void * )'/>
<use f='linux-4.18.y/mm/mempool.c' l='506' c='mempool_alloc_slab'/>
<use f='linux-4.18.y/mm/mempool.c' l='506' u='a'/>
<use f='linux-4.18.y/mm/mempool.c' l='506' u='a'/>
<doc f='linux-4.18.y/mm/mempool.c' l='497'>/*
 * A commonly used alloc and free fn.
 */</doc>
