<dec f='linux-4.18.y/include/linux/workqueue.h' l='642' type='long work_on_cpu_safe(int cpu, long (*)(void *) fn, void * arg)'/>
<def f='linux-4.18.y/kernel/workqueue.c' l='4914' ll='4923' type='long work_on_cpu_safe(int cpu, long (*)(void *) fn, void * arg)'/>
<dec f='linux-4.18.y/kernel/workqueue.c' l='4924' type='long work_on_cpu_safe(int , long (*)(void *) , void * )'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='4924' c='work_on_cpu_safe'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='4924' u='a'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='4924' u='a'/>
<doc f='linux-4.18.y/kernel/workqueue.c' l='4903'>/**
 * work_on_cpu_safe - run a function in thread context on a particular cpu
 * @cpu: the cpu to run on
 * @fn:  the function to run
 * @arg: the function argument
 *
 * Disables CPU hotplug and calls work_on_cpu(). The caller must not hold
 * any locks which would prevent @fn from completing.
 *
 * Return: The value @fn returns.
 */</doc>
