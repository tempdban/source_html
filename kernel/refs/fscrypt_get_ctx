<dec f='linux-4.18.y/include/linux/fscrypt_supp.h' l='63' type='struct fscrypt_ctx * fscrypt_get_ctx(const struct inode * , gfp_t )'/>
<use f='linux-4.18.y/fs/crypto/bio.c' l='106' u='c' c='fscrypt_zeroout_range'/>
<def f='linux-4.18.y/fs/crypto/crypto.c' l='98' ll='133' type='struct fscrypt_ctx * fscrypt_get_ctx(const struct inode * inode, gfp_t gfp_flags)'/>
<dec f='linux-4.18.y/fs/crypto/crypto.c' l='134' type='struct fscrypt_ctx * fscrypt_get_ctx(const struct inode * , gfp_t )'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='134' c='fscrypt_get_ctx'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='134' u='a'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='134' u='a'/>
<use f='linux-4.18.y/fs/crypto/crypto.c' l='259' u='c' c='fscrypt_encrypt_page'/>
<doc f='linux-4.18.y/fs/crypto/crypto.c' l='88'>/**
 * fscrypt_get_ctx() - Gets an encryption context
 * @inode:       The inode for which we are doing the crypto
 * @gfp_flags:   The gfp flag for memory allocation
 *
 * Allocates and initializes an encryption context.
 *
 * Return: An allocated and initialized encryption context on success; error
 * value or NULL otherwise.
 */</doc>
<use f='linux-4.18.y/fs/ext4/readpage.c' l='247' u='c' c='ext4_mpage_readpages'/>
