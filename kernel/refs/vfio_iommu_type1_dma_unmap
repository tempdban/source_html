<def f='linux-4.14.y/include/uapi/linux/vfio.h' l='553' ll='558'/>
<size>24</size>
<doc f='linux-4.14.y/include/uapi/linux/vfio.h' l='543'>/**
 * VFIO_IOMMU_UNMAP_DMA - _IOWR(VFIO_TYPE, VFIO_BASE + 14,
 *							struct vfio_dma_unmap)
 *
 * Unmap IO virtual addresses using the provided struct vfio_dma_unmap.
 * Caller sets argsz.  The actual unmapped size is returned in the size
 * field.  No guarantee is made to the user that arbitrary unmaps of iova
 * or size different from those used in the original mapping call will
 * succeed.
 */</doc>
<mbr r='vfio_iommu_type1_dma_unmap::argsz' o='0' t='__u32'/>
<mbr r='vfio_iommu_type1_dma_unmap::flags' o='32' t='__u32'/>
<mbr r='vfio_iommu_type1_dma_unmap::iova' o='64' t='__u64'/>
<mbr r='vfio_iommu_type1_dma_unmap::size' o='128' t='__u64'/>
<def f='linux-4.14.y/include/uapi/linux/vfio.h' l='553' ll='558'/>
<size>24</size>
<doc f='linux-4.14.y/include/uapi/linux/vfio.h' l='543'>/**
 * VFIO_IOMMU_UNMAP_DMA - _IOWR(VFIO_TYPE, VFIO_BASE + 14,
 *							struct vfio_dma_unmap)
 *
 * Unmap IO virtual addresses using the provided struct vfio_dma_unmap.
 * Caller sets argsz.  The actual unmapped size is returned in the size
 * field.  No guarantee is made to the user that arbitrary unmaps of iova
 * or size different from those used in the original mapping call will
 * succeed.
 */</doc>
<mbr r='vfio_iommu_type1_dma_unmap::argsz' o='0' t='__u32'/>
<mbr r='vfio_iommu_type1_dma_unmap::flags' o='32' t='__u32'/>
<mbr r='vfio_iommu_type1_dma_unmap::iova' o='64' t='__u64'/>
<mbr r='vfio_iommu_type1_dma_unmap::size' o='128' t='__u64'/>
