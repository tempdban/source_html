<def f='linux-4.18.y/include/linux/usb.h' l='67' ll='79'/>
<size>80</size>
<doc f='linux-4.18.y/include/linux/usb.h' l='50'>/**
 * struct usb_host_endpoint - host-side endpoint descriptor and queue
 * @desc: descriptor for this endpoint, wMaxPacketSize in native byteorder
 * @ss_ep_comp: SuperSpeed companion descriptor for this endpoint
 * @ssp_isoc_ep_comp: SuperSpeedPlus isoc companion descriptor for this endpoint
 * @urb_list: urbs queued to this endpoint; maintained by usbcore
 * @hcpriv: for use by HCD; typically holds hardware dma queue head (QH)
 *	with one or more transfer descriptors (TDs) per urb
 * @ep_dev: ep_device for sysfs info
 * @extra: descriptors following this endpoint in the configuration
 * @extralen: how many bytes of &quot;extra&quot; are valid
 * @enabled: URBs may be submitted to this endpoint
 * @streams: number of USB-3 streams allocated on the endpoint
 *
 * USB requests are always queued to a given endpoint, identified by a
 * descriptor within an active interface in a given USB configuration.
 */</doc>
<mbr r='usb_host_endpoint::desc' o='0' t='struct usb_endpoint_descriptor'/>
<mbr r='usb_host_endpoint::ss_ep_comp' o='72' t='struct usb_ss_ep_comp_descriptor'/>
<mbr r='usb_host_endpoint::ssp_isoc_ep_comp' o='120' t='struct usb_ssp_isoc_ep_comp_descriptor'/>
<mbr r='usb_host_endpoint::urb_list' o='192' t='struct list_head'/>
<mbr r='usb_host_endpoint::hcpriv' o='320' t='void *'/>
<mbr r='usb_host_endpoint::ep_dev' o='384' t='struct ep_device *'/>
<mbr r='usb_host_endpoint::extra' o='448' t='unsigned char *'/>
<mbr r='usb_host_endpoint::extralen' o='512' t='int'/>
<mbr r='usb_host_endpoint::enabled' o='544' t='int'/>
<mbr r='usb_host_endpoint::streams' o='576' t='int'/>
