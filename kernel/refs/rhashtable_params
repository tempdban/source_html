<def f='linux-4.14.y/include/linux/rhashtable.h' l='137' ll='150'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/rhashtable.h' l='122'>/**
 * struct rhashtable_params - Hash table construction parameters
 * @nelem_hint: Hint on number of elements, should be 75% of desired size
 * @key_len: Length of key
 * @key_offset: Offset of key in struct to be hashed
 * @head_offset: Offset of rhash_head in struct to be hashed
 * @max_size: Maximum size while expanding
 * @min_size: Minimum size while shrinking
 * @locks_mul: Number of bucket locks to allocate per cpu (default: 32)
 * @automatic_shrinking: Enable automatic shrinking of tables
 * @nulls_base: Base value to generate nulls marker
 * @hashfn: Hash function (default: jhash2 if !(key_len % 4), or jhash)
 * @obj_hashfn: Function to hash object
 * @obj_cmpfn: Function to compare key with object
 */</doc>
<mbr r='rhashtable_params::nelem_hint' o='0' t='u16'/>
<mbr r='rhashtable_params::key_len' o='16' t='u16'/>
<mbr r='rhashtable_params::key_offset' o='32' t='u16'/>
<mbr r='rhashtable_params::head_offset' o='48' t='u16'/>
<mbr r='rhashtable_params::max_size' o='64' t='unsigned int'/>
<mbr r='rhashtable_params::min_size' o='96' t='u16'/>
<mbr r='rhashtable_params::automatic_shrinking' o='112' t='bool'/>
<mbr r='rhashtable_params::locks_mul' o='120' t='u8'/>
<mbr r='rhashtable_params::nulls_base' o='128' t='u32'/>
<mbr r='rhashtable_params::hashfn' o='192' t='rht_hashfn_t'/>
<mbr r='rhashtable_params::obj_hashfn' o='256' t='rht_obj_hashfn_t'/>
<mbr r='rhashtable_params::obj_cmpfn' o='320' t='rht_obj_cmpfn_t'/>
