<def f='linux-4.14.y/include/linux/pwm.h' l='58' ll='63'/>
<size>16</size>
<doc f='linux-4.14.y/include/linux/pwm.h' l='51'>/*
 * struct pwm_state - state of a PWM channel
 * @period: PWM period (in nanoseconds)
 * @duty_cycle: PWM duty cycle (in nanoseconds)
 * @polarity: PWM polarity
 * @enabled: PWM enabled status
 */</doc>
<mbr r='pwm_state::period' o='0' t='unsigned int'/>
<mbr r='pwm_state::duty_cycle' o='32' t='unsigned int'/>
<mbr r='pwm_state::polarity' o='64' t='enum pwm_polarity'/>
<mbr r='pwm_state::enabled' o='96' t='bool'/>
<def f='linux-4.14.y/include/linux/pwm.h' l='58' ll='63'/>
<size>16</size>
<doc f='linux-4.14.y/include/linux/pwm.h' l='51'>/*
 * struct pwm_state - state of a PWM channel
 * @period: PWM period (in nanoseconds)
 * @duty_cycle: PWM duty cycle (in nanoseconds)
 * @polarity: PWM polarity
 * @enabled: PWM enabled status
 */</doc>
<mbr r='pwm_state::period' o='0' t='unsigned int'/>
<mbr r='pwm_state::duty_cycle' o='32' t='unsigned int'/>
<mbr r='pwm_state::polarity' o='64' t='enum pwm_polarity'/>
<mbr r='pwm_state::enabled' o='96' t='bool'/>
