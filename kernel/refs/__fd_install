<dec f='linux-4.18.y/include/linux/fdtable.h' l='120' type='void __fd_install(struct files_struct * files, unsigned int fd, struct file * file)'/>
<use f='linux-4.18.y/drivers/android/binder.c' l='952' u='c' c='task_fd_install'/>
<def f='linux-4.18.y/fs/file.c' l='586' ll='608' type='void __fd_install(struct files_struct * files, unsigned int fd, struct file * file)'/>
<use f='linux-4.18.y/fs/file.c' l='612' u='c' c='fd_install'/>
<doc f='linux-4.18.y/fs/file.c' l='566'>/*
 * Install a file pointer in the fd array.
 *
 * The VFS is full of places where we drop the files lock between
 * setting the open_fds bitmap and installing the file in the file
 * array.  At any such point, we are vulnerable to a dup2() race
 * installing a file in the array before us.  We need to detect this and
 * fput() the struct file we are about to overwrite in this case.
 *
 * It should never happen - if we allow dup2() do it, _really_ bad things
 * will follow.
 *
 * NOTE: __fd_install() variant is really, really low-level; don&apos;t
 * use it unless you are forced to by truly lousy API shoved down
 * your throat.  &apos;files&apos; *MUST* be either current-&gt;files or obtained
 * by get_files_struct(current) done by whoever had given it to you,
 * or really bad things will happen.  Normally you want to use
 * fd_install() instead.
 */</doc>
