<dec f='linux-4.14.y/ipc/util.h' l='106' type='void ipc_rmid(struct ipc_ids * , struct kern_ipc_perm * )'/>
<doc f='linux-4.14.y/ipc/util.h' l='105'>/* must be called with both locks acquired. */</doc>
<use f='linux-4.14.y/ipc/msg.c' l='96' u='c' c='msg_rmid'/>
<use f='linux-4.14.y/ipc/sem.c' l='448' u='c' c='sem_rmid'/>
<use f='linux-4.14.y/ipc/shm.c' l='191' u='c' c='shm_rmid'/>
<def f='linux-4.14.y/ipc/util.c' l='424' ll='432' type='void ipc_rmid(struct ipc_ids * ids, struct kern_ipc_perm * ipcp)'/>
<doc f='linux-4.14.y/ipc/util.c' l='416'>/**
 * ipc_rmid - remove an ipc identifier
 * @ids: ipc identifier set
 * @ipcp: ipc perm structure containing the identifier to remove
 *
 * ipc_ids.rwsem (as a writer) and the spinlock for this ID are held
 * before this function is called, and remain locked on the exit.
 */</doc>
