<dec f='linux-4.18.y/include/linux/netdevice.h' l='4220' type='void netif_stacked_transfer_operstate(const struct net_device * rootdev, struct net_device * dev)'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_main.c' l='680' u='c' c='ipvlan_link_new'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_main.c' l='770' u='c' c='ipvlan_device_event'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='1443' u='c' c='macvlan_common_newlink'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='1652' u='c' c='macvlan_device_event'/>
<def f='linux-4.18.y/net/core/dev.c' l='7775' ll='7787' type='void netif_stacked_transfer_operstate(const struct net_device * rootdev, struct net_device * dev)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='7788' type='void netif_stacked_transfer_operstate(const struct net_device * , struct net_device * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='7788' c='netif_stacked_transfer_operstate'/>
<use f='linux-4.18.y/net/core/dev.c' l='7788' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='7788' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='7766'>/**
 *	netif_stacked_transfer_operstate -	transfer operstate
 *	@rootdev: the root or lower level device to transfer state from
 *	@dev: the device to transfer operstate to
 *
 *	Transfer operational state from root to device. This is normally
 *	called when a stacking relationship exists between the root
 *	device and the device(a leaf device).
 */</doc>
