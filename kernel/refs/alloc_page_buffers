<dec f='linux-4.14.y/include/linux/buffer_head.h' l='159' type='struct buffer_head * alloc_page_buffers(struct page * page, unsigned long size, int retry)'/>
<use f='linux-4.14.y/drivers/md/bitmap.c' l='371' u='c' c='read_page'/>
<def f='linux-4.14.y/fs/buffer.c' l='863' ll='916' type='struct buffer_head * alloc_page_buffers(struct page * page, unsigned long size, int retry)'/>
<dec f='linux-4.14.y/fs/buffer.c' l='917' type='struct buffer_head * alloc_page_buffers(struct page * , unsigned long , int )'/>
<use f='linux-4.14.y/fs/buffer.c' l='917' c='alloc_page_buffers'/>
<use f='linux-4.14.y/fs/buffer.c' l='917' u='a'/>
<use f='linux-4.14.y/fs/buffer.c' l='917' u='a'/>
<use f='linux-4.14.y/fs/buffer.c' l='1024' u='c' c='grow_dev_page'/>
<use f='linux-4.14.y/fs/buffer.c' l='1578' u='c' c='create_empty_buffers'/>
<use f='linux-4.14.y/fs/buffer.c' l='2641' u='c' c='nobh_write_begin'/>
<doc f='linux-4.14.y/fs/buffer.c' l='854'>/*
 * Create the appropriate buffers when given a page for data area and
 * the size of each buffer.. Use the bh-&gt;b_this_page linked list to
 * follow the buffers created.  Return NULL if unable to create more
 * buffers.
 *
 * The retry flag is used to differentiate async IO (paging, swapping)
 * which may not fail from ordinary buffer allocations.
 */</doc>
<use f='linux-4.14.y/fs/ntfs/aops.c' l='1742' u='c' c='mark_ntfs_record_dirty'/>
<use f='linux-4.14.y/fs/ntfs/mft.c' l='510' u='c' c='ntfs_sync_mft_mirror'/>
