<dec f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_txrx.h' l='489' type='bool __i40e_chk_linearize(struct sk_buff * skb)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_txrx.h' l='564' u='c' c='i40e_chk_linearize'/>
<def f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_txrx.c' l='3257' ll='3326' type='bool __i40e_chk_linearize(struct sk_buff * skb)'/>
<doc f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_txrx.c' l='3244'>/**
 * __i40e_chk_linearize - Check if there are more than 8 buffers per packet
 * @skb:      send buffer
 *
 * Note: Our HW can&apos;t DMA more than 8 buffers to build a packet on the wire
 * and so we need to figure out the cases where we need to linearize the skb.
 *
 * For TSO we need to count the TSO header and segment payload separately.
 * As such we need to check cases where we have 7 fragments or more as we
 * can potentially require 9 DMA transactions, 1 for the TSO header, 1 for
 * the segment payload in the first descriptor, and another 7 for the
 * fragments.
 **/</doc>
