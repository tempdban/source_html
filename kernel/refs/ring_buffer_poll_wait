<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='99' type='int ring_buffer_poll_wait(struct ring_buffer * buffer, int cpu, struct file * filp, poll_table * poll_table)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='633' ll='670' type='int ring_buffer_poll_wait(struct ring_buffer * buffer, int cpu, struct file * filp, poll_table * poll_table)'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='619'>/**
 * ring_buffer_poll_wait - poll on buffer input
 * @buffer: buffer to wait on
 * @cpu: the cpu buffer to wait on
 * @filp: the file descriptor
 * @poll_table: The poll descriptor
 *
 * If @cpu == RING_BUFFER_ALL_CPUS then the task will wake up as soon
 * as data is added to any of the @buffer&apos;s cpu buffers. Otherwise
 * it will wait for data to be added to a specific cpu buffer.
 *
 * Returns POLLIN | POLLRDNORM if data exists in the buffers,
 * zero otherwise.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='5639' u='c' c='trace_poll'/>
<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='99' type='int ring_buffer_poll_wait(struct ring_buffer * buffer, int cpu, struct file * filp, poll_table * poll_table)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='633' ll='670' type='int ring_buffer_poll_wait(struct ring_buffer * buffer, int cpu, struct file * filp, poll_table * poll_table)'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='619'>/**
 * ring_buffer_poll_wait - poll on buffer input
 * @buffer: buffer to wait on
 * @cpu: the cpu buffer to wait on
 * @filp: the file descriptor
 * @poll_table: The poll descriptor
 *
 * If @cpu == RING_BUFFER_ALL_CPUS then the task will wake up as soon
 * as data is added to any of the @buffer&apos;s cpu buffers. Otherwise
 * it will wait for data to be added to a specific cpu buffer.
 *
 * Returns POLLIN | POLLRDNORM if data exists in the buffers,
 * zero otherwise.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='5639' u='c' c='trace_poll'/>
