<def f='linux-4.18.y/include/drm/drm_vma_manager.h' l='189' ll='192' type='__u64 drm_vma_node_offset_addr(struct drm_vma_offset_node * node)'/>
<use f='linux-4.18.y/include/drm/drm_vma_manager.h' l='211' u='c' c='drm_vma_node_unmap'/>
<use f='linux-4.18.y/drivers/gpu/drm/bochs/bochs.h' l='123' u='c' c='bochs_bo_mmap_offset'/>
<doc f='linux-4.18.y/include/drm/drm_vma_manager.h' l='177'>/**
 * drm_vma_node_offset_addr() - Return sanitized offset for user-space mmaps
 * @node: Linked offset node
 *
 * Same as drm_vma_node_start() but returns the address as a valid offset that
 * can be used for user-space mappings during mmap().
 * This must not be called on unlinked nodes.
 *
 * RETURNS:
 * Offset of @node for byte-based addressing. 0 if the node does not have an
 * object allocated.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/cirrus/cirrus_main.c' l='303' u='c' c='cirrus_bo_mmap_offset'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='339' u='c' c='drm_gem_dumb_map_offset'/>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_object.h' l='62' u='c' c='qxl_bo_mmap_offset'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_drv.h' l='394' u='c' c='virtio_gpu_object_mmap_offset'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='666' u='c' c='vmw_dmabuf_alloc_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='798' u='c' c='vmw_dumb_map_offset'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='1365' u='c' c='vmw_gb_surface_define_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='1442' u='c' c='vmw_gb_surface_reference_ioctl'/>
