<def f='linux-4.14.y/include/crypto/hash.h' l='172' ll='194'/>
<size>496</size>
<doc f='linux-4.14.y/include/crypto/hash.h' l='155'>/**
 * struct shash_alg - synchronous message digest definition
 * @init: see struct ahash_alg
 * @update: see struct ahash_alg
 * @final: see struct ahash_alg
 * @finup: see struct ahash_alg
 * @digest: see struct ahash_alg
 * @export: see struct ahash_alg
 * @import: see struct ahash_alg
 * @setkey: see struct ahash_alg
 * @digestsize: see struct ahash_alg
 * @statesize: see struct ahash_alg
 * @descsize: Size of the operational state for the message digest. This state
 * 	      size is the memory size that needs to be allocated for
 *	      shash_desc.__ctx
 * @base: internally used
 */</doc>
<mbr r='shash_alg::init' o='0' t='int (*)(struct shash_desc *)'/>
<mbr r='shash_alg::update' o='64' t='int (*)(struct shash_desc *, const u8 *, unsigned int)'/>
<mbr r='shash_alg::final' o='128' t='int (*)(struct shash_desc *, u8 *)'/>
<mbr r='shash_alg::finup' o='192' t='int (*)(struct shash_desc *, const u8 *, unsigned int, u8 *)'/>
<mbr r='shash_alg::digest' o='256' t='int (*)(struct shash_desc *, const u8 *, unsigned int, u8 *)'/>
<mbr r='shash_alg::export' o='320' t='int (*)(struct shash_desc *, void *)'/>
<mbr r='shash_alg::import' o='384' t='int (*)(struct shash_desc *, const void *)'/>
<mbr r='shash_alg::setkey' o='448' t='int (*)(struct crypto_shash *, const u8 *, unsigned int)'/>
<mbr r='shash_alg::descsize' o='512' t='unsigned int'/>
<mbr r='shash_alg::digestsize' o='576' t='unsigned int'/>
<mbr r='shash_alg::statesize' o='608' t='unsigned int'/>
<mbr r='shash_alg::base' o='640' t='struct crypto_alg'/>
