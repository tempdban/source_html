<dec f='linux-4.14.y/include/linux/netdevice.h' l='3843' type='int dev_set_promiscuity(struct net_device * dev, int inc)'/>
<def f='linux-4.14.y/net/core/dev.c' l='6593' ll='6604' type='int dev_set_promiscuity(struct net_device * dev, int inc)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='6605' type='int dev_set_promiscuity(struct net_device * , int )'/>
<use f='linux-4.14.y/net/core/dev.c' l='6605' c='dev_set_promiscuity'/>
<use f='linux-4.14.y/net/core/dev.c' l='6605' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='6605' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='6582'>/**
 *	dev_set_promiscuity	- update promiscuity count on a device
 *	@dev: device
 *	@inc: modifier
 *
 *	Add or remove promiscuity from a device. While the count in the device
 *	remains above zero the interface remains promiscuous. Once it hits zero
 *	the device reverts back to normal filtering operation. A negative inc
 *	value is used to drop promiscuity on the device.
 *	Return 0 if successful or a negative errno code on error.
 */</doc>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3494' u='c' c='packet_dev_mc'/>
<dec f='linux-4.14.y/include/linux/netdevice.h' l='3843' type='int dev_set_promiscuity(struct net_device * dev, int inc)'/>
<def f='linux-4.14.y/net/core/dev.c' l='6593' ll='6604' type='int dev_set_promiscuity(struct net_device * dev, int inc)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='6605' type='int dev_set_promiscuity(struct net_device * , int )'/>
<use f='linux-4.14.y/net/core/dev.c' l='6605' c='dev_set_promiscuity'/>
<use f='linux-4.14.y/net/core/dev.c' l='6605' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='6605' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='6582'>/**
 *	dev_set_promiscuity	- update promiscuity count on a device
 *	@dev: device
 *	@inc: modifier
 *
 *	Add or remove promiscuity from a device. While the count in the device
 *	remains above zero the interface remains promiscuous. Once it hits zero
 *	the device reverts back to normal filtering operation. A negative inc
 *	value is used to drop promiscuity on the device.
 *	Return 0 if successful or a negative errno code on error.
 */</doc>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3494' u='c' c='packet_dev_mc'/>
