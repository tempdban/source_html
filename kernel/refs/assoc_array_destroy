<dec f='linux-4.18.y/include/linux/assoc_array.h' l='71' type='void assoc_array_destroy(struct assoc_array * array, const struct assoc_array_ops * ops)'/>
<def f='linux-4.18.y/lib/assoc_array.c' l='445' ll='450' type='void assoc_array_destroy(struct assoc_array * array, const struct assoc_array_ops * ops)'/>
<doc f='linux-4.18.y/lib/assoc_array.c' l='432'>/**
 * assoc_array_destroy - Destroy an associative array
 * @array: The array to destroy.
 * @ops: The operations to use.
 *
 * Discard all metadata and free all objects in an associative array.  The
 * array will be empty and ready to use again upon completion.  This function
 * cannot fail.
 *
 * The caller must prevent all other accesses whilst this takes place as no
 * attempt is made to adjust pointers gracefully to permit RCU readlock-holding
 * accesses to continue.  On the other hand, no memory allocation is required.
 */</doc>
<use f='linux-4.18.y/security/keys/keyring.c' l='404' u='c' c='keyring_destroy'/>
