<dec f='linux-4.18.y/include/linux/rhashtable.h' l='379' type='int rhashtable_init(struct rhashtable * ht, const struct rhashtable_params * params)'/>
<use f='linux-4.18.y/include/net/inet_frag.h' l='107' u='c' c='inet_frags_init_net'/>
<use f='linux-4.18.y/ipc/util.c' l='124' u='c' c='ipc_init_ids'/>
<def f='linux-4.18.y/lib/rhashtable.c' l='1027' ll='1087' type='int rhashtable_init(struct rhashtable * ht, const struct rhashtable_params * params)'/>
<dec f='linux-4.18.y/lib/rhashtable.c' l='1088' type='int rhashtable_init(struct rhashtable * , const struct rhashtable_params * )'/>
<use f='linux-4.18.y/lib/rhashtable.c' l='1088' c='rhashtable_init'/>
<use f='linux-4.18.y/lib/rhashtable.c' l='1088' u='a'/>
<use f='linux-4.18.y/lib/rhashtable.c' l='1088' u='a'/>
<use f='linux-4.18.y/lib/rhashtable.c' l='1107' u='c' c='rhltable_init'/>
<doc f='linux-4.18.y/lib/rhashtable.c' l='984'>/**
 * rhashtable_init - initialize a new hash table
 * @ht:		hash table to be initialized
 * @params:	configuration parameters
 *
 * Initializes a new hash table based on the provided configuration
 * parameters. A table can be configured either with a variable or
 * fixed length key:
 *
 * Configuration Example 1: Fixed length keys
 * struct test_obj {
 *	int			key;
 *	void *			my_member;
 *	struct rhash_head	node;
 * };
 *
 * struct rhashtable_params params = {
 *	.head_offset = offsetof(struct test_obj, node),
 *	.key_offset = offsetof(struct test_obj, key),
 *	.key_len = sizeof(int),
 *	.hashfn = jhash,
 *	.nulls_base = (1U &lt;&lt; RHT_BASE_SHIFT),
 * };
 *
 * Configuration Example 2: Variable length keys
 * struct test_obj {
 *	[...]
 *	struct rhash_head	node;
 * };
 *
 * u32 my_hash_fn(const void *data, u32 len, u32 seed)
 * {
 *	struct test_obj *obj = data;
 *
 *	return [... hash ...];
 * }
 *
 * struct rhashtable_params params = {
 *	.head_offset = offsetof(struct test_obj, node),
 *	.hashfn = jhash,
 *	.obj_hashfn = my_hash_fn,
 * };
 */</doc>
<use f='linux-4.18.y/net/bridge/br_fdb.c' l='64' u='c' c='br_fdb_hash_init'/>
<use f='linux-4.18.y/net/core/xdp.c' l='188' u='c' c='__mem_id_init_hash_table'/>
<use f='linux-4.18.y/net/netlink/af_netlink.c' l='2760' u='c' c='netlink_proto_init'/>
<use f='linux-4.18.y/security/apparmor/policy_unpack.c' l='825' u='c' c='unpack_profile'/>
