<dec f='linux-4.18.y/include/linux/blkdev.h' l='1224' type='void blk_set_stacking_limits(struct queue_limits * lim)'/>
<def f='linux-4.18.y/block/blk-settings.c' l='125' ll='138' type='void blk_set_stacking_limits(struct queue_limits * lim)'/>
<dec f='linux-4.18.y/block/blk-settings.c' l='139' type='void blk_set_stacking_limits(struct queue_limits * )'/>
<use f='linux-4.18.y/block/blk-settings.c' l='139' c='blk_set_stacking_limits'/>
<use f='linux-4.18.y/block/blk-settings.c' l='139' u='a'/>
<use f='linux-4.18.y/block/blk-settings.c' l='139' u='a'/>
<doc f='linux-4.18.y/block/blk-settings.c' l='117'>/**
 * blk_set_stacking_limits - set default limits for stacking devices
 * @lim:  the queue_limits structure to reset
 *
 * Description:
 *   Returns a queue_limit struct to its default state. Should be used
 *   by stacking drivers like DM that have no internal limits.
 */</doc>
<use f='linux-4.18.y/drivers/md/dm-table.c' l='675' u='c' c='validate_hardware_logical_block_alignment'/>
<use f='linux-4.18.y/drivers/md/dm-table.c' l='1519' u='c' c='dm_calculate_queue_limits'/>
<use f='linux-4.18.y/drivers/md/dm-table.c' l='1522' u='c' c='dm_calculate_queue_limits'/>
<use f='linux-4.18.y/drivers/md/md.c' l='3859' u='c' c='level_store'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5332' u='c' c='md_alloc'/>
