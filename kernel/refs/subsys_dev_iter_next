<dec f='linux-4.14.y/include/linux/device.h' l='155' type='struct device * subsys_dev_iter_next(struct subsys_dev_iter * iter)'/>
<def f='linux-4.14.y/drivers/base/bus.c' l='1055' ll='1068' type='struct device * subsys_dev_iter_next(struct subsys_dev_iter * iter)'/>
<dec f='linux-4.14.y/drivers/base/bus.c' l='1069' type='struct device * subsys_dev_iter_next(struct subsys_dev_iter * )'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='1069' c='subsys_dev_iter_next'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='1069' u='a'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='1069' u='a'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='1101' u='c' c='subsys_interface_register'/>
<use f='linux-4.14.y/drivers/base/bus.c' l='1126' u='c' c='subsys_interface_unregister'/>
<doc f='linux-4.14.y/drivers/base/bus.c' l='1043'>/**
 * subsys_dev_iter_next - iterate to the next device
 * @iter: subsys iterator to proceed
 *
 * Proceed @iter to the next device and return it.  Returns NULL if
 * iteration is complete.
 *
 * The returned device is referenced and won&apos;t be released till
 * iterator is proceed to the next device or exited.  The caller is
 * free to do whatever it wants to do with the device including
 * calling back into subsys code.
 */</doc>
