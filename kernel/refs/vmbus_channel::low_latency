<dec f='linux-4.18.y/include/linux/hyperv.h' l='876' type='bool'/>
<use f='linux-4.18.y/include/linux/hyperv.h' l='930' u='w' c='set_low_latency_mode'/>
<use f='linux-4.18.y/include/linux/hyperv.h' l='935' u='w' c='clear_low_latency_mode'/>
<offset>5888</offset>
<doc f='linux-4.18.y/include/linux/hyperv.h' l='852'>/*
	 * For performance critical channels (storage, networking
	 * etc,), Hyper-V has a mechanism to enhance the throughput
	 * at the expense of latency:
	 * When the host is to be signaled, we just set a bit in a shared page
	 * and this bit will be inspected by the hypervisor within a certain
	 * window and if the bit is set, the host will be signaled. The window
	 * of time is the monitor latency - currently around 100 usecs. This
	 * mechanism improves throughput by:
	 *
	 * A) Making the host more efficient - each time it wakes up,
	 *    potentially it will process morev number of packets. The
	 *    monitor latency allows a batch to build up.
	 * B) By deferring the hypercall to signal, we will also minimize
	 *    the interrupts.
	 *
	 * Clearly, these optimizations improve throughput at the expense of
	 * latency. Furthermore, since the channel is shared for both
	 * control and data messages, control messages currently suffer
	 * unnecessary latency adversley impacting performance and boot
	 * time. To fix this issue, permit tagging the channel as being
	 * in &quot;low latency&quot; mode. In this mode, we will bypass the monitor
	 * mechanism.
	 */</doc>
