<dec f='linux-4.14.y/include/scsi/scsi_host.h' l='180' type='int (*)(struct scsi_device *)'/>
<offset>832</offset>
<doc f='linux-4.14.y/include/scsi/scsi_host.h' l='154'>/*
	 * Before the mid layer attempts to scan for a new device where none
	 * currently exists, it will call this entry in your driver.  Should
	 * your driver need to allocate any structs or perform any other init
	 * items in order to send commands to a currently unused target/lun
	 * combo, then this is where you can perform those allocations.  This
	 * is specifically so that drivers won&apos;t have to perform any kind of
	 * &quot;is this a new device&quot; checks in their queuecommand routine,
	 * thereby making the hot path a bit quicker.
	 *
	 * Return values: 0 on success, non-0 on failure
	 *
	 * Deallocation:  If we didn&apos;t find any devices at this ID, you will
	 * get an immediate call to slave_destroy().  If we find something
	 * here then you will get a call to slave_configure(), then the
	 * device will be used for however long it is kept around, then when
	 * the device is removed from the system (or * possibly at reboot
	 * time), you will then get a call to slave_destroy().  This is
	 * assuming you implement slave_configure and slave_destroy.
	 * However, if you allocate memory and hang it off the device struct,
	 * then you must implement the slave_destroy() routine at a minimum
	 * in order to avoid leaking memory
	 * each time a device is tore down.
	 *
	 * Status: OPTIONAL
	 */</doc>
<use f='linux-4.14.y/drivers/message/fusion/mptsas.c' l='1981' u='w'/>
<use f='linux-4.14.y/drivers/message/fusion/mptspi.c' l='836' u='w'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='3118' u='w'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='8637' u='w'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='8675' u='w'/>
<use f='linux-4.14.y/drivers/scsi/scsi_scan.c' l='293' u='r' c='scsi_alloc_sdev'/>
<use f='linux-4.14.y/drivers/scsi/scsi_scan.c' l='294' u='r' c='scsi_alloc_sdev'/>
<use f='linux-4.14.y/drivers/scsi/virtio_scsi.c' l='819' u='w'/>
<use f='linux-4.14.y/drivers/scsi/virtio_scsi.c' l='839' u='w'/>
<dec f='linux-4.14.y/include/scsi/scsi_host.h' l='180' type='int (*)(struct scsi_device *)'/>
<offset>832</offset>
<doc f='linux-4.14.y/include/scsi/scsi_host.h' l='154'>/*
	 * Before the mid layer attempts to scan for a new device where none
	 * currently exists, it will call this entry in your driver.  Should
	 * your driver need to allocate any structs or perform any other init
	 * items in order to send commands to a currently unused target/lun
	 * combo, then this is where you can perform those allocations.  This
	 * is specifically so that drivers won&apos;t have to perform any kind of
	 * &quot;is this a new device&quot; checks in their queuecommand routine,
	 * thereby making the hot path a bit quicker.
	 *
	 * Return values: 0 on success, non-0 on failure
	 *
	 * Deallocation:  If we didn&apos;t find any devices at this ID, you will
	 * get an immediate call to slave_destroy().  If we find something
	 * here then you will get a call to slave_configure(), then the
	 * device will be used for however long it is kept around, then when
	 * the device is removed from the system (or * possibly at reboot
	 * time), you will then get a call to slave_destroy().  This is
	 * assuming you implement slave_configure and slave_destroy.
	 * However, if you allocate memory and hang it off the device struct,
	 * then you must implement the slave_destroy() routine at a minimum
	 * in order to avoid leaking memory
	 * each time a device is tore down.
	 *
	 * Status: OPTIONAL
	 */</doc>
<use f='linux-4.14.y/drivers/message/fusion/mptsas.c' l='1981' u='w'/>
<use f='linux-4.14.y/drivers/message/fusion/mptspi.c' l='836' u='w'/>
<use f='linux-4.14.y/drivers/scsi/megaraid/megaraid_sas_base.c' l='3118' u='w'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='8637' u='w'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='8675' u='w'/>
<use f='linux-4.14.y/drivers/scsi/scsi_scan.c' l='293' u='r' c='scsi_alloc_sdev'/>
<use f='linux-4.14.y/drivers/scsi/scsi_scan.c' l='294' u='r' c='scsi_alloc_sdev'/>
<use f='linux-4.14.y/drivers/scsi/virtio_scsi.c' l='819' u='w'/>
<use f='linux-4.14.y/drivers/scsi/virtio_scsi.c' l='839' u='w'/>
