<dec f='linux-4.18.y/fs/ntfs/inode.h' l='272' type='int ntfs_test_inode(struct inode * vi, ntfs_attr * na)'/>
<use f='linux-4.18.y/fs/ntfs/dir.c' l='1520' u='r' c='ntfs_dir_fsync'/>
<def f='linux-4.18.y/fs/ntfs/inode.c' l='60' ll='84' type='int ntfs_test_inode(struct inode * vi, ntfs_attr * na)'/>
<use f='linux-4.18.y/fs/ntfs/inode.c' l='181' u='r' c='ntfs_iget'/>
<use f='linux-4.18.y/fs/ntfs/inode.c' l='242' u='r' c='ntfs_attr_iget'/>
<use f='linux-4.18.y/fs/ntfs/inode.c' l='297' u='r' c='ntfs_index_iget'/>
<doc f='linux-4.18.y/fs/ntfs/inode.c' l='44'>/**
 * ntfs_test_inode - compare two (possibly fake) inodes for equality
 * @vi:		vfs inode which to test
 * @na:		ntfs attribute which is being tested with
 *
 * Compare the ntfs attribute embedded in the ntfs specific part of the vfs
 * inode @vi for equality with the ntfs attribute @na.
 *
 * If searching for the normal file/directory inode, set @na-&gt;type to AT_UNUSED.
 * @na-&gt;name and @na-&gt;name_len are then ignored.
 *
 * Return 1 if the attributes match and 0 if not.
 *
 * NOTE: This function runs with the inode_hash_lock spin lock held so it is not
 * allowed to sleep.
 */</doc>
<use f='linux-4.18.y/fs/ntfs/mft.c' l='967' u='r' c='ntfs_may_write_mft_record'/>
<use f='linux-4.18.y/fs/ntfs/mft.c' l='1028' u='r' c='ntfs_may_write_mft_record'/>
