<def f='linux-4.14.y/include/linux/dcache.h' l='486' ll='489' type='bool d_really_is_positive(const struct dentry * dentry)'/>
<use f='linux-4.14.y/include/linux/dcache.h' l='493' u='c' c='simple_positive'/>
<doc f='linux-4.14.y/include/linux/dcache.h' l='473'>/**
 * d_really_is_positive - Determine if a dentry is really positive (ignoring fallthroughs)
 * @dentry: The dentry in question
 *
 * Returns true if the dentry represents a name that maps to an inode
 * (ie. -&gt;d_inode is not NULL).  The dentry might still represent a whiteout if
 * that is represented on medium as a 0,0 chardev.
 *
 * Note!  (1) This should be used *only* by a filesystem to examine its own
 * dentries.  It should not be used to look at some other filesystem&apos;s
 * dentries.  (2) It should also be used in combination with d_inode() to get
 * the inode.
 */</doc>
<use f='linux-4.14.y/drivers/base/devtmpfs.c' l='239' u='c' c='dev_rmdir'/>
<use f='linux-4.14.y/drivers/base/devtmpfs.c' l='310' u='c' c='handle_remove'/>
<use f='linux-4.14.y/fs/configfs/dir.c' l='384' u='c' c='remove_dir'/>
<use f='linux-4.14.y/fs/configfs/inode.c' l='191' u='c' c='configfs_create'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='277' u='c' c='debugfs_lookup'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='310' u='c' c='start_creating'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='779' u='c' c='debugfs_rename'/>
<use f='linux-4.14.y/fs/libfs.c' l='367' u='c' c='simple_rename'/>
<use f='linux-4.14.y/ipc/mqueue.c' l='803' u='c' c='do_mq_open'/>
<use f='linux-4.14.y/kernel/trace/trace_events.c' l='720' u='c' c='remove_event_file_dir'/>
<use f='linux-4.14.y/mm/shmem.c' l='3189' u='c' c='shmem_rename2'/>
<use f='linux-4.14.y/security/apparmor/apparmorfs.c' l='257' u='c' c='aafs_create'/>
<use f='linux-4.14.y/security/inode.c' l='129' u='c' c='securityfs_create_dentry'/>
<def f='linux-4.14.y/include/linux/dcache.h' l='486' ll='489' type='bool d_really_is_positive(const struct dentry * dentry)'/>
<use f='linux-4.14.y/include/linux/dcache.h' l='493' u='c' c='simple_positive'/>
<doc f='linux-4.14.y/include/linux/dcache.h' l='473'>/**
 * d_really_is_positive - Determine if a dentry is really positive (ignoring fallthroughs)
 * @dentry: The dentry in question
 *
 * Returns true if the dentry represents a name that maps to an inode
 * (ie. -&gt;d_inode is not NULL).  The dentry might still represent a whiteout if
 * that is represented on medium as a 0,0 chardev.
 *
 * Note!  (1) This should be used *only* by a filesystem to examine its own
 * dentries.  It should not be used to look at some other filesystem&apos;s
 * dentries.  (2) It should also be used in combination with d_inode() to get
 * the inode.
 */</doc>
<use f='linux-4.14.y/drivers/base/devtmpfs.c' l='239' u='c' c='dev_rmdir'/>
<use f='linux-4.14.y/drivers/base/devtmpfs.c' l='310' u='c' c='handle_remove'/>
<use f='linux-4.14.y/fs/configfs/dir.c' l='384' u='c' c='remove_dir'/>
<use f='linux-4.14.y/fs/configfs/inode.c' l='191' u='c' c='configfs_create'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='277' u='c' c='debugfs_lookup'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='310' u='c' c='start_creating'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='779' u='c' c='debugfs_rename'/>
<use f='linux-4.14.y/fs/fat/namei_vfat.c' l='61' u='c' c='vfat_revalidate'/>
<use f='linux-4.14.y/fs/fat/namei_vfat.c' l='81' u='c' c='vfat_revalidate_ci'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='507' u='c' c='fuse_atomic_open'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='754' u='c' c='fuse_rename_common'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='766' u='c' c='fuse_rename_common'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='979' u='c' c='fuse_reverse_inval_entry'/>
<use f='linux-4.14.y/fs/libfs.c' l='367' u='c' c='simple_rename'/>
<use f='linux-4.14.y/ipc/mqueue.c' l='803' u='c' c='do_mq_open'/>
<use f='linux-4.14.y/kernel/trace/trace_events.c' l='720' u='c' c='remove_event_file_dir'/>
<use f='linux-4.14.y/mm/shmem.c' l='3189' u='c' c='shmem_rename2'/>
<use f='linux-4.14.y/security/apparmor/apparmorfs.c' l='257' u='c' c='aafs_create'/>
<use f='linux-4.14.y/security/inode.c' l='129' u='c' c='securityfs_create_dentry'/>
