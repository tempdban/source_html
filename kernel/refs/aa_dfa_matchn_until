<dec f='linux-4.18.y/security/apparmor/include/match.h' l='136' type='unsigned int aa_dfa_matchn_until(struct aa_dfa * dfa, unsigned int start, const char * str, int n, const char ** retpos)'/>
<use f='linux-4.18.y/security/apparmor/include/label.h' l='341' u='c' c='aa_label_strn_split'/>
<def f='linux-4.18.y/security/apparmor/match.c' l='576' ll='619' type='unsigned int aa_dfa_matchn_until(struct aa_dfa * dfa, unsigned int start, const char * str, int n, const char ** retpos)'/>
<doc f='linux-4.18.y/security/apparmor/match.c' l='559'>/**
 * aa_dfa_matchn_until - traverse @dfa until accept or @n bytes consumed
 * @dfa: the dfa to match @str against  (NOT NULL)
 * @start: the state of the dfa to start matching in
 * @str: the string of bytes to match against the dfa  (NOT NULL)
 * @n: length of the string of bytes to match
 * @retpos: first character in str after match OR str + n
 *
 * aa_dfa_match_len will match @str against the dfa and return the state it
 * finished matching in. The final state can be used to look up the accepting
 * label, or as the start state of a continuing match.
 *
 * This function will happily match again the 0 byte and only finishes
 * when @n input is consumed.
 *
 * Returns: final state reached after input is consumed
 */</doc>
