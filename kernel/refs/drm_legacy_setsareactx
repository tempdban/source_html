<dec f='linux-4.18.y/drivers/gpu/drm/drm_legacy.h' l='57' type='int drm_legacy_setsareactx(struct drm_device * d, void * v, struct drm_file * f)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_context.c' l='220' ll='252' type='int drm_legacy_setsareactx(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_context.c' l='208'>/**
 * Set per-context SAREA.
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg user argument pointing to a drm_ctx_priv_map structure.
 * \return zero on success or a negative number on failure.
 *
 * Searches the mapping specified in \p arg and update the entry in
 * drm_device::ctx_idr with it.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioc32.c' l='509' u='r' c='compat_drm_setsareactx'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='564'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='564'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='564'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='564'/>
