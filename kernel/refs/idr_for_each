<dec f='linux-4.18.y/include/linux/idr.h' l='109' type='int idr_for_each(const struct idr * , int (*)(int, void *, void *) fn, void * data)'/>
<use f='linux-4.18.y/drivers/block/loop.c' l='1732' u='c' c='loop_unregister_transfer'/>
<use f='linux-4.18.y/drivers/block/loop.c' l='1955' u='c' c='loop_lookup'/>
<use f='linux-4.18.y/drivers/block/loop.c' l='2149' u='c' c='loop_exit'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_gem.c' l='798' u='c' c='drm_gem_release'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_info.c' l='133' u='c' c='drm_gem_name_info'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='573' u='c' c='drm_syncobj_release'/>
<use f='linux-4.18.y/drivers/scsi/sg.c' l='2276' u='c' c='sg_last_dev'/>
<use f='linux-4.18.y/fs/notify/inotify/inotify_fsnotify.c' l='174' u='c' c='inotify_free_group_priv'/>
<use f='linux-4.18.y/ipc/shm.c' l='360' u='c' c='shm_destroy_orphaned'/>
<def f='linux-4.18.y/lib/idr.c' l='198' ll='217' type='int idr_for_each(const struct idr * idr, int (*)(int, void *, void *) fn, void * data)'/>
<dec f='linux-4.18.y/lib/idr.c' l='218' type='int idr_for_each(const struct idr * , int (*)(int, void *, void *) , void * )'/>
<use f='linux-4.18.y/lib/idr.c' l='218' c='idr_for_each'/>
<use f='linux-4.18.y/lib/idr.c' l='218' u='a'/>
<use f='linux-4.18.y/lib/idr.c' l='218' u='a'/>
<doc f='linux-4.18.y/lib/idr.c' l='181'>/**
 * idr_for_each() - Iterate through all stored pointers.
 * @idr: IDR handle.
 * @fn: Function to be called for each pointer.
 * @data: Data passed to callback function.
 *
 * The callback function will be called for each entry in @idr, passing
 * the ID, the entry and @data.
 *
 * If @fn returns anything other than %0, the iteration stops and that
 * value is returned from this function.
 *
 * idr_for_each() can be called concurrently with idr_alloc() and
 * idr_remove() if protected by RCU.  Newly added entries may not be
 * seen and deleted entries may be seen, but adding and removing entries
 * will not cause other entries to be skipped, nor spurious ones to be seen.
 */</doc>
<use f='linux-4.18.y/net/core/net_namespace.c' l='200' u='c' c='__peernet2id_alloc'/>
<use f='linux-4.18.y/net/core/net_namespace.c' l='829' u='c' c='rtnl_net_dumpid'/>
