<dec f='linux-4.14.y/include/drm/drm_modes.h' l='510' type='void drm_mode_prune_invalid(struct drm_device * dev, struct list_head * mode_list, bool verbose)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1182' ll='1199' type='void drm_mode_prune_invalid(struct drm_device * dev, struct list_head * mode_list, bool verbose)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1200' type='void drm_mode_prune_invalid(struct drm_device * , struct list_head * , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1200' c='drm_mode_prune_invalid'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1200' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1200' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_modes.c' l='1171'>/**
 * drm_mode_prune_invalid - remove invalid modes from mode list
 * @dev: DRM device
 * @mode_list: list of modes to check
 * @verbose: be verbose about it
 *
 * This helper function can be used to prune a display mode list after
 * validation has been completed. All modes who&apos;s status is not MODE_OK will be
 * removed from the list, and if @verbose the status code and mode name is also
 * printed to dmesg.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='538' u='c' c='drm_helper_probe_single_connector_modes'/>
