<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='113' type='int ring_buffer_unlock_commit(struct ring_buffer * buffer, struct ring_buffer_event * event)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2622' ll='2639' type='int ring_buffer_unlock_commit(struct ring_buffer * buffer, struct ring_buffer_event * event)'/>
<dec f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' type='int ring_buffer_unlock_commit(struct ring_buffer * , struct ring_buffer_event * )'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' c='ring_buffer_unlock_commit'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' u='a'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' u='a'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2613'>/**
 * ring_buffer_unlock_commit - commit a reserved
 * @buffer: The buffer to commit to
 * @event: The event pointer to commit.
 *
 * This commits the data to the ring buffer, and releases any locks held.
 *
 * Must be paired with ring_buffer_lock_reserve.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='802' u='c' c='__buffer_unlock_commit'/>
<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='113' type='int ring_buffer_unlock_commit(struct ring_buffer * buffer, struct ring_buffer_event * event)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2622' ll='2639' type='int ring_buffer_unlock_commit(struct ring_buffer * buffer, struct ring_buffer_event * event)'/>
<dec f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' type='int ring_buffer_unlock_commit(struct ring_buffer * , struct ring_buffer_event * )'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' c='ring_buffer_unlock_commit'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' u='a'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2640' u='a'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='2613'>/**
 * ring_buffer_unlock_commit - commit a reserved
 * @buffer: The buffer to commit to
 * @event: The event pointer to commit.
 *
 * This commits the data to the ring buffer, and releases any locks held.
 *
 * Must be paired with ring_buffer_lock_reserve.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='802' u='c' c='__buffer_unlock_commit'/>
