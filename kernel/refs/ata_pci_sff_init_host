<dec f='linux-4.14.y/include/linux/libata.h' l='1866' type='int ata_pci_sff_init_host(struct ata_host * host)'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2266' ll='2323' type='int ata_pci_sff_init_host(struct ata_host * host)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' type='int ata_pci_sff_init_host(struct ata_host * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' c='ata_pci_sff_init_host'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2358' u='c' c='ata_pci_sff_prepare_host'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2247'>/**
 *	ata_pci_sff_init_host - acquire native PCI ATA resources and init host
 *	@host: target ATA host
 *
 *	Acquire native PCI ATA resources for @host and initialize the
 *	first two ports of @host accordingly.  Ports marked dummy are
 *	skipped and allocation failure makes the port dummy.
 *
 *	Note that native PCI resources are valid even for legacy hosts
 *	as we fix up pdev resources array early in boot, so this
 *	function can be used for both native and legacy SFF hosts.
 *
 *	LOCKING:
 *	Inherited from calling layer (may sleep).
 *
 *	RETURNS:
 *	0 if at least one port is initialized, -ENODEV if no port is
 *	available.
 */</doc>
<dec f='linux-4.14.y/include/linux/libata.h' l='1866' type='int ata_pci_sff_init_host(struct ata_host * host)'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2266' ll='2323' type='int ata_pci_sff_init_host(struct ata_host * host)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' type='int ata_pci_sff_init_host(struct ata_host * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' c='ata_pci_sff_init_host'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2324' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2358' u='c' c='ata_pci_sff_prepare_host'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2247'>/**
 *	ata_pci_sff_init_host - acquire native PCI ATA resources and init host
 *	@host: target ATA host
 *
 *	Acquire native PCI ATA resources for @host and initialize the
 *	first two ports of @host accordingly.  Ports marked dummy are
 *	skipped and allocation failure makes the port dummy.
 *
 *	Note that native PCI resources are valid even for legacy hosts
 *	as we fix up pdev resources array early in boot, so this
 *	function can be used for both native and legacy SFF hosts.
 *
 *	LOCKING:
 *	Inherited from calling layer (may sleep).
 *
 *	RETURNS:
 *	0 if at least one port is initialized, -ENODEV if no port is
 *	available.
 */</doc>
