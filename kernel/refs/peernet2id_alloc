<dec f='linux-4.18.y/include/net/net_namespace.h' l='314' type='int peernet2id_alloc(struct net * net, struct net * peer)'/>
<use f='linux-4.18.y/net/core/dev.c' l='8679' u='c' c='dev_change_net_namespace'/>
<def f='linux-4.18.y/net/core/net_namespace.c' l='232' ll='255' type='int peernet2id_alloc(struct net * net, struct net * peer)'/>
<dec f='linux-4.18.y/net/core/net_namespace.c' l='256' type='int peernet2id_alloc(struct net * , struct net * )'/>
<use f='linux-4.18.y/net/core/net_namespace.c' l='256' c='peernet2id_alloc'/>
<use f='linux-4.18.y/net/core/net_namespace.c' l='256' u='a'/>
<use f='linux-4.18.y/net/core/net_namespace.c' l='256' u='a'/>
<doc f='linux-4.18.y/net/core/net_namespace.c' l='229'>/* This function returns the id of a peer netns. If no id is assigned, one will
 * be allocated and returned.
 */</doc>
<use f='linux-4.18.y/net/core/rtnetlink.c' l='1481' u='c' c='rtnl_fill_link_netnsid'/>
<use f='linux-4.18.y/net/openvswitch/datapath.c' l='1867' u='c' c='ovs_vport_cmd_fill_info'/>
