<dec f='linux-4.18.y/include/net/tcp.h' l='1322' type='void tcp_openreq_init_rwin(struct request_sock * req, const struct sock * sk_listener, const struct dst_entry * dst)'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='6461' u='c' c='tcp_conn_request'/>
<def f='linux-4.18.y/net/ipv4/tcp_minisocks.c' l='352' ll='389' type='void tcp_openreq_init_rwin(struct request_sock * req, const struct sock * sk_listener, const struct dst_entry * dst)'/>
<dec f='linux-4.18.y/net/ipv4/tcp_minisocks.c' l='390' type='void tcp_openreq_init_rwin(struct request_sock * , const struct sock * , const struct dst_entry * )'/>
<use f='linux-4.18.y/net/ipv4/tcp_minisocks.c' l='390' c='tcp_openreq_init_rwin'/>
<use f='linux-4.18.y/net/ipv4/tcp_minisocks.c' l='390' u='a'/>
<use f='linux-4.18.y/net/ipv4/tcp_minisocks.c' l='390' u='a'/>
<doc f='linux-4.18.y/net/ipv4/tcp_minisocks.c' l='349'>/* Warning : This function is called without sk_listener being locked.
 * Be sure to read socket fields once, as their value could change under us.
 */</doc>
