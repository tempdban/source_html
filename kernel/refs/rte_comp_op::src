<dec f='linux-4.18.y/lib/librte_compressdev/rte_comp.h' l='343' type='struct (anonymous struct at /home/tempdban/dpdk/build/include/rte_comp.h:328:2)'/>
<offset>384</offset>
<doc f='linux-4.18.y/lib/librte_compressdev/rte_comp.h' l='319'>/**&lt; destination mbuf
	 * The total size of the output buffer(s) can be retrieved using
	 * rte_pktmbuf_data_len(m_dst). The max data size which can fit in a
	 * single mbuf is limited by the uint16_t rte_mbuf.data_len to 64k-1.
	 * If the output data is expected to be bigger than this a chain of
	 * mbufs can be passed to the PMD if the PMD&apos;s capabilities indicate
	 * it supports this.
	 */</doc>
<use f='linux-4.18.y/drivers/compress/qat/qat_comp.c' l='46' u='m' c='qat_comp_build_request'/>
<use f='linux-4.18.y/drivers/compress/qat/qat_comp.c' l='58' u='m' c='qat_comp_build_request'/>
<use f='linux-4.18.y/drivers/compress/qat/qat_comp.c' l='60' u='m' c='qat_comp_build_request'/>
<use f='linux-4.18.y/drivers/compress/qat/qat_comp.c' l='88' u='m' c='qat_comp_build_request'/>
<use f='linux-4.18.y/drivers/compress/qat/qat_comp.c' l='93' u='m' c='qat_comp_build_request'/>
<use f='linux-4.18.y/drivers/compress/octeontx/otx_zip.h' l='170' u='m' c='zipvf_prepare_in_buf'/>
<use f='linux-4.18.y/drivers/compress/octeontx/otx_zip.h' l='171' u='m' c='zipvf_prepare_in_buf'/>
<use f='linux-4.18.y/drivers/compress/octeontx/otx_zip_pmd.c' l='53' u='m' c='zip_process_op'/>
