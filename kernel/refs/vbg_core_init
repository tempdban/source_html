<dec f='linux-4.18.y/drivers/virt/vboxguest/vboxguest_core.h' l='163' type='int vbg_core_init(struct vbg_dev * gdev, u32 fixed_events)'/>
<def f='linux-4.18.y/drivers/virt/vboxguest/vboxguest_core.c' l='768' ll='858' type='int vbg_core_init(struct vbg_dev * gdev, u32 fixed_events)'/>
<doc f='linux-4.18.y/drivers/virt/vboxguest/vboxguest_core.c' l='753'>/**
 * Initializes the VBoxGuest device extension when the
 * device driver is loaded.
 *
 * The native code locates the VMMDev on the PCI bus and retrieve
 * the MMIO and I/O port ranges, this function will take care of
 * mapping the MMIO memory (if present). Upon successful return
 * the native code should set up the interrupt handler.
 *
 * Return: 0 or negative errno value.
 *
 * @gdev:		The Guest extension device.
 * @fixed_events:	Events that will be enabled upon init and no client
 *			will ever be allowed to mask.
 */</doc>
<use f='linux-4.18.y/drivers/virt/vboxguest/vboxguest_linux.c' l='333' u='c' c='vbg_pci_probe'/>
