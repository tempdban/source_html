<dec f='linux-4.18.y/include/drm/drm_vblank.h' l='198' type='u64 drm_crtc_accurate_vblank_count(struct drm_crtc * crtc)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='298' ll='316' type='u64 drm_crtc_accurate_vblank_count(struct drm_crtc * crtc)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='317' type='u64 drm_crtc_accurate_vblank_count(struct drm_crtc * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='317' c='drm_crtc_accurate_vblank_count'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='317' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='317' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='888' u='c' c='drm_crtc_arm_vblank_event'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_vblank.c' l='287'>/**
 * drm_crtc_accurate_vblank_count - retrieve the master vblank counter
 * @crtc: which counter to retrieve
 *
 * This function is similar to drm_crtc_vblank_count() but this function
 * interpolates to handle a race with vblank interrupts using the high precision
 * timestamping support.
 *
 * This is mostly useful for hardware that can obtain the scanout position, but
 * doesn&apos;t have a hardware frame counter.
 */</doc>
