<dec f='linux-4.14.y/include/uapi/linux/perf_event.h' l='555' type='__u64'/>
<offset>512</offset>
<doc f='linux-4.14.y/include/uapi/linux/perf_event.h' l='539'>/*
	 * If cap_usr_time_zero, the hardware clock (e.g. TSC) can be calculated
	 * from sample timestamps.
	 *
	 *   time = timestamp - time_zero;
	 *   quot = time / time_mult;
	 *   rem  = time % time_mult;
	 *   cyc = (quot &lt;&lt; time_shift) + (rem &lt;&lt; time_shift) / time_mult;
	 *
	 * And vice versa:
	 *
	 *   quot = cyc &gt;&gt; time_shift;
	 *   rem  = cyc &amp; (((u64)1 &lt;&lt; time_shift) - 1);
	 *   timestamp = time_zero + quot * time_mult +
	 *               ((rem * time_mult) &gt;&gt; time_shift);
	 */</doc>
<use f='linux-4.14.y/arch/x86/events/core.c' l='2333' u='w' c='arch_perf_update_userpage'/>
<dec f='linux-4.14.y/include/uapi/linux/perf_event.h' l='555' type='__u64'/>
<offset>512</offset>
<doc f='linux-4.14.y/include/uapi/linux/perf_event.h' l='539'>/*
	 * If cap_usr_time_zero, the hardware clock (e.g. TSC) can be calculated
	 * from sample timestamps.
	 *
	 *   time = timestamp - time_zero;
	 *   quot = time / time_mult;
	 *   rem  = time % time_mult;
	 *   cyc = (quot &lt;&lt; time_shift) + (rem &lt;&lt; time_shift) / time_mult;
	 *
	 * And vice versa:
	 *
	 *   quot = cyc &gt;&gt; time_shift;
	 *   rem  = cyc &amp; (((u64)1 &lt;&lt; time_shift) - 1);
	 *   timestamp = time_zero + quot * time_mult +
	 *               ((rem * time_mult) &gt;&gt; time_shift);
	 */</doc>
<use f='linux-4.14.y/arch/x86/events/core.c' l='2333' u='w' c='arch_perf_update_userpage'/>
