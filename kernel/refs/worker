<def f='linux-4.18.y/kernel/workqueue_internal.h' l='24' ll='56'/>
<size>136</size>
<doc f='linux-4.18.y/kernel/workqueue_internal.h' l='17'>/*
 * The poor guys doing the actual heavy lifting.  All on-duty workers are
 * either serving the manager role, on idle list or on busy hash.  For
 * details on the locking annotation (L, I, X...), refer to workqueue.c.
 *
 * Only to be used in workqueue and async.
 */</doc>
<mbr r='worker::current_work' o='128' t='struct work_struct *'/>
<mbr r='worker::current_func' o='192' t='work_func_t'/>
<mbr r='worker::current_pwq' o='256' t='struct pool_workqueue *'/>
<mbr r='worker::scheduled' o='320' t='struct list_head'/>
<mbr r='worker::task' o='448' t='struct task_struct *'/>
<mbr r='worker::pool' o='512' t='struct worker_pool *'/>
<mbr r='worker::node' o='576' t='struct list_head'/>
<mbr r='worker::last_active' o='704' t='unsigned long'/>
<mbr r='worker::flags' o='768' t='unsigned int'/>
<mbr r='worker::id' o='800' t='int'/>
<mbr r='worker::desc' o='832' t='char [24]'/>
<mbr r='worker::rescue_wq' o='1024' t='struct workqueue_struct *'/>
