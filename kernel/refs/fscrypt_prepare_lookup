<def f='linux-4.18.y/include/linux/fscrypt.h' l='156' ll='163' type='int fscrypt_prepare_lookup(struct inode * dir, struct dentry * dentry, unsigned int flags)'/>
<doc f='linux-4.18.y/include/linux/fscrypt.h' l='137'>/**
 * fscrypt_prepare_lookup - prepare to lookup a name in a possibly-encrypted directory
 * @dir: directory being searched
 * @dentry: filename being looked up
 * @flags: lookup flags
 *
 * Prepare for -&gt;lookup() in a directory which may be encrypted.  Lookups can be
 * done with or without the directory&apos;s encryption key; without the key,
 * filenames are presented in encrypted form.  Therefore, we&apos;ll try to set up
 * the directory&apos;s encryption key, but even without it the lookup can continue.
 *
 * To allow invalidating stale dentries if the directory&apos;s encryption key is
 * added later, we also install a custom -&gt;d_revalidate() method and use the
 * DCACHE_ENCRYPTED_WITH_KEY flag to indicate whether a given dentry is a
 * plaintext name (flag set) or a ciphertext name (flag cleared).
 *
 * Return: 0 on success, -errno if a problem occurred while setting up the
 * encryption key
 */</doc>
<use f='linux-4.18.y/fs/ext4/namei.c' l='1550' u='c' c='ext4_lookup'/>
<use f='linux-4.18.y/fs/f2fs/namei.c' l='436' u='c' c='f2fs_lookup'/>
