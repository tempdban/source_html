<dec f='linux-4.14.y/include/linux/mmu_notifier.h' l='203' type='int __mmu_notifier_clear_flush_young(struct mm_struct * mm, unsigned long start, unsigned long end)'/>
<use f='linux-4.14.y/include/linux/mmu_notifier.h' l='231' u='c' c='mmu_notifier_clear_flush_young'/>
<def f='linux-4.14.y/mm/mmu_notifier.c' l='110' ll='125' type='int __mmu_notifier_clear_flush_young(struct mm_struct * mm, unsigned long start, unsigned long end)'/>
<doc f='linux-4.14.y/mm/mmu_notifier.c' l='105'>/*
 * If no young bitflag is supported by the hardware, -&gt;clear_flush_young can
 * unmap the address and return 1 or 0 depending if the mapping previously
 * existed or not.
 */</doc>
<dec f='linux-4.14.y/include/linux/mmu_notifier.h' l='203' type='int __mmu_notifier_clear_flush_young(struct mm_struct * mm, unsigned long start, unsigned long end)'/>
<use f='linux-4.14.y/include/linux/mmu_notifier.h' l='231' u='c' c='mmu_notifier_clear_flush_young'/>
<def f='linux-4.14.y/mm/mmu_notifier.c' l='110' ll='125' type='int __mmu_notifier_clear_flush_young(struct mm_struct * mm, unsigned long start, unsigned long end)'/>
<doc f='linux-4.14.y/mm/mmu_notifier.c' l='105'>/*
 * If no young bitflag is supported by the hardware, -&gt;clear_flush_young can
 * unmap the address and return 1 or 0 depending if the mapping previously
 * existed or not.
 */</doc>
