<def f='linux-4.18.y/include/linux/dma-fence.h' l='485' ll='491' type='int dma_fence_get_status_locked(struct dma_fence * fence)'/>
<doc f='linux-4.18.y/include/linux/dma-fence.h' l='471'>/**
 * dma_fence_get_status_locked - returns the status upon completion
 * @fence: the dma_fence to query
 *
 * Drivers can supply an optional error status condition before they signal
 * the fence (to indicate whether the fence was completed due to an error
 * rather than success). The value of the status condition is only valid
 * if the fence has been signaled, dma_fence_get_status_locked() first checks
 * the signal state before reporting the error status.
 *
 * Returns 0 if the fence has not yet been signaled, 1 if the fence has
 * been signaled without an error condition, or a negative error code
 * if the fence has been completed in err.
 */</doc>
<use f='linux-4.18.y/drivers/dma-buf/dma-fence.c' l='301' u='c' c='dma_fence_get_status'/>
