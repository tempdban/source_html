<dec f='linux-4.14.y/include/linux/buffer_head.h' l='199' type='int __sync_dirty_buffer(struct buffer_head * bh, int op_flags)'/>
<def f='linux-4.14.y/fs/buffer.c' l='3227' ll='3244' type='int __sync_dirty_buffer(struct buffer_head * bh, int op_flags)'/>
<dec f='linux-4.14.y/fs/buffer.c' l='3245' type='int __sync_dirty_buffer(struct buffer_head * , int )'/>
<use f='linux-4.14.y/fs/buffer.c' l='3245' c='__sync_dirty_buffer'/>
<use f='linux-4.14.y/fs/buffer.c' l='3245' u='a'/>
<use f='linux-4.14.y/fs/buffer.c' l='3245' u='a'/>
<use f='linux-4.14.y/fs/buffer.c' l='3249' u='c' c='sync_dirty_buffer'/>
<doc f='linux-4.14.y/fs/buffer.c' l='3222'>/*
 * For a data-integrity writeout, we need to wait upon any in-progress I/O
 * and then start new I/O and then wait upon it.  The caller must have a ref on
 * the buffer_head.
 */</doc>
<use f='linux-4.14.y/fs/ext4/super.c' l='4813' u='c' c='ext4_commit_super'/>
<use f='linux-4.14.y/fs/f2fs/super.c' l='1689' u='c' c='__f2fs_commit_super'/>
