<dec f='linux-4.14.y/fs/ext4/ext4.h' l='2995' type='int ext4_try_to_write_inline_data(struct address_space * mapping, struct inode * inode, loff_t pos, unsigned int len, unsigned int flags, struct page ** pagep)'/>
<def f='linux-4.14.y/fs/ext4/inline.c' l='651' ll='726' type='int ext4_try_to_write_inline_data(struct address_space * mapping, struct inode * inode, loff_t pos, unsigned int len, unsigned int flags, struct page ** pagep)'/>
<doc f='linux-4.14.y/fs/ext4/inline.c' l='645'>/*
 * Try to write data in the inode.
 * If the inode has inline data, check whether the new write can be
 * in the inode also. If not, create the page the handle, move the data
 * to the page make it update and let the later codes create extent for it.
 */</doc>
<use f='linux-4.14.y/fs/ext4/inode.c' l='1266' u='c' c='ext4_write_begin'/>
