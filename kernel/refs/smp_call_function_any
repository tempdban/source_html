<dec f='linux-4.14.y/include/linux/smp.h' l='104' type='int smp_call_function_any(const struct cpumask * mask, smp_call_func_t func, void * info, int wait)'/>
<def f='linux-4.14.y/kernel/smp.c' l='360' ll='386' type='int smp_call_function_any(const struct cpumask * mask, smp_call_func_t func, void * info, int wait)'/>
<dec f='linux-4.14.y/kernel/smp.c' l='387' type='int smp_call_function_any(const struct cpumask * , smp_call_func_t , void * , int )'/>
<use f='linux-4.14.y/kernel/smp.c' l='387' c='smp_call_function_any'/>
<use f='linux-4.14.y/kernel/smp.c' l='387' u='a'/>
<use f='linux-4.14.y/kernel/smp.c' l='387' u='a'/>
<doc f='linux-4.14.y/kernel/smp.c' l='346'>/*
 * smp_call_function_any - Run a function on any of the given cpus
 * @mask: The mask of cpus it can run on.
 * @func: The function to run. This must be fast and non-blocking.
 * @info: An arbitrary pointer to pass to the function.
 * @wait: If true, wait until function has completed.
 *
 * Returns 0 on success, else a negative status code (if no cpus were online).
 *
 * Selection preference:
 *	1) current cpu if in @mask
 *	2) any cpu of current node if in @mask
 *	3) any other online cpu in @mask
 */</doc>
<dec f='linux-4.14.y/include/linux/smp.h' l='104' type='int smp_call_function_any(const struct cpumask * mask, smp_call_func_t func, void * info, int wait)'/>
<def f='linux-4.14.y/kernel/smp.c' l='360' ll='386' type='int smp_call_function_any(const struct cpumask * mask, smp_call_func_t func, void * info, int wait)'/>
<dec f='linux-4.14.y/kernel/smp.c' l='387' type='int smp_call_function_any(const struct cpumask * , smp_call_func_t , void * , int )'/>
<use f='linux-4.14.y/kernel/smp.c' l='387' c='smp_call_function_any'/>
<use f='linux-4.14.y/kernel/smp.c' l='387' u='a'/>
<use f='linux-4.14.y/kernel/smp.c' l='387' u='a'/>
<doc f='linux-4.14.y/kernel/smp.c' l='346'>/*
 * smp_call_function_any - Run a function on any of the given cpus
 * @mask: The mask of cpus it can run on.
 * @func: The function to run. This must be fast and non-blocking.
 * @info: An arbitrary pointer to pass to the function.
 * @wait: If true, wait until function has completed.
 *
 * Returns 0 on success, else a negative status code (if no cpus were online).
 *
 * Selection preference:
 *	1) current cpu if in @mask
 *	2) any cpu of current node if in @mask
 *	3) any other online cpu in @mask
 */</doc>
