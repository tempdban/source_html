<def f='linux-4.14.y/include/linux/serdev.h' l='47' ll='54'/>
<size>560</size>
<doc f='linux-4.14.y/include/linux/serdev.h' l='38'>/**
 * struct serdev_device - Basic representation of an serdev device
 * @dev:	Driver model representation of the device.
 * @nr:		Device number on serdev bus.
 * @ctrl:	serdev controller managing this device.
 * @ops:	Device operations.
 * @write_comp	Completion used by serdev_device_write() internally
 * @write_lock	Lock to serialize access when writing data
 */</doc>
<mbr r='serdev_device::dev' o='0' t='struct device'/>
<mbr r='serdev_device::nr' o='3776' t='int'/>
<mbr r='serdev_device::ctrl' o='3840' t='struct serdev_controller *'/>
<mbr r='serdev_device::ops' o='3904' t='const struct serdev_device_ops *'/>
<mbr r='serdev_device::write_comp' o='3968' t='struct completion'/>
<mbr r='serdev_device::write_lock' o='4224' t='struct mutex'/>
<def f='linux-4.14.y/include/linux/serdev.h' l='47' ll='54'/>
<size>560</size>
<doc f='linux-4.14.y/include/linux/serdev.h' l='38'>/**
 * struct serdev_device - Basic representation of an serdev device
 * @dev:	Driver model representation of the device.
 * @nr:		Device number on serdev bus.
 * @ctrl:	serdev controller managing this device.
 * @ops:	Device operations.
 * @write_comp	Completion used by serdev_device_write() internally
 * @write_lock	Lock to serialize access when writing data
 */</doc>
<mbr r='serdev_device::dev' o='0' t='struct device'/>
<mbr r='serdev_device::nr' o='3776' t='int'/>
<mbr r='serdev_device::ctrl' o='3840' t='struct serdev_controller *'/>
<mbr r='serdev_device::ops' o='3904' t='const struct serdev_device_ops *'/>
<mbr r='serdev_device::write_comp' o='3968' t='struct completion'/>
<mbr r='serdev_device::write_lock' o='4224' t='struct mutex'/>
