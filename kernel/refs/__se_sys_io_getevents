<dec f='linux-4.18.y/fs/aio.c' l='1881' macro='1' type='long __se_sys_io_getevents(typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((aio_context_t)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((aio_context_t)0), typeof (0ULL))), 0LL, 0L)) ctx_id, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((long)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((long)0), typeof (0ULL))), 0LL, 0L)) min_nr, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((long)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((long)0), typeof (0ULL))), 0LL, 0L)) nr, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct io_event *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct io_event *)0), typeof (0ULL))), 0LL, 0L)) events, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0ULL))), 0LL, 0L)) timeout)'/>
<use f='linux-4.18.y/fs/aio.c' l='1881' macro='1' u='c'/>
<use f='linux-4.18.y/fs/aio.c' l='1881' macro='1' u='c'/>
<def f='linux-4.18.y/fs/aio.c' l='1881' macro='1' type='long __se_sys_io_getevents(typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((aio_context_t)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((aio_context_t)0), typeof (0ULL))), 0LL, 0L)) ctx_id, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((long)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((long)0), typeof (0ULL))), 0LL, 0L)) min_nr, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((long)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((long)0), typeof (0ULL))), 0LL, 0L)) nr, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct io_event *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct io_event *)0), typeof (0ULL))), 0LL, 0L)) events, typeof (__builtin_choose_expr((__builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0LL)) || __builtin_types_compatible_p(typeof ((struct timespec *)0), typeof (0ULL))), 0LL, 0L)) timeout)'/>
