<dec f='linux-4.14.y/include/linux/stop_machine.h' l='36' type='int try_stop_cpus(const struct cpumask * cpumask, cpu_stop_fn_t fn, void * arg)'/>
<def f='linux-4.14.y/kernel/stop_machine.c' l='446' ll='456' type='int try_stop_cpus(const struct cpumask * cpumask, cpu_stop_fn_t fn, void * arg)'/>
<doc f='linux-4.14.y/kernel/stop_machine.c' l='428'>/**
 * try_stop_cpus - try to stop multiple cpus
 * @cpumask: cpus to stop
 * @fn: function to execute
 * @arg: argument to @fn
 *
 * Identical to stop_cpus() except that it fails with -EAGAIN if
 * someone else is already using the facility.
 *
 * CONTEXT:
 * Might sleep.
 *
 * RETURNS:
 * -EAGAIN if someone else is already stopping cpus, -ENOENT if
 * @fn(@arg) was not executed at all because all cpus in @cpumask were
 * offline; otherwise, 0 if all executions of @fn returned 0, any non
 * zero return value if any returned non zero.
 */</doc>
