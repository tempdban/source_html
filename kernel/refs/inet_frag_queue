<def f='linux-4.14.y/include/net/inet_frag.h' l='45' ll='59'/>
<size>144</size>
<doc f='linux-4.14.y/include/net/inet_frag.h' l='28'>/**
 * struct inet_frag_queue - fragment queue
 *
 * @lock: spinlock protecting the queue
 * @timer: queue expiration timer
 * @list: hash bucket list
 * @refcnt: reference count of the queue
 * @fragments: received fragments head
 * @fragments_tail: received fragments tail
 * @stamp: timestamp of the last received fragment
 * @len: total length of the original datagram
 * @meat: length of received fragments so far
 * @flags: fragment queue flags
 * @max_size: maximum received fragment size
 * @net: namespace that this frag belongs to
 * @list_evictor: list of queues to forcefully evict (e.g. due to low memory)
 */</doc>
<mbr r='inet_frag_queue::lock' o='0' t='spinlock_t'/>
<mbr r='inet_frag_queue::timer' o='64' t='struct timer_list'/>
<mbr r='inet_frag_queue::list' o='448' t='struct hlist_node'/>
<mbr r='inet_frag_queue::refcnt' o='576' t='refcount_t'/>
<mbr r='inet_frag_queue::fragments' o='640' t='struct sk_buff *'/>
<mbr r='inet_frag_queue::fragments_tail' o='704' t='struct sk_buff *'/>
<mbr r='inet_frag_queue::stamp' o='768' t='ktime_t'/>
<mbr r='inet_frag_queue::len' o='832' t='int'/>
<mbr r='inet_frag_queue::meat' o='864' t='int'/>
<mbr r='inet_frag_queue::flags' o='896' t='__u8'/>
<mbr r='inet_frag_queue::max_size' o='912' t='u16'/>
<mbr r='inet_frag_queue::net' o='960' t='struct netns_frags *'/>
<mbr r='inet_frag_queue::list_evictor' o='1024' t='struct hlist_node'/>
<def f='linux-4.14.y/include/net/inet_frag.h' l='45' ll='59'/>
<size>144</size>
<doc f='linux-4.14.y/include/net/inet_frag.h' l='28'>/**
 * struct inet_frag_queue - fragment queue
 *
 * @lock: spinlock protecting the queue
 * @timer: queue expiration timer
 * @list: hash bucket list
 * @refcnt: reference count of the queue
 * @fragments: received fragments head
 * @fragments_tail: received fragments tail
 * @stamp: timestamp of the last received fragment
 * @len: total length of the original datagram
 * @meat: length of received fragments so far
 * @flags: fragment queue flags
 * @max_size: maximum received fragment size
 * @net: namespace that this frag belongs to
 * @list_evictor: list of queues to forcefully evict (e.g. due to low memory)
 */</doc>
<mbr r='inet_frag_queue::lock' o='0' t='spinlock_t'/>
<mbr r='inet_frag_queue::timer' o='64' t='struct timer_list'/>
<mbr r='inet_frag_queue::list' o='448' t='struct hlist_node'/>
<mbr r='inet_frag_queue::refcnt' o='576' t='refcount_t'/>
<mbr r='inet_frag_queue::fragments' o='640' t='struct sk_buff *'/>
<mbr r='inet_frag_queue::fragments_tail' o='704' t='struct sk_buff *'/>
<mbr r='inet_frag_queue::stamp' o='768' t='ktime_t'/>
<mbr r='inet_frag_queue::len' o='832' t='int'/>
<mbr r='inet_frag_queue::meat' o='864' t='int'/>
<mbr r='inet_frag_queue::flags' o='896' t='__u8'/>
<mbr r='inet_frag_queue::max_size' o='912' t='u16'/>
<mbr r='inet_frag_queue::net' o='960' t='struct netns_frags *'/>
<mbr r='inet_frag_queue::list_evictor' o='1024' t='struct hlist_node'/>
