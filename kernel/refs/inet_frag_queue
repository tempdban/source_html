<def f='linux-4.18.y/include/net/inet_frag.h' l='69' ll='87'/>
<size>168</size>
<doc f='linux-4.18.y/include/net/inet_frag.h' l='51'>/**
 * struct inet_frag_queue - fragment queue
 *
 * @node: rhash node
 * @key: keys identifying this frag.
 * @timer: queue expiration timer
 * @lock: spinlock protecting this frag
 * @refcnt: reference count of the queue
 * @fragments: received fragments head
 * @fragments_tail: received fragments tail
 * @stamp: timestamp of the last received fragment
 * @len: total length of the original datagram
 * @meat: length of received fragments so far
 * @flags: fragment queue flags
 * @max_size: maximum received fragment size
 * @net: namespace that this frag belongs to
 * @rcu: rcu head for freeing deferall
 */</doc>
<mbr r='inet_frag_queue::node' o='0' t='struct rhash_head'/>
<mbr r='inet_frag_queue::key' o='64' t='union (anonymous union at /home/tempdban/kernel/stable/./include/net/inet_frag.h:71:2)'/>
<mbr r='inet_frag_queue::timer' o='448' t='struct timer_list'/>
<mbr r='inet_frag_queue::lock' o='768' t='spinlock_t'/>
<mbr r='inet_frag_queue::refcnt' o='800' t='refcount_t'/>
<mbr r='inet_frag_queue::fragments' o='832' t='struct sk_buff *'/>
<mbr r='inet_frag_queue::fragments_tail' o='896' t='struct sk_buff *'/>
<mbr r='inet_frag_queue::stamp' o='960' t='ktime_t'/>
<mbr r='inet_frag_queue::len' o='1024' t='int'/>
<mbr r='inet_frag_queue::meat' o='1056' t='int'/>
<mbr r='inet_frag_queue::flags' o='1088' t='__u8'/>
<mbr r='inet_frag_queue::max_size' o='1104' t='u16'/>
<mbr r='inet_frag_queue::net' o='1152' t='struct netns_frags *'/>
<mbr r='inet_frag_queue::rcu' o='1216' t='struct callback_head'/>
