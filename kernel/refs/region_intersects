<dec f='linux-4.18.y/include/linux/mm.h' l='541' type='int region_intersects(resource_size_t offset, size_t size, unsigned long flags, unsigned long desc)'/>
<use f='linux-4.18.y/arch/x86/mm/init.c' l='711' u='c' c='devmem_is_allowed'/>
<use f='linux-4.18.y/arch/x86/mm/ioremap.c' l='493' u='c' c='memremap_should_map_decrypted'/>
<use f='linux-4.18.y/kernel/iomem.c' l='73' u='c' c='memremap'/>
<def f='linux-4.18.y/kernel/resource.c' l='527' ll='556' type='int region_intersects(resource_size_t start, size_t size, unsigned long flags, unsigned long desc)'/>
<dec f='linux-4.18.y/kernel/resource.c' l='557' type='int region_intersects(resource_size_t , size_t , unsigned long , unsigned long )'/>
<use f='linux-4.18.y/kernel/resource.c' l='557' c='region_intersects'/>
<use f='linux-4.18.y/kernel/resource.c' l='557' u='a'/>
<use f='linux-4.18.y/kernel/resource.c' l='557' u='a'/>
<doc f='linux-4.18.y/kernel/resource.c' l='507'>/**
 * region_intersects() - determine intersection of region with known resources
 * @start: region start address
 * @size: size of region
 * @flags: flags of resource (in iomem_resource)
 * @desc: descriptor of resource (in iomem_resource) or IORES_DESC_NONE
 *
 * Check if the specified region partially overlaps or fully eclipses a
 * resource identified by @flags and @desc (optional with IORES_DESC_NONE).
 * Return REGION_DISJOINT if the region does not overlap @flags/@desc,
 * return REGION_MIXED if the region overlaps @flags/@desc and another
 * resource, and return REGION_INTERSECTS if the region overlaps @flags/@desc
 * and no other defined resource. Note that REGION_INTERSECTS is also
 * returned in the case when the specified region overlaps RAM and undefined
 * memory holes.
 *
 * region_intersect() is used by memory remapping functions to ensure
 * the user is not remapping RAM and is a vast speed up over walking
 * through the resource table page by page.
 */</doc>
