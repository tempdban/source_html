<dec f='linux-4.14.y/include/linux/netlink.h' l='231' type='bool netlink_ns_capable(const struct sk_buff * skb, struct user_namespace * ns, int cap)'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='1971' u='c' c='do_setlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2666' u='c' c='rtnl_newlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2678' u='c' c='rtnl_newlink'/>
<def f='linux-4.14.y/net/netlink/af_netlink.c' l='851' ll='855' type='bool netlink_ns_capable(const struct sk_buff * skb, struct user_namespace * user_ns, int cap)'/>
<dec f='linux-4.14.y/net/netlink/af_netlink.c' l='856' type='bool netlink_ns_capable(const struct sk_buff * , struct user_namespace * , int )'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='856' c='netlink_ns_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='856' u='a'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='856' u='a'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='869' u='c' c='netlink_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='885' u='c' c='netlink_net_capable'/>
<doc f='linux-4.14.y/net/netlink/af_netlink.c' l='841'>/**
 * netlink_ns_capable - General netlink message capability test
 * @skb: socket buffer holding a netlink command from userspace
 * @user_ns: The user namespace of the capability to use
 * @cap: The capability to use
 *
 * Test to see if the opener of the socket we received the message
 * from had when the netlink socket was created and the sender of the
 * message has has the capability @cap in the user namespace @user_ns.
 */</doc>
<use f='linux-4.14.y/net/netlink/genetlink.c' l='528' u='c' c='genl_family_rcv_msg'/>
<dec f='linux-4.14.y/include/linux/netlink.h' l='231' type='bool netlink_ns_capable(const struct sk_buff * skb, struct user_namespace * ns, int cap)'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='1971' u='c' c='do_setlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2666' u='c' c='rtnl_newlink'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='2678' u='c' c='rtnl_newlink'/>
<def f='linux-4.14.y/net/netlink/af_netlink.c' l='851' ll='855' type='bool netlink_ns_capable(const struct sk_buff * skb, struct user_namespace * user_ns, int cap)'/>
<dec f='linux-4.14.y/net/netlink/af_netlink.c' l='856' type='bool netlink_ns_capable(const struct sk_buff * , struct user_namespace * , int )'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='856' c='netlink_ns_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='856' u='a'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='856' u='a'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='869' u='c' c='netlink_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='885' u='c' c='netlink_net_capable'/>
<doc f='linux-4.14.y/net/netlink/af_netlink.c' l='841'>/**
 * netlink_ns_capable - General netlink message capability test
 * @skb: socket buffer holding a netlink command from userspace
 * @user_ns: The user namespace of the capability to use
 * @cap: The capability to use
 *
 * Test to see if the opener of the socket we received the message
 * from had when the netlink socket was created and the sender of the
 * message has has the capability @cap in the user namespace @user_ns.
 */</doc>
<use f='linux-4.14.y/net/netlink/genetlink.c' l='528' u='c' c='genl_family_rcv_msg'/>
