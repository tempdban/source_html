<dec f='linux-4.18.y/include/linux/iova.h' l='147' type='void free_iova_fast(struct iova_domain * iovad, unsigned long pfn, unsigned long size)'/>
<use f='linux-4.18.y/drivers/iommu/amd_iommu.c' l='1571' u='c' c='dma_ops_free_iova'/>
<use f='linux-4.18.y/drivers/iommu/amd_iommu.c' l='2561' u='c' c='map_sg'/>
<use f='linux-4.18.y/drivers/iommu/intel-iommu.c' l='3689' u='c' c='__intel_map_single'/>
<use f='linux-4.18.y/drivers/iommu/intel-iommu.c' l='3736' u='c' c='intel_unmap'/>
<use f='linux-4.18.y/drivers/iommu/intel-iommu.c' l='3896' u='c' c='intel_map_sg'/>
<def f='linux-4.18.y/drivers/iommu/iova.c' l='441' ll='448' type='void free_iova_fast(struct iova_domain * iovad, unsigned long pfn, unsigned long size)'/>
<dec f='linux-4.18.y/drivers/iommu/iova.c' l='449' type='void free_iova_fast(struct iova_domain * , unsigned long , unsigned long )'/>
<use f='linux-4.18.y/drivers/iommu/iova.c' l='449' c='free_iova_fast'/>
<use f='linux-4.18.y/drivers/iommu/iova.c' l='449' u='a'/>
<use f='linux-4.18.y/drivers/iommu/iova.c' l='449' u='a'/>
<use f='linux-4.18.y/drivers/iommu/iova.c' l='486' u='c' c='fq_ring_free'/>
<doc f='linux-4.18.y/drivers/iommu/iova.c' l='433'>/**
 * free_iova_fast - free iova pfn range into rcache
 * @iovad: - iova domain in question.
 * @pfn: - pfn that is allocated previously
 * @size: - # of pages in range
 * This functions frees an iova range by trying to put it into the rcache,
 * falling back to regular iova deallocation via free_iova() if this fails.
 */</doc>
