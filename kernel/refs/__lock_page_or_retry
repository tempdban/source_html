<dec f='linux-4.14.y/include/linux/pagemap.h' l='462' type='int __lock_page_or_retry(struct page * page, struct mm_struct * mm, unsigned int flags)'/>
<use f='linux-4.14.y/include/linux/pagemap.h' l='506' u='c' c='lock_page_or_retry'/>
<def f='linux-4.14.y/mm/filemap.c' l='1197' ll='1227' type='int __lock_page_or_retry(struct page * page, struct mm_struct * mm, unsigned int flags)'/>
<doc f='linux-4.14.y/mm/filemap.c' l='1186'>/*
 * Return values:
 * 1 - page is locked; mmap_sem is still held.
 * 0 - page is not locked.
 *     mmap_sem has been released (up_read()), unless flags had both
 *     FAULT_FLAG_ALLOW_RETRY and FAULT_FLAG_RETRY_NOWAIT set, in
 *     which case mmap_sem is still held.
 *
 * If neither ALLOW_RETRY nor KILLABLE are set, will always return 1
 * with the page locked and the mmap_sem unperturbed.
 */</doc>
<dec f='linux-4.14.y/include/linux/pagemap.h' l='462' type='int __lock_page_or_retry(struct page * page, struct mm_struct * mm, unsigned int flags)'/>
<use f='linux-4.14.y/include/linux/pagemap.h' l='506' u='c' c='lock_page_or_retry'/>
<def f='linux-4.14.y/mm/filemap.c' l='1197' ll='1227' type='int __lock_page_or_retry(struct page * page, struct mm_struct * mm, unsigned int flags)'/>
<doc f='linux-4.14.y/mm/filemap.c' l='1186'>/*
 * Return values:
 * 1 - page is locked; mmap_sem is still held.
 * 0 - page is not locked.
 *     mmap_sem has been released (up_read()), unless flags had both
 *     FAULT_FLAG_ALLOW_RETRY and FAULT_FLAG_RETRY_NOWAIT set, in
 *     which case mmap_sem is still held.
 *
 * If neither ALLOW_RETRY nor KILLABLE are set, will always return 1
 * with the page locked and the mmap_sem unperturbed.
 */</doc>
