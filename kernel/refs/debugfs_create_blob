<dec f='linux-4.18.y/include/linux/debugfs.h' l='125' type='struct dentry * debugfs_create_blob(const char * name, umode_t mode, struct dentry * parent, struct debugfs_blob_wrapper * blob)'/>
<def f='linux-4.18.y/fs/debugfs/file.c' l='914' ll='919' type='struct dentry * debugfs_create_blob(const char * name, umode_t mode, struct dentry * parent, struct debugfs_blob_wrapper * blob)'/>
<dec f='linux-4.18.y/fs/debugfs/file.c' l='920' type='struct dentry * debugfs_create_blob(const char * , umode_t , struct dentry * , struct debugfs_blob_wrapper * )'/>
<use f='linux-4.18.y/fs/debugfs/file.c' l='920' c='debugfs_create_blob'/>
<use f='linux-4.18.y/fs/debugfs/file.c' l='920' u='a'/>
<use f='linux-4.18.y/fs/debugfs/file.c' l='920' u='a'/>
<doc f='linux-4.18.y/fs/debugfs/file.c' l='890'>/**
 * debugfs_create_blob - create a debugfs file that is used to read a binary blob
 * @name: a pointer to a string containing the name of the file to create.
 * @mode: the permission that the file should have
 * @parent: a pointer to the parent dentry for this file.  This should be a
 *          directory dentry if set.  If this parameter is %NULL, then the
 *          file will be created in the root of the debugfs filesystem.
 * @blob: a pointer to a struct debugfs_blob_wrapper which contains a pointer
 *        to the blob data and the size of the data.
 *
 * This function creates a file in debugfs with the given name that exports
 * @blob-&gt;data as a binary blob. If the @mode variable is so set it can be
 * read from. Writing is not supported.
 *
 * This function will return a pointer to a dentry if it succeeds.  This
 * pointer must be passed to the debugfs_remove() function when the file is
 * to be removed (no automatic cleanup happens if your module is unloaded,
 * you are responsible here.)  If an error occurs, %NULL will be returned.
 *
 * If debugfs is not enabled in the kernel, the value -%ENODEV will be
 * returned.  It is not wise to check for this value, but rather, check for
 * %NULL or !%NULL instead as to eliminate the need for #ifdef in the calling
 * code.
 */</doc>
