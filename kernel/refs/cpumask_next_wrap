<dec f='linux-4.18.y/include/linux/cpumask.h' l='245' type='int cpumask_next_wrap(int n, const struct cpumask * mask, int start, bool wrap)'/>
<use f='linux-4.18.y/kernel/sched/fair.c' l='6311' macro='1' u='c'/>
<use f='linux-4.18.y/kernel/sched/fair.c' l='6311' macro='1' u='c'/>
<use f='linux-4.18.y/kernel/sched/fair.c' l='6403' macro='1' u='c'/>
<use f='linux-4.18.y/kernel/sched/fair.c' l='6403' macro='1' u='c'/>
<use f='linux-4.18.y/kernel/sched/topology.c' l='709' macro='1' u='c'/>
<use f='linux-4.18.y/kernel/sched/topology.c' l='709' macro='1' u='c'/>
<use f='linux-4.18.y/kernel/sched/topology.c' l='879' macro='1' u='c'/>
<use f='linux-4.18.y/kernel/sched/topology.c' l='879' macro='1' u='c'/>
<def f='linux-4.18.y/lib/cpumask.c' l='76' ll='93' type='int cpumask_next_wrap(int n, const struct cpumask * mask, int start, bool wrap)'/>
<dec f='linux-4.18.y/lib/cpumask.c' l='94' type='int cpumask_next_wrap(int , const struct cpumask * , int , bool )'/>
<use f='linux-4.18.y/lib/cpumask.c' l='94' c='cpumask_next_wrap'/>
<use f='linux-4.18.y/lib/cpumask.c' l='94' u='a'/>
<use f='linux-4.18.y/lib/cpumask.c' l='94' u='a'/>
<doc f='linux-4.18.y/lib/cpumask.c' l='64'>/**
 * cpumask_next_wrap - helper to implement for_each_cpu_wrap
 * @n: the cpu prior to the place to search
 * @mask: the cpumask pointer
 * @start: the start point of the iteration
 * @wrap: assume @n crossing @start terminates the iteration
 *
 * Returns &gt;= nr_cpu_ids on completion
 *
 * Note: the @wrap argument is required for the start condition when
 * we cannot assume @start is set in @mask.
 */</doc>
