<dec f='linux-4.18.y/include/linux/acpi.h' l='428' type='int acpi_dev_get_dma_resources(struct acpi_device * adev, struct list_head * list)'/>
<def f='linux-4.18.y/drivers/acpi/resource.c' l='667' ll='671' type='int acpi_dev_get_dma_resources(struct acpi_device * adev, struct list_head * list)'/>
<dec f='linux-4.18.y/drivers/acpi/resource.c' l='672' type='int acpi_dev_get_dma_resources(struct acpi_device * , struct list_head * )'/>
<use f='linux-4.18.y/drivers/acpi/resource.c' l='672' c='acpi_dev_get_dma_resources'/>
<use f='linux-4.18.y/drivers/acpi/resource.c' l='672' u='a'/>
<use f='linux-4.18.y/drivers/acpi/resource.c' l='672' u='a'/>
<doc f='linux-4.18.y/drivers/acpi/resource.c' l='651'>/**
 * acpi_dev_get_dma_resources - Get current DMA resources of a device.
 * @adev: ACPI device node to get the resources for.
 * @list: Head of the resultant list of resources (must be empty).
 *
 * Evaluate the _DMA method for the given device node and process its
 * output.
 *
 * The resultant struct resource objects are put on the list pointed to
 * by @list, that must be empty initially, as members of struct
 * resource_entry objects.  Callers of this routine should use
 * %acpi_dev_free_resource_list() to free that list.
 *
 * The number of resources in the output list is returned on success,
 * an error code reflecting the error condition is returned otherwise.
 */</doc>
<use f='linux-4.18.y/drivers/acpi/scan.c' l='1415' u='c' c='acpi_dma_get_range'/>
