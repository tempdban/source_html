<dec f='linux-4.18.y/include/drm/drm_crtc_helper.h' l='79' type='void drm_kms_helper_poll_enable(struct drm_device * dev)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='190' u='c' c='drm_mode_config_helper_suspend'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_modeset_helper.c' l='230' u='c' c='drm_mode_config_helper_resume'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='225' ll='260' type='void drm_kms_helper_poll_enable(struct drm_device * dev)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='261' type='void drm_kms_helper_poll_enable(struct drm_device * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='261' c='drm_kms_helper_poll_enable'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='261' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='261' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='471' u='c' c='drm_helper_probe_single_connector_modes'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='722' u='c' c='drm_kms_helper_poll_init'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='210'>/**
 * drm_kms_helper_poll_enable - re-enable output polling.
 * @dev: drm_device
 *
 * This function re-enables the output polling work, after it has been
 * temporarily disabled using drm_kms_helper_poll_disable(), for example over
 * suspend/resume.
 *
 * Drivers can call this helper from their device resume implementation. It is
 * not an error to call this even when output polling isn&apos;t enabled.
 *
 * Note that calls to enable and disable polling must be strictly ordered, which
 * is automatically the case when they&apos;re only call from suspend/resume
 * callbacks.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_drv.c' l='184' u='c' c='qxl_drm_resume'/>
