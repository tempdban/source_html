<dec f='linux-4.18.y/include/linux/phy.h' l='1022' type='int phy_driver_register(struct phy_driver * new_driver, struct module * owner)'/>
<def f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1908' ll='1930' type='int phy_driver_register(struct phy_driver * new_driver, struct module * owner)'/>
<dec f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1931' type='int phy_driver_register(struct phy_driver * , struct module * )'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1931' c='phy_driver_register'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1931' u='a'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1931' u='a'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1939' u='c' c='phy_drivers_register'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1988' u='c' c='phy_init'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1992' u='c' c='phy_init'/>
<doc f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1903'>/**
 * phy_driver_register - register a phy_driver with the PHY layer
 * @new_driver: new phy_driver to register
 * @owner: module owning this PHY
 */</doc>
