<dec f='linux-4.14.y/include/linux/phy.h' l='894' type='int phy_driver_register(struct phy_driver * new_driver, struct module * owner)'/>
<def f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1858' ll='1880' type='int phy_driver_register(struct phy_driver * new_driver, struct module * owner)'/>
<dec f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1881' type='int phy_driver_register(struct phy_driver * , struct module * )'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1881' c='phy_driver_register'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1881' u='a'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1881' u='a'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1889' u='c' c='phy_drivers_register'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1940' u='c' c='phy_init'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1944' u='c' c='phy_init'/>
<doc f='linux-4.14.y/drivers/net/phy/phy_device.c' l='1853'>/**
 * phy_driver_register - register a phy_driver with the PHY layer
 * @new_driver: new phy_driver to register
 * @owner: module owning this PHY
 */</doc>
