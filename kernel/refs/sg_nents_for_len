<dec f='linux-4.14.y/include/linux/scatterlist.h' l='246' type='int sg_nents_for_len(struct scatterlist * sg, u64 len)'/>
<def f='linux-4.14.y/lib/scatterlist.c' l='73' ll='89' type='int sg_nents_for_len(struct scatterlist * sg, u64 len)'/>
<dec f='linux-4.14.y/lib/scatterlist.c' l='90' type='int sg_nents_for_len(struct scatterlist * , u64 )'/>
<use f='linux-4.14.y/lib/scatterlist.c' l='90' c='sg_nents_for_len'/>
<use f='linux-4.14.y/lib/scatterlist.c' l='90' u='a'/>
<use f='linux-4.14.y/lib/scatterlist.c' l='90' u='a'/>
<doc f='linux-4.14.y/lib/scatterlist.c' l='59'>/**
 * sg_nents_for_len - return total count of entries in scatterlist
 *                    needed to satisfy the supplied length
 * @sg:		The scatterlist
 * @len:	The total required length
 *
 * Description:
 * Determines the number of entries in sg that are required to meet
 * the supplied length, taking into acount chaining as well
 *
 * Returns:
 *   the number of sg entries needed, negative error on failure
 *
 **/</doc>
<dec f='linux-4.14.y/include/linux/scatterlist.h' l='246' type='int sg_nents_for_len(struct scatterlist * sg, u64 len)'/>
<def f='linux-4.14.y/lib/scatterlist.c' l='73' ll='89' type='int sg_nents_for_len(struct scatterlist * sg, u64 len)'/>
<dec f='linux-4.14.y/lib/scatterlist.c' l='90' type='int sg_nents_for_len(struct scatterlist * , u64 )'/>
<use f='linux-4.14.y/lib/scatterlist.c' l='90' c='sg_nents_for_len'/>
<use f='linux-4.14.y/lib/scatterlist.c' l='90' u='a'/>
<use f='linux-4.14.y/lib/scatterlist.c' l='90' u='a'/>
<doc f='linux-4.14.y/lib/scatterlist.c' l='59'>/**
 * sg_nents_for_len - return total count of entries in scatterlist
 *                    needed to satisfy the supplied length
 * @sg:		The scatterlist
 * @len:	The total required length
 *
 * Description:
 * Determines the number of entries in sg that are required to meet
 * the supplied length, taking into acount chaining as well
 *
 * Returns:
 *   the number of sg entries needed, negative error on failure
 *
 **/</doc>
