<dec f='linux-4.14.y/include/drm/drm_vblank.h' l='162' type='bool drm_handle_vblank(struct drm_device * dev, unsigned int pipe)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='1544' ll='1594' type='bool drm_handle_vblank(struct drm_device * dev, unsigned int pipe)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='1595' type='bool drm_handle_vblank(struct drm_device * , unsigned int )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='1595' c='drm_handle_vblank'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='1595' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='1595' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='1611' u='c' c='drm_crtc_handle_vblank'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_vblank.c' l='1534'>/**
 * drm_handle_vblank - handle a vblank event
 * @dev: DRM device
 * @pipe: index of CRTC where this event occurred
 *
 * Drivers should call this routine in their vblank interrupt handlers to
 * update the vblank counter and send any signals that may be pending.
 *
 * This is the legacy version of drm_crtc_handle_vblank().
 */</doc>
