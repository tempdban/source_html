<def f='linux-4.14.y/include/net/netlink.h' l='1329' ll='1335' type='int nla_validate_nested(const struct nlattr * start, int maxtype, const struct nla_policy * policy, struct netlink_ext_ack * extack)'/>
<doc f='linux-4.14.y/include/net/netlink.h' l='1316'>/**
 * nla_validate_nested - Validate a stream of nested attributes
 * @start: container attribute
 * @maxtype: maximum attribute type to be expected
 * @policy: validation policy
 * @extack: extended ACK report struct
 *
 * Validates all attributes in the nested attribute stream against the
 * specified policy. Attributes with a type exceeding maxtype will be
 * ignored. See documenation of struct nla_policy for more details.
 *
 * Returns 0 on success or a negative error code.
 */</doc>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_netlink.c' l='921' u='c' c='ctnetlink_parse_tuple_ip'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_netlink.c' l='956' u='c' c='ctnetlink_parse_tuple_proto'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='102' u='c' c='netlbl_cipsov4_add_common'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='149' u='c' c='netlbl_cipsov4_add_std'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='173' u='c' c='netlbl_cipsov4_add_std'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='237' u='c' c='netlbl_cipsov4_add_std'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='246' u='c' c='netlbl_cipsov4_add_std'/>
<def f='linux-4.14.y/include/net/netlink.h' l='1329' ll='1335' type='int nla_validate_nested(const struct nlattr * start, int maxtype, const struct nla_policy * policy, struct netlink_ext_ack * extack)'/>
<doc f='linux-4.14.y/include/net/netlink.h' l='1316'>/**
 * nla_validate_nested - Validate a stream of nested attributes
 * @start: container attribute
 * @maxtype: maximum attribute type to be expected
 * @policy: validation policy
 * @extack: extended ACK report struct
 *
 * Validates all attributes in the nested attribute stream against the
 * specified policy. Attributes with a type exceeding maxtype will be
 * ignored. See documenation of struct nla_policy for more details.
 *
 * Returns 0 on success or a negative error code.
 */</doc>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_netlink.c' l='921' u='c' c='ctnetlink_parse_tuple_ip'/>
<use f='linux-4.14.y/net/netfilter/nf_conntrack_netlink.c' l='956' u='c' c='ctnetlink_parse_tuple_proto'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='102' u='c' c='netlbl_cipsov4_add_common'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='149' u='c' c='netlbl_cipsov4_add_std'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='173' u='c' c='netlbl_cipsov4_add_std'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='237' u='c' c='netlbl_cipsov4_add_std'/>
<use f='linux-4.14.y/net/netlabel/netlabel_cipso_v4.c' l='246' u='c' c='netlbl_cipsov4_add_std'/>
