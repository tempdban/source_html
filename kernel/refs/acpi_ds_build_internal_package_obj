<dec f='linux-4.14.y/drivers/acpi/acpica/acdispat.h' l='251' type='acpi_status acpi_ds_build_internal_package_obj(struct acpi_walk_state * walk_state, union acpi_parse_object * op, u32 package_length, union acpi_operand_object ** obj_desc)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/dsopcode.c' l='653' u='c' c='acpi_ds_eval_data_object_operands'/>
<def f='linux-4.14.y/drivers/acpi/acpica/dspkginit.c' l='87' ll='279' type='acpi_status acpi_ds_build_internal_package_obj(struct acpi_walk_state * walk_state, union acpi_parse_object * op, u32 element_count, union acpi_operand_object ** obj_desc_ptr)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/dspkginit.c' l='58'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ds_build_internal_package_obj
 *
 * PARAMETERS:  walk_state      - Current walk state
 *              op              - Parser object to be translated
 *              element_count   - Number of elements in the package - this is
 *                                the num_elements argument to Package()
 *              obj_desc_ptr    - Where the ACPI internal object is returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Translate a parser Op package object to the equivalent
 *              namespace object
 *
 * NOTE: The number of elements in the package will be always be the num_elements
 * count, regardless of the number of elements in the package list. If
 * num_elements is smaller, only that many package list elements are used.
 * if num_elements is larger, the Package object is padded out with
 * objects of type Uninitialized (as per ACPI spec.)
 *
 * Even though the ASL compilers do not allow num_elements to be smaller
 * than the Package list length (for the fixed length package opcode), some
 * BIOS code modifies the AML on the fly to adjust the num_elements, and
 * this code compensates for that. This also provides compatibility with
 * other AML interpreters.
 *
 ******************************************************************************/</doc>
<dec f='linux-4.14.y/drivers/acpi/acpica/acdispat.h' l='251' type='acpi_status acpi_ds_build_internal_package_obj(struct acpi_walk_state * walk_state, union acpi_parse_object * op, u32 package_length, union acpi_operand_object ** obj_desc)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/dsopcode.c' l='653' u='c' c='acpi_ds_eval_data_object_operands'/>
<def f='linux-4.14.y/drivers/acpi/acpica/dspkginit.c' l='87' ll='279' type='acpi_status acpi_ds_build_internal_package_obj(struct acpi_walk_state * walk_state, union acpi_parse_object * op, u32 element_count, union acpi_operand_object ** obj_desc_ptr)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/dspkginit.c' l='58'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ds_build_internal_package_obj
 *
 * PARAMETERS:  walk_state      - Current walk state
 *              op              - Parser object to be translated
 *              element_count   - Number of elements in the package - this is
 *                                the num_elements argument to Package()
 *              obj_desc_ptr    - Where the ACPI internal object is returned
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Translate a parser Op package object to the equivalent
 *              namespace object
 *
 * NOTE: The number of elements in the package will be always be the num_elements
 * count, regardless of the number of elements in the package list. If
 * num_elements is smaller, only that many package list elements are used.
 * if num_elements is larger, the Package object is padded out with
 * objects of type Uninitialized (as per ACPI spec.)
 *
 * Even though the ASL compilers do not allow num_elements to be smaller
 * than the Package list length (for the fixed length package opcode), some
 * BIOS code modifies the AML on the fly to adjust the num_elements, and
 * this code compensates for that. This also provides compatibility with
 * other AML interpreters.
 *
 ******************************************************************************/</doc>
