<dec f='linux-4.18.y/include/linux/module.h' l='544' type='const struct kernel_symbol * find_symbol(const char * name, struct module ** owner, const s32 ** crc, bool gplok, bool warn)'/>
<doc f='linux-4.18.y/include/linux/module.h' l='539'>/*
 * Search for an exported symbol by name.
 *
 * Must be called with module_mutex held or preemption disabled.
 */</doc>
<def f='linux-4.18.y/kernel/module.c' l='576' ll='598' type='const struct kernel_symbol * find_symbol(const char * name, struct module ** owner, const s32 ** crc, bool gplok, bool warn)'/>
<dec f='linux-4.18.y/kernel/module.c' l='599' type='const struct kernel_symbol * find_symbol(const char * , struct module ** , const s32 ** , bool , bool )'/>
<use f='linux-4.18.y/kernel/module.c' l='599' c='find_symbol'/>
<use f='linux-4.18.y/kernel/module.c' l='599' u='a'/>
<use f='linux-4.18.y/kernel/module.c' l='599' u='a'/>
<use f='linux-4.18.y/kernel/module.c' l='1402' u='c' c='resolve_symbol'/>
<use f='linux-4.18.y/kernel/module.c' l='2190' u='c' c='__symbol_get'/>
<use f='linux-4.18.y/kernel/module.c' l='2225' u='c' c='verify_export_symbols'/>
<doc f='linux-4.18.y/kernel/module.c' l='574'>/* Find a symbol and return it, along with, (optional) crc and
 * (optional) module which owns it.  Needs preempt disabled or module_mutex. */</doc>
