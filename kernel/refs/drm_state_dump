<dec f='linux-4.18.y/include/drm/drm_atomic.h' l='611' type='void drm_state_dump(struct drm_device * dev, struct drm_printer * p)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1885' ll='1888' type='void drm_state_dump(struct drm_device * dev, struct drm_printer * p)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1889' type='void drm_state_dump(struct drm_device * , struct drm_printer * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1889' c='drm_state_dump'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1889' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1889' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_atomic.c' l='1870'>/**
 * drm_state_dump - dump entire device atomic state
 * @dev: the drm device
 * @p: where to print the state to
 *
 * Just for debugging.  Drivers might want an option to dump state
 * to dmesg in case of error irq&apos;s.  (Hint, you probably want to
 * ratelimit this!)
 *
 * The caller must drm_modeset_lock_all(), or if this is called
 * from error irq handler, it should not be enabled by default.
 * (Ie. if you are debugging errors you might not care that this
 * is racey.  But calling this without all modeset locks held is
 * not inherently safe.)
 */</doc>
