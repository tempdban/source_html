<dec f='linux-4.14.y/include/linux/bootmem.h' l='349' type='void * alloc_large_system_hash(const char * tablename, unsigned long bucketsize, unsigned long numentries, int scale, int flags, unsigned int * _hash_shift, unsigned int * _hash_mask, unsigned long low_limit, unsigned long high_limit)'/>
<use f='linux-4.14.y/fs/dcache.c' l='3628' u='c' c='dcache_init_early'/>
<use f='linux-4.14.y/fs/dcache.c' l='3654' u='c' c='dcache_init'/>
<use f='linux-4.14.y/fs/inode.c' l='1940' u='c' c='inode_init_early'/>
<use f='linux-4.14.y/fs/inode.c' l='1966' u='c' c='inode_init'/>
<use f='linux-4.14.y/fs/namespace.c' l='3255' u='c' c='mnt_init'/>
<use f='linux-4.14.y/fs/namespace.c' l='3260' u='c' c='mnt_init'/>
<use f='linux-4.14.y/kernel/futex.c' l='3639' u='c' c='futex_init'/>
<use f='linux-4.14.y/kernel/pid.c' l='575' u='c' c='pidhash_init'/>
<def f='linux-4.14.y/mm/page_alloc.c' l='7221' ll='7325' type='void * alloc_large_system_hash(const char * tablename, unsigned long bucketsize, unsigned long numentries, int scale, int flags, unsigned int * _hash_shift, unsigned int * _hash_mask, unsigned long low_limit, unsigned long high_limit)'/>
<doc f='linux-4.14.y/mm/page_alloc.c' l='7215'>/*
 * allocate a large system hash table from bootmem
 * - it is assumed that the hash table must contain an exact power-of-2
 *   quantity of entries
 * - limit is the number of hash buckets, not the total allocation size
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp.c' l='3506' u='c' c='tcp_init'/>
<use f='linux-4.14.y/net/ipv4/tcp.c' l='3521' u='c' c='tcp_init'/>
<use f='linux-4.14.y/net/ipv4/udp.c' l='2814' u='c' c='udp_table_init'/>
