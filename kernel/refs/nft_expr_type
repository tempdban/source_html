<def f='linux-4.18.y/include/net/netfilter/nf_tables.h' l='705' ll='716'/>
<size>64</size>
<doc f='linux-4.18.y/include/net/netfilter/nf_tables.h' l='692'>/**
 *	struct nft_expr_type - nf_tables expression type
 *
 *	@select_ops: function to select nft_expr_ops
 *	@ops: default ops, used when no select_ops functions is present
 *	@list: used internally
 *	@name: Identifier
 *	@owner: module reference
 *	@policy: netlink attribute policy
 *	@maxattr: highest netlink attribute number
 *	@family: address family for AF-specific types
 *	@flags: expression type flags
 */</doc>
<mbr r='nft_expr_type::select_ops' o='0' t='const struct nft_expr_ops *(*)(const struct nft_ctx *, const struct nlattr *const *)'/>
<mbr r='nft_expr_type::ops' o='64' t='const struct nft_expr_ops *'/>
<mbr r='nft_expr_type::list' o='128' t='struct list_head'/>
<mbr r='nft_expr_type::name' o='256' t='const char *'/>
<mbr r='nft_expr_type::owner' o='320' t='struct module *'/>
<mbr r='nft_expr_type::policy' o='384' t='const struct nla_policy *'/>
<mbr r='nft_expr_type::maxattr' o='448' t='unsigned int'/>
<mbr r='nft_expr_type::family' o='480' t='u8'/>
<mbr r='nft_expr_type::flags' o='488' t='u8'/>
