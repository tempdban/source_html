<dec f='linux-4.18.y/include/linux/netdevice.h' l='3404' type='void netdev_rx_handler_unregister(struct net_device * dev)'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='1787' u='c' c='bond_enslave'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='1895' u='c' c='__bond_release_one'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_main.c' l='169' u='c' c='ipvlan_port_destroy'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvtap.c' l='102' u='c' c='ipvtap_newlink'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvtap.c' l='116' u='c' c='ipvtap_dellink'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='1194' u='c' c='macvlan_port_destroy'/>
<use f='linux-4.18.y/drivers/net/macvtap.c' l='110' u='c' c='macvtap_newlink'/>
<use f='linux-4.18.y/drivers/net/macvtap.c' l='124' u='c' c='macvtap_dellink'/>
<use f='linux-4.18.y/net/bridge/br_if.c' l='296' u='c' c='del_nbp'/>
<use f='linux-4.18.y/net/bridge/br_if.c' l='626' u='c' c='br_add_if'/>
<def f='linux-4.18.y/net/core/dev.c' l='4444' ll='4455' type='void netdev_rx_handler_unregister(struct net_device * dev)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='4456' type='void netdev_rx_handler_unregister(struct net_device * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='4456' c='netdev_rx_handler_unregister'/>
<use f='linux-4.18.y/net/core/dev.c' l='4456' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='4456' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='4436'>/**
 *	netdev_rx_handler_unregister - unregister receive handler
 *	@dev: device to unregister a handler from
 *
 *	Unregister a receive handler from a device.
 *
 *	The caller must hold the rtnl_mutex.
 */</doc>
<use f='linux-4.18.y/net/core/failover.c' l='92' u='c' c='failover_slave_register'/>
<use f='linux-4.18.y/net/core/failover.c' l='122' u='c' c='failover_slave_unregister'/>
<use f='linux-4.18.y/net/openvswitch/vport-netdev.c' l='164' u='c' c='ovs_netdev_detach_dev'/>
