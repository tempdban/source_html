<dec f='linux-4.14.y/include/linux/pagemap.h' l='119' type='void release_pages(struct page ** pages, int nr, bool cold)'/>
<use f='linux-4.14.y/mm/swap.c' l='213' u='c' c='pagevec_lru_move_fn'/>
<def f='linux-4.14.y/mm/swap.c' l='743' ll='821' type='void release_pages(struct page ** pages, int nr, bool cold)'/>
<dec f='linux-4.14.y/mm/swap.c' l='822' type='void release_pages(struct page ** , int , bool )'/>
<use f='linux-4.14.y/mm/swap.c' l='822' c='release_pages'/>
<use f='linux-4.14.y/mm/swap.c' l='822' u='a'/>
<use f='linux-4.14.y/mm/swap.c' l='822' u='a'/>
<use f='linux-4.14.y/mm/swap.c' l='837' u='c' c='__pagevec_release'/>
<doc f='linux-4.14.y/mm/swap.c' l='734'>/**
 * release_pages - batched put_page()
 * @pages: array of pages to release
 * @nr: number of pages
 * @cold: whether the pages are cache cold
 *
 * Decrement the reference count on all the pages in @pages.  If it
 * fell to zero, remove the page from the LRU and free it.
 */</doc>
<use f='linux-4.14.y/mm/swap_state.c' l='322' u='c' c='free_pages_and_swap_cache'/>
