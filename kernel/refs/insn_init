<dec f='linux-4.18.y/arch/x86/include/asm/insn.h' l='101' type='void insn_init(struct insn * insn, const void * kaddr, int buf_len, int x86_64)'/>
<use f='linux-4.18.y/arch/x86/include/asm/insn.h' l='124' u='c' c='kernel_insn_init'/>
<use f='linux-4.18.y/arch/x86/events/intel/ds.c' l='1089' u='c' c='intel_pmu_pebs_fixup_ip'/>
<use f='linux-4.18.y/arch/x86/events/intel/lbr.c' l='847' u='c' c='branch_type'/>
<use f='linux-4.18.y/arch/x86/kernel/umip.c' l='352' u='c' c='fixup_umip_exception'/>
<use f='linux-4.18.y/arch/x86/kernel/uprobes.c' l='293' u='c' c='uprobe_init_insn'/>
<def f='linux-4.18.y/arch/x86/lib/insn.c' l='53' ll='72' type='void insn_init(struct insn * insn, const void * kaddr, int buf_len, int x86_64)'/>
<doc f='linux-4.18.y/arch/x86/lib/insn.c' l='47'>/**
 * insn_init() - initialize struct insn
 * @insn:	&amp;struct insn to be initialized
 * @kaddr:	address (in kernel memory) of instruction (or copy thereof)
 * @x86_64:	!0 for 64-bit kernel or 64-bit app
 */</doc>
<dec f='linux-4.18.y/tools/objtool/arch/x86/include/asm/insn.h' l='101' type='void insn_init(struct insn * insn, const void * kaddr, int buf_len, int x86_64)'/>
<use f='linux-4.18.y/tools/objtool/arch/x86/include/asm/insn.h' l='126' u='c' c='kernel_insn_init'/>
<def f='linux-4.18.y/tools/objtool/arch/x86/lib/insn.c' l='53' ll='72' type='void insn_init(struct insn * insn, const void * kaddr, int buf_len, int x86_64)'/>
<use f='linux-4.18.y/tools/objtool/arch/x86/decode.c' l='96' u='c' c='arch_decode_instruction'/>
<doc f='linux-4.18.y/tools/objtool/arch/x86/lib/insn.c' l='47'>/**
 * insn_init() - initialize struct insn
 * @insn:	&amp;struct insn to be initialized
 * @kaddr:	address (in kernel memory) of instruction (or copy thereof)
 * @x86_64:	!0 for 64-bit kernel or 64-bit app
 */</doc>
