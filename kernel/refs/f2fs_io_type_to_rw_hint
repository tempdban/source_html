<dec f='linux-4.18.y/fs/f2fs/f2fs.h' l='2899' type='enum rw_hint f2fs_io_type_to_rw_hint(struct f2fs_sb_info * sbi, enum page_type type, enum temp_type temp)'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='250' u='c' c='__bio_alloc'/>
<def f='linux-4.18.y/fs/f2fs/segment.c' l='2588' ll='2620' type='enum rw_hint f2fs_io_type_to_rw_hint(struct f2fs_sb_info * sbi, enum page_type type, enum temp_type temp)'/>
<doc f='linux-4.18.y/fs/f2fs/segment.c' l='2527'>/* This returns write hints for each segment type. This hints will be
 * passed down to block layer. There are mapping tables which depend on
 * the mount option &apos;whint_mode&apos;.
 *
 * 1) whint_mode=off. F2FS only passes down WRITE_LIFE_NOT_SET.
 *
 * 2) whint_mode=user-based. F2FS tries to pass down hints given by users.
 *
 * User                  F2FS                     Block
 * ----                  ----                     -----
 *                       META                     WRITE_LIFE_NOT_SET
 *                       HOT_NODE                 &quot;
 *                       WARM_NODE                &quot;
 *                       COLD_NODE                &quot;
 * ioctl(COLD)           COLD_DATA                WRITE_LIFE_EXTREME
 * extension list        &quot;                        &quot;
 *
 * -- buffered io
 * WRITE_LIFE_EXTREME    COLD_DATA                WRITE_LIFE_EXTREME
 * WRITE_LIFE_SHORT      HOT_DATA                 WRITE_LIFE_SHORT
 * WRITE_LIFE_NOT_SET    WARM_DATA                WRITE_LIFE_NOT_SET
 * WRITE_LIFE_NONE       &quot;                        &quot;
 * WRITE_LIFE_MEDIUM     &quot;                        &quot;
 * WRITE_LIFE_LONG       &quot;                        &quot;
 *
 * -- direct io
 * WRITE_LIFE_EXTREME    COLD_DATA                WRITE_LIFE_EXTREME
 * WRITE_LIFE_SHORT      HOT_DATA                 WRITE_LIFE_SHORT
 * WRITE_LIFE_NOT_SET    WARM_DATA                WRITE_LIFE_NOT_SET
 * WRITE_LIFE_NONE       &quot;                        WRITE_LIFE_NONE
 * WRITE_LIFE_MEDIUM     &quot;                        WRITE_LIFE_MEDIUM
 * WRITE_LIFE_LONG       &quot;                        WRITE_LIFE_LONG
 *
 * 3) whint_mode=fs-based. F2FS passes down hints with its policy.
 *
 * User                  F2FS                     Block
 * ----                  ----                     -----
 *                       META                     WRITE_LIFE_MEDIUM;
 *                       HOT_NODE                 WRITE_LIFE_NOT_SET
 *                       WARM_NODE                &quot;
 *                       COLD_NODE                WRITE_LIFE_NONE
 * ioctl(COLD)           COLD_DATA                WRITE_LIFE_EXTREME
 * extension list        &quot;                        &quot;
 *
 * -- buffered io
 * WRITE_LIFE_EXTREME    COLD_DATA                WRITE_LIFE_EXTREME
 * WRITE_LIFE_SHORT      HOT_DATA                 WRITE_LIFE_SHORT
 * WRITE_LIFE_NOT_SET    WARM_DATA                WRITE_LIFE_LONG
 * WRITE_LIFE_NONE       &quot;                        &quot;
 * WRITE_LIFE_MEDIUM     &quot;                        &quot;
 * WRITE_LIFE_LONG       &quot;                        &quot;
 *
 * -- direct io
 * WRITE_LIFE_EXTREME    COLD_DATA                WRITE_LIFE_EXTREME
 * WRITE_LIFE_SHORT      HOT_DATA                 WRITE_LIFE_SHORT
 * WRITE_LIFE_NOT_SET    WARM_DATA                WRITE_LIFE_NOT_SET
 * WRITE_LIFE_NONE       &quot;                        WRITE_LIFE_NONE
 * WRITE_LIFE_MEDIUM     &quot;                        WRITE_LIFE_MEDIUM
 * WRITE_LIFE_LONG       &quot;                        WRITE_LIFE_LONG
 */</doc>
