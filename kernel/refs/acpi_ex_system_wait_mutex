<dec f='linux-4.14.y/drivers/acpi/acpica/acinterp.h' l='325' type='acpi_status acpi_ex_system_wait_mutex(void * mutex, u16 timeout)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/dsmethod.c' l='402' u='c' c='acpi_ds_begin_method_execution'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evglock.c' l='217' u='c' c='acpi_ev_acquire_global_lock'/>
<use f='linux-4.14.y/drivers/acpi/acpica/exmutex.c' l='189' u='c' c='acpi_ex_acquire_mutex_object'/>
<def f='linux-4.14.y/drivers/acpi/acpica/exsystem.c' l='110' ll='138' type='acpi_status acpi_ex_system_wait_mutex(void * mutex, u16 timeout)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/exsystem.c' l='95'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_system_wait_mutex
 *
 * PARAMETERS:  mutex           - Mutex to wait on
 *              timeout         - Max time to wait
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Implements a mutex wait with a check to see if the
 *              mutex is available immediately. If it is not, the
 *              interpreter is released before waiting.
 *
 ******************************************************************************/</doc>
<dec f='linux-4.14.y/drivers/acpi/acpica/acinterp.h' l='325' type='acpi_status acpi_ex_system_wait_mutex(void * mutex, u16 timeout)'/>
<use f='linux-4.14.y/drivers/acpi/acpica/dsmethod.c' l='402' u='c' c='acpi_ds_begin_method_execution'/>
<use f='linux-4.14.y/drivers/acpi/acpica/evglock.c' l='217' u='c' c='acpi_ev_acquire_global_lock'/>
<use f='linux-4.14.y/drivers/acpi/acpica/exmutex.c' l='189' u='c' c='acpi_ex_acquire_mutex_object'/>
<def f='linux-4.14.y/drivers/acpi/acpica/exsystem.c' l='110' ll='138' type='acpi_status acpi_ex_system_wait_mutex(void * mutex, u16 timeout)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/exsystem.c' l='95'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ex_system_wait_mutex
 *
 * PARAMETERS:  mutex           - Mutex to wait on
 *              timeout         - Max time to wait
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Implements a mutex wait with a check to see if the
 *              mutex is available immediately. If it is not, the
 *              interpreter is released before waiting.
 *
 ******************************************************************************/</doc>
