<def f='linux-4.18.y/include/linux/hwmon.h' l='335' ll='344'/>
<size>32</size>
<doc f='linux-4.18.y/include/linux/hwmon.h' l='290'>/**
 * struct hwmon_ops - hwmon device operations
 * @is_visible: Callback to return attribute visibility. Mandatory.
 *		Parameters are:
 *		@const void *drvdata:
 *			Pointer to driver-private data structure passed
 *			as argument to hwmon_device_register_with_info().
 *		@type:	Sensor type
 *		@attr:	Sensor attribute
 *		@channel:
 *			Channel number
 *		The function returns the file permissions.
 *		If the return value is 0, no attribute will be created.
 * @read:	Read callback for data attributes. Mandatory if readable
 *		data attributes are present.
 *		Parameters are:
 *		@dev:	Pointer to hardware monitoring device
 *		@type:	Sensor type
 *		@attr:	Sensor attribute
 *		@channel:
 *			Channel number
 *		@val:	Pointer to returned value
 *		The function returns 0 on success or a negative error number.
 * @read_string:
 *		Read callback for string attributes. Mandatory if string
 *		attributes are present.
 *		Parameters are:
 *		@dev:	Pointer to hardware monitoring device
 *		@type:	Sensor type
 *		@attr:	Sensor attribute
 *		@channel:
 *			Channel number
 *		@str:	Pointer to returned string
 *		The function returns 0 on success or a negative error number.
 * @write:	Write callback for data attributes. Mandatory if writeable
 *		data attributes are present.
 *		Parameters are:
 *		@dev:	Pointer to hardware monitoring device
 *		@type:	Sensor type
 *		@attr:	Sensor attribute
 *		@channel:
 *			Channel number
 *		@val:	Value to write
 *		The function returns 0 on success or a negative error number.
 */</doc>
<mbr r='hwmon_ops::is_visible' o='0' t='umode_t (*)(const void *, enum hwmon_sensor_types, u32, int)'/>
<mbr r='hwmon_ops::read' o='64' t='int (*)(struct device *, enum hwmon_sensor_types, u32, int, long *)'/>
<mbr r='hwmon_ops::read_string' o='128' t='int (*)(struct device *, enum hwmon_sensor_types, u32, int, const char **)'/>
<mbr r='hwmon_ops::write' o='192' t='int (*)(struct device *, enum hwmon_sensor_types, u32, int, long)'/>
