<def f='linux-4.14.y/include/linux/i2c.h' l='241' ll='254'/>
<size>528</size>
<doc f='linux-4.14.y/include/linux/i2c.h' l='222'>/**
 * struct i2c_client - represent an I2C slave device
 * @flags: I2C_CLIENT_TEN indicates the device uses a ten bit chip address;
 *	I2C_CLIENT_PEC indicates it uses SMBus Packet Error Checking
 * @addr: Address used on the I2C bus connected to the parent adapter.
 * @name: Indicates the type of the device, usually a chip name that&apos;s
 *	generic enough to hide second-sourcing and compatible revisions.
 * @adapter: manages the bus segment hosting this I2C device
 * @dev: Driver model device node for the slave.
 * @irq: indicates the IRQ generated by this device (if any)
 * @detected: member of an i2c_driver.clients list or i2c-core&apos;s
 *	userspace_devices list
 * @slave_cb: Callback when I2C slave mode of an adapter is used. The adapter
 *	calls it to pass on slave events to the slave driver.
 *
 * An i2c_client identifies a single device (i.e. chip) connected to an
 * i2c bus. The behaviour exposed to Linux is defined by the driver
 * managing the device.
 */</doc>
<mbr r='i2c_client::flags' o='0' t='unsigned short'/>
<mbr r='i2c_client::addr' o='16' t='unsigned short'/>
<mbr r='i2c_client::name' o='32' t='char [20]'/>
<mbr r='i2c_client::adapter' o='192' t='struct i2c_adapter *'/>
<mbr r='i2c_client::dev' o='256' t='struct device'/>
<mbr r='i2c_client::irq' o='4032' t='int'/>
<mbr r='i2c_client::detected' o='4096' t='struct list_head'/>
<def f='linux-4.14.y/include/linux/i2c.h' l='241' ll='254'/>
<size>528</size>
<doc f='linux-4.14.y/include/linux/i2c.h' l='222'>/**
 * struct i2c_client - represent an I2C slave device
 * @flags: I2C_CLIENT_TEN indicates the device uses a ten bit chip address;
 *	I2C_CLIENT_PEC indicates it uses SMBus Packet Error Checking
 * @addr: Address used on the I2C bus connected to the parent adapter.
 * @name: Indicates the type of the device, usually a chip name that&apos;s
 *	generic enough to hide second-sourcing and compatible revisions.
 * @adapter: manages the bus segment hosting this I2C device
 * @dev: Driver model device node for the slave.
 * @irq: indicates the IRQ generated by this device (if any)
 * @detected: member of an i2c_driver.clients list or i2c-core&apos;s
 *	userspace_devices list
 * @slave_cb: Callback when I2C slave mode of an adapter is used. The adapter
 *	calls it to pass on slave events to the slave driver.
 *
 * An i2c_client identifies a single device (i.e. chip) connected to an
 * i2c bus. The behaviour exposed to Linux is defined by the driver
 * managing the device.
 */</doc>
<mbr r='i2c_client::flags' o='0' t='unsigned short'/>
<mbr r='i2c_client::addr' o='16' t='unsigned short'/>
<mbr r='i2c_client::name' o='32' t='char [20]'/>
<mbr r='i2c_client::adapter' o='192' t='struct i2c_adapter *'/>
<mbr r='i2c_client::dev' o='256' t='struct device'/>
<mbr r='i2c_client::irq' o='4032' t='int'/>
<mbr r='i2c_client::detected' o='4096' t='struct list_head'/>
