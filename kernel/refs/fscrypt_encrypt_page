<dec f='linux-4.14.y/include/linux/fscrypt_supp.h' l='17' type='struct page * fscrypt_encrypt_page(const struct inode * , struct page * , unsigned int , unsigned int , u64 , gfp_t )'/>
<def f='linux-4.14.y/fs/crypto/crypto.c' l='249' ll='300' type='struct page * fscrypt_encrypt_page(const struct inode * inode, struct page * page, unsigned int len, unsigned int offs, u64 lblk_num, gfp_t gfp_flags)'/>
<dec f='linux-4.14.y/fs/crypto/crypto.c' l='301' type='struct page * fscrypt_encrypt_page(const struct inode * , struct page * , unsigned int , unsigned int , u64 , gfp_t )'/>
<use f='linux-4.14.y/fs/crypto/crypto.c' l='301' c='fscrypt_encrypt_page'/>
<use f='linux-4.14.y/fs/crypto/crypto.c' l='301' u='a'/>
<use f='linux-4.14.y/fs/crypto/crypto.c' l='301' u='a'/>
<doc f='linux-4.14.y/fs/crypto/crypto.c' l='218'>/**
 * fscypt_encrypt_page() - Encrypts a page
 * @inode:     The inode for which the encryption should take place
 * @page:      The page to encrypt. Must be locked for bounce-page
 *             encryption.
 * @len:       Length of data to encrypt in @page and encrypted
 *             data in returned page.
 * @offs:      Offset of data within @page and returned
 *             page holding encrypted data.
 * @lblk_num:  Logical block number. This must be unique for multiple
 *             calls with same inode, except when overwriting
 *             previously written data.
 * @gfp_flags: The gfp flag for memory allocation
 *
 * Encrypts @page using the ctx encryption context. Performs encryption
 * either in-place or into a newly allocated bounce page.
 * Called on the page write path.
 *
 * Bounce page allocation is the default.
 * In this case, the contents of @page are encrypted and stored in an
 * allocated bounce page. @page has to be locked and the caller must call
 * fscrypt_restore_control_page() on the returned ciphertext page to
 * release the bounce buffer and the encryption context.
 *
 * In-place encryption is used by setting the FS_CFLG_OWN_PAGES flag in
 * fscrypt_operations. Here, the input-page is returned with its content
 * encrypted.
 *
 * Return: A page with the encrypted content on success. Else, an
 * error value or NULL.
 */</doc>
<use f='linux-4.14.y/fs/ext4/page-io.c' l='485' u='c' c='ext4_bio_write_page'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='1361' u='c' c='encrypt_one_page'/>
