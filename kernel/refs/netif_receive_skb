<dec f='linux-4.14.y/include/linux/netdevice.h' l='3268' type='int netif_receive_skb(struct sk_buff * skb)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/e100.c' l='2069' u='c' c='e100_rx_indicate'/>
<use f='linux-4.14.y/drivers/net/ethernet/realtek/8139too.c' l='2056' u='c' c='rtl8139_rx'/>
<use f='linux-4.14.y/drivers/net/vmxnet3/vmxnet3_drv.c' l='1521' u='c' c='vmxnet3_rq_rx_complete'/>
<def f='linux-4.14.y/net/core/dev.c' l='4586' ll='4591' type='int netif_receive_skb(struct sk_buff * skb)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='4592' type='int netif_receive_skb(struct sk_buff * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='4592' c='netif_receive_skb'/>
<use f='linux-4.14.y/net/core/dev.c' l='4592' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='4592' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='4571'>/**
 *	netif_receive_skb - process receive buffer from network
 *	@skb: buffer to process
 *
 *	netif_receive_skb() is the main receive data processing function.
 *	It always succeeds. The buffer may be dropped during processing
 *	for congestion control or by the protocol layers.
 *
 *	This function may only be called from softirq context and interrupts
 *	should be enabled.
 *
 *	Return values (usually ignored):
 *	NET_RX_SUCCESS: no congestion
 *	NET_RX_DROP: packet was dropped
 */</doc>
