<dec f='linux-4.18.y/include/linux/netdevice.h' l='3385' type='int netif_receive_skb(struct sk_buff * skb)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/e100.c' l='2043' u='c' c='e100_rx_indicate'/>
<use f='linux-4.18.y/drivers/net/ethernet/realtek/8139too.c' l='2054' u='c' c='rtl8139_rx'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='1571' u='c' c='tun_rx_batched'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='1591' u='c' c='tun_rx_batched'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='1592' u='c' c='tun_rx_batched'/>
<use f='linux-4.18.y/drivers/net/vmxnet3/vmxnet3_drv.c' l='1534' u='c' c='vmxnet3_rq_rx_complete'/>
<use f='linux-4.18.y/net/bridge/br_input.c' l='34' u='c' c='br_netif_receive_skb'/>
<def f='linux-4.18.y/net/core/dev.c' l='4787' ll='4792' type='int netif_receive_skb(struct sk_buff * skb)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='4793' type='int netif_receive_skb(struct sk_buff * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='4793' c='netif_receive_skb'/>
<use f='linux-4.18.y/net/core/dev.c' l='4793' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='4793' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='4772'>/**
 *	netif_receive_skb - process receive buffer from network
 *	@skb: buffer to process
 *
 *	netif_receive_skb() is the main receive data processing function.
 *	It always succeeds. The buffer may be dropped during processing
 *	for congestion control or by the protocol layers.
 *
 *	This function may only be called from softirq context and interrupts
 *	should be enabled.
 *
 *	Return values (usually ignored):
 *	NET_RX_SUCCESS: no congestion
 *	NET_RX_DROP: packet was dropped
 */</doc>
