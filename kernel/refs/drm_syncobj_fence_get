<def f='linux-4.18.y/include/drm/drm_syncobj.h' l='120' ll='130' type='struct dma_fence * drm_syncobj_fence_get(struct drm_syncobj * syncobj)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='100' u='c' c='drm_syncobj_fence_get_or_add_callback'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='256' u='c' c='drm_syncobj_find_fence'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='710' u='c' c='drm_syncobj_array_wait_timeout'/>
<doc f='linux-4.18.y/include/drm/drm_syncobj.h' l='109'>/**
 * drm_syncobj_fence_get - get a reference to a fence in a sync object
 * @syncobj: sync object.
 *
 * This acquires additional reference to &amp;drm_syncobj.fence contained in @obj,
 * if not NULL. It is illegal to call this without already holding a reference.
 * No locks required.
 *
 * Returns:
 * Either the fence of @obj or NULL if there&apos;s none.
 */</doc>
