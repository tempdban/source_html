<dec f='linux-4.18.y/lib/librte_kvargs/rte_kvargs.h' l='73' type='struct rte_kvargs * rte_kvargs_parse(const char * args, const char *const * valid_keys)'/>
<use f='linux-4.18.y/app/pdump/main.c' l='248' u='c' c='parse_pdump'/>
<doc f='linux-4.18.y/lib/librte_kvargs/rte_kvargs.h' l='55'>/**
 * Allocate a rte_kvargs and store key/value associations from a string
 *
 * The function allocates and fills a rte_kvargs structure from a given
 * string whose format is key1=value1,key2=value2,...
 *
 * The structure can be freed with rte_kvargs_free().
 *
 * @param args
 *   The input string containing the key/value associations
 * @param valid_keys
 *   A list of valid keys (table of const char *, the last must be NULL).
 *   This argument is ignored if NULL
 *
 * @return
 *   - A pointer to an allocated rte_kvargs structure on success
 *   - NULL on error
 */</doc>
<use f='linux-4.18.y/drivers/baseband/null/bbdev_null.c' l='227' u='c' c='parse_bbdev_null_params'/>
<use f='linux-4.18.y/drivers/bus/ifpga/ifpga_bus.c' l='102' u='c' c='ifpga_scan_one'/>
<use f='linux-4.18.y/drivers/bus/ifpga/ifpga_bus.c' l='206' u='c' c='ifpga_scan'/>
<use f='linux-4.18.y/drivers/crypto/scheduler/scheduler_pmd.c' l='465' u='c' c='scheduler_parse_init_params'/>
<use f='linux-4.18.y/drivers/event/octeontx/ssovf_evdev.c' l='660' u='c' c='ssovf_vdev_probe'/>
<use f='linux-4.18.y/drivers/event/opdl/opdl_evdev.c' l='653' u='c' c='opdl_probe'/>
<use f='linux-4.18.y/drivers/event/sw/sw_evdev.c' l='960' u='c' c='sw_probe'/>
<use f='linux-4.18.y/drivers/net/af_packet/rte_eth_af_packet.c' l='943' u='c' c='rte_pmd_af_packet_probe'/>
<use f='linux-4.18.y/drivers/net/ark/ark_ethdev.c' l='952' u='c' c='eth_ark_check_args'/>
<use f='linux-4.18.y/drivers/net/bonding/rte_eth_bond_pmd.c' l='3169' u='c' c='bond_probe'/>
<use f='linux-4.18.y/drivers/net/cxgbe/cxgbe_main.c' l='686' u='c' c='cxgbe_get_devargs'/>
<use f='linux-4.18.y/drivers/net/enic/enic_ethdev.c' l='985' u='c' c='enic_check_devargs'/>
<use f='linux-4.18.y/drivers/net/failsafe/failsafe_args.c' l='410' u='c' c='failsafe_args_parse'/>
<use f='linux-4.18.y/drivers/net/fm10k/fm10k_ethdev.c' l='2856' u='c' c='fm10k_check_ftag'/>
<use f='linux-4.18.y/drivers/net/i40e/i40e_ethdev.c' l='867' u='c' c='config_vf_floating_veb'/>
<use f='linux-4.18.y/drivers/net/i40e/i40e_ethdev.c' l='908' u='c' c='is_floating_veb_supported'/>
<use f='linux-4.18.y/drivers/net/i40e/i40e_ethdev.c' l='1155' u='c' c='i40e_support_multi_driver'/>
<use f='linux-4.18.y/drivers/net/i40e/i40e_ethdev.c' l='1240' u='c' c='i40e_use_latest_vec'/>
<use f='linux-4.18.y/drivers/net/i40e/i40e_ethdev.c' l='4491' u='c' c='i40e_pf_config_vf_rxq_number'/>
<use f='linux-4.18.y/drivers/net/kni/rte_eth_kni.c' l='386' u='c' c='eth_kni_kvargs_process'/>
<use f='linux-4.18.y/drivers/net/netvsc/hn_ethdev.c' l='177' u='c' c='hn_parse_args'/>
<use f='linux-4.18.y/drivers/net/null/rte_eth_null.c' l='632' u='c' c='rte_pmd_null_probe'/>
<use f='linux-4.18.y/drivers/net/octeontx/octeontx_ethdev.c' l='98' u='c' c='octeontx_parse_vdev_init_params'/>
<use f='linux-4.18.y/drivers/net/qede/qede_ethdev.c' l='1136' u='c' c='qede_args'/>
<use f='linux-4.18.y/drivers/net/ring/rte_eth_ring.c' l='552' u='c' c='rte_pmd_ring_probe'/>
<use f='linux-4.18.y/drivers/net/sfc/sfc_kvargs.c' l='37' u='c' c='sfc_kvargs_parse'/>
<use f='linux-4.18.y/drivers/net/softnic/rte_eth_softnic.c' l='406' u='c' c='pmd_parse_args'/>
<use f='linux-4.18.y/drivers/net/tap/rte_eth_tap.c' l='1944' u='c' c='rte_pmd_tun_probe'/>
<use f='linux-4.18.y/drivers/net/tap/rte_eth_tap.c' l='2017' u='c' c='rte_pmd_tap_probe'/>
<use f='linux-4.18.y/drivers/net/thunderx/nicvf_ethdev.c' l='2049' u='c' c='nicvf_set_first_skip'/>
<use f='linux-4.18.y/drivers/net/vdev_netvsc/vdev_netvsc.c' l='677' u='c' c='vdev_netvsc_vdev_probe'/>
<use f='linux-4.18.y/drivers/net/vhost/rte_eth_vhost.c' l='1361' u='c' c='rte_pmd_vhost_probe'/>
<use f='linux-4.18.y/drivers/net/virtio/virtio_ethdev.c' l='1744' u='c' c='vdpa_mode_selected'/>
<use f='linux-4.18.y/drivers/net/virtio/virtio_user_ethdev.c' l='477' u='c' c='virtio_user_pmd_probe'/>
<use f='linux-4.18.y/drivers/raw/ifpga_rawdev/ifpga_rawdev.c' l='548' u='c' c='ifpga_cfg_probe'/>
<use f='linux-4.18.y/drivers/raw/skeleton_rawdev/skeleton_rawdev.c' l='675' u='c' c='skeldev_parse_vdev_args'/>
<use f='linux-4.18.y/lib/librte_compressdev/rte_compressdev_pmd.c' l='62' u='c' c='rte_compressdev_pmd_parse_input_args'/>
<use f='linux-4.18.y/lib/librte_cryptodev/rte_cryptodev_pmd.c' l='57' u='c' c='rte_cryptodev_pmd_parse_input_args'/>
<def f='linux-4.18.y/lib/librte_kvargs/rte_kvargs.c' l='149' ll='170' type='struct rte_kvargs * rte_kvargs_parse(const char * args, const char *const * valid_keys)'/>
<use f='linux-4.18.y/lib/librte_kvargs/rte_kvargs.c' l='182' u='c' c='rte_kvargs_parse_delim'/>
<use f='linux-4.18.y/lib/librte_kvargs/rte_kvargs.c' l='191' u='c' c='rte_kvargs_parse_delim'/>
<doc f='linux-4.18.y/lib/librte_kvargs/rte_kvargs.c' l='144'>/*
 * Parse the arguments &quot;key=value,key=value,...&quot; string and return
 * an allocated structure that contains a key/value list. Also
 * check if only valid keys were used.
 */</doc>
