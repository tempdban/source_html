<dec f='linux-4.14.y/include/linux/skbuff.h' l='3274' type='int skb_zerocopy(struct sk_buff * to, struct sk_buff * from, int len, int hlen)'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='2701' ll='2755' type='int skb_zerocopy(struct sk_buff * to, struct sk_buff * from, int len, int hlen)'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='2756' type='int skb_zerocopy(struct sk_buff * , struct sk_buff * , int , int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2756' c='skb_zerocopy'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2756' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2756' u='a'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='2683'>/**
 *	skb_zerocopy - Zero copy skb to skb
 *	@to: destination buffer
 *	@from: source buffer
 *	@len: number of bytes to copy from source buffer
 *	@hlen: size of linear headroom in destination buffer
 *
 *	Copies up to `len` bytes from `from` to `to` by creating references
 *	to the frags in the source buffer.
 *
 *	The `hlen` as calculated by skb_zerocopy_headlen() specifies the
 *	headroom in the `to` buffer.
 *
 *	Return value:
 *	0: everything is OK
 *	-ENOMEM: couldn&apos;t orphan frags of @from due to lack of memory
 *	-EFAULT: skb_copy_bits() found some problem with skb geometry
 */</doc>
<use f='linux-4.14.y/net/netfilter/nfnetlink_queue.c' l='600' u='c' c='nfqnl_build_packet_message'/>
