<def f='linux-4.18.y/include/linux/sysfs.h' l='84' ll='92'/>
<size>40</size>
<doc f='linux-4.18.y/include/linux/sysfs.h' l='61'>/**
 * struct attribute_group - data structure used to declare an attribute group.
 * @name:	Optional: Attribute group name
 *		If specified, the attribute group will be created in
 *		a new subdirectory with this name.
 * @is_visible:	Optional: Function to return permissions associated with an
 *		attribute of the group. Will be called repeatedly for each
 *		non-binary attribute in the group. Only read/write
 *		permissions as well as SYSFS_PREALLOC are accepted. Must
 *		return 0 if an attribute is not visible. The returned value
 *		will replace static permissions defined in struct attribute.
 * @is_bin_visible:
 *		Optional: Function to return permissions associated with a
 *		binary attribute of the group. Will be called repeatedly
 *		for each binary attribute in the group. Only read/write
 *		permissions as well as SYSFS_PREALLOC are accepted. Must
 *		return 0 if a binary attribute is not visible. The returned
 *		value will replace static permissions defined in
 *		struct bin_attribute.
 * @attrs:	Pointer to NULL terminated list of attributes.
 * @bin_attrs:	Pointer to NULL terminated list of binary attributes.
 *		Either attrs or bin_attrs or both must be provided.
 */</doc>
<mbr r='attribute_group::name' o='0' t='const char *'/>
<mbr r='attribute_group::is_visible' o='64' t='umode_t (*)(struct kobject *, struct attribute *, int)'/>
<mbr r='attribute_group::is_bin_visible' o='128' t='umode_t (*)(struct kobject *, struct bin_attribute *, int)'/>
<mbr r='attribute_group::attrs' o='192' t='struct attribute **'/>
<mbr r='attribute_group::bin_attrs' o='256' t='struct bin_attribute **'/>
