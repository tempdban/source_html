<dec f='linux-4.18.y/drivers/net/i40e/base/i40e_prototype.h' l='328' type='enum i40e_status_code i40e_aq_add_mcast_etag(struct i40e_hw * hw, u16 pe_seid, u16 etag, u8 num_tags_in_buf, void * buf, u16 * tags_used, u16 * tags_free, struct i40e_asq_cmd_details * cmd_details)'/>
<def f='linux-4.18.y/drivers/net/i40e/base/i40e_common.c' l='4839' ll='4876' type='enum i40e_status_code i40e_aq_add_mcast_etag(struct i40e_hw * hw, u16 pv_seid, u16 etag, u8 num_tags_in_buf, void * buf, u16 * tags_used, u16 * tags_free, struct i40e_asq_cmd_details * cmd_details)'/>
<doc f='linux-4.18.y/drivers/net/i40e/base/i40e_common.c' l='4821'>/**
 * i40e_aq_add_mcast_etag - Add a multicast E-tag
 * @hw: pointer to the hw struct
 * @pv_seid: Port Virtualizer of this SEID to associate E-tag with
 * @etag: value of E-tag to add
 * @num_tags_in_buf: number of unicast E-tags in indirect buffer
 * @buf: address of indirect buffer
 * @tags_used: return value, number of E-tags in use by this port
 * @tags_free: return value, number of unallocated M-tags
 * @cmd_details: pointer to command details structure or NULL
 *
 * This associates a multicast E-tag to a port virtualizer.  It will return
 * the number of tags allocated by the PF, and the number of unallocated
 * tags available.
 *
 * The indirect buffer pointed to by buf is a list of 2-byte E-tags,
 * num_tags_in_buf long.
 **/</doc>
