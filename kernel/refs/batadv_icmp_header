<def f='linux-4.18.y/include/uapi/linux/batadv_packet.h' l='284' ll='293'/>
<size>20</size>
<doc f='linux-4.18.y/include/uapi/linux/batadv_packet.h' l='269'>/**
 * struct batadv_icmp_header - common members among all the ICMP packets
 * @packet_type: batman-adv packet type, part of the general header
 * @version: batman-adv protocol version, part of the genereal header
 * @ttl: time to live for this packet, part of the genereal header
 * @msg_type: ICMP packet type
 * @dst: address of the destination node
 * @orig: address of the source node
 * @uid: local ICMP socket identifier
 * @align: not used - useful for alignment purposes only
 *
 * This structure is used for ICMP packets parsing only and it is never sent
 * over the wire. The alignment field at the end is there to ensure that
 * members are padded the same way as they are in real packets.
 */</doc>
<mbr r='batadv_icmp_header::packet_type' o='0' t='__u8'/>
<mbr r='batadv_icmp_header::version' o='8' t='__u8'/>
<mbr r='batadv_icmp_header::ttl' o='16' t='__u8'/>
<mbr r='batadv_icmp_header::msg_type' o='24' t='__u8'/>
<mbr r='batadv_icmp_header::dst' o='32' t='__u8 [6]'/>
<mbr r='batadv_icmp_header::orig' o='80' t='__u8 [6]'/>
<mbr r='batadv_icmp_header::uid' o='128' t='__u8'/>
<mbr r='batadv_icmp_header::align' o='136' t='__u8 [3]'/>
