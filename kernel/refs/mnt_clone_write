<dec f='linux-4.14.y/include/linux/mount.h' l='78' type='int mnt_clone_write(struct vfsmount * mnt)'/>
<def f='linux-4.14.y/fs/namespace.c' l='406' ll='415' type='int mnt_clone_write(struct vfsmount * mnt)'/>
<dec f='linux-4.14.y/fs/namespace.c' l='416' type='int mnt_clone_write(struct vfsmount * )'/>
<use f='linux-4.14.y/fs/namespace.c' l='416' c='mnt_clone_write'/>
<use f='linux-4.14.y/fs/namespace.c' l='416' u='a'/>
<use f='linux-4.14.y/fs/namespace.c' l='416' u='a'/>
<use f='linux-4.14.y/fs/namespace.c' l='430' u='c' c='__mnt_want_write_file'/>
<doc f='linux-4.14.y/fs/namespace.c' l='394'>/**
 * mnt_clone_write - get write access to a mount
 * @mnt: the mount on which to take a write
 *
 * This is effectively like mnt_want_write, except
 * it must only be used to take an extra write reference
 * on a mountpoint that we already know has a write reference
 * on it. This allows some optimisation.
 *
 * After finished, mnt_drop_write must be called as usual to
 * drop the reference.
 */</doc>
<dec f='linux-4.14.y/include/linux/mount.h' l='78' type='int mnt_clone_write(struct vfsmount * mnt)'/>
<def f='linux-4.14.y/fs/namespace.c' l='406' ll='415' type='int mnt_clone_write(struct vfsmount * mnt)'/>
<dec f='linux-4.14.y/fs/namespace.c' l='416' type='int mnt_clone_write(struct vfsmount * )'/>
<use f='linux-4.14.y/fs/namespace.c' l='416' c='mnt_clone_write'/>
<use f='linux-4.14.y/fs/namespace.c' l='416' u='a'/>
<use f='linux-4.14.y/fs/namespace.c' l='416' u='a'/>
<use f='linux-4.14.y/fs/namespace.c' l='430' u='c' c='__mnt_want_write_file'/>
<doc f='linux-4.14.y/fs/namespace.c' l='394'>/**
 * mnt_clone_write - get write access to a mount
 * @mnt: the mount on which to take a write
 *
 * This is effectively like mnt_want_write, except
 * it must only be used to take an extra write reference
 * on a mountpoint that we already know has a write reference
 * on it. This allows some optimisation.
 *
 * After finished, mnt_drop_write must be called as usual to
 * drop the reference.
 */</doc>
