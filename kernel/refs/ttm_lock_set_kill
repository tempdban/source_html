<def f='linux-4.18.y/include/drm/ttm/ttm_lock.h' l='240' ll='246' type='void ttm_lock_set_kill(struct ttm_lock * lock, bool val, int signal)'/>
<doc f='linux-4.18.y/include/drm/ttm/ttm_lock.h' l='223'>/**
 * ttm_lock_set_kill
 *
 * @lock: Pointer to a struct ttm_lock
 * @val: Boolean whether to kill processes taking the lock.
 * @signal: Signal to send to the process taking the lock.
 *
 * The kill-when-taking-lock functionality is used to kill processes that keep
 * on using the TTM functionality when its resources has been taken down, for
 * example when the X server exits. A typical sequence would look like this:
 * - X server takes lock in write mode.
 * - ttm_lock_set_kill() is called with @val set to true.
 * - As part of X server exit, TTM resources are taken down.
 * - X server releases the lock on file release.
 * - Another dri client wants to render, takes the lock and is killed.
 *
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='780' u='c' c='vmw_driver_load'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1023' u='c' c='vmw_postclose'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1204' u='c' c='vmw_master_create'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1235' u='c' c='vmw_master_set'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1239' u='c' c='vmw_master_set'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1273' u='c' c='vmw_master_drop'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1279' u='c' c='vmw_master_drop'/>
