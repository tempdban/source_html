<dec f='linux-4.14.y/include/linux/usb/gadget.h' l='545' type='int usb_gadget_wakeup(struct usb_gadget * gadget)'/>
<def f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='467' ll='482' type='int usb_gadget_wakeup(struct usb_gadget * gadget)'/>
<dec f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='483' type='int usb_gadget_wakeup(struct usb_gadget * )'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='483' c='usb_gadget_wakeup'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='483' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='483' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='1440' u='c' c='usb_udc_srp_store'/>
<doc f='linux-4.14.y/drivers/usb/gadget/udc/core.c' l='454'>/**
 * usb_gadget_wakeup - tries to wake up the host connected to this gadget
 * @gadget: controller used to wake up the host
 *
 * Returns zero on success, else negative error code if the hardware
 * doesn&apos;t support such attempts, or its support has not been enabled
 * by the usb host.  Drivers must return device descriptors that report
 * their ability to support this, or hosts won&apos;t enable it.
 *
 * This may also try to use SRP to wake the host and start enumeration,
 * even if OTG isn&apos;t otherwise in use.  OTG devices may also start
 * remote wakeup even when hosts don&apos;t explicitly enable it.
 */</doc>
