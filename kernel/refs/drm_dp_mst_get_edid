<dec f='linux-4.18.y/include/drm/drm_dp_mst_helper.h' l='591' type='struct edid * drm_dp_mst_get_edid(struct drm_connector * connector, struct drm_dp_mst_topology_mgr * mgr, struct drm_dp_mst_port * port)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2549' ll='2567' type='struct edid * drm_dp_mst_get_edid(struct drm_connector * connector, struct drm_dp_mst_topology_mgr * mgr, struct drm_dp_mst_port * port)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2568' type='struct edid * drm_dp_mst_get_edid(struct drm_connector * , struct drm_dp_mst_topology_mgr * , struct drm_dp_mst_port * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2568' c='drm_dp_mst_get_edid'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2568' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2568' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2966' u='c' c='fetch_monitor_name'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2539'>/**
 * drm_dp_mst_get_edid() - get EDID for an MST port
 * @connector: toplevel connector to get EDID for
 * @mgr: manager for this port
 * @port: unverified pointer to a port.
 *
 * This returns an EDID for the port connected to a connector,
 * It validates the pointer still exists so the caller doesn&apos;t require a
 * reference.
 */</doc>
