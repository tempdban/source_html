<def f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_ctl.h' l='374' ll='384'/>
<size>124</size>
<doc f='linux-4.18.y/drivers/scsi/mpt3sas/mpt3sas_ctl.h' l='358'>/**
 * struct mpt3_diag_query - query relevant info associated with diag buffers
 * @hdr - generic header
 * @reserved -
 * @buffer_type - specifies either TRACE, SNAPSHOT, or EXTENDED
 * @application_flags - misc flags
 * @diagnostic_flags - specifies flags affecting command processing
 * @product_specific - product specific information
 * @total_buffer_size - diag buffer size in bytes
 * @driver_added_buffer_size - size of extra space appended to end of buffer
 * @unique_id - unique id associated with this buffer.
 *
 * The application will send only buffer_type and unique_id.  Driver will
 * inspect unique_id first, if valid, fill in all the info.  If unique_id is
 * 0x00, the driver will return info specified by Buffer Type.
 */</doc>
<mbr r='mpt3_diag_query::hdr' o='0' t='struct mpt3_ioctl_header'/>
<mbr r='mpt3_diag_query::reserved' o='96' t='uint8_t'/>
<mbr r='mpt3_diag_query::buffer_type' o='104' t='uint8_t'/>
<mbr r='mpt3_diag_query::application_flags' o='112' t='uint16_t'/>
<mbr r='mpt3_diag_query::diagnostic_flags' o='128' t='uint32_t'/>
<mbr r='mpt3_diag_query::product_specific' o='160' t='uint32_t [23]'/>
<mbr r='mpt3_diag_query::total_buffer_size' o='896' t='uint32_t'/>
<mbr r='mpt3_diag_query::driver_added_buffer_size' o='928' t='uint32_t'/>
<mbr r='mpt3_diag_query::unique_id' o='960' t='uint32_t'/>
