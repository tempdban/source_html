<def f='linux-4.14.y/include/linux/wait_bit.h' l='75' ll='84' type='int wait_on_bit(unsigned long * word, int bit, unsigned int mode)'/>
<use f='linux-4.14.y/include/linux/writeback.h' l='200' u='c' c='wait_on_inode'/>
<doc f='linux-4.14.y/include/linux/wait_bit.h' l='59'>/**
 * wait_on_bit - wait for a bit to be cleared
 * @word: the word being waited on, a kernel virtual address
 * @bit: the bit of the word being waited on
 * @mode: the task state to sleep in
 *
 * There is a standard hashed waitqueue table for generic use. This
 * is the part of the hashtable&apos;s accessor API that waits on a bit.
 * For instance, if one were to have waiters on a bitflag, one would
 * call wait_on_bit() in threads waiting for the bit to clear.
 * One uses wait_on_bit() where one is waiting for the bit to clear,
 * but has no intention of setting it.
 * Returned value will be zero if the bit was cleared, or non-zero
 * if the process received a signal and the mode permitted wakeup
 * on that signal.
 */</doc>
<use f='linux-4.14.y/drivers/md/dm-snap.c' l='1095' u='c' c='stop_merge'/>
<use f='linux-4.14.y/drivers/md/dm.c' l='2464' u='c' c='dm_suspend'/>
<use f='linux-4.14.y/drivers/md/dm.c' l='2521' u='c' c='dm_resume'/>
<use f='linux-4.14.y/kernel/ptrace.c' l='440' u='c' c='ptrace_attach'/>
