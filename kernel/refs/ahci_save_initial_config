<dec f='linux-4.18.y/drivers/ata/ahci.h' l='406' type='void ahci_save_initial_config(struct device * dev, struct ahci_host_priv * hpriv)'/>
<use f='linux-4.18.y/drivers/ata/ahci.c' l='639' u='c' c='ahci_pci_save_initial_config'/>
<def f='linux-4.18.y/drivers/ata/libahci.c' l='441' ll='569' type='void ahci_save_initial_config(struct device * dev, struct ahci_host_priv * hpriv)'/>
<dec f='linux-4.18.y/drivers/ata/libahci.c' l='570' type='void ahci_save_initial_config(struct device * , struct ahci_host_priv * )'/>
<use f='linux-4.18.y/drivers/ata/libahci.c' l='570' c='ahci_save_initial_config'/>
<use f='linux-4.18.y/drivers/ata/libahci.c' l='570' u='a'/>
<use f='linux-4.18.y/drivers/ata/libahci.c' l='570' u='a'/>
<doc f='linux-4.18.y/drivers/ata/libahci.c' l='423'>/**
 *	ahci_save_initial_config - Save and fixup initial config values
 *	@dev: target AHCI device
 *	@hpriv: host private area to store config values
 *
 *	Some registers containing configuration info might be setup by
 *	BIOS and might be cleared on reset.  This function saves the
 *	initial values of those registers into @hpriv such that they
 *	can be restored after controller reset.
 *
 *	If inconsistent, config values are fixed up by this function.
 *
 *	If it is not set already this function sets hpriv-&gt;start_engine to
 *	ahci_start_engine.
 *
 *	LOCKING:
 *	None.
 */</doc>
<use f='linux-4.18.y/drivers/ata/libahci_platform.c' l='528' u='c' c='ahci_platform_init_host'/>
