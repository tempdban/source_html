<def f='linux-4.18.y/include/uapi/linux/batadv_packet.h' l='336' ll='348'/>
<size>28</size>
<doc f='linux-4.18.y/include/uapi/linux/batadv_packet.h' l='319'>/**
 * struct batadv_icmp_tp_packet - ICMP TP Meter packet
 * @packet_type: batman-adv packet type, part of the general header
 * @version: batman-adv protocol version, part of the genereal header
 * @ttl: time to live for this packet, part of the genereal header
 * @msg_type: ICMP packet type
 * @dst: address of the destination node
 * @orig: address of the source node
 * @uid: local ICMP socket identifier
 * @subtype: TP packet subtype (see batadv_icmp_tp_subtype)
 * @session: TP session identifier
 * @seqno: the TP sequence number
 * @timestamp: time when the packet has been sent. This value is filled in a
 *  TP_MSG and echoed back in the next TP_ACK so that the sender can compute the
 *  RTT. Since it is read only by the host which wrote it, there is no need to
 *  store it using network order
 */</doc>
<mbr r='batadv_icmp_tp_packet::packet_type' o='0' t='__u8'/>
<mbr r='batadv_icmp_tp_packet::version' o='8' t='__u8'/>
<mbr r='batadv_icmp_tp_packet::ttl' o='16' t='__u8'/>
<mbr r='batadv_icmp_tp_packet::msg_type' o='24' t='__u8'/>
<mbr r='batadv_icmp_tp_packet::dst' o='32' t='__u8 [6]'/>
<mbr r='batadv_icmp_tp_packet::orig' o='80' t='__u8 [6]'/>
<mbr r='batadv_icmp_tp_packet::uid' o='128' t='__u8'/>
<mbr r='batadv_icmp_tp_packet::subtype' o='136' t='__u8'/>
<mbr r='batadv_icmp_tp_packet::session' o='144' t='__u8 [2]'/>
<mbr r='batadv_icmp_tp_packet::seqno' o='160' t='__be32'/>
<mbr r='batadv_icmp_tp_packet::timestamp' o='192' t='__be32'/>
