<def f='linux-4.14.y/include/linux/mdio.h' l='107' ll='117'/>
<size>40</size>
<doc f='linux-4.14.y/include/linux/mdio.h' l='93'>/**
 * struct mdio_if_info - Ethernet controller MDIO interface
 * @prtad: PRTAD of the PHY (%MDIO_PRTAD_NONE if not present/unknown)
 * @mmds: Mask of MMDs expected to be present in the PHY.  This must be
 *	non-zero unless @prtad = %MDIO_PRTAD_NONE.
 * @mode_support: MDIO modes supported.  If %MDIO_SUPPORTS_C22 is set then
 *	MII register access will be passed through with @devad =
 *	%MDIO_DEVAD_NONE.  If %MDIO_EMULATE_C22 is set then access to
 *	commonly used clause 22 registers will be translated into
 *	clause 45 registers.
 * @dev: Net device structure
 * @mdio_read: Register read function; returns value or negative error code
 * @mdio_write: Register write function; returns 0 or negative error code
 */</doc>
<mbr r='mdio_if_info::prtad' o='0' t='int'/>
<mbr r='mdio_if_info::mmds' o='32' t='u32'/>
<mbr r='mdio_if_info::mode_support' o='64' t='unsigned int'/>
<mbr r='mdio_if_info::dev' o='128' t='struct net_device *'/>
<mbr r='mdio_if_info::mdio_read' o='192' t='int (*)(struct net_device *, int, int, u16)'/>
<mbr r='mdio_if_info::mdio_write' o='256' t='int (*)(struct net_device *, int, int, u16, u16)'/>
