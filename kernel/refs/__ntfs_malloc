<def f='linux-4.14.y/fs/ntfs/malloc.h' l='42' ll='53' type='void * __ntfs_malloc(unsigned long size, gfp_t gfp_mask)'/>
<use f='linux-4.14.y/fs/ntfs/malloc.h' l='66' u='c' c='ntfs_malloc_nofs'/>
<use f='linux-4.14.y/fs/ntfs/malloc.h' l='83' u='c' c='ntfs_malloc_nofs_nofail'/>
<doc f='linux-4.14.y/fs/ntfs/malloc.h' l='29'>/**
 * __ntfs_malloc - allocate memory in multiples of pages
 * @size:	number of bytes to allocate
 * @gfp_mask:	extra flags for the allocator
 *
 * Internal function.  You probably want ntfs_malloc_nofs()...
 *
 * Allocates @size bytes of memory, rounded up to multiples of PAGE_SIZE and
 * returns a pointer to the allocated memory.
 *
 * If there was insufficient memory to complete the request, return NULL.
 * Depending on @gfp_mask the allocation may be guaranteed to succeed.
 */</doc>
