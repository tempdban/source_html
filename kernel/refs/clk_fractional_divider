<def f='linux-4.18.y/include/linux/clk-provider.h' l='572' ll='586'/>
<size>72</size>
<doc f='linux-4.18.y/include/linux/clk-provider.h' l='559'>/**
 * struct clk_fractional_divider - adjustable fractional divider clock
 *
 * @hw:		handle between common and hardware-specific interfaces
 * @reg:	register containing the divider
 * @mshift:	shift to the numerator bit field
 * @mwidth:	width of the numerator bit field
 * @nshift:	shift to the denominator bit field
 * @nwidth:	width of the denominator bit field
 * @lock:	register lock
 *
 * Clock with adjustable fractional divider affecting its output frequency.
 */</doc>
<mbr r='clk_fractional_divider::hw' o='0' t='struct clk_hw'/>
<mbr r='clk_fractional_divider::reg' o='192' t='void *'/>
<mbr r='clk_fractional_divider::mshift' o='256' t='u8'/>
<mbr r='clk_fractional_divider::mwidth' o='264' t='u8'/>
<mbr r='clk_fractional_divider::mmask' o='288' t='u32'/>
<mbr r='clk_fractional_divider::nshift' o='320' t='u8'/>
<mbr r='clk_fractional_divider::nwidth' o='328' t='u8'/>
<mbr r='clk_fractional_divider::nmask' o='352' t='u32'/>
<mbr r='clk_fractional_divider::flags' o='384' t='u8'/>
<mbr r='clk_fractional_divider::approximation' o='448' t='void (*)(struct clk_hw *, unsigned long, unsigned long *, unsigned long *, unsigned long *)'/>
<mbr r='clk_fractional_divider::lock' o='512' t='spinlock_t *'/>
