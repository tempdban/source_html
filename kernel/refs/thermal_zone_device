<def f='linux-4.14.y/include/linux/thermal.h' l='205' ll='236'/>
<size>840</size>
<doc f='linux-4.14.y/include/linux/thermal.h' l='163'>/**
 * struct thermal_zone_device - structure for a thermal zone
 * @id:		unique id number for each thermal zone
 * @type:	the thermal zone device type
 * @device:	&amp;struct device for this thermal zone
 * @trip_temp_attrs:	attributes for trip points for sysfs: trip temperature
 * @trip_type_attrs:	attributes for trip points for sysfs: trip type
 * @trip_hyst_attrs:	attributes for trip points for sysfs: trip hysteresis
 * @devdata:	private pointer for device private data
 * @trips:	number of trip points the thermal zone supports
 * @trips_disabled;	bitmap for disabled trips
 * @passive_delay:	number of milliseconds to wait between polls when
 *			performing passive cooling.
 * @polling_delay:	number of milliseconds to wait between polls when
 *			checking whether trip points have been crossed (0 for
 *			interrupt driven systems)
 * @temperature:	current temperature.  This is only for core code,
 *			drivers should use thermal_zone_get_temp() to get the
 *			current temperature
 * @last_temperature:	previous temperature read
 * @emul_temperature:	emulated temperature when using CONFIG_THERMAL_EMULATION
 * @passive:		1 if you&apos;ve crossed a passive trip point, 0 otherwise.
 * @prev_low_trip:	the low current temperature if you&apos;ve crossed a passive
			trip point.
 * @prev_high_trip:	the above current temperature if you&apos;ve crossed a
			passive trip point.
 * @forced_passive:	If &gt; 0, temperature at which to switch on all ACPI
 *			processor cooling devices.  Currently only used by the
 *			step-wise governor.
 * @need_update:	if equals 1, thermal_zone_device_update needs to be invoked.
 * @ops:	operations this &amp;thermal_zone_device supports
 * @tzp:	thermal zone parameters
 * @governor:	pointer to the governor for this thermal zone
 * @governor_data:	private pointer for governor data
 * @thermal_instances:	list of &amp;struct thermal_instance of this thermal zone
 * @ida:	&amp;struct ida to generate unique id for this zone&apos;s cooling
 *		devices
 * @lock:	lock to protect thermal_instances list
 * @node:	node in thermal_tz_list (in thermal_core.c)
 * @poll_queue:	delayed work for polling
 * @notify_event: Last notification event
 */</doc>
<mbr r='thermal_zone_device::id' o='0' t='int'/>
<mbr r='thermal_zone_device::type' o='32' t='char [20]'/>
<mbr r='thermal_zone_device::device' o='192' t='struct device'/>
<mbr r='thermal_zone_device::trips_attribute_group' o='3968' t='struct attribute_group'/>
<mbr r='thermal_zone_device::trip_temp_attrs' o='4288' t='struct thermal_attr *'/>
<mbr r='thermal_zone_device::trip_type_attrs' o='4352' t='struct thermal_attr *'/>
<mbr r='thermal_zone_device::trip_hyst_attrs' o='4416' t='struct thermal_attr *'/>
<mbr r='thermal_zone_device::devdata' o='4480' t='void *'/>
<mbr r='thermal_zone_device::trips' o='4544' t='int'/>
<mbr r='thermal_zone_device::trips_disabled' o='4608' t='unsigned long'/>
<mbr r='thermal_zone_device::passive_delay' o='4672' t='int'/>
<mbr r='thermal_zone_device::polling_delay' o='4704' t='int'/>
<mbr r='thermal_zone_device::temperature' o='4736' t='int'/>
<mbr r='thermal_zone_device::last_temperature' o='4768' t='int'/>
<mbr r='thermal_zone_device::emul_temperature' o='4800' t='int'/>
<mbr r='thermal_zone_device::passive' o='4832' t='int'/>
<mbr r='thermal_zone_device::prev_low_trip' o='4864' t='int'/>
<mbr r='thermal_zone_device::prev_high_trip' o='4896' t='int'/>
<mbr r='thermal_zone_device::forced_passive' o='4928' t='unsigned int'/>
<mbr r='thermal_zone_device::need_update' o='4960' t='atomic_t'/>
<mbr r='thermal_zone_device::ops' o='4992' t='struct thermal_zone_device_ops *'/>
<mbr r='thermal_zone_device::tzp' o='5056' t='struct thermal_zone_params *'/>
<mbr r='thermal_zone_device::governor' o='5120' t='struct thermal_governor *'/>
<mbr r='thermal_zone_device::governor_data' o='5184' t='void *'/>
<mbr r='thermal_zone_device::thermal_instances' o='5248' t='struct list_head'/>
<mbr r='thermal_zone_device::ida' o='5376' t='struct ida'/>
<mbr r='thermal_zone_device::lock' o='5504' t='struct mutex'/>
<mbr r='thermal_zone_device::node' o='5760' t='struct list_head'/>
<mbr r='thermal_zone_device::poll_queue' o='5888' t='struct delayed_work'/>
<mbr r='thermal_zone_device::notify_event' o='6656' t='enum thermal_notify_event'/>
<def f='linux-4.14.y/include/linux/thermal.h' l='205' ll='236'/>
<size>840</size>
<doc f='linux-4.14.y/include/linux/thermal.h' l='163'>/**
 * struct thermal_zone_device - structure for a thermal zone
 * @id:		unique id number for each thermal zone
 * @type:	the thermal zone device type
 * @device:	&amp;struct device for this thermal zone
 * @trip_temp_attrs:	attributes for trip points for sysfs: trip temperature
 * @trip_type_attrs:	attributes for trip points for sysfs: trip type
 * @trip_hyst_attrs:	attributes for trip points for sysfs: trip hysteresis
 * @devdata:	private pointer for device private data
 * @trips:	number of trip points the thermal zone supports
 * @trips_disabled;	bitmap for disabled trips
 * @passive_delay:	number of milliseconds to wait between polls when
 *			performing passive cooling.
 * @polling_delay:	number of milliseconds to wait between polls when
 *			checking whether trip points have been crossed (0 for
 *			interrupt driven systems)
 * @temperature:	current temperature.  This is only for core code,
 *			drivers should use thermal_zone_get_temp() to get the
 *			current temperature
 * @last_temperature:	previous temperature read
 * @emul_temperature:	emulated temperature when using CONFIG_THERMAL_EMULATION
 * @passive:		1 if you&apos;ve crossed a passive trip point, 0 otherwise.
 * @prev_low_trip:	the low current temperature if you&apos;ve crossed a passive
			trip point.
 * @prev_high_trip:	the above current temperature if you&apos;ve crossed a
			passive trip point.
 * @forced_passive:	If &gt; 0, temperature at which to switch on all ACPI
 *			processor cooling devices.  Currently only used by the
 *			step-wise governor.
 * @need_update:	if equals 1, thermal_zone_device_update needs to be invoked.
 * @ops:	operations this &amp;thermal_zone_device supports
 * @tzp:	thermal zone parameters
 * @governor:	pointer to the governor for this thermal zone
 * @governor_data:	private pointer for governor data
 * @thermal_instances:	list of &amp;struct thermal_instance of this thermal zone
 * @ida:	&amp;struct ida to generate unique id for this zone&apos;s cooling
 *		devices
 * @lock:	lock to protect thermal_instances list
 * @node:	node in thermal_tz_list (in thermal_core.c)
 * @poll_queue:	delayed work for polling
 * @notify_event: Last notification event
 */</doc>
<mbr r='thermal_zone_device::id' o='0' t='int'/>
<mbr r='thermal_zone_device::type' o='32' t='char [20]'/>
<mbr r='thermal_zone_device::device' o='192' t='struct device'/>
<mbr r='thermal_zone_device::trips_attribute_group' o='3968' t='struct attribute_group'/>
<mbr r='thermal_zone_device::trip_temp_attrs' o='4288' t='struct thermal_attr *'/>
<mbr r='thermal_zone_device::trip_type_attrs' o='4352' t='struct thermal_attr *'/>
<mbr r='thermal_zone_device::trip_hyst_attrs' o='4416' t='struct thermal_attr *'/>
<mbr r='thermal_zone_device::devdata' o='4480' t='void *'/>
<mbr r='thermal_zone_device::trips' o='4544' t='int'/>
<mbr r='thermal_zone_device::trips_disabled' o='4608' t='unsigned long'/>
<mbr r='thermal_zone_device::passive_delay' o='4672' t='int'/>
<mbr r='thermal_zone_device::polling_delay' o='4704' t='int'/>
<mbr r='thermal_zone_device::temperature' o='4736' t='int'/>
<mbr r='thermal_zone_device::last_temperature' o='4768' t='int'/>
<mbr r='thermal_zone_device::emul_temperature' o='4800' t='int'/>
<mbr r='thermal_zone_device::passive' o='4832' t='int'/>
<mbr r='thermal_zone_device::prev_low_trip' o='4864' t='int'/>
<mbr r='thermal_zone_device::prev_high_trip' o='4896' t='int'/>
<mbr r='thermal_zone_device::forced_passive' o='4928' t='unsigned int'/>
<mbr r='thermal_zone_device::need_update' o='4960' t='atomic_t'/>
<mbr r='thermal_zone_device::ops' o='4992' t='struct thermal_zone_device_ops *'/>
<mbr r='thermal_zone_device::tzp' o='5056' t='struct thermal_zone_params *'/>
<mbr r='thermal_zone_device::governor' o='5120' t='struct thermal_governor *'/>
<mbr r='thermal_zone_device::governor_data' o='5184' t='void *'/>
<mbr r='thermal_zone_device::thermal_instances' o='5248' t='struct list_head'/>
<mbr r='thermal_zone_device::ida' o='5376' t='struct ida'/>
<mbr r='thermal_zone_device::lock' o='5504' t='struct mutex'/>
<mbr r='thermal_zone_device::node' o='5760' t='struct list_head'/>
<mbr r='thermal_zone_device::poll_queue' o='5888' t='struct delayed_work'/>
<mbr r='thermal_zone_device::notify_event' o='6656' t='enum thermal_notify_event'/>
