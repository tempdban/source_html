<dec f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='1165' type='void * vmw_cmdbuf_reserve(struct vmw_cmdbuf_man * man, size_t size, int ctx_id, bool interruptible, struct vmw_cmdbuf_header * header)'/>
<def f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_cmdbuf.c' l='1072' ll='1089' type='void * vmw_cmdbuf_reserve(struct vmw_cmdbuf_man * man, size_t size, int ctx_id, bool interruptible, struct vmw_cmdbuf_header * header)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_cmdbuf.c' l='1059'>/**
 * vmw_cmdbuf_reserve - Reserve space for commands in a command buffer.
 *
 * @man: The command buffer manager.
 * @size: The requested size of the commands.
 * @ctx_id: The context id if any. Otherwise set to SVGA3D_REG_INVALID.
 * @interruptible: Whether to sleep interruptible while waiting for space.
 * @header: Header of the command buffer. NULL if the current command buffer
 * should be used.
 *
 * Returns a pointer to command buffer space if successful. Otherwise
 * returns an error pointer.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c' l='3959' u='c' c='vmw_execbuf_submit_cmdbuf'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_fifo.c' l='390' u='c' c='vmw_fifo_reserve_dx'/>
