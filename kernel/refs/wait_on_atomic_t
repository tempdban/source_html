<def f='linux-4.14.y/include/linux/wait_bit.h' l='253' ll='260' type='int wait_on_atomic_t(atomic_t * val, int (*)(atomic_t *) action, unsigned int mode)'/>
<doc f='linux-4.14.y/include/linux/wait_bit.h' l='243'>/**
 * wait_on_atomic_t - Wait for an atomic_t to become 0
 * @val: The atomic value being waited on, a kernel virtual address
 * @action: the function used to sleep, which may take special actions
 * @mode: the task state to sleep in
 *
 * Wait for an atomic_t to become 0.  We abuse the bit-wait waitqueue table for
 * the purpose of getting a waitqueue, but we set the key to a bit number
 * outside of the target &apos;word&apos;.
 */</doc>
<def f='linux-4.14.y/include/linux/wait_bit.h' l='253' ll='260' type='int wait_on_atomic_t(atomic_t * val, int (*)(atomic_t *) action, unsigned int mode)'/>
<doc f='linux-4.14.y/include/linux/wait_bit.h' l='243'>/**
 * wait_on_atomic_t - Wait for an atomic_t to become 0
 * @val: The atomic value being waited on, a kernel virtual address
 * @action: the function used to sleep, which may take special actions
 * @mode: the task state to sleep in
 *
 * Wait for an atomic_t to become 0.  We abuse the bit-wait waitqueue table for
 * the purpose of getting a waitqueue, but we set the key to a bit number
 * outside of the target &apos;word&apos;.
 */</doc>
