<dec f='linux-4.14.y/arch/x86/include/asm/pgtable_64.h' l='312' type='void cleanup_highmap()'/>
<use f='linux-4.14.y/arch/x86/kernel/setup.c' l='1124' u='c' c='setup_arch'/>
<def f='linux-4.14.y/arch/x86/mm/init_64.c' l='378' ll='399' type='void cleanup_highmap()'/>
<doc f='linux-4.14.y/arch/x86/mm/init_64.c' l='365'>/*
 * The head.S code sets up the kernel high mapping:
 *
 *   from __START_KERNEL_map to __START_KERNEL_map + size (== _end-_text)
 *
 * phys_base holds the negative offset to the kernel, which is added
 * to the compile time generated pmds. This results in invalid pmds up
 * to the point where we hit the physaddr 0 mapping.
 *
 * We limit the mappings to the region from _text to _brk_end.  _brk_end
 * is rounded up to the 2MB boundary. This catches the invalid pmds as
 * well, as they are located before _text:
 */</doc>
<dec f='linux-4.14.y/arch/x86/include/asm/pgtable_64.h' l='312' type='void cleanup_highmap()'/>
<use f='linux-4.14.y/arch/x86/kernel/setup.c' l='1124' u='c' c='setup_arch'/>
<def f='linux-4.14.y/arch/x86/mm/init_64.c' l='378' ll='399' type='void cleanup_highmap()'/>
<doc f='linux-4.14.y/arch/x86/mm/init_64.c' l='365'>/*
 * The head.S code sets up the kernel high mapping:
 *
 *   from __START_KERNEL_map to __START_KERNEL_map + size (== _end-_text)
 *
 * phys_base holds the negative offset to the kernel, which is added
 * to the compile time generated pmds. This results in invalid pmds up
 * to the point where we hit the physaddr 0 mapping.
 *
 * We limit the mappings to the region from _text to _brk_end.  _brk_end
 * is rounded up to the 2MB boundary. This catches the invalid pmds as
 * well, as they are located before _text:
 */</doc>
