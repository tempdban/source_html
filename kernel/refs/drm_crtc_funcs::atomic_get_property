<dec f='linux-4.14.y/include/drm/drm_crtc.h' l='591' type='int (*)(struct drm_crtc *, const struct drm_crtc_state *, struct drm_property *, uint64_t *)'/>
<offset>832</offset>
<doc f='linux-4.14.y/include/drm/drm_crtc.h' l='573'>/**
	 * @atomic_get_property:
	 *
	 * Reads out the decoded driver-private property. This is used to
	 * implement the GETCRTC IOCTL.
	 *
	 * Do not call this function directly, use
	 * drm_atomic_crtc_get_property() instead.
	 *
	 * This callback is optional if the driver does not support any
	 * driver-private atomic properties.
	 *
	 * RETURNS:
	 *
	 * 0 on success, -EINVAL if the property isn&apos;t implemented by the
	 * driver (which should never happen, the core only asks for
	 * properties attached to this CRTC).
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='558' u='r' c='drm_atomic_crtc_get_property'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='559' u='r' c='drm_atomic_crtc_get_property'/>
<dec f='linux-4.14.y/include/drm/drm_crtc.h' l='591' type='int (*)(struct drm_crtc *, const struct drm_crtc_state *, struct drm_property *, uint64_t *)'/>
<offset>832</offset>
<doc f='linux-4.14.y/include/drm/drm_crtc.h' l='573'>/**
	 * @atomic_get_property:
	 *
	 * Reads out the decoded driver-private property. This is used to
	 * implement the GETCRTC IOCTL.
	 *
	 * Do not call this function directly, use
	 * drm_atomic_crtc_get_property() instead.
	 *
	 * This callback is optional if the driver does not support any
	 * driver-private atomic properties.
	 *
	 * RETURNS:
	 *
	 * 0 on success, -EINVAL if the property isn&apos;t implemented by the
	 * driver (which should never happen, the core only asks for
	 * properties attached to this CRTC).
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='558' u='r' c='drm_atomic_crtc_get_property'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='559' u='r' c='drm_atomic_crtc_get_property'/>
