<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='549' type='void drm_atomic_clean_old_fb(struct drm_device * dev, unsigned int plane_mask, int ret)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1969' ll='1993' type='void drm_atomic_clean_old_fb(struct drm_device * dev, unsigned int plane_mask, int ret)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1994' type='void drm_atomic_clean_old_fb(struct drm_device * , unsigned int , int )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1994' c='drm_atomic_clean_old_fb'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1994' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1994' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='2355' u='c' c='drm_mode_atomic_ioctl'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1957'>/**
 * drm_atomic_clean_old_fb -- Unset old_fb pointers and set plane-&gt;fb pointers.
 *
 * @dev: drm device to check.
 * @plane_mask: plane mask for planes that were updated.
 * @ret: return value, can be -EDEADLK for a retry.
 *
 * Before doing an update &amp;drm_plane.old_fb is set to &amp;drm_plane.fb, but before
 * dropping the locks old_fb needs to be set to NULL and plane-&gt;fb updated. This
 * is a common operation for each atomic update, so this call is split off as a
 * helper.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2769' u='c' c='drm_atomic_helper_disable_all'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='2919' u='c' c='drm_atomic_helper_commit_duplicated_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_fb_helper.c' l='415' u='c' c='restore_fbdev_mode_atomic'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_framebuffer.c' l='843' u='c' c='atomic_remove_fb'/>
