<def f='linux-4.14.y/include/linux/posix-clock.h' l='95' ll='102'/>
<size>248</size>
<doc f='linux-4.14.y/include/linux/posix-clock.h' l='80'>/**
 * struct posix_clock - represents a dynamic posix clock
 *
 * @ops:     Functional interface to the clock
 * @cdev:    Character device instance for this clock
 * @kref:    Reference count.
 * @rwsem:   Protects the &apos;zombie&apos; field from concurrent access.
 * @zombie:  If &apos;zombie&apos; is true, then the hardware has disappeared.
 * @release: A function to free the structure when the reference count reaches
 *           zero. May be NULL if structure is statically allocated.
 *
 * Drivers should embed their struct posix_clock within a private
 * structure, obtaining a reference to it during callbacks using
 * container_of().
 */</doc>
<mbr r='posix_clock::ops' o='0' t='struct posix_clock_operations'/>
<mbr r='posix_clock::cdev' o='640' t='struct cdev'/>
<mbr r='posix_clock::kref' o='1472' t='struct kref'/>
<mbr r='posix_clock::rwsem' o='1536' t='struct rw_semaphore'/>
<mbr r='posix_clock::zombie' o='1856' t='bool'/>
<mbr r='posix_clock::release' o='1920' t='void (*)(struct posix_clock *)'/>
<def f='linux-4.14.y/include/linux/posix-clock.h' l='95' ll='102'/>
<size>248</size>
<doc f='linux-4.14.y/include/linux/posix-clock.h' l='80'>/**
 * struct posix_clock - represents a dynamic posix clock
 *
 * @ops:     Functional interface to the clock
 * @cdev:    Character device instance for this clock
 * @kref:    Reference count.
 * @rwsem:   Protects the &apos;zombie&apos; field from concurrent access.
 * @zombie:  If &apos;zombie&apos; is true, then the hardware has disappeared.
 * @release: A function to free the structure when the reference count reaches
 *           zero. May be NULL if structure is statically allocated.
 *
 * Drivers should embed their struct posix_clock within a private
 * structure, obtaining a reference to it during callbacks using
 * container_of().
 */</doc>
<mbr r='posix_clock::ops' o='0' t='struct posix_clock_operations'/>
<mbr r='posix_clock::cdev' o='640' t='struct cdev'/>
<mbr r='posix_clock::kref' o='1472' t='struct kref'/>
<mbr r='posix_clock::rwsem' o='1536' t='struct rw_semaphore'/>
<mbr r='posix_clock::zombie' o='1856' t='bool'/>
<mbr r='posix_clock::release' o='1920' t='void (*)(struct posix_clock *)'/>
