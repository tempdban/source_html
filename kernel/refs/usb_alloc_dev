<dec f='linux-4.18.y/include/linux/usb/hcd.h' l='513' type='struct usb_device * usb_alloc_dev(struct usb_device * parent, struct usb_bus * , unsigned int port)'/>
<doc f='linux-4.18.y/include/linux/usb/hcd.h' l='512'>/* Enumeration is only for the hub driver, or HCD virtual root hubs */</doc>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2793' u='c' c='usb_add_hcd'/>
<use f='linux-4.18.y/drivers/usb/core/hub.c' l='4895' u='c' c='hub_port_connect'/>
<def f='linux-4.18.y/drivers/usb/core/usb.c' l='553' ll='671' type='struct usb_device * usb_alloc_dev(struct usb_device * parent, struct usb_bus * bus, unsigned int port1)'/>
<dec f='linux-4.18.y/drivers/usb/core/usb.c' l='672' type='struct usb_device * usb_alloc_dev(struct usb_device * , struct usb_bus * , unsigned int )'/>
<use f='linux-4.18.y/drivers/usb/core/usb.c' l='672' c='usb_alloc_dev'/>
<use f='linux-4.18.y/drivers/usb/core/usb.c' l='672' u='a'/>
<use f='linux-4.18.y/drivers/usb/core/usb.c' l='672' u='a'/>
<doc f='linux-4.18.y/drivers/usb/core/usb.c' l='538'>/**
 * usb_alloc_dev - usb device constructor (usbcore-internal)
 * @parent: hub to which device is connected; null to allocate a root hub
 * @bus: bus used to access the device
 * @port1: one-based index of port; ignored for root hubs
 * Context: !in_interrupt()
 *
 * Only hub drivers (including virtual root hub drivers for host
 * controllers) should ever call this.
 *
 * This call may not be used in a non-sleeping context.
 *
 * Return: On success, a pointer to the allocated usb device. %NULL on
 * failure.
 */</doc>
