<dec f='linux-4.18.y/include/linux/usb/gadget.h' l='875' type='struct usb_ep * usb_ep_autoconfig(struct usb_gadget * , struct usb_endpoint_descriptor * )'/>
<doc f='linux-4.18.y/include/linux/usb/gadget.h' l='873'>/* utility wrapping a simple endpoint selection policy */</doc>
<def f='linux-4.18.y/drivers/usb/gadget/epautoconf.c' l='161' ll='167' type='struct usb_ep * usb_ep_autoconfig(struct usb_gadget * gadget, struct usb_endpoint_descriptor * desc)'/>
<dec f='linux-4.18.y/drivers/usb/gadget/epautoconf.c' l='168' type='struct usb_ep * usb_ep_autoconfig(struct usb_gadget * , struct usb_endpoint_descriptor * )'/>
<use f='linux-4.18.y/drivers/usb/gadget/epautoconf.c' l='168' c='usb_ep_autoconfig'/>
<use f='linux-4.18.y/drivers/usb/gadget/epautoconf.c' l='168' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/epautoconf.c' l='168' u='a'/>
<doc f='linux-4.18.y/drivers/usb/gadget/epautoconf.c' l='130'>/**
 * usb_ep_autoconfig() - choose an endpoint matching the
 * descriptor
 * @gadget: The device to which the endpoint must belong.
 * @desc: Endpoint descriptor, with endpoint direction and transfer mode
 *	initialized.  For periodic transfers, the maximum packet
 *	size must also be initialized.  This is modified on success.
 *
 * By choosing an endpoint to use with the specified descriptor, this
 * routine simplifies writing gadget drivers that work with multiple
 * USB device controllers.  The endpoint would be passed later to
 * usb_ep_enable(), along with some descriptor.
 *
 * That second descriptor won&apos;t always be the same as the first one.
 * For example, isochronous endpoints can be autoconfigured for high
 * bandwidth, and then used in several lower bandwidth altsettings.
 * Also, high and full speed descriptors will be different.
 *
 * Be sure to examine and test the results of autoconfiguration on your
 * hardware.  This code may not make the best choices about how to use the
 * USB controller, and it can&apos;t know all the restrictions that may apply.
 * Some combinations of driver and hardware won&apos;t be able to autoconfigure.
 *
 * On success, this returns an claimed usb_ep, and modifies the endpoint
 * descriptor bEndpointAddress.  For bulk endpoints, the wMaxPacket value
 * is initialized as if the endpoint were used at full speed.  To prevent
 * the endpoint from being returned by a later autoconfig call, claims it
 * by assigning ep-&gt;claimed to true.
 *
 * On failure, this returns a null endpoint descriptor.
 */</doc>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_acm.c' l='649' u='c' c='acm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_acm.c' l='654' u='c' c='acm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_acm.c' l='659' u='c' c='acm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_ecm.c' l='741' u='c' c='ecm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_ecm.c' l='746' u='c' c='ecm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_ecm.c' l='755' u='c' c='ecm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_eem.c' l='285' u='c' c='eem_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_eem.c' l='290' u='c' c='eem_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_fs.c' l='2769' u='c' c='__ffs_func_bind_do_descs'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_hid.c' l='768' u='c' c='hidg_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_hid.c' l='773' u='c' c='hidg_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_loopback.c' l='187' u='c' c='loopback_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_loopback.c' l='195' u='c' c='loopback_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_mass_storage.c' l='2954' u='c' c='fsg_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_mass_storage.c' l='2959' u='c' c='fsg_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_ncm.c' l='1446' u='c' c='ncm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_ncm.c' l='1451' u='c' c='ncm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_ncm.c' l='1456' u='c' c='ncm_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_obex.c' l='343' u='c' c='obex_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_obex.c' l='348' u='c' c='obex_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_printer.c' l='1037' u='c' c='printer_func_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_printer.c' l='1045' u='c' c='printer_func_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_rndis.c' l='744' u='c' c='rndis_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_rndis.c' l='749' u='c' c='rndis_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_rndis.c' l='758' u='c' c='rndis_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_serial.c' l='215' u='c' c='gser_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_serial.c' l='220' u='c' c='gser_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_sourcesink.c' l='332' u='c' c='sourcesink_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_sourcesink.c' l='340' u='c' c='sourcesink_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_sourcesink.c' l='363' u='c' c='sourcesink_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_sourcesink.c' l='367' u='c' c='sourcesink_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_subset.c' l='338' u='c' c='geth_bind'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_subset.c' l='343' u='c' c='geth_bind'/>
