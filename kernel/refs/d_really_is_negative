<def f='linux-4.14.y/include/linux/dcache.h' l='468' ll='471' type='bool d_really_is_negative(const struct dentry * dentry)'/>
<doc f='linux-4.14.y/include/linux/dcache.h' l='453'>/**
 * d_really_is_negative - Determine if a dentry is really negative (ignoring fallthroughs)
 * @dentry: The dentry in question
 *
 * Returns true if the dentry represents either an absent name or a name that
 * doesn&apos;t map to an inode (ie. -&gt;d_inode is NULL).  The dentry could represent
 * a true miss, a whiteout that isn&apos;t represented by a 0,0 chardev or a
 * fallthrough marker in an opaque directory.
 *
 * Note!  (1) This should be used *only* by a filesystem to examine its own
 * dentries.  It should not be used to look at some other filesystem&apos;s
 * dentries.  (2) It should also be used in combination with d_inode() to get
 * the inode.  (3) The dentry may have something attached to -&gt;d_lower and the
 * type field of the flags may be set to something other than miss or whiteout.
 */</doc>
<use f='linux-4.14.y/fs/configfs/inode.c' l='264' u='c' c='configfs_hash_and_remove'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='771' u='c' c='debugfs_rename'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='771' u='c' c='debugfs_rename'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='774' u='c' c='debugfs_rename'/>
<use f='linux-4.14.y/fs/kernfs/kernfs-internal.h' l='75' u='c' c='kernfs_dentry_node'/>
<use f='linux-4.14.y/fs/kernfs/dir.c' l='566' u='c' c='kernfs_dop_revalidate'/>
<use f='linux-4.14.y/fs/kernfs/dir.c' l='615' u='c' c='kernfs_node_from_dentry'/>
<use f='linux-4.14.y/ipc/mqueue.c' l='820' u='c' c='do_mq_open'/>
