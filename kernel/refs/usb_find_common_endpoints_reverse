<dec f='linux-4.14.y/include/linux/usb.h' l='111' type='int usb_find_common_endpoints_reverse(struct usb_host_interface * alt, struct usb_endpoint_descriptor ** bulk_in, struct usb_endpoint_descriptor ** bulk_out, struct usb_endpoint_descriptor ** int_in, struct usb_endpoint_descriptor ** int_out)'/>
<use f='linux-4.14.y/include/linux/usb.h' l='149' u='c' c='usb_find_last_bulk_in_endpoint'/>
<use f='linux-4.14.y/include/linux/usb.h' l='156' u='c' c='usb_find_last_bulk_out_endpoint'/>
<use f='linux-4.14.y/include/linux/usb.h' l='163' u='c' c='usb_find_last_int_in_endpoint'/>
<use f='linux-4.14.y/include/linux/usb.h' l='170' u='c' c='usb_find_last_int_out_endpoint'/>
<def f='linux-4.14.y/drivers/usb/core/usb.c' l='183' ll='209' type='int usb_find_common_endpoints_reverse(struct usb_host_interface * alt, struct usb_endpoint_descriptor ** bulk_in, struct usb_endpoint_descriptor ** bulk_out, struct usb_endpoint_descriptor ** int_in, struct usb_endpoint_descriptor ** int_out)'/>
<dec f='linux-4.14.y/drivers/usb/core/usb.c' l='210' type='int usb_find_common_endpoints_reverse(struct usb_host_interface * , struct usb_endpoint_descriptor ** , struct usb_endpoint_descriptor ** , struct usb_endpoint_descriptor ** , struct usb_endpoint_descriptor ** )'/>
<use f='linux-4.14.y/drivers/usb/core/usb.c' l='210' c='usb_find_common_endpoints_reverse'/>
<use f='linux-4.14.y/drivers/usb/core/usb.c' l='210' u='a'/>
<use f='linux-4.14.y/drivers/usb/core/usb.c' l='210' u='a'/>
<doc f='linux-4.14.y/drivers/usb/core/usb.c' l='166'>/**
 * usb_find_common_endpoints_reverse() -- look up common endpoint descriptors
 * @alt:	alternate setting to search
 * @bulk_in:	pointer to descriptor pointer, or NULL
 * @bulk_out:	pointer to descriptor pointer, or NULL
 * @int_in:	pointer to descriptor pointer, or NULL
 * @int_out:	pointer to descriptor pointer, or NULL
 *
 * Search the alternate setting&apos;s endpoint descriptors for the last bulk-in,
 * bulk-out, interrupt-in and interrupt-out endpoints and return them in the
 * provided pointers (unless they are NULL).
 *
 * If a requested endpoint is not found, the corresponding pointer is set to
 * NULL.
 *
 * Return: Zero if all requested descriptors were found, or -ENXIO otherwise.
 */</doc>
