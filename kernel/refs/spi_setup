<dec f='linux-4.14.y/include/linux/spi/spi.h' l='941' type='int spi_setup(struct spi_device * spi)'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='544' u='c' c='spi_add_device'/>
<def f='linux-4.14.y/drivers/spi/spi.c' l='2715' ll='2778' type='int spi_setup(struct spi_device * spi)'/>
<dec f='linux-4.14.y/drivers/spi/spi.c' l='2779' type='int spi_setup(struct spi_device * )'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2779' c='spi_setup'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2779' u='a'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2779' u='a'/>
<doc f='linux-4.14.y/drivers/spi/spi.c' l='2695'>/**
 * spi_setup - setup SPI mode and clock rate
 * @spi: the device whose settings are being modified
 * Context: can sleep, and no requests are queued to the device
 *
 * SPI protocol drivers may need to update the transfer mode if the
 * device doesn&apos;t work with its default.  They may likewise need
 * to update clock rates or word sizes from initial values.  This function
 * changes those settings, and must be called from a context that can sleep.
 * Except for SPI_CS_HIGH, which takes effect immediately, the changes take
 * effect the next time the device is selected and data is transferred to
 * or from it.  When this function returns, the spi device is deselected.
 *
 * Note that this call will fail if the protocol driver specifies an option
 * that the underlying controller or its driver does not support.  For
 * example, not all hardware supports wire transfers using nine bit words,
 * LSB-first wire encoding, or active-high chipselects.
 *
 * Return: zero on success, else a negative error code.
 */</doc>
<dec f='linux-4.14.y/include/linux/spi/spi.h' l='941' type='int spi_setup(struct spi_device * spi)'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='544' u='c' c='spi_add_device'/>
<def f='linux-4.14.y/drivers/spi/spi.c' l='2715' ll='2778' type='int spi_setup(struct spi_device * spi)'/>
<dec f='linux-4.14.y/drivers/spi/spi.c' l='2779' type='int spi_setup(struct spi_device * )'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2779' c='spi_setup'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2779' u='a'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2779' u='a'/>
<doc f='linux-4.14.y/drivers/spi/spi.c' l='2695'>/**
 * spi_setup - setup SPI mode and clock rate
 * @spi: the device whose settings are being modified
 * Context: can sleep, and no requests are queued to the device
 *
 * SPI protocol drivers may need to update the transfer mode if the
 * device doesn&apos;t work with its default.  They may likewise need
 * to update clock rates or word sizes from initial values.  This function
 * changes those settings, and must be called from a context that can sleep.
 * Except for SPI_CS_HIGH, which takes effect immediately, the changes take
 * effect the next time the device is selected and data is transferred to
 * or from it.  When this function returns, the spi device is deselected.
 *
 * Note that this call will fail if the protocol driver specifies an option
 * that the underlying controller or its driver does not support.  For
 * example, not all hardware supports wire transfers using nine bit words,
 * LSB-first wire encoding, or active-high chipselects.
 *
 * Return: zero on success, else a negative error code.
 */</doc>
