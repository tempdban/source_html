<def f='linux-4.14.y/arch/x86/include/asm/pvclock-abi.h' l='26' ll='35'/>
<size>32</size>
<doc f='linux-4.14.y/arch/x86/include/asm/pvclock-abi.h' l='6'>/*
 * These structs MUST NOT be changed.
 * They are the ABI between hypervisor and guest OS.
 * Both Xen and KVM are using this.
 *
 * pvclock_vcpu_time_info holds the system time and the tsc timestamp
 * of the last update. So the guest can use the tsc delta to get a
 * more precise system time.  There is one per virtual cpu.
 *
 * pvclock_wall_clock references the point in time when the system
 * time was zero (usually boot time), thus the guest calculates the
 * current wall clock by adding the system time.
 *
 * Protocol for the &quot;version&quot; fields is: hypervisor raises it (making
 * it uneven) before it starts updating the fields and raises it again
 * (making it even) when it is done.  Thus the guest can make sure the
 * time values it got are consistent by checking the version before
 * and after reading them.
 */</doc>
<mbr r='pvclock_vcpu_time_info::version' o='0' t='u32'/>
<mbr r='pvclock_vcpu_time_info::pad0' o='32' t='u32'/>
<mbr r='pvclock_vcpu_time_info::tsc_timestamp' o='64' t='u64'/>
<mbr r='pvclock_vcpu_time_info::system_time' o='128' t='u64'/>
<mbr r='pvclock_vcpu_time_info::tsc_to_system_mul' o='192' t='u32'/>
<mbr r='pvclock_vcpu_time_info::tsc_shift' o='224' t='s8'/>
<mbr r='pvclock_vcpu_time_info::flags' o='232' t='u8'/>
<mbr r='pvclock_vcpu_time_info::pad' o='240' t='u8 [2]'/>
