<def f='linux-4.14.y/include/linux/usb.h' l='1653' ll='1679' type='void usb_fill_int_urb(struct urb * urb, struct usb_device * dev, unsigned int pipe, void * transfer_buffer, int buffer_length, usb_complete_t complete_fn, void * context, int interval)'/>
<doc f='linux-4.14.y/include/linux/usb.h' l='1628'>/**
 * usb_fill_int_urb - macro to help initialize a interrupt urb
 * @urb: pointer to the urb to initialize.
 * @dev: pointer to the struct usb_device for this urb.
 * @pipe: the endpoint pipe
 * @transfer_buffer: pointer to the transfer buffer
 * @buffer_length: length of the transfer buffer
 * @complete_fn: pointer to the usb_complete_t function
 * @context: what to set the urb context to.
 * @interval: what to set the urb interval to, encoded like
 *	the endpoint descriptor&apos;s bInterval value.
 *
 * Initializes a interrupt urb with the proper information needed to submit
 * it to a device.
 *
 * Note that High Speed and SuperSpeed(+) interrupt endpoints use a logarithmic
 * encoding of the endpoint interval, and express polling intervals in
 * microframes (eight per millisecond) rather than in frames (one per
 * millisecond).
 *
 * Wireless USB also uses the logarithmic encoding, but specifies it in units of
 * 128us instead of 125us.  For Wireless USB devices, the interval is passed
 * through to the host controller, rather than being translated into microframe
 * units.
 */</doc>
<use f='linux-4.14.y/drivers/hid/usbhid/hid-core.c' l='1117' u='c' c='usbhid_start'/>
<use f='linux-4.14.y/drivers/hid/usbhid/hid-core.c' l='1127' u='c' c='usbhid_start'/>
<use f='linux-4.14.y/drivers/usb/class/cdc-acm.c' l='1464' u='c' c='acm_probe'/>
<use f='linux-4.14.y/drivers/usb/class/cdc-acm.c' l='1484' u='c' c='acm_probe'/>
<use f='linux-4.14.y/drivers/usb/class/cdc-acm.c' l='1533' u='c' c='acm_probe'/>
<use f='linux-4.14.y/drivers/usb/core/hub.c' l='1568' u='c' c='hub_configure'/>
<use f='linux-4.14.y/drivers/usb/core/message.c' l='245' u='c' c='usb_bulk_msg'/>
<use f='linux-4.14.y/drivers/usb/storage/transport.c' l='387' u='c' c='usb_stor_intr_transfer'/>
