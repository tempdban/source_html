<dec f='linux-4.18.y/arch/x86/include/asm/fpu/api.h' l='24' type='void __kernel_fpu_begin()'/>
<doc f='linux-4.18.y/arch/x86/include/asm/fpu/api.h' l='14'>/*
 * Careful: __kernel_fpu_begin/end() must be called with preempt disabled
 * and they don&apos;t touch the preempt state on their own.
 * If you enable preemption after __kernel_fpu_begin(), preempt notifier
 * should call the __kernel_fpu_end() to prevent the kernel/user FPU
 * state from getting corrupted. KVM for example uses this model.
 *
 * All other cases use kernel_fpu_begin/end() which disable preemption
 * during kernel FPU usage.
 */</doc>
<def f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='96' ll='113' type='void __kernel_fpu_begin()'/>
<dec f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='114' type='void __kernel_fpu_begin()'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='114' c='__kernel_fpu_begin'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='114' u='a'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='114' u='a'/>
<use f='linux-4.18.y/arch/x86/kernel/fpu/core.c' l='130' u='c' c='kernel_fpu_begin'/>
