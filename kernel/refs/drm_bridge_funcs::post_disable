<dec f='linux-4.18.y/include/drm/drm_bridge.h' l='170' type='void (*)(struct drm_bridge *)'/>
<offset>320</offset>
<doc f='linux-4.18.y/include/drm/drm_bridge.h' l='153'>/**
	 * @post_disable:
	 *
	 * This callback should disable the bridge. It is called right after the
	 * preceding element in the display pipe is disabled. If the preceding
	 * element is a bridge this means it&apos;s called after that bridge&apos;s
	 * @post_disable function. If the preceding element is a &amp;drm_encoder
	 * it&apos;s called right after the encoder&apos;s
	 * &amp;drm_encoder_helper_funcs.disable, &amp;drm_encoder_helper_funcs.prepare
	 * or &amp;drm_encoder_helper_funcs.dpms hook.
	 *
	 * The bridge must assume that the display pipe (i.e. clocks and timing
	 * singals) feeding it is no longer running when this callback is
	 * called.
	 *
	 * The post_disable callback is optional.
	 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/bridge/panel.c' l='133' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_bridge.c' l='273' u='r' c='drm_bridge_post_disable'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_bridge.c' l='274' u='r' c='drm_bridge_post_disable'/>
