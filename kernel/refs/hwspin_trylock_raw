<def f='linux-4.18.y/include/linux/hwspinlock.h' l='185' ll='188' type='int hwspin_trylock_raw(struct hwspinlock * hwlock)'/>
<doc f='linux-4.18.y/include/linux/hwspinlock.h' l='171'>/**
 * hwspin_trylock_raw() - attempt to lock a specific hwspinlock
 * @hwlock: an hwspinlock which we want to trylock
 *
 * This function attempts to lock an hwspinlock, and will immediately fail
 * if the hwspinlock is already taken.
 *
 * Caution: User must protect the routine of getting hardware lock with mutex
 * or spinlock to avoid dead-lock, that will let user can do some time-consuming
 * or sleepable operations under the hardware lock.
 *
 * Returns 0 if we successfully locked the hwspinlock, -EBUSY if
 * the hwspinlock was already taken, and -EINVAL if @hwlock is invalid.
 */</doc>
