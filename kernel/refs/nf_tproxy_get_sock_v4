<dec f='linux-4.18.y/include/net/netfilter/nf_tproxy.h' l='67' type='struct sock * nf_tproxy_get_sock_v4(struct net * net, struct sk_buff * skb, const u8 protocol, const __be32 saddr, const __be32 daddr, const __be16 sport, const __be16 dport, const struct net_device * in, const enum nf_tproxy_lookup_t lookup_type)'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='40' u='c' c='nf_tproxy_handle_time_wait4'/>
<def f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='73' ll='148' type='struct sock * nf_tproxy_get_sock_v4(struct net * net, struct sk_buff * skb, const u8 protocol, const __be32 saddr, const __be32 daddr, const __be16 sport, const __be16 dport, const struct net_device * in, const enum nf_tproxy_lookup_t lookup_type)'/>
<dec f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='149' type='struct sock * nf_tproxy_get_sock_v4(struct net * , struct sk_buff * , const u8 , const __be32 , const __be32 , const __be16 , const __be16 , const struct net_device * , const enum nf_tproxy_lookup_t )'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='149' c='nf_tproxy_get_sock_v4'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='149' u='a'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='149' u='a'/>
<doc f='linux-4.18.y/include/net/netfilter/nf_tproxy.h' l='43'>/*
 * This is used when the user wants to intercept a connection matching
 * an explicit iptables rule. In this case the sockets are assumed
 * matching in preference order:
 *
 *   - match: if there&apos;s a fully established connection matching the
 *     _packet_ tuple, it is returned, assuming the redirection
 *     already took place and we process a packet belonging to an
 *     established connection
 *
 *   - match: if there&apos;s a listening socket matching the redirection
 *     (e.g. on-port &amp; on-ip of the connection), it is returned,
 *     regardless if it was bound to 0.0.0.0 or an explicit
 *     address. The reasoning is that if there&apos;s an explicit rule, it
 *     does not really matter if the listener is bound to an interface
 *     or to 0. The user already stated that he wants redirection
 *     (since he added the rule).
 *
 * Please note that there&apos;s an overlap between what a TPROXY target
 * and a socket match will match. Normally if you have both rules the
 * &quot;socket&quot; match will be the first one, effectively all packets
 * belonging to established connections going through that one.
 */</doc>
<use f='linux-4.18.y/net/netfilter/xt_TPROXY.c' l='64' u='c' c='tproxy_tg4'/>
<use f='linux-4.18.y/net/netfilter/xt_TPROXY.c' l='80' u='c' c='tproxy_tg4'/>
