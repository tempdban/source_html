<def f='linux-4.18.y/include/net/addrconf.h' l='232' ll='260'/>
<dec f='linux-4.18.y/include/net/addrconf.h' l='261' type='const struct ipv6_stub *'/>
<size>88</size>
<doc f='linux-4.18.y/include/net/addrconf.h' l='229'>/* A stub used by vxlan module. This is ugly, ideally these
 * symbols should be built into the core kernel.
 */</doc>
<mbr r='ipv6_stub::ipv6_sock_mc_join' o='0' t='int (*)(struct sock *, int, const struct in6_addr *)'/>
<mbr r='ipv6_stub::ipv6_sock_mc_drop' o='64' t='int (*)(struct sock *, int, const struct in6_addr *)'/>
<mbr r='ipv6_stub::ipv6_dst_lookup' o='128' t='int (*)(struct net *, struct sock *, struct dst_entry **, struct flowi6 *)'/>
<mbr r='ipv6_stub::fib6_get_table' o='192' t='struct fib6_table *(*)(struct net *, u32)'/>
<mbr r='ipv6_stub::fib6_lookup' o='256' t='struct fib6_info *(*)(struct net *, int, struct flowi6 *, int)'/>
<mbr r='ipv6_stub::fib6_table_lookup' o='320' t='struct fib6_info *(*)(struct net *, struct fib6_table *, int, struct flowi6 *, int)'/>
<mbr r='ipv6_stub::fib6_multipath_select' o='384' t='struct fib6_info *(*)(const struct net *, struct fib6_info *, struct flowi6 *, int, const struct sk_buff *, int)'/>
<mbr r='ipv6_stub::ip6_mtu_from_fib6' o='448' t='u32 (*)(struct fib6_info *, struct in6_addr *, struct in6_addr *)'/>
<mbr r='ipv6_stub::udpv6_encap_enable' o='512' t='void (*)(void)'/>
<mbr r='ipv6_stub::ndisc_send_na' o='576' t='void (*)(struct net_device *, const struct in6_addr *, const struct in6_addr *, bool, bool, bool, bool)'/>
<mbr r='ipv6_stub::nd_tbl' o='640' t='struct neigh_table *'/>
<def f='linux-4.18.y/net/ipv6/addrconf_core.c' l='171' ll='178' type='const struct ipv6_stub *'/>
<dec f='linux-4.18.y/net/ipv6/addrconf_core.c' l='179' type='typeof (ipv6_stub)'/>
<use f='linux-4.18.y/net/ipv6/addrconf_core.c' l='179'/>
<use f='linux-4.18.y/net/ipv6/addrconf_core.c' l='179' u='a'/>
<use f='linux-4.18.y/net/ipv6/addrconf_core.c' l='179' u='a'/>
