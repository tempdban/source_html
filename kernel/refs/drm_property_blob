<def f='linux-4.18.y/include/drm/drm_property.h' l='206' ll='213'/>
<size>88</size>
<doc f='linux-4.18.y/include/drm/drm_property.h' l='190'>/**
 * struct drm_property_blob - Blob data for &amp;drm_property
 * @base: base KMS object
 * @dev: DRM device
 * @head_global: entry on the global blob list in
 * 	&amp;drm_mode_config.property_blob_list.
 * @head_file: entry on the per-file blob list in &amp;drm_file.blobs list.
 * @length: size of the blob in bytes, invariant over the lifetime of the object
 * @data: actual data, embedded at the end of this structure
 *
 * Blobs are used to store bigger values than what fits directly into the 64
 * bits available for a &amp;drm_property.
 *
 * Blobs are reference counted using drm_property_blob_get() and
 * drm_property_blob_put(). They are created using drm_property_create_blob().
 */</doc>
<mbr r='drm_property_blob::base' o='0' t='struct drm_mode_object'/>
<mbr r='drm_property_blob::dev' o='256' t='struct drm_device *'/>
<mbr r='drm_property_blob::head_global' o='320' t='struct list_head'/>
<mbr r='drm_property_blob::head_file' o='448' t='struct list_head'/>
<mbr r='drm_property_blob::length' o='576' t='size_t'/>
<mbr r='drm_property_blob::data' o='640' t='void *'/>
