<dec f='linux-4.18.y/include/asm-generic/tlb.h' l='120' type='bool __tlb_remove_page_size(struct mmu_gather * tlb, struct page * page, int page_size)'/>
<use f='linux-4.18.y/include/asm-generic/tlb.h' l='144' u='c' c='tlb_remove_page_size'/>
<use f='linux-4.18.y/include/asm-generic/tlb.h' l='150' u='c' c='__tlb_remove_page'/>
<def f='linux-4.18.y/mm/memory.c' l='302' ll='323' type='bool __tlb_remove_page_size(struct mmu_gather * tlb, struct page * page, int page_size)'/>
<doc f='linux-4.18.y/mm/memory.c' l='295'>/* __tlb_remove_page
 *	Must perform the equivalent to __free_pte(pte_get_and_clear(ptep)), while
 *	handling the additional races in SMP caused by other CPUs caching valid
 *	mappings in their TLBs. Returns the number of free page slots left.
 *	When out of page slots we must call tlb_flush_mmu().
 *returns true if the caller should flush.
 */</doc>
