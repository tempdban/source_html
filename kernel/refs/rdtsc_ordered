<def f='linux-4.14.y/arch/x86/include/asm/msr.h' l='204' ll='219' type='unsigned long long rdtsc_ordered()'/>
<doc f='linux-4.14.y/arch/x86/include/asm/msr.h' l='196'>/**
 * rdtsc_ordered() - read the current TSC in program order
 *
 * rdtsc_ordered() returns the result of RDTSC as a 64-bit integer.
 * It is ordered like a load to a global in-memory counter.  It should
 * be impossible to observe non-monotonic rdtsc_unordered() behavior
 * across multiple CPUs as long as the TSC is synced.
 */</doc>
<use f='linux-4.14.y/arch/x86/entry/vdso/vclock_gettime.c' l='138' u='c' c='vread_pvclock'/>
<use f='linux-4.14.y/arch/x86/entry/vdso/vclock_gettime.c' l='167' u='c' c='vread_tsc'/>
<use f='linux-4.14.y/arch/x86/events/msr.c' l='181' macro='1' u='c'/>
<use f='linux-4.14.y/arch/x86/kernel/pvclock.c' l='85' u='c' c='pvclock_clocksource_read'/>
<use f='linux-4.14.y/arch/x86/kernel/trace_clock.c' l='16' u='c' c='trace_clock_x86_tsc'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc.c' l='1034' u='c' c='read_tsc'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc_sync.c' l='195' u='c' c='check_tsc_warp'/>
<use f='linux-4.14.y/arch/x86/kernel/tsc_sync.c' l='210' u='c' c='check_tsc_warp'/>
<use f='linux-4.14.y/arch/x86/kvm/x86.c' l='1588' u='c' c='read_tsc'/>
<use f='linux-4.14.y/arch/x86/lib/delay.c' l='59' u='c' c='delay_tsc'/>
<use f='linux-4.14.y/arch/x86/lib/delay.c' l='61' u='c' c='delay_tsc'/>
<use f='linux-4.14.y/arch/x86/lib/delay.c' l='82' u='c' c='delay_tsc'/>
<use f='linux-4.14.y/arch/x86/lib/delay.c' l='104' u='c' c='delay_mwaitx'/>
<use f='linux-4.14.y/arch/x86/lib/delay.c' l='122' u='c' c='delay_mwaitx'/>
