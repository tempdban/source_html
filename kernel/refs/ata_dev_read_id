<dec f='linux-4.14.y/drivers/ata/libata.h' l='75' type='int ata_dev_read_id(struct ata_device * dev, unsigned int * p_class, unsigned int flags, u16 * id)'/>
<def f='linux-4.14.y/drivers/ata/libata-core.c' l='1861' ll='2048' type='int ata_dev_read_id(struct ata_device * dev, unsigned int * p_class, unsigned int flags, u16 * id)'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='2929' u='c' c='ata_bus_probe'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4278' u='c' c='ata_dev_reread_id'/>
<doc f='linux-4.14.y/drivers/ata/libata-core.c' l='1840'>/**
 *	ata_dev_read_id - Read ID data from the specified device
 *	@dev: target device
 *	@p_class: pointer to class of the target device (may be changed)
 *	@flags: ATA_READID_* flags
 *	@id: buffer to read IDENTIFY data into
 *
 *	Read ID data from the specified device.  ATA_CMD_ID_ATA is
 *	performed on ATA devices and ATA_CMD_ID_ATAPI on ATAPI
 *	devices.  This function also issues ATA_CMD_INIT_DEV_PARAMS
 *	for pre-ATA4 drives.
 *
 *	FIXME: ATA_CMD_ID_ATA is optional for early drives and right
 *	now we abort if we hit that case.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
<use f='linux-4.14.y/drivers/ata/libata-eh.c' l='3205' u='c' c='ata_eh_revalidate_and_attach'/>
<dec f='linux-4.14.y/drivers/ata/libata.h' l='75' type='int ata_dev_read_id(struct ata_device * dev, unsigned int * p_class, unsigned int flags, u16 * id)'/>
<def f='linux-4.14.y/drivers/ata/libata-core.c' l='1861' ll='2048' type='int ata_dev_read_id(struct ata_device * dev, unsigned int * p_class, unsigned int flags, u16 * id)'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='2929' u='c' c='ata_bus_probe'/>
<use f='linux-4.14.y/drivers/ata/libata-core.c' l='4278' u='c' c='ata_dev_reread_id'/>
<doc f='linux-4.14.y/drivers/ata/libata-core.c' l='1840'>/**
 *	ata_dev_read_id - Read ID data from the specified device
 *	@dev: target device
 *	@p_class: pointer to class of the target device (may be changed)
 *	@flags: ATA_READID_* flags
 *	@id: buffer to read IDENTIFY data into
 *
 *	Read ID data from the specified device.  ATA_CMD_ID_ATA is
 *	performed on ATA devices and ATA_CMD_ID_ATAPI on ATAPI
 *	devices.  This function also issues ATA_CMD_INIT_DEV_PARAMS
 *	for pre-ATA4 drives.
 *
 *	FIXME: ATA_CMD_ID_ATA is optional for early drives and right
 *	now we abort if we hit that case.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
<use f='linux-4.14.y/drivers/ata/libata-eh.c' l='3205' u='c' c='ata_eh_revalidate_and_attach'/>
