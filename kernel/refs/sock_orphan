<def f='linux-4.14.y/include/net/sock.h' l='1690' ll='1697' type='void sock_orphan(struct sock * sk)'/>
<doc f='linux-4.14.y/include/net/sock.h' l='1683'>/* Detach socket from process context.
 * Announce socket dead, detach it from wait queue and inode.
 * Note that parent inode held reference count on this struct sock,
 * we do not release it in this function, because protocol
 * probably wants some additional cleanups or even continuing
 * to work with this socket (TCP).
 */</doc>
<use f='linux-4.14.y/net/core/sock.c' l='3007' u='c' c='sk_common_release'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='903' u='c' c='inet_child_forget'/>
<use f='linux-4.14.y/net/ipv4/tcp.c' l='2218' u='c' c='tcp_close'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='721' u='c' c='netlink_release'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3051' u='c' c='packet_release'/>
<use f='linux-4.14.y/net/unix/af_unix.c' l='523' u='c' c='unix_release_sock'/>
<def f='linux-4.14.y/include/net/sock.h' l='1690' ll='1697' type='void sock_orphan(struct sock * sk)'/>
<doc f='linux-4.14.y/include/net/sock.h' l='1683'>/* Detach socket from process context.
 * Announce socket dead, detach it from wait queue and inode.
 * Note that parent inode held reference count on this struct sock,
 * we do not release it in this function, because protocol
 * probably wants some additional cleanups or even continuing
 * to work with this socket (TCP).
 */</doc>
<use f='linux-4.14.y/net/core/sock.c' l='3007' u='c' c='sk_common_release'/>
<use f='linux-4.14.y/net/ipv4/inet_connection_sock.c' l='903' u='c' c='inet_child_forget'/>
<use f='linux-4.14.y/net/ipv4/tcp.c' l='2218' u='c' c='tcp_close'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='721' u='c' c='netlink_release'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='3051' u='c' c='packet_release'/>
<use f='linux-4.14.y/net/unix/af_unix.c' l='523' u='c' c='unix_release_sock'/>
