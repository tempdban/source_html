<dec f='linux-4.18.y/include/linux/badblocks.h' l='48' type='int badblocks_clear(struct badblocks * bb, sector_t s, int sectors)'/>
<def f='linux-4.18.y/block/badblocks.c' l='339' ll='431' type='int badblocks_clear(struct badblocks * bb, sector_t s, int sectors)'/>
<dec f='linux-4.18.y/block/badblocks.c' l='432' type='int badblocks_clear(struct badblocks * , sector_t , int )'/>
<use f='linux-4.18.y/block/badblocks.c' l='432' c='badblocks_clear'/>
<use f='linux-4.18.y/block/badblocks.c' l='432' u='a'/>
<use f='linux-4.18.y/block/badblocks.c' l='432' u='a'/>
<doc f='linux-4.18.y/block/badblocks.c' l='325'>/**
 * badblocks_clear() - Remove a range of bad blocks to the table.
 * @bb:		the badblocks structure that holds all badblock information
 * @s:		first sector to mark as bad
 * @sectors:	number of sectors to mark as bad
 *
 * This may involve extending the table if we spilt a region,
 * but it must not fail.  So if the table becomes full, we just
 * drop the remove request.
 *
 * Return:
 *  0: success
 *  1: failed to clear badblocks
 */</doc>
<use f='linux-4.18.y/drivers/md/md.c' l='9064' u='c' c='rdev_clear_badblocks'/>
