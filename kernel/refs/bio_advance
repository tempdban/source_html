<dec f='linux-4.14.y/include/linux/bio.h' l='451' type='void bio_advance(struct bio * , unsigned int )'/>
<def f='linux-4.14.y/block/bio.c' l='973' ll='979' type='void bio_advance(struct bio * bio, unsigned int bytes)'/>
<dec f='linux-4.14.y/block/bio.c' l='980' type='void bio_advance(struct bio * , unsigned int )'/>
<use f='linux-4.14.y/block/bio.c' l='980' c='bio_advance'/>
<use f='linux-4.14.y/block/bio.c' l='980' u='a'/>
<use f='linux-4.14.y/block/bio.c' l='980' u='a'/>
<use f='linux-4.14.y/block/bio.c' l='1893' u='c' c='bio_split'/>
<use f='linux-4.14.y/block/bio.c' l='1920' u='c' c='bio_trim'/>
<doc f='linux-4.14.y/block/bio.c' l='962'>/**
 * bio_advance - increment/complete a bio by some number of bytes
 * @bio:	bio to advance
 * @bytes:	number of bytes to complete
 *
 * This updates bi_sector, bi_size and bi_idx; if the number of bytes to
 * complete doesn&apos;t align with a bvec boundary, then bv_len and bv_offset will
 * be updated on the last bvec as well.
 *
 * @bio will then represent the remaining, uncompleted portion of the io.
 */</doc>
<use f='linux-4.14.y/block/blk-core.c' l='200' u='c' c='req_bio_endio'/>
<use f='linux-4.14.y/drivers/block/loop.c' l='459' u='c' c='lo_complete_rq'/>
<use f='linux-4.14.y/drivers/md/dm.c' l='1256' u='c' c='clone_bio'/>
<dec f='linux-4.14.y/include/linux/bio.h' l='451' type='void bio_advance(struct bio * , unsigned int )'/>
<def f='linux-4.14.y/block/bio.c' l='973' ll='979' type='void bio_advance(struct bio * bio, unsigned int bytes)'/>
<dec f='linux-4.14.y/block/bio.c' l='980' type='void bio_advance(struct bio * , unsigned int )'/>
<use f='linux-4.14.y/block/bio.c' l='980' c='bio_advance'/>
<use f='linux-4.14.y/block/bio.c' l='980' u='a'/>
<use f='linux-4.14.y/block/bio.c' l='980' u='a'/>
<use f='linux-4.14.y/block/bio.c' l='1893' u='c' c='bio_split'/>
<use f='linux-4.14.y/block/bio.c' l='1920' u='c' c='bio_trim'/>
<doc f='linux-4.14.y/block/bio.c' l='962'>/**
 * bio_advance - increment/complete a bio by some number of bytes
 * @bio:	bio to advance
 * @bytes:	number of bytes to complete
 *
 * This updates bi_sector, bi_size and bi_idx; if the number of bytes to
 * complete doesn&apos;t align with a bvec boundary, then bv_len and bv_offset will
 * be updated on the last bvec as well.
 *
 * @bio will then represent the remaining, uncompleted portion of the io.
 */</doc>
<use f='linux-4.14.y/block/blk-core.c' l='200' u='c' c='req_bio_endio'/>
<use f='linux-4.14.y/drivers/block/loop.c' l='459' u='c' c='lo_complete_rq'/>
<use f='linux-4.14.y/drivers/md/dm.c' l='1256' u='c' c='clone_bio'/>
