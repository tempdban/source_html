<dec f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e.h' l='851' type='void i40e_do_reset(struct i40e_pf * pf, u32 reset_flags, bool lock_acquired)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_ethtool.c' l='1899' u='c' c='i40e_diag_test'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_ethtool.c' l='1915' u='c' c='i40e_diag_test'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_ethtool.c' l='4204' u='c' c='i40e_set_priv_flags'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='5771' u='c' c='i40e_vsi_open'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='5867' ll='5948' type='void i40e_do_reset(struct i40e_pf * pf, u32 reset_flags, bool lock_acquired)'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='6121' u='c' c='i40e_do_reset_safe'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='6557' u='c' c='i40e_reset_subtask'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='9192' u='c' c='i40e_set_features'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='9444' u='c' c='i40e_ndo_bridge_setlink'/>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='5856'>/**
 * i40e_do_reset - Start a PF or Core Reset sequence
 * @pf: board private structure
 * @reset_flags: which reset is requested
 * @lock_acquired: indicates whether or not the lock has been acquired
 * before this function was called.
 *
 * The essential difference in resets is that the PF Reset
 * doesn&apos;t clear the packet buffers, doesn&apos;t reset the PE
 * firmware, and doesn&apos;t bother the other PFs on the chip.
 **/</doc>
