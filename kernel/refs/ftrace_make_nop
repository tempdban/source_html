<dec f='linux-4.14.y/include/linux/ftrace.h' l='560' type='int ftrace_make_nop(struct module * mod, struct dyn_ftrace * rec, unsigned long addr)'/>
<doc f='linux-4.14.y/include/linux/ftrace.h' l='539'>/**
 * ftrace_make_nop - convert code into nop
 * @mod: module structure if called by module load initialization
 * @rec: the mcount call site record
 * @addr: the address that the call site should be calling
 *
 * This is a very sensitive operation and great care needs
 * to be taken by the arch.  The operation should carefully
 * read the location, check to see if what is read is indeed
 * what we expect it to be, and then on success of the compare,
 * it should write to the location.
 *
 * The code segment at @rec-&gt;ip should be a caller to @addr
 *
 * Return must be:
 *  0 on success
 *  -EFAULT on error reading the location
 *  -EINVAL on a failed compare of the contents
 *  -EPERM  on error writing to the location
 * Any other value will be considered a failure.
 */</doc>
<def f='linux-4.14.y/arch/x86/kernel/ftrace.c' l='138' ll='163' type='int ftrace_make_nop(struct module * mod, struct dyn_ftrace * rec, unsigned long addr)'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='2473' u='c' c='__ftrace_replace_code'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='2586' u='c' c='ftrace_code_disable'/>
<dec f='linux-4.14.y/include/linux/ftrace.h' l='560' type='int ftrace_make_nop(struct module * mod, struct dyn_ftrace * rec, unsigned long addr)'/>
<doc f='linux-4.14.y/include/linux/ftrace.h' l='539'>/**
 * ftrace_make_nop - convert code into nop
 * @mod: module structure if called by module load initialization
 * @rec: the mcount call site record
 * @addr: the address that the call site should be calling
 *
 * This is a very sensitive operation and great care needs
 * to be taken by the arch.  The operation should carefully
 * read the location, check to see if what is read is indeed
 * what we expect it to be, and then on success of the compare,
 * it should write to the location.
 *
 * The code segment at @rec-&gt;ip should be a caller to @addr
 *
 * Return must be:
 *  0 on success
 *  -EFAULT on error reading the location
 *  -EINVAL on a failed compare of the contents
 *  -EPERM  on error writing to the location
 * Any other value will be considered a failure.
 */</doc>
<def f='linux-4.14.y/arch/x86/kernel/ftrace.c' l='138' ll='163' type='int ftrace_make_nop(struct module * mod, struct dyn_ftrace * rec, unsigned long addr)'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='2473' u='c' c='__ftrace_replace_code'/>
<use f='linux-4.14.y/kernel/trace/ftrace.c' l='2586' u='c' c='ftrace_code_disable'/>
