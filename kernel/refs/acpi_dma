<def f='linux-4.14.y/include/linux/acpi_dma.h' l='44' ll='52'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/acpi_dma.h' l='35'>/**
 * struct acpi_dma - representation of the registered DMAC
 * @dma_controllers:	linked list node
 * @dev:		struct device of this controller
 * @acpi_dma_xlate:	callback function to find a suitable channel
 * @data:		private data used by a callback function
 * @base_request_line:	first supported request line (CSRT)
 * @end_request_line:	last supported request line (CSRT)
 */</doc>
<mbr r='acpi_dma::dma_controllers' o='0' t='struct list_head'/>
<mbr r='acpi_dma::dev' o='128' t='struct device *'/>
<mbr r='acpi_dma::acpi_dma_xlate' o='192' t='struct dma_chan *(*)(struct acpi_dma_spec *, struct acpi_dma *)'/>
<mbr r='acpi_dma::data' o='256' t='void *'/>
<mbr r='acpi_dma::base_request_line' o='320' t='unsigned short'/>
<mbr r='acpi_dma::end_request_line' o='336' t='unsigned short'/>
<def f='linux-4.14.y/include/linux/acpi_dma.h' l='44' ll='52'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/acpi_dma.h' l='35'>/**
 * struct acpi_dma - representation of the registered DMAC
 * @dma_controllers:	linked list node
 * @dev:		struct device of this controller
 * @acpi_dma_xlate:	callback function to find a suitable channel
 * @data:		private data used by a callback function
 * @base_request_line:	first supported request line (CSRT)
 * @end_request_line:	last supported request line (CSRT)
 */</doc>
<mbr r='acpi_dma::dma_controllers' o='0' t='struct list_head'/>
<mbr r='acpi_dma::dev' o='128' t='struct device *'/>
<mbr r='acpi_dma::acpi_dma_xlate' o='192' t='struct dma_chan *(*)(struct acpi_dma_spec *, struct acpi_dma *)'/>
<mbr r='acpi_dma::data' o='256' t='void *'/>
<mbr r='acpi_dma::base_request_line' o='320' t='unsigned short'/>
<mbr r='acpi_dma::end_request_line' o='336' t='unsigned short'/>
