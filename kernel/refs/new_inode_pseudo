<dec f='linux-4.14.y/include/linux/fs.h' l='2883' type='struct inode * new_inode_pseudo(struct super_block * sb)'/>
<def f='linux-4.14.y/fs/inode.c' l='889' ll='900' type='struct inode * new_inode_pseudo(struct super_block * sb)'/>
<use f='linux-4.14.y/fs/inode.c' l='920' u='c' c='new_inode'/>
<doc f='linux-4.14.y/fs/inode.c' l='879'>/**
 *	new_inode_pseudo 	- obtain an inode
 *	@sb: superblock
 *
 *	Allocates a new inode for given superblock.
 *	Inode wont be chained in superblock s_inodes list
 *	This means :
 *	- fs can&apos;t be unmount
 *	- quotas, fsnotify, writeback can&apos;t work
 */</doc>
<use f='linux-4.14.y/fs/libfs.c' l='1089' u='c' c='alloc_anon_inode'/>
<use f='linux-4.14.y/fs/nsfs.c' l='76' u='c' c='__ns_get_path'/>
<use f='linux-4.14.y/fs/pipe.c' l='704' u='c' c='get_pipe_inode'/>
<use f='linux-4.14.y/fs/proc/inode.c' l='435' u='c' c='proc_get_inode'/>
<use f='linux-4.14.y/fs/proc/self.c' l='44' u='c' c='proc_setup_self'/>
<use f='linux-4.14.y/fs/proc/thread_self.c' l='45' u='c' c='proc_setup_thread_self'/>
<use f='linux-4.14.y/net/socket.c' l='568' u='c' c='sock_alloc'/>
