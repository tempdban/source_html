<dec f='linux-4.14.y/include/linux/string.h' l='196' type='int vbin_printf(u32 * bin_buf, size_t size, const char * fmt, struct __va_list_tag * args)'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='2922' u='c' c='trace_vbprintk'/>
<def f='linux-4.14.y/lib/vsprintf.c' l='2414' ll='2517' type='int vbin_printf(u32 * bin_buf, size_t size, const char * fmt, struct __va_list_tag * args)'/>
<dec f='linux-4.14.y/lib/vsprintf.c' l='2518' type='int vbin_printf(u32 * , size_t , const char * , struct __va_list_tag * )'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2518' c='vbin_printf'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2518' u='a'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2518' u='a'/>
<use f='linux-4.14.y/lib/vsprintf.c' l='2718' u='c' c='bprintf'/>
<doc f='linux-4.14.y/lib/vsprintf.c' l='2397'>/**
 * vbin_printf - Parse a format string and place args&apos; binary value in a buffer
 * @bin_buf: The buffer to place args&apos; binary value
 * @size: The size of the buffer(by words(32bits), not characters)
 * @fmt: The format string to use
 * @args: Arguments for the format string
 *
 * The format follows C99 vsnprintf, except %n is ignored, and its argument
 * is skipped.
 *
 * The return value is the number of words(32bits) which would be generated for
 * the given input.
 *
 * NOTE:
 * If the return value is greater than @size, the resulting bin_buf is NOT
 * valid for bstr_printf().
 */</doc>
