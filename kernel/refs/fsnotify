<dec f='linux-4.14.y/include/linux/fsnotify_backend.h' l='272' type='int fsnotify(struct inode * to_tell, __u32 mask, const void * data, int data_is, const unsigned char * name, u32 cookie)'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='56' u='c' c='fsnotify_perm'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='64' u='c' c='fsnotify_link_count'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='88' u='c' c='fsnotify_move'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='90' u='c' c='fsnotify_move'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='97' u='c' c='fsnotify_move'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='135' u='c' c='fsnotify_inoderemove'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='146' u='c' c='fsnotify_create'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='159' u='c' c='fsnotify_link'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='172' u='c' c='fsnotify_mkdir'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='189' u='c' c='fsnotify_access'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='207' u='c' c='fsnotify_modify'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='224' u='c' c='fsnotify_open'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='242' u='c' c='fsnotify_close'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='258' u='c' c='fsnotify_xattr'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='293' u='c' c='fsnotify_change'/>
<doc f='linux-4.14.y/include/linux/fsnotify_backend.h' l='271'>/* main fsnotify call to send events */</doc>
<use f='linux-4.14.y/fs/kernfs/file.c' l='908' u='c' c='kernfs_notify_workfn'/>
<use f='linux-4.14.y/fs/kernfs/file.c' l='916' u='c' c='kernfs_notify_workfn'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='87' u='c' c='fsnotify_unmount_inodes'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='172' u='c' c='__fsnotify_parent'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='175' u='c' c='__fsnotify_parent'/>
<def f='linux-4.14.y/fs/notify/fsnotify.c' l='249' ll='374' type='int fsnotify(struct inode * to_tell, __u32 mask, const void * data, int data_is, const unsigned char * file_name, u32 cookie)'/>
<dec f='linux-4.14.y/fs/notify/fsnotify.c' l='375' type='int fsnotify(struct inode * , __u32 , const void * , int , const unsigned char * , u32 )'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='375' c='fsnotify'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='375' u='a'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='375' u='a'/>
<doc f='linux-4.14.y/fs/notify/fsnotify.c' l='243'>/*
 * This is the main call to fsnotify.  The VFS calls into hook specific functions
 * in linux/fsnotify.h.  Those functions then in turn call here.  Here will call
 * out to all of the registered fsnotify_group.  Those groups can then use the
 * notification event in whatever means they feel necessary.
 */</doc>
<dec f='linux-4.14.y/include/linux/fsnotify_backend.h' l='272' type='int fsnotify(struct inode * to_tell, __u32 mask, const void * data, int data_is, const unsigned char * name, u32 cookie)'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='56' u='c' c='fsnotify_perm'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='64' u='c' c='fsnotify_link_count'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='88' u='c' c='fsnotify_move'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='90' u='c' c='fsnotify_move'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='97' u='c' c='fsnotify_move'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='135' u='c' c='fsnotify_inoderemove'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='146' u='c' c='fsnotify_create'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='159' u='c' c='fsnotify_link'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='172' u='c' c='fsnotify_mkdir'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='189' u='c' c='fsnotify_access'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='207' u='c' c='fsnotify_modify'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='224' u='c' c='fsnotify_open'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='242' u='c' c='fsnotify_close'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='258' u='c' c='fsnotify_xattr'/>
<use f='linux-4.14.y/include/linux/fsnotify.h' l='293' u='c' c='fsnotify_change'/>
<doc f='linux-4.14.y/include/linux/fsnotify_backend.h' l='271'>/* main fsnotify call to send events */</doc>
<use f='linux-4.14.y/fs/kernfs/file.c' l='908' u='c' c='kernfs_notify_workfn'/>
<use f='linux-4.14.y/fs/kernfs/file.c' l='916' u='c' c='kernfs_notify_workfn'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='87' u='c' c='fsnotify_unmount_inodes'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='172' u='c' c='__fsnotify_parent'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='175' u='c' c='__fsnotify_parent'/>
<def f='linux-4.14.y/fs/notify/fsnotify.c' l='249' ll='374' type='int fsnotify(struct inode * to_tell, __u32 mask, const void * data, int data_is, const unsigned char * file_name, u32 cookie)'/>
<dec f='linux-4.14.y/fs/notify/fsnotify.c' l='375' type='int fsnotify(struct inode * , __u32 , const void * , int , const unsigned char * , u32 )'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='375' c='fsnotify'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='375' u='a'/>
<use f='linux-4.14.y/fs/notify/fsnotify.c' l='375' u='a'/>
<doc f='linux-4.14.y/fs/notify/fsnotify.c' l='243'>/*
 * This is the main call to fsnotify.  The VFS calls into hook specific functions
 * in linux/fsnotify.h.  Those functions then in turn call here.  Here will call
 * out to all of the registered fsnotify_group.  Those groups can then use the
 * notification event in whatever means they feel necessary.
 */</doc>
