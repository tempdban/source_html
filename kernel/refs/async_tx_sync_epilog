<def f='linux-4.18.y/include/linux/async_tx.h' l='145' ll='150' type='void async_tx_sync_epilog(struct async_submit_ctl * submit)'/>
<use f='linux-4.18.y/crypto/async_tx/async_memcpy.c' l='99' u='c' c='async_memcpy'/>
<doc f='linux-4.18.y/include/linux/async_tx.h' l='140'>/**
 * async_tx_sync_epilog - actions to take if an operation is run synchronously
 * @cb_fn: function to call when the transaction completes
 * @cb_fn_param: parameter to pass to the callback routine
 */</doc>
<use f='linux-4.18.y/crypto/async_tx/async_pq.c' l='152' u='c' c='do_sync_gen_syndrome'/>
<use f='linux-4.18.y/crypto/async_tx/async_pq.c' l='423' u='c' c='async_syndrome_val'/>
<use f='linux-4.18.y/crypto/async_tx/async_raid6_recov.c' l='379' u='c' c='async_raid6_2data_recov'/>
<use f='linux-4.18.y/crypto/async_tx/async_raid6_recov.c' l='455' u='c' c='async_raid6_datap_recov'/>
<use f='linux-4.18.y/crypto/async_tx/async_tx.c' l='265' u='c' c='async_trigger_callback'/>
<use f='linux-4.18.y/crypto/async_tx/async_xor.c' l='148' u='c' c='do_sync_xor'/>
<use f='linux-4.18.y/crypto/async_tx/async_xor.c' l='334' u='c' c='async_xor_val'/>
