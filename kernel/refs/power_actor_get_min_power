<dec f='linux-4.14.y/include/linux/thermal.h' l='440' type='int power_actor_get_min_power(struct thermal_cooling_device * , struct thermal_zone_device * tz, u32 * min_power)'/>
<def f='linux-4.14.y/drivers/thermal/thermal_core.c' l='555' ll='569' type='int power_actor_get_min_power(struct thermal_cooling_device * cdev, struct thermal_zone_device * tz, u32 * min_power)'/>
<doc f='linux-4.14.y/drivers/thermal/thermal_core.c' l='543'>/**
 * power_actor_get_min_power() - get the mainimum power that a cdev can consume
 * @cdev:	pointer to &amp;thermal_cooling_device
 * @tz:		a valid thermal zone device pointer
 * @min_power:	pointer in which to store the minimum power
 *
 * Calculate the minimum power consumption in milliwatts that the
 * cooling device can currently consume and store it in @min_power.
 *
 * Return: 0 on success, -EINVAL if @cdev doesn&apos;t support the
 * power_actor API or -E* on other error.
 */</doc>
<dec f='linux-4.14.y/include/linux/thermal.h' l='440' type='int power_actor_get_min_power(struct thermal_cooling_device * , struct thermal_zone_device * tz, u32 * min_power)'/>
<def f='linux-4.14.y/drivers/thermal/thermal_core.c' l='555' ll='569' type='int power_actor_get_min_power(struct thermal_cooling_device * cdev, struct thermal_zone_device * tz, u32 * min_power)'/>
<doc f='linux-4.14.y/drivers/thermal/thermal_core.c' l='543'>/**
 * power_actor_get_min_power() - get the mainimum power that a cdev can consume
 * @cdev:	pointer to &amp;thermal_cooling_device
 * @tz:		a valid thermal zone device pointer
 * @min_power:	pointer in which to store the minimum power
 *
 * Calculate the minimum power consumption in milliwatts that the
 * cooling device can currently consume and store it in @min_power.
 *
 * Return: 0 on success, -EINVAL if @cdev doesn&apos;t support the
 * power_actor API or -E* on other error.
 */</doc>
