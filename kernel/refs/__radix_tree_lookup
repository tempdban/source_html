<dec f='linux-4.18.y/include/linux/radix-tree.h' l='302' type='void * __radix_tree_lookup(const struct radix_tree_root * , unsigned long index, struct radix_tree_node ** nodep, void *** slotp)'/>
<use f='linux-4.18.y/lib/idr.c' l='302' u='c' c='idr_replace'/>
<def f='linux-4.18.y/lib/radix-tree.c' l='1029' ll='1059' type='void * __radix_tree_lookup(const struct radix_tree_root * root, unsigned long index, struct radix_tree_node ** nodep, void *** slotp)'/>
<use f='linux-4.18.y/lib/radix-tree.c' l='1079' u='c' c='radix_tree_lookup_slot'/>
<use f='linux-4.18.y/lib/radix-tree.c' l='1099' u='c' c='radix_tree_lookup'/>
<use f='linux-4.18.y/lib/radix-tree.c' l='2040' u='c' c='radix_tree_delete_item'/>
<doc f='linux-4.18.y/lib/radix-tree.c' l='1015'>/**
 *	__radix_tree_lookup	-	lookup an item in a radix tree
 *	@root:		radix tree root
 *	@index:		index key
 *	@nodep:		returns node
 *	@slotp:		returns slot
 *
 *	Lookup and return the item at position @index in the radix
 *	tree @root.
 *
 *	Until there is more than one item in the tree, no nodes are
 *	allocated and @root-&gt;rnode is used as a direct slot instead of
 *	pointing to a node, in which case *@nodep will be NULL.
 */</doc>
<use f='linux-4.18.y/mm/filemap.c' l='159' u='c' c='page_cache_tree_delete'/>
<use f='linux-4.18.y/mm/shmem.c' l='335' u='c' c='shmem_radix_tree_replace'/>
<use f='linux-4.18.y/mm/truncate.c' l='39' u='c' c='__clear_shadow_entry'/>
