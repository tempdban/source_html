<def f='linux-4.18.y/include/linux/iversion.h' l='173' ll='204' type='bool inode_maybe_inc_iversion(struct inode * inode, bool force)'/>
<use f='linux-4.18.y/include/linux/iversion.h' l='217' u='c' c='inode_inc_iversion'/>
<doc f='linux-4.18.y/include/linux/iversion.h' l='156'>/**
 * inode_maybe_inc_iversion - increments i_version
 * @inode: inode with the i_version that should be updated
 * @force: increment the counter even if it&apos;s not necessary?
 *
 * Every time the inode is modified, the i_version field must be seen to have
 * changed by any observer.
 *
 * If &quot;force&quot; is set or the QUERIED flag is set, then ensure that we increment
 * the value, and clear the queried flag.
 *
 * In the common case where neither is set, then we can return &quot;false&quot; without
 * updating i_version.
 *
 * If this function returns false, and no other metadata has changed, then we
 * can avoid logging the metadata.
 */</doc>
<use f='linux-4.18.y/fs/inode.c' l='1632' u='c' c='generic_update_time'/>
