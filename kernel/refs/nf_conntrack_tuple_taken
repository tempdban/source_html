<dec f='linux-4.18.y/include/net/netfilter/nf_conntrack.h' l='138' type='int nf_conntrack_tuple_taken(const struct nf_conntrack_tuple * tuple, const struct nf_conn * ignored_conntrack)'/>
<doc f='linux-4.18.y/include/net/netfilter/nf_conntrack.h' l='136'>/* Is this tuple taken? (ignoring any belonging to the given
   conntrack). */</doc>
<def f='linux-4.18.y/net/netfilter/nf_conntrack_core.c' l='835' ll='880' type='int nf_conntrack_tuple_taken(const struct nf_conntrack_tuple * tuple, const struct nf_conn * ignored_conntrack)'/>
<dec f='linux-4.18.y/net/netfilter/nf_conntrack_core.c' l='881' type='int nf_conntrack_tuple_taken(const struct nf_conntrack_tuple * , const struct nf_conn * )'/>
<use f='linux-4.18.y/net/netfilter/nf_conntrack_core.c' l='881' c='nf_conntrack_tuple_taken'/>
<use f='linux-4.18.y/net/netfilter/nf_conntrack_core.c' l='881' u='a'/>
<use f='linux-4.18.y/net/netfilter/nf_conntrack_core.c' l='881' u='a'/>
<doc f='linux-4.18.y/net/netfilter/nf_conntrack_core.c' l='833'>/* Returns true if a connection correspondings to the tuple (required
   for NAT). */</doc>
<use f='linux-4.18.y/net/netfilter/nf_nat_core.c' l='168' u='c' c='nf_nat_used_tuple'/>
