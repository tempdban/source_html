<dec f='linux-4.18.y/include/drm/drm_edid.h' l='465' type='struct edid * drm_get_edid_switcheroo(struct drm_connector * connector, struct i2c_adapter * adapter)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1724' ll='1735' type='struct edid * drm_get_edid_switcheroo(struct drm_connector * connector, struct i2c_adapter * adapter)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1736' type='struct edid * drm_get_edid_switcheroo(struct drm_connector * , struct i2c_adapter * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1736' c='drm_get_edid_switcheroo'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1736' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1736' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_edid.c' l='1713'>/**
 * drm_get_edid_switcheroo - get EDID data for a vga_switcheroo output
 * @connector: connector we&apos;re probing
 * @adapter: I2C adapter to use for DDC
 *
 * Wrapper around drm_get_edid() for laptops with dual GPUs using one set of
 * outputs. The wrapper adds the requisite vga_switcheroo calls to temporarily
 * switch DDC to the GPU which is retrieving EDID.
 *
 * Return: Pointer to valid EDID or %NULL if we couldn&apos;t find any.
 */</doc>
