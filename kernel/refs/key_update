<dec f='linux-4.18.y/include/linux/key.h' l='306' type='int key_update(key_ref_t key, const void * payload, size_t plen)'/>
<def f='linux-4.18.y/security/keys/key.c' l='970' ll='1011' type='int key_update(key_ref_t key_ref, const void * payload, size_t plen)'/>
<dec f='linux-4.18.y/security/keys/key.c' l='1012' type='int key_update(key_ref_t , const void * , size_t )'/>
<use f='linux-4.18.y/security/keys/key.c' l='1012' c='key_update'/>
<use f='linux-4.18.y/security/keys/key.c' l='1012' u='a'/>
<use f='linux-4.18.y/security/keys/key.c' l='1012' u='a'/>
<doc f='linux-4.18.y/security/keys/key.c' l='957'>/**
 * key_update - Update a key&apos;s contents.
 * @key_ref: The pointer (plus possession flag) to the key.
 * @payload: The data to be used to update the key.
 * @plen: The length of @payload.
 *
 * Attempt to update the contents of a key with the given payload data.  The
 * caller must be granted Write permission on the key.  Negative keys can be
 * instantiated by this method.
 *
 * Returns 0 on success, -EACCES if not permitted and -EOPNOTSUPP if the key
 * type does not support updating.  The key type may return other errors.
 */</doc>
<use f='linux-4.18.y/security/keys/keyctl.c' l='349' u='c' c='keyctl_update_key'/>
