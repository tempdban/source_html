<def f='linux-4.14.y/arch/x86/kvm/paging_tmpl.h' l='959' macro='1' type='int ept_sync_page(struct kvm_vcpu * vcpu, struct kvm_mmu_page * sp)'/>
<use f='linux-4.14.y/arch/x86/kvm/mmu.c' l='4548' u='r' c='kvm_init_shadow_ept_mmu'/>
<doc f='linux-4.14.y/arch/x86/kvm/paging_tmpl.h' l='946'>/*
 * Using the cached information from sp-&gt;gfns is safe because:
 * - The spte has a reference to the struct page, so the pfn for a given gfn
 *   can&apos;t change unless all sptes pointing to it are nuked first.
 *
 * Note:
 *   We should flush all tlbs if spte is dropped even though guest is
 *   responsible for it. Since if we don&apos;t, kvm_mmu_notifier_invalidate_page
 *   and kvm_mmu_notifier_invalidate_range_start detect the mapping page isn&apos;t
 *   used by guest then tlbs are not flushed, so guest is allowed to access the
 *   freed pages.
 *   And we increase kvm-&gt;tlbs_dirty to delay tlbs flush in this case.
 */</doc>
