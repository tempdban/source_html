<dec f='linux-4.18.y/include/linux/device.h' l='760' type='struct device * device_connection_find(struct device * dev, const char * con_id)'/>
<def f='linux-4.18.y/drivers/base/devcon.c' l='108' ll='111' type='struct device * device_connection_find(struct device * dev, const char * con_id)'/>
<dec f='linux-4.18.y/drivers/base/devcon.c' l='112' type='struct device * device_connection_find(struct device * , const char * )'/>
<use f='linux-4.18.y/drivers/base/devcon.c' l='112' c='device_connection_find'/>
<use f='linux-4.18.y/drivers/base/devcon.c' l='112' u='a'/>
<use f='linux-4.18.y/drivers/base/devcon.c' l='112' u='a'/>
<doc f='linux-4.18.y/drivers/base/devcon.c' l='97'>/**
 * device_connection_find - Find two devices connected together
 * @dev: Device with the connection
 * @con_id: Identifier for the connection
 *
 * Find a connection with unique identifier @con_id between @dev and
 * another device. On success returns handle to the device that is connected
 * to @dev, with the reference count for the found device incremented. Returns
 * NULL if no matching connection was found, or ERR_PTR(-EPROBE_DEFER) when a
 * connection was found but the other device has not been enumerated yet.
 */</doc>
