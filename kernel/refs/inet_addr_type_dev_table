<dec f='linux-4.18.y/include/net/route.h' l='215' type='unsigned int inet_addr_type_dev_table(struct net * net, const struct net_device * dev, __be32 addr)'/>
<use f='linux-4.18.y/net/ipv4/arp.c' l='243' u='c' c='arp_constructor'/>
<use f='linux-4.18.y/net/ipv4/arp.c' l='353' u='c' c='arp_solicit'/>
<use f='linux-4.18.y/net/ipv4/arp.c' l='361' u='c' c='arp_solicit'/>
<use f='linux-4.18.y/net/ipv4/arp.c' l='668' u='c' c='arp_is_garp'/>
<use f='linux-4.18.y/net/ipv4/arp.c' l='810' u='c' c='arp_process'/>
<use f='linux-4.18.y/net/ipv4/arp.c' l='888' u='c' c='arp_process'/>
<def f='linux-4.18.y/net/ipv4/fib_frontend.c' l='270' ll='277' type='unsigned int inet_addr_type_dev_table(struct net * net, const struct net_device * dev, __be32 addr)'/>
<dec f='linux-4.18.y/net/ipv4/fib_frontend.c' l='278' type='unsigned int inet_addr_type_dev_table(struct net * , const struct net_device * , __be32 )'/>
<use f='linux-4.18.y/net/ipv4/fib_frontend.c' l='278' c='inet_addr_type_dev_table'/>
<use f='linux-4.18.y/net/ipv4/fib_frontend.c' l='278' u='a'/>
<use f='linux-4.18.y/net/ipv4/fib_frontend.c' l='278' u='a'/>
<use f='linux-4.18.y/net/ipv4/fib_frontend.c' l='1100' u='c' c='fib_del_ifaddr'/>
<doc f='linux-4.18.y/net/ipv4/fib_frontend.c' l='267'>/* inet_addr_type with dev == NULL but using the table from a dev
 * if one is associated
 */</doc>
<use f='linux-4.18.y/net/ipv4/fib_semantics.c' l='807' u='c' c='fib_check_nh'/>
<use f='linux-4.18.y/net/ipv4/icmp.c' l='513' u='c' c='icmp_route_lookup'/>
<use f='linux-4.18.y/net/ipv4/icmp.c' l='880' u='c' c='icmp_unreach'/>
<use f='linux-4.18.y/net/ipv4/netfilter.c' l='32' u='c' c='ip_route_me_harder'/>
