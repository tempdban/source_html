<dec f='linux-4.14.y/include/drm/drm_plane_helper.h' l='41' type='int drm_plane_helper_check_state(struct drm_plane_state * state, const struct drm_rect * clip, int min_scale, int max_scale, bool can_position, bool can_update_disabled)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='123' ll='190' type='int drm_plane_helper_check_state(struct drm_plane_state * state, const struct drm_rect * clip, int min_scale, int max_scale, bool can_position, bool can_update_disabled)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='191' type='int drm_plane_helper_check_state(struct drm_plane_state * , const struct drm_rect * , int , int , bool , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='191' c='drm_plane_helper_check_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='191' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='191' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='250' u='c' c='drm_plane_helper_check_update'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='102'>/**
 * drm_plane_helper_check_state() - Check plane state for validity
 * @state: plane state to check
 * @clip: integer clipping coordinates
 * @min_scale: minimum @src:@dest scaling factor in 16.16 fixed point
 * @max_scale: maximum @src:@dest scaling factor in 16.16 fixed point
 * @can_position: is it legal to position the plane such that it
 *                doesn&apos;t cover the entire crtc?  This will generally
 *                only be false for primary planes.
 * @can_update_disabled: can the plane be updated while the crtc
 *                       is disabled?
 *
 * Checks that a desired plane update is valid, and updates various
 * bits of derived state (clipped coordinates etc.). Drivers that provide
 * their own plane handling rather than helper-provided implementations may
 * still wish to call this function to avoid duplication of error checking
 * code.
 *
 * RETURNS:
 * Zero if update appears valid, error code on failure
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_simple_kms_helper.c' l='106' u='c' c='drm_simple_kms_plane_atomic_check'/>
