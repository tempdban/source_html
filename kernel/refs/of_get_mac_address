<dec f='linux-4.18.y/drivers/bus/dpaa/include/of.h' l='112' type='const void * of_get_mac_address(const struct device_node * np)'/>
<def f='linux-4.18.y/drivers/bus/dpaa/base/fman/of.c' l='574' ll='587' type='const void * of_get_mac_address(const struct device_node * np)'/>
<doc f='linux-4.18.y/drivers/bus/dpaa/base/fman/of.c' l='556'>/**
 * Search the device tree for the best MAC address to use.  &apos;mac-address&apos; is
 * checked first, because that is supposed to contain to &quot;most recent&quot; MAC
 * address. If that isn&apos;t set, then &apos;local-mac-address&apos; is checked next,
 * because that is the default address.  If that isn&apos;t set, then the obsolete
 * &apos;address&apos; is checked, just in case we&apos;re using an old device tree.
 *
 * Note that the &apos;address&apos; property is supposed to contain a virtual address of
 * the register set, but some DTS files have redefined that property to be the
 * MAC address.
 *
 * All-zero MAC addresses are rejected, because those could be properties that
 * exist in the device tree, but were not set by U-Boot.  For example, the
 * DTS could define &apos;mac-address&apos; and &apos;local-mac-address&apos;, with zero MAC
 * addresses.  Some older U-Boots only initialized &apos;local-mac-address&apos;.  In
 * this case, the real MAC is in &apos;local-mac-address&apos;, and &apos;mac-address&apos; exists
 * but is all zeros.
 */</doc>
