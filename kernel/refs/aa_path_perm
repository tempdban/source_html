<dec f='linux-4.18.y/security/apparmor/include/file.h' l='193' type='int aa_path_perm(const char * op, struct aa_label * label, const struct path * path, int flags, u32 request, struct path_cond * cond)'/>
<def f='linux-4.18.y/security/apparmor/file.c' l='327' ll='346' type='int aa_path_perm(const char * op, struct aa_label * label, const struct path * path, int flags, u32 request, struct path_cond * cond)'/>
<doc f='linux-4.18.y/security/apparmor/file.c' l='316'>/**
 * aa_path_perm - do permissions check &amp; audit for @path
 * @op: operation being checked
 * @label: profile being enforced  (NOT NULL)
 * @path: path to check permissions of  (NOT NULL)
 * @flags: any additional path flags beyond what the profile specifies
 * @request: requested permissions
 * @cond: conditional info for this request  (NOT NULL)
 *
 * Returns: %0 else error if access denied or other error
 */</doc>
<use f='linux-4.18.y/security/apparmor/lsm.c' l='207' u='c' c='common_perm'/>
<use f='linux-4.18.y/security/apparmor/lsm.c' l='368' u='c' c='apparmor_path_rename'/>
<use f='linux-4.18.y/security/apparmor/lsm.c' l='373' u='c' c='apparmor_path_rename'/>
<use f='linux-4.18.y/security/apparmor/lsm.c' l='422' u='c' c='apparmor_file_open'/>
