<dec f='linux-4.14.y/include/linux/capability.h' l='246' type='bool file_ns_capable(const struct file * file, struct user_namespace * ns, int cap)'/>
<use f='linux-4.14.y/drivers/pci/pci-sysfs.c' l='817' u='c' c='pci_read_config'/>
<use f='linux-4.14.y/fs/proc/task_mmu.c' l='1483' u='c' c='pagemap_read'/>
<def f='linux-4.14.y/kernel/capability.c' l='448' ll='458' type='bool file_ns_capable(const struct file * file, struct user_namespace * ns, int cap)'/>
<dec f='linux-4.14.y/kernel/capability.c' l='459' type='bool file_ns_capable(const struct file * , struct user_namespace * , int )'/>
<use f='linux-4.14.y/kernel/capability.c' l='459' c='file_ns_capable'/>
<use f='linux-4.14.y/kernel/capability.c' l='459' u='a'/>
<use f='linux-4.14.y/kernel/capability.c' l='459' u='a'/>
<doc f='linux-4.14.y/kernel/capability.c' l='436'>/**
 * file_ns_capable - Determine if the file&apos;s opener had a capability in effect
 * @file:  The file we want to check
 * @ns:  The usernamespace we want the capability in
 * @cap: The capability to be tested for
 *
 * Return true if task that opened the file had a capability in effect
 * when the file was opened.
 *
 * This does not set PF_SUPERPRIV because the caller may not
 * actually be privileged.
 */</doc>
<use f='linux-4.14.y/kernel/resource.c' l='116' u='c' c='r_show'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4286' u='c' c='skb_may_tx_timestamp'/>
<use f='linux-4.14.y/net/core/sock.c' l='161' u='c' c='sk_ns_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='836' u='c' c='__netlink_ns_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='1391' u='c' c='do_one_broadcast'/>
