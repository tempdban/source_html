<def f='linux-4.18.y/include/drm/drm_dp_helper.h' l='1155' ll='1159' type='ssize_t drm_dp_dpcd_readb(struct drm_dp_aux * aux, unsigned int offset, u8 * valuep)'/>
<doc f='linux-4.18.y/include/drm/drm_dp_helper.h' l='1146'>/**
 * drm_dp_dpcd_readb() - read a single byte from the DPCD
 * @aux: DisplayPort AUX channel
 * @offset: address of the register to read
 * @valuep: location where the value of the register will be stored
 *
 * Returns the number of bytes transferred (1) on success, or a negative
 * error code on failure.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='385' u='c' c='drm_dp_link_power_up'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='423' u='c' c='drm_dp_link_power_down'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1011' u='c' c='drm_dp_aux_get_crc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1017' u='c' c='drm_dp_aux_get_crc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1192' u='c' c='drm_dp_start_crc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1219' u='c' c='drm_dp_stop_crc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2797' u='c' c='drm_dp_dpcd_write_payload'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_mst_topology.c' l='2832' u='c' c='drm_dp_check_act_status'/>
