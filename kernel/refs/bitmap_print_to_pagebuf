<dec f='linux-4.18.y/include/linux/bitmap.h' l='193' type='int bitmap_print_to_pagebuf(bool list, char * buf, const unsigned long * maskp, int nmaskbits)'/>
<use f='linux-4.18.y/include/linux/cpumask.h' l='882' u='c' c='cpumap_print_to_pagebuf'/>
<def f='linux-4.18.y/lib/bitmap.c' l='472' ll='482' type='int bitmap_print_to_pagebuf(bool list, char * buf, const unsigned long * maskp, int nmaskbits)'/>
<dec f='linux-4.18.y/lib/bitmap.c' l='483' type='int bitmap_print_to_pagebuf(bool , char * , const unsigned long * , int )'/>
<use f='linux-4.18.y/lib/bitmap.c' l='483' c='bitmap_print_to_pagebuf'/>
<use f='linux-4.18.y/lib/bitmap.c' l='483' u='a'/>
<use f='linux-4.18.y/lib/bitmap.c' l='483' u='a'/>
<doc f='linux-4.18.y/lib/bitmap.c' l='457'>/**
 * bitmap_print_to_pagebuf - convert bitmap to list or hex format ASCII string
 * @list: indicates whether the bitmap must be list
 * @buf: page aligned buffer into which string is placed
 * @maskp: pointer to bitmap to convert
 * @nmaskbits: size of bitmap, in bits
 *
 * Output format is a comma-separated list of decimal numbers and
 * ranges if list is specified or hex digits grouped into comma-separated
 * sets of 8 digits/set. Returns the number of characters written to buf.
 *
 * It is assumed that @buf is a pointer into a PAGE_SIZE area and that
 * sufficient storage remains at @buf to accommodate the
 * bitmap_print_to_pagebuf() output.
 */</doc>
