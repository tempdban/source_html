<dec f='linux-4.18.y/include/linux/sort.h' l='7' type='void sort(void * base, size_t num, size_t size, int (*)(const void *, const void *) cmp, void (*)(void *, void *, int) swap)'/>
<use f='linux-4.18.y/arch/x86/kernel/e820.c' l='335' u='c' c='e820__update_table'/>
<use f='linux-4.18.y/arch/x86/kernel/unwind_orc.c' l='224' u='c' c='unwind_module_init'/>
<use f='linux-4.18.y/arch/x86/kernel/unwind_orc.c' l='249' u='c' c='unwind_init'/>
<use f='linux-4.18.y/drivers/acpi/fan.c' l='321' u='c' c='acpi_fan_get_fps'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_blend.c' l='386' u='c' c='drm_atomic_helper_crtc_normalize_zpos'/>
<use f='linux-4.18.y/drivers/md/dm-thin.c' l='2163' u='c' c='sort_cells'/>
<use f='linux-4.18.y/fs/compat_ioctl.c' l='1502' u='c' c='init_sys32_ioctl'/>
<use f='linux-4.18.y/fs/ext4/fsmap.c' l='651' u='c' c='ext4_getfsmap'/>
<use f='linux-4.18.y/kernel/cgroup/cgroup-v1.c' l='396' u='c' c='pidlist_array_load'/>
<use f='linux-4.18.y/kernel/groups.c' l='91' u='c' c='groups_sort'/>
<use f='linux-4.18.y/kernel/range.c' l='155' u='c' c='clean_sort_range'/>
<use f='linux-4.18.y/kernel/range.c' l='163' u='c' c='sort_range'/>
<use f='linux-4.18.y/kernel/trace/ftrace.c' l='5547' u='c' c='ftrace_process_locs'/>
<use f='linux-4.18.y/lib/extable.c' l='70' u='c' c='sort_extable'/>
<def f='linux-4.18.y/lib/sort.c' l='62' ll='104' type='void sort(void * base, size_t num, size_t size, int (*)(const void *, const void *) cmp_func, void (*)(void *, void *, int) swap_func)'/>
<dec f='linux-4.18.y/lib/sort.c' l='106' type='void sort(void * , size_t , size_t , int (*)(const void *, const void *) , void (*)(void *, void *, int) )'/>
<use f='linux-4.18.y/lib/sort.c' l='106' c='sort'/>
<use f='linux-4.18.y/lib/sort.c' l='106' u='a'/>
<use f='linux-4.18.y/lib/sort.c' l='106' u='a'/>
<doc f='linux-4.18.y/lib/sort.c' l='45'>/**
 * sort - sort an array of elements
 * @base: pointer to data to sort
 * @num: number of elements
 * @size: size of each element
 * @cmp_func: pointer to comparison function
 * @swap_func: pointer to swap function or NULL
 *
 * This function does a heapsort on the given array. You may provide a
 * swap_func function optimized to your element type.
 *
 * Sorting time is O(n log n) both on average and worst-case. While
 * qsort is about 20% faster on average, it suffers from exploitable
 * O(n*n) worst-case behavior and extra memory requirements that make
 * it less suitable for kernel use.
 */</doc>
<use f='linux-4.18.y/mm/swapfile.c' l='1296' u='c' c='swapcache_free_entries'/>
<use f='linux-4.18.y/security/apparmor/label.c' l='275' u='c' c='aa_vec_unique'/>
