<def f='linux-4.18.y/include/linux/device.h' l='808' ll='820'/>
<size>80</size>
<doc f='linux-4.18.y/include/linux/device.h' l='796'>/**
 * struct device_link - Device link representation.
 * @supplier: The device on the supplier end of the link.
 * @s_node: Hook to the supplier device&apos;s list of links to consumers.
 * @consumer: The device on the consumer end of the link.
 * @c_node: Hook to the consumer device&apos;s list of links to suppliers.
 * @status: The state of the link (with respect to the presence of drivers).
 * @flags: Link flags.
 * @rpm_active: Whether or not the consumer device is runtime-PM-active.
 * @kref: Count repeated addition of the same link.
 * @rcu_head: An RCU head to use for deferred execution of SRCU callbacks.
 */</doc>
<mbr r='device_link::supplier' o='0' t='struct device *'/>
<mbr r='device_link::s_node' o='64' t='struct list_head'/>
<mbr r='device_link::consumer' o='192' t='struct device *'/>
<mbr r='device_link::c_node' o='256' t='struct list_head'/>
<mbr r='device_link::status' o='384' t='enum device_link_state'/>
<mbr r='device_link::flags' o='416' t='u32'/>
<mbr r='device_link::rpm_active' o='448' t='bool'/>
<mbr r='device_link::kref' o='480' t='struct kref'/>
<mbr r='device_link::callback_head' o='512' t='struct callback_head'/>
