<dec f='linux-4.18.y/include/drm/drm_scdc_helper.h' l='91' type='ssize_t drm_scdc_read(struct i2c_adapter * adapter, u8 offset, void * buffer, size_t size)'/>
<use f='linux-4.18.y/include/drm/drm_scdc_helper.h' l='111' u='c' c='drm_scdc_readb'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='53' ll='78' type='ssize_t drm_scdc_read(struct i2c_adapter * adapter, u8 offset, void * buffer, size_t size)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='79' type='ssize_t drm_scdc_read(struct i2c_adapter * , u8 , void * , size_t )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='79' c='drm_scdc_read'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='79' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='79' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_scdc_helper.c' l='41'>/**
 * drm_scdc_read - read a block of data from SCDC
 * @adapter: I2C controller
 * @offset: start offset of block to read
 * @buffer: return location for the block to read
 * @size: size of the block to read
 *
 * Reads a block of data from SCDC, starting at a given offset.
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
