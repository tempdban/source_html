<dec f='linux-4.18.y/include/linux/mm_types.h' l='514' type='void tlb_gather_mmu(struct mmu_gather * tlb, struct mm_struct * mm, unsigned long start, unsigned long end)'/>
<use f='linux-4.18.y/arch/x86/kernel/ldt.c' l='214' u='c' c='free_ldt_pgtables'/>
<use f='linux-4.18.y/fs/exec.c' l='656' u='c' c='shift_arg_pages'/>
<use f='linux-4.18.y/fs/proc/task_mmu.c' l='1130' u='c' c='clear_refs_write'/>
<use f='linux-4.18.y/mm/hugetlb.c' l='3444' u='c' c='unmap_hugepage_range'/>
<use f='linux-4.18.y/mm/madvise.c' l='477' u='c' c='madvise_free_single_vma'/>
<def f='linux-4.18.y/mm/memory.c' l='423' ll='428' type='void tlb_gather_mmu(struct mmu_gather * tlb, struct mm_struct * mm, unsigned long start, unsigned long end)'/>
<use f='linux-4.18.y/mm/memory.c' l='1610' u='c' c='zap_page_range'/>
<use f='linux-4.18.y/mm/memory.c' l='1648' u='c' c='zap_page_range_single'/>
<doc f='linux-4.18.y/mm/memory.c' l='411'>/**
 * tlb_gather_mmu - initialize an mmu_gather structure for page-table tear-down
 * @tlb: the mmu_gather structure to initialize
 * @mm: the mm_struct of the target address space
 * @start: start of the region that will be removed from the page-table
 * @end: end of the region that will be removed from the page-table
 *
 * Called to initialize an (on-stack) mmu_gather structure for page-table
 * tear-down from @mm. The @start and @end are set to 0 and -1
 * respectively when @mm is without users and we&apos;re going to destroy
 * the full address space (exit/execve).
 */</doc>
<use f='linux-4.18.y/mm/mmap.c' l='2568' u='c' c='unmap_region'/>
<use f='linux-4.18.y/mm/mmap.c' l='3091' u='c' c='exit_mmap'/>
<use f='linux-4.18.y/mm/oom_kill.c' l='513' u='c' c='__oom_reap_task_mm'/>
