<def f='linux-4.18.y/include/linux/rbtree_augmented.h' l='59' ll='64' type='void rb_insert_augmented(struct rb_node * node, struct rb_root * root, const struct rb_augment_callbacks * augment)'/>
<use f='linux-4.18.y/arch/x86/mm/pat_rbtree.c' l='198' u='c' c='memtype_rb_insert'/>
<doc f='linux-4.18.y/include/linux/rbtree_augmented.h' l='49'>/*
 * Fixup the rbtree and update the augmented information when rebalancing.
 *
 * On insertion, the user must update the augmented information on the path
 * leading to the inserted node, then call rb_link_node() as usual and
 * rb_augment_inserted() instead of the usual rb_insert_color() call.
 * If rb_augment_inserted() rebalances the rbtree, it will callback into
 * a user provided function to update the augmented information on the
 * affected subtrees.
 */</doc>
<use f='linux-4.18.y/mm/interval_tree.c' l='58' u='c' c='vma_interval_tree_insert_after'/>
<use f='linux-4.18.y/mm/mmap.c' l='428' u='c' c='vma_rb_insert'/>
