<dec f='linux-4.18.y/fs/fuse/fuse_i.h' l='836' type='struct fuse_req * fuse_get_req_nofail_nopages(struct fuse_conn * fc, struct file * file)'/>
<doc f='linux-4.18.y/fs/fuse/fuse_i.h' l='833'>/**
 * Gets a requests for a file operation, always succeeds
 */</doc>
<def f='linux-4.18.y/fs/fuse/dev.c' l='260' ll='280' type='struct fuse_req * fuse_get_req_nofail_nopages(struct fuse_conn * fc, struct file * file)'/>
<use f='linux-4.18.y/fs/fuse/dev.c' l='644' u='c' c='fuse_force_forget'/>
<doc f='linux-4.18.y/fs/fuse/dev.c' l='247'>/*
 * Gets a requests for a file operation, always succeeds
 *
 * This is used for sending the FLUSH request, which must get to
 * userspace, due to POSIX locks which may need to be unlocked.
 *
 * If allocation fails due to OOM, use the reserved request in
 * fuse_file.
 *
 * This is very unlikely to deadlock accidentally, since the
 * filesystem should not have it&apos;s own file open.  If deadlock is
 * intentional, it can still be broken by &quot;aborting&quot; the filesystem.
 */</doc>
<use f='linux-4.18.y/fs/fuse/file.c' l='420' u='c' c='fuse_flush'/>
