<dec f='linux-4.18.y/include/linux/module.h' l='571' type='void __module_put_and_exit(struct module * mod, long code)'/>
<use f='linux-4.18.y/crypto/algboss.c' l='92' macro='1' u='c'/>
<use f='linux-4.18.y/crypto/algboss.c' l='229' macro='1' u='c'/>
<def f='linux-4.18.y/kernel/module.c' l='355' ll='359' type='void __module_put_and_exit(struct module * mod, long code)'/>
<dec f='linux-4.18.y/kernel/module.c' l='360' type='void __module_put_and_exit(struct module * , long )'/>
<use f='linux-4.18.y/kernel/module.c' l='360' c='__module_put_and_exit'/>
<use f='linux-4.18.y/kernel/module.c' l='360' u='a'/>
<use f='linux-4.18.y/kernel/module.c' l='360' u='a'/>
<doc f='linux-4.18.y/kernel/module.c' l='351'>/*
 * A thread that wants to hold a reference to a module only while it
 * is running can call this to safely exit.  nfsd and lockd use this.
 */</doc>
