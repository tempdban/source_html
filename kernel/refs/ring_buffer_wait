<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='98' type='int ring_buffer_wait(struct ring_buffer * buffer, int cpu, bool full)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='529' ll='617' type='int ring_buffer_wait(struct ring_buffer * buffer, int cpu, bool full)'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='519'>/**
 * ring_buffer_wait - wait for input to the ring buffer
 * @buffer: buffer to wait on
 * @cpu: the cpu buffer to wait on
 * @full: wait until a full page is available, if @cpu != RING_BUFFER_ALL_CPUS
 *
 * If @cpu == RING_BUFFER_ALL_CPUS then the task will wake up as soon
 * as data is added to any of the @buffer&apos;s cpu buffers. Otherwise
 * it will wait for data to be added to a specific cpu buffer.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='1428' u='c' c='wait_on_pipe'/>
<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='98' type='int ring_buffer_wait(struct ring_buffer * buffer, int cpu, bool full)'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='529' ll='617' type='int ring_buffer_wait(struct ring_buffer * buffer, int cpu, bool full)'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='519'>/**
 * ring_buffer_wait - wait for input to the ring buffer
 * @buffer: buffer to wait on
 * @cpu: the cpu buffer to wait on
 * @full: wait until a full page is available, if @cpu != RING_BUFFER_ALL_CPUS
 *
 * If @cpu == RING_BUFFER_ALL_CPUS then the task will wake up as soon
 * as data is added to any of the @buffer&apos;s cpu buffers. Otherwise
 * it will wait for data to be added to a specific cpu buffer.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='1428' u='c' c='wait_on_pipe'/>
