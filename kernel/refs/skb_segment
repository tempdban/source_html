<dec f='linux-4.18.y/include/linux/skbuff.h' l='3296' type='struct sk_buff * skb_segment(struct sk_buff * skb, netdev_features_t features)'/>
<def f='linux-4.18.y/net/core/skbuff.c' l='3499' ll='3813' type='struct sk_buff * skb_segment(struct sk_buff * head_skb, netdev_features_t features)'/>
<dec f='linux-4.18.y/net/core/skbuff.c' l='3814' type='struct sk_buff * skb_segment(struct sk_buff * , netdev_features_t )'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='3814' c='skb_segment'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='3814' u='a'/>
<use f='linux-4.18.y/net/core/skbuff.c' l='3814' u='a'/>
<doc f='linux-4.18.y/net/core/skbuff.c' l='3490'>/**
 *	skb_segment - Perform protocol segmentation on skb.
 *	@head_skb: buffer to segment
 *	@features: features for the output path (see dev-&gt;features)
 *
 *	This function performs segmentation on the given skb.  It returns
 *	a pointer to the first in a list of new skbs for the segments.
 *	In case of error it returns ERR_PTR(err).
 */</doc>
<use f='linux-4.18.y/net/ipv4/tcp_offload.c' l='101' u='c' c='tcp_gso_segment'/>
<use f='linux-4.18.y/net/ipv4/udp_offload.c' l='213' u='c' c='__udp_gso_segment'/>
<use f='linux-4.18.y/net/ipv4/udp_offload.c' l='341' u='c' c='udp4_ufo_fragment'/>
