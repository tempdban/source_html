<dec f='linux-4.18.y/include/drm/drm_connector.h' l='1106' type='int drm_connector_init_panel_orientation_property(struct drm_connector * connector, int width, int height)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1459' ll='1489' type='int drm_connector_init_panel_orientation_property(struct drm_connector * connector, int width, int height)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1490' type='int drm_connector_init_panel_orientation_property(struct drm_connector * , int , int )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1490' c='drm_connector_init_panel_orientation_property'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1490' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1490' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_connector.c' l='1441'>/**
 * drm_connector_init_panel_orientation_property -
 *	initialize the connecters panel_orientation property
 * @connector: connector for which to init the panel-orientation property.
 * @width: width in pixels of the panel, used for panel quirk detection
 * @height: height in pixels of the panel, used for panel quirk detection
 *
 * This function should only be called for built-in panels, after setting
 * connector-&gt;display_info.panel_orientation first (if known).
 *
 * This function will check for platform specific (e.g. DMI based) quirks
 * overriding display_info.panel_orientation first, then if panel_orientation
 * is not DRM_MODE_PANEL_ORIENTATION_UNKNOWN it will attach the
 * &quot;panel orientation&quot; property to the connector.
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
