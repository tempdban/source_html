<dec f='linux-4.14.y/include/drm/drm_atomic.h' l='553' type='int drm_atomic_nonblocking_commit(struct drm_atomic_state * state)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1702' ll='1714' type='int drm_atomic_nonblocking_commit(struct drm_atomic_state * state)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1715' type='int drm_atomic_nonblocking_commit(struct drm_atomic_state * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1715' c='drm_atomic_nonblocking_commit'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1715' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1715' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='2346' u='c' c='drm_mode_atomic_ioctl'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1688'>/**
 * drm_atomic_nonblocking_commit - atomic nonblocking commit
 * @state: atomic configuration to check
 *
 * Note that this function can return -EDEADLK if the driver needed to acquire
 * more locks but encountered a deadlock. The caller must then do the usual w/w
 * backoff dance and restart. All other errors are fatal.
 *
 * This function will take its own reference on @state.
 * Callers should always release their reference with drm_atomic_state_put().
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='3046' u='c' c='drm_atomic_helper_page_flip'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='3098' u='c' c='drm_atomic_helper_page_flip_target'/>
