<def f='linux-4.18.y/include/net/bond_alb.h' l='110' ll='129'/>
<size>64</size>
<doc f='linux-4.18.y/include/net/bond_alb.h' l='94'>/* -------------------------------------------------------------------------
 * struct rlb_client_info contains all info related to a specific rx client
 * connection. This is the Clients Hash Table entry struct.
 * Note that this is not a proper hash table; if a new client&apos;s IP address
 * hash collides with an existing client entry, the old entry is replaced.
 *
 * There is a linked list (linked by the used_next and used_prev members)
 * linking all the used entries of the hash table. This allows updating
 * all the clients without walking over all the unused elements of the table.
 *
 * There are also linked lists of entries with identical hash(ip_src). These
 * allow cleaning up the table from ip_src&lt;-&gt;mac_src associations that have
 * become outdated and would cause sending out invalid ARP updates to the
 * network. These are linked by the (src_next and src_prev members).
 * -------------------------------------------------------------------------
 */</doc>
<mbr r='rlb_client_info::ip_src' o='0' t='__be32'/>
<mbr r='rlb_client_info::ip_dst' o='32' t='__be32'/>
<mbr r='rlb_client_info::mac_src' o='64' t='u8 [6]'/>
<mbr r='rlb_client_info::mac_dst' o='112' t='u8 [6]'/>
<mbr r='rlb_client_info::used_next' o='160' t='u32'/>
<mbr r='rlb_client_info::used_prev' o='192' t='u32'/>
<mbr r='rlb_client_info::src_next' o='224' t='u32'/>
<mbr r='rlb_client_info::src_prev' o='256' t='u32'/>
<mbr r='rlb_client_info::src_first' o='288' t='u32'/>
<mbr r='rlb_client_info::assigned' o='320' t='u8'/>
<mbr r='rlb_client_info::ntt' o='328' t='u8'/>
<mbr r='rlb_client_info::slave' o='384' t='struct slave *'/>
<mbr r='rlb_client_info::vlan_id' o='448' t='unsigned short'/>
