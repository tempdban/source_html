<dec f='linux-4.14.y/include/linux/virtio.h' l='63' type='bool virtqueue_kick_prepare(struct virtqueue * vq)'/>
<use f='linux-4.14.y/drivers/block/virtio_blk.c' l='283' u='c' c='virtio_queue_rq'/>
<use f='linux-4.14.y/drivers/scsi/virtio_scsi.c' l='483' u='c' c='virtscsi_kick_cmd'/>
<def f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='551' ll='582' type='bool virtqueue_kick_prepare(struct virtqueue * _vq)'/>
<dec f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='583' type='bool virtqueue_kick_prepare(struct virtqueue * )'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='583' c='virtqueue_kick_prepare'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='583' u='a'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='583' u='a'/>
<use f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='623' u='c' c='virtqueue_kick'/>
<doc f='linux-4.14.y/drivers/virtio/virtio_ring.c' l='540'>/**
 * virtqueue_kick_prepare - first half of split virtqueue_kick call.
 * @vq: the struct virtqueue
 *
 * Instead of virtqueue_kick(), you can do:
 *	if (virtqueue_kick_prepare(vq))
 *		virtqueue_notify(vq);
 *
 * This is sometimes useful because the virtqueue_kick_prepare() needs
 * to be serialized, but the actual virtqueue_notify() call does not.
 */</doc>
