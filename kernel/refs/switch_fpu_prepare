<def f='linux-4.14.y/arch/x86/include/asm/fpu/internal.h' l='528' ll='541' type='void switch_fpu_prepare(struct fpu * old_fpu, int cpu)'/>
<doc f='linux-4.14.y/arch/x86/include/asm/fpu/internal.h' l='517'>/*
 * FPU state switching for scheduling.
 *
 * This is a two-stage process:
 *
 *  - switch_fpu_prepare() saves the old state.
 *    This is done within the context of the old process.
 *
 *  - switch_fpu_finish() restores the new state as
 *    necessary.
 */</doc>
<use f='linux-4.14.y/arch/x86/kernel/process_64.c' l='407' u='c' c='__switch_to'/>
<def f='linux-4.14.y/arch/x86/include/asm/fpu/internal.h' l='528' ll='541' type='void switch_fpu_prepare(struct fpu * old_fpu, int cpu)'/>
<doc f='linux-4.14.y/arch/x86/include/asm/fpu/internal.h' l='517'>/*
 * FPU state switching for scheduling.
 *
 * This is a two-stage process:
 *
 *  - switch_fpu_prepare() saves the old state.
 *    This is done within the context of the old process.
 *
 *  - switch_fpu_finish() restores the new state as
 *    necessary.
 */</doc>
<use f='linux-4.14.y/arch/x86/kernel/process_64.c' l='407' u='c' c='__switch_to'/>
