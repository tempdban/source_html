<def f='linux-4.14.y/include/linux/hid.h' l='771' ll='794'/>
<size>88</size>
<doc f='linux-4.14.y/include/linux/hid.h' l='757'>/**
 * hid_ll_driver - low level driver callbacks
 * @start: called on probe to start the device
 * @stop: called on remove
 * @open: called by input layer on open
 * @close: called by input layer on close
 * @parse: this method is called only once to parse the device data,
 *	   shouldn&apos;t allocate anything to not leak memory
 * @request: send report request to device (e.g. feature report)
 * @wait: wait for buffered io to complete (send/recv reports)
 * @raw_request: send raw report request to device (e.g. feature report)
 * @output_report: send output report to device
 * @idle: send idle request to device
 */</doc>
<mbr r='hid_ll_driver::start' o='0' t='int (*)(struct hid_device *)'/>
<mbr r='hid_ll_driver::stop' o='64' t='void (*)(struct hid_device *)'/>
<mbr r='hid_ll_driver::open' o='128' t='int (*)(struct hid_device *)'/>
<mbr r='hid_ll_driver::close' o='192' t='void (*)(struct hid_device *)'/>
<mbr r='hid_ll_driver::power' o='256' t='int (*)(struct hid_device *, int)'/>
<mbr r='hid_ll_driver::parse' o='320' t='int (*)(struct hid_device *)'/>
<mbr r='hid_ll_driver::request' o='384' t='void (*)(struct hid_device *, struct hid_report *, int)'/>
<mbr r='hid_ll_driver::wait' o='448' t='int (*)(struct hid_device *)'/>
<mbr r='hid_ll_driver::raw_request' o='512' t='int (*)(struct hid_device *, unsigned char, __u8 *, size_t, unsigned char, int)'/>
<mbr r='hid_ll_driver::output_report' o='576' t='int (*)(struct hid_device *, __u8 *, size_t)'/>
<mbr r='hid_ll_driver::idle' o='640' t='int (*)(struct hid_device *, int, int, int)'/>
