<dec f='linux-4.18.y/include/linux/netdevice.h' l='2416' type='int unregister_netdevice_notifier(struct notifier_block * nb)'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='4884' u='c' c='bonding_exit'/>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-main.c' l='487' u='c' c='xgbe_mod_exit'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_main.c' l='1103' u='c' c='ipvlan_init_module'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvlan_main.c' l='1111' u='c' c='ipvlan_cleanup_module'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvtap.c' l='220' u='c' c='ipvtap_init'/>
<use f='linux-4.18.y/drivers/net/ipvlan/ipvtap.c' l='233' u='c' c='ipvtap_exit'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='1719' u='c' c='macvlan_init_module'/>
<use f='linux-4.18.y/drivers/net/macvlan.c' l='1726' u='c' c='macvlan_cleanup_module'/>
<use f='linux-4.18.y/drivers/net/macvtap.c' l='227' u='c' c='macvtap_init'/>
<use f='linux-4.18.y/drivers/net/macvtap.c' l='240' u='c' c='macvtap_exit'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='3515' u='c' c='tun_cleanup'/>
<use f='linux-4.18.y/net/bridge/br.c' l='254' u='c' c='br_init'/>
<use f='linux-4.18.y/net/bridge/br.c' l='271' u='c' c='br_deinit'/>
<use f='linux-4.18.y/net/bridge/br_netfilter_hooks.c' l='1095' u='c' c='br_netfilter_init'/>
<use f='linux-4.18.y/net/bridge/br_netfilter_hooks.c' l='1108' u='c' c='br_netfilter_fini'/>
<def f='linux-4.18.y/net/core/dev.c' l='1692' ll='1719' type='int unregister_netdevice_notifier(struct notifier_block * nb)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='1720' type='int unregister_netdevice_notifier(struct notifier_block * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='1720' c='unregister_netdevice_notifier'/>
<use f='linux-4.18.y/net/core/dev.c' l='1720' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='1720' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='1678'>/**
 * unregister_netdevice_notifier - unregister a network notifier block
 * @nb: notifier
 *
 * Unregister a notifier previously registered by
 * register_netdevice_notifier(). The notifier is unlinked into the
 * kernel structures and may then be reused. A negative errno code
 * is returned on a failure.
 *
 * After unregistering unregister and down device events are synthesized
 * for all devices on the device list to the removed notifier to remove
 * the need for special case cleanup code.
 */</doc>
<use f='linux-4.18.y/net/core/failover.c' l='310' u='c' c='failover_exit'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_nat_masquerade_ipv4.c' l='155' u='c' c='nf_nat_masquerade_ipv4_unregister_notifier'/>
<use f='linux-4.18.y/net/netfilter/nf_tables_api.c' l='7236' u='c' c='nf_tables_module_exit'/>
<use f='linux-4.18.y/net/netfilter/nfnetlink_queue.c' l='1578' u='c' c='nfnetlink_queue_fini'/>
<use f='linux-4.18.y/net/netfilter/nft_chain_filter.c' l='371' u='c' c='nft_chain_filter_netdev_fini'/>
<use f='linux-4.18.y/net/netfilter/xt_TEE.c' l='181' u='c' c='tee_tg_exit'/>
<use f='linux-4.18.y/net/openvswitch/datapath.c' l='2437' u='c' c='dp_init'/>
<use f='linux-4.18.y/net/openvswitch/datapath.c' l='2456' u='c' c='dp_cleanup'/>
<use f='linux-4.18.y/net/packet/af_packet.c' l='4557' u='c' c='packet_exit'/>
