<dec f='linux-4.14.y/include/linux/netdevice.h' l='2304' type='int unregister_netdevice_notifier(struct notifier_block * nb)'/>
<def f='linux-4.14.y/net/core/dev.c' l='1628' ll='1652' type='int unregister_netdevice_notifier(struct notifier_block * nb)'/>
<dec f='linux-4.14.y/net/core/dev.c' l='1653' type='int unregister_netdevice_notifier(struct notifier_block * )'/>
<use f='linux-4.14.y/net/core/dev.c' l='1653' c='unregister_netdevice_notifier'/>
<use f='linux-4.14.y/net/core/dev.c' l='1653' u='a'/>
<use f='linux-4.14.y/net/core/dev.c' l='1653' u='a'/>
<doc f='linux-4.14.y/net/core/dev.c' l='1614'>/**
 * unregister_netdevice_notifier - unregister a network notifier block
 * @nb: notifier
 *
 * Unregister a notifier previously registered by
 * register_netdevice_notifier(). The notifier is unlinked into the
 * kernel structures and may then be reused. A negative errno code
 * is returned on a failure.
 *
 * After unregistering unregister and down device events are synthesized
 * for all devices on the device list to the removed notifier to remove
 * the need for special case cleanup code.
 */</doc>
<use f='linux-4.14.y/net/ipv4/netfilter/nf_nat_masquerade_ipv4.c' l='156' u='c' c='nf_nat_masquerade_ipv4_unregister_notifier'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_netdev.c' l='175' u='c' c='nf_tables_netdev_exit'/>
<use f='linux-4.14.y/net/netfilter/nfnetlink_queue.c' l='1573' u='c' c='nfnetlink_queue_fini'/>
<use f='linux-4.14.y/net/netfilter/xt_TEE.c' l='123' u='c' c='tee_tg_destroy'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='4609' u='c' c='packet_exit'/>
