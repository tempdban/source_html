<def f='linux-4.14.y/include/linux/of.h' l='1051' ll='1057' type='bool of_property_read_bool(const struct device_node * np, const char * propname)'/>
<use f='linux-4.14.y/include/linux/of.h' l='1297' u='c' c='of_device_is_system_power_controller'/>
<doc f='linux-4.14.y/include/linux/of.h' l='1043'>/**
 * of_property_read_bool - Findfrom a property
 * @np:		device node from which the property value is to be read.
 * @propname:	name of the property to be searched.
 *
 * Search for a property in a device node.
 * Returns true if the property exists false otherwise.
 */</doc>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='580' u='c' c='regmap_get_val_endian'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='582' u='c' c='regmap_get_val_endian'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='584' u='c' c='regmap_get_val_endian'/>
<use f='linux-4.14.y/drivers/nvmem/core.c' l='480' u='c' c='nvmem_register'/>
<def f='linux-4.14.y/include/linux/of.h' l='1051' ll='1057' type='bool of_property_read_bool(const struct device_node * np, const char * propname)'/>
<use f='linux-4.14.y/include/linux/of.h' l='1297' u='c' c='of_device_is_system_power_controller'/>
<doc f='linux-4.14.y/include/linux/of.h' l='1043'>/**
 * of_property_read_bool - Findfrom a property
 * @np:		device node from which the property value is to be read.
 * @propname:	name of the property to be searched.
 *
 * Search for a property in a device node.
 * Returns true if the property exists false otherwise.
 */</doc>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='580' u='c' c='regmap_get_val_endian'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='582' u='c' c='regmap_get_val_endian'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='584' u='c' c='regmap_get_val_endian'/>
<use f='linux-4.14.y/drivers/nvmem/core.c' l='480' u='c' c='nvmem_register'/>
