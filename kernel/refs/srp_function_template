<def f='linux-4.14.y/include/scsi/scsi_transport_srp.h' l='93' ll='103'/>
<size>56</size>
<doc f='linux-4.14.y/include/scsi/scsi_transport_srp.h' l='76'>/**
 * struct srp_function_template
 *
 * Fields that are only relevant for SRP initiator drivers:
 * @has_rport_state: Whether or not to create the state, fast_io_fail_tmo and
 *     dev_loss_tmo sysfs attribute for an rport.
 * @reset_timer_if_blocked: Whether or srp_timed_out() should reset the command
 *     timer if the device on which it has been queued is blocked.
 * @reconnect_delay: If not NULL, points to the default reconnect_delay value.
 * @fast_io_fail_tmo: If not NULL, points to the default fast_io_fail_tmo value.
 * @dev_loss_tmo: If not NULL, points to the default dev_loss_tmo value.
 * @reconnect: Callback function for reconnecting to the target. See also
 *     srp_reconnect_rport().
 * @terminate_rport_io: Callback function for terminating all outstanding I/O
 *     requests for an rport.
 * @rport_delete: Callback function that deletes an rport.
 */</doc>
<mbr r='srp_function_template::has_rport_state' o='0' t='bool'/>
<mbr r='srp_function_template::reset_timer_if_blocked' o='8' t='bool'/>
<mbr r='srp_function_template::reconnect_delay' o='64' t='int *'/>
<mbr r='srp_function_template::fast_io_fail_tmo' o='128' t='int *'/>
<mbr r='srp_function_template::dev_loss_tmo' o='192' t='int *'/>
<mbr r='srp_function_template::reconnect' o='256' t='int (*)(struct srp_rport *)'/>
<mbr r='srp_function_template::terminate_rport_io' o='320' t='void (*)(struct srp_rport *)'/>
<mbr r='srp_function_template::rport_delete' o='384' t='void (*)(struct srp_rport *)'/>
<def f='linux-4.14.y/include/scsi/scsi_transport_srp.h' l='93' ll='103'/>
<size>56</size>
<doc f='linux-4.14.y/include/scsi/scsi_transport_srp.h' l='76'>/**
 * struct srp_function_template
 *
 * Fields that are only relevant for SRP initiator drivers:
 * @has_rport_state: Whether or not to create the state, fast_io_fail_tmo and
 *     dev_loss_tmo sysfs attribute for an rport.
 * @reset_timer_if_blocked: Whether or srp_timed_out() should reset the command
 *     timer if the device on which it has been queued is blocked.
 * @reconnect_delay: If not NULL, points to the default reconnect_delay value.
 * @fast_io_fail_tmo: If not NULL, points to the default fast_io_fail_tmo value.
 * @dev_loss_tmo: If not NULL, points to the default dev_loss_tmo value.
 * @reconnect: Callback function for reconnecting to the target. See also
 *     srp_reconnect_rport().
 * @terminate_rport_io: Callback function for terminating all outstanding I/O
 *     requests for an rport.
 * @rport_delete: Callback function that deletes an rport.
 */</doc>
<mbr r='srp_function_template::has_rport_state' o='0' t='bool'/>
<mbr r='srp_function_template::reset_timer_if_blocked' o='8' t='bool'/>
<mbr r='srp_function_template::reconnect_delay' o='64' t='int *'/>
<mbr r='srp_function_template::fast_io_fail_tmo' o='128' t='int *'/>
<mbr r='srp_function_template::dev_loss_tmo' o='192' t='int *'/>
<mbr r='srp_function_template::reconnect' o='256' t='int (*)(struct srp_rport *)'/>
<mbr r='srp_function_template::terminate_rport_io' o='320' t='void (*)(struct srp_rport *)'/>
<mbr r='srp_function_template::rport_delete' o='384' t='void (*)(struct srp_rport *)'/>
