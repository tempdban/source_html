<dec f='linux-4.18.y/include/linux/sysctl.h' l='56' type='int proc_dointvec_userhz_jiffies(struct ctl_table * , int , void * , size_t * , loff_t * )'/>
<use f='linux-4.18.y/fs/proc/proc_sysctl.c' l='1117' u='r' c='sysctl_check_table'/>
<def f='linux-4.18.y/kernel/sysctl.c' l='2955' ll='2960' type='int proc_dointvec_userhz_jiffies(struct ctl_table * table, int write, void * buffer, size_t * lenp, loff_t * ppos)'/>
<dec f='linux-4.18.y/kernel/sysctl.c' l='3222' type='int proc_dointvec_userhz_jiffies(struct ctl_table * , int , void * , size_t * , loff_t * )'/>
<use f='linux-4.18.y/kernel/sysctl.c' l='3222' c='proc_dointvec_userhz_jiffies'/>
<use f='linux-4.18.y/kernel/sysctl.c' l='3222' u='a'/>
<use f='linux-4.18.y/kernel/sysctl.c' l='3222' u='a'/>
<doc f='linux-4.18.y/kernel/sysctl.c' l='2940'>/**
 * proc_dointvec_userhz_jiffies - read a vector of integers as 1/USER_HZ seconds
 * @table: the sysctl table
 * @write: %TRUE if this is a write to the sysctl file
 * @buffer: the user buffer
 * @lenp: the size of the user buffer
 * @ppos: pointer to the file position
 *
 * Reads/writes up to table-&gt;maxlen/sizeof(unsigned int) integer
 * values from/to the user buffer, treated as an ASCII string. 
 * The values read are assumed to be in 1/USER_HZ seconds, and 
 * are converted into jiffies.
 *
 * Returns 0 on success.
 */</doc>
<use f='linux-4.18.y/net/core/neighbour.c' l='3026' u='c' c='neigh_proc_dointvec_userhz_jiffies'/>
