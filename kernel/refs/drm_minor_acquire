<dec f='linux-4.18.y/drivers/gpu/drm/drm_internal.h' l='49' type='struct drm_minor * drm_minor_acquire(unsigned int minor_id)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_internal.h' l='48'>/* drm_drv.c */</doc>
<def f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='236' ll='255' type='struct drm_minor * drm_minor_acquire(unsigned int minor_id)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='928' u='c' c='drm_stub_open'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='227'>/*
 * Looks up the given minor-ID and returns the respective DRM-minor object. The
 * refence-count of the underlying device is increased so you must release this
 * object with drm_minor_release().
 *
 * As long as you hold this minor, it is guaranteed that the object and the
 * minor-&gt;dev pointer will stay valid! However, the device may get unplugged and
 * unregistered while you hold the minor.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_file.c' l='144' u='c' c='drm_open'/>
