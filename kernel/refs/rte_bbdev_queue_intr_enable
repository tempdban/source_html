<dec f='linux-4.18.y/lib/librte_bbdev/rte_bbdev.h' l='650' type='int rte_bbdev_queue_intr_enable(uint16_t dev_id, uint16_t queue_id)'/>
<doc f='linux-4.18.y/lib/librte_bbdev/rte_bbdev.h' l='633'>/**
 * Enable a one-shot interrupt on the next operation enqueued to a particular
 * queue. The interrupt will be triggered when the operation is ready to be
 * dequeued. To handle the interrupt, an epoll file descriptor must be
 * registered using rte_bbdev_queue_intr_ctl(), and then an application
 * thread/lcore can wait for the interrupt using rte_epoll_wait().
 *
 * @param dev_id
 *   The device identifier.
 * @param queue_id
 *   The index of the queue.
 *
 * @return
 *   - 0 on success
 *   - negative value on failure - as returned from PMD driver
 */</doc>
<use f='linux-4.18.y/app/test-bbdev/test_bbdev_perf.c' l='1282' u='c' c='throughput_intr_lcore_dec'/>
<use f='linux-4.18.y/app/test-bbdev/test_bbdev_perf.c' l='1282' u='c' c='throughput_intr_lcore_dec'/>
<use f='linux-4.18.y/app/test-bbdev/test_bbdev_perf.c' l='1347' u='c' c='throughput_intr_lcore_enc'/>
<use f='linux-4.18.y/app/test-bbdev/test_bbdev_perf.c' l='1347' u='c' c='throughput_intr_lcore_enc'/>
<def f='linux-4.18.y/lib/librte_bbdev/rte_bbdev.c' l='1053' ll='1062' type='int rte_bbdev_queue_intr_enable(uint16_t dev_id, uint16_t queue_id)'/>
