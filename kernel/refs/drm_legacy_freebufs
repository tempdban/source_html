<dec f='linux-4.14.y/drivers/gpu/drm/drm_legacy.h' l='73' type='int drm_legacy_freebufs(struct drm_device * d, void * v, struct drm_file * f)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_bufs.c' l='1393' ll='1430' type='int drm_legacy_freebufs(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_bufs.c' l='1381'>/**
 * Unreserve the buffers in list, previously reserved using drmDMA.
 *
 * \param inode device inode.
 * \param file_priv DRM file private.
 * \param cmd command.
 * \param arg pointer to a drm_buf_free structure.
 * \return zero on success or a negative number on failure.
 *
 * Calls free_buffer() for each used buffer.
 * This function is primarily used for debugging.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioc32.c' l='489' u='r' c='compat_drm_freebufs'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='587'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='587'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='587'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='587'/>
