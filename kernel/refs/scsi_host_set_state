<dec f='linux-4.18.y/include/scsi/scsi_host.h' l='893' type='int scsi_host_set_state(struct Scsi_Host * , enum scsi_host_state )'/>
<def f='linux-4.18.y/drivers/scsi/hosts.c' l='72' ll='156' type='int scsi_host_set_state(struct Scsi_Host * shost, enum scsi_host_state state)'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='168' u='c' c='scsi_remove_host'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='169' u='c' c='scsi_remove_host'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='183' u='c' c='scsi_remove_host'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='184' u='c' c='scsi_remove_host'/>
<use f='linux-4.18.y/drivers/scsi/hosts.c' l='259' u='c' c='scsi_add_host_with_dma'/>
<doc f='linux-4.18.y/drivers/scsi/hosts.c' l='64'>/**
 *	scsi_host_set_state - Take the given host through the host state model.
 *	@shost:	scsi host to change the state of.
 *	@state:	state to change to.
 *
 *	Returns zero if unsuccessful or an error if the requested
 *	transition is illegal.
 **/</doc>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='89' u='c' c='scsi_schedule_eh'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='90' u='c' c='scsi_schedule_eh'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='256' u='c' c='scsi_eh_scmd_add'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='257' u='c' c='scsi_eh_scmd_add'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='2011' u='c' c='scsi_restart_operations'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='2012' u='c' c='scsi_restart_operations'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='2013' u='c' c='scsi_restart_operations'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='2036' u='c' c='scsi_restart_operations'/>
<use f='linux-4.18.y/drivers/scsi/scsi_error.c' l='2037' u='c' c='scsi_restart_operations'/>
<use f='linux-4.18.y/drivers/scsi/scsi_sysfs.c' l='215' u='c' c='store_shost_state'/>
