<dec f='linux-4.18.y/drivers/gpu/drm/drm_crtc_internal.h' l='78' type='int drm_mode_gamma_get_ioctl(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_crtc_internal.h' l='77'>/* IOCTLs */</doc>
<def f='linux-4.18.y/drivers/gpu/drm/drm_color_mgmt.c' l='313' ll='355' type='int drm_mode_gamma_get_ioctl(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_color_mgmt.c' l='298'>/**
 * drm_mode_gamma_get_ioctl - get the gamma table
 * @dev: DRM device
 * @data: ioctl data
 * @file_priv: DRM file info
 *
 * Copy the current gamma table into the storage provided. This also provides
 * the gamma table size the driver expects, which can be used to size the
 * allocated storage.
 *
 * Called by the user via ioctl.
 *
 * Returns:
 * Zero on success, negative errno on failure.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='630'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='630'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='630'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_ioctl.c' l='630'/>
