<dec f='linux-4.18.y/include/linux/netdevice.h' l='2533' type='struct net_device * __dev_get_by_name(struct net * net, const char * name)'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='3525' u='c' c='bond_do_ioctl'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_options.c' l='783' u='c' c='bond_option_active_slave_set'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_options.c' l='1334' u='c' c='bond_option_queue_id_set'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_options.c' l='1381' u='c' c='bond_option_slaves_set'/>
<use f='linux-4.18.y/drivers/net/bonding/bond_sysfs.c' l='790' u='c' c='bond_create_sysfs'/>
<use f='linux-4.18.y/drivers/net/tun.c' l='2557' u='c' c='tun_set_iff'/>
<use f='linux-4.18.y/net/bridge/br_if.c' l='411' u='c' c='br_del_bridge'/>
<use f='linux-4.18.y/net/core/dev.c' l='637' u='c' c='netdev_boot_base'/>
<def f='linux-4.18.y/net/core/dev.c' l='736' ll='746' type='struct net_device * __dev_get_by_name(struct net * net, const char * name)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='747' type='struct net_device * __dev_get_by_name(struct net * , const char * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='747' c='__dev_get_by_name'/>
<use f='linux-4.18.y/net/core/dev.c' l='747' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='747' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='1102' u='c' c='__dev_alloc_name'/>
<use f='linux-4.18.y/net/core/dev.c' l='1156' u='c' c='dev_get_valid_name'/>
<use f='linux-4.18.y/net/core/dev.c' l='8645' u='c' c='dev_change_net_namespace'/>
<doc f='linux-4.18.y/net/core/dev.c' l='724'>/**
 *	__dev_get_by_name	- find a device by its name
 *	@net: the applicable net namespace
 *	@name: name to find
 *
 *	Find an interface by name. Must be called under RTNL semaphore
 *	or @dev_base_lock. If the name is found a pointer to the device
 *	is returned. If the name is not found then %NULL is returned. The
 *	reference counters are not incremented so the caller must be
 *	careful with locks.
 */</doc>
<use f='linux-4.18.y/net/core/dev_ioctl.c' l='227' u='c' c='dev_ifsioc'/>
<use f='linux-4.18.y/net/core/ethtool.c' l='2590' u='c' c='dev_ethtool'/>
<use f='linux-4.18.y/net/core/rtnetlink.c' l='2627' u='c' c='rtnl_setlink'/>
<use f='linux-4.18.y/net/core/rtnetlink.c' l='2728' u='c' c='rtnl_dellink'/>
<use f='linux-4.18.y/net/core/rtnetlink.c' l='2883' u='c' c='rtnl_newlink'/>
<use f='linux-4.18.y/net/core/rtnetlink.c' l='3144' u='c' c='rtnl_getlink'/>
<use f='linux-4.18.y/net/dcb/dcbnl.c' l='1755' u='c' c='dcb_doit'/>
<use f='linux-4.18.y/net/ipv4/arp.c' l='1210' u='c' c='arp_ioctl'/>
<use f='linux-4.18.y/net/ipv4/devinet.c' l='1022' u='c' c='devinet_ioctl'/>
<use f='linux-4.18.y/net/ipv4/fib_frontend.c' l='527' u='c' c='rtentry_to_fib_config'/>
<use f='linux-4.18.y/net/netfilter/nf_tables_api.c' l='1442' u='c' c='nft_chain_parse_hook'/>
<use f='linux-4.18.y/net/netfilter/nf_tables_api.c' l='5285' u='c' c='nf_tables_parse_devices'/>
