<dec f='linux-4.18.y/include/linux/fs.h' l='2724' type='int notify_change(struct dentry * , struct iattr * , struct inode ** )'/>
<use f='linux-4.18.y/drivers/base/devtmpfs.c' l='220' u='c' c='handle_create'/>
<use f='linux-4.18.y/drivers/base/devtmpfs.c' l='327' u='c' c='handle_remove'/>
<def f='linux-4.18.y/fs/attr.c' l='225' ll='344' type='int notify_change(struct dentry * dentry, struct iattr * attr, struct inode ** delegated_inode)'/>
<dec f='linux-4.18.y/fs/attr.c' l='345' type='int notify_change(struct dentry * , struct iattr * , struct inode ** )'/>
<use f='linux-4.18.y/fs/attr.c' l='345' c='notify_change'/>
<use f='linux-4.18.y/fs/attr.c' l='345' u='a'/>
<use f='linux-4.18.y/fs/attr.c' l='345' u='a'/>
<doc f='linux-4.18.y/fs/attr.c' l='205'>/**
 * notify_change - modify attributes of a filesytem object
 * @dentry:	object affected
 * @iattr:	new attributes
 * @delegated_inode: returns inode, if the inode is delegated
 *
 * The caller must hold the i_mutex on the affected object.
 *
 * If notify_change discovers a delegation in need of breaking,
 * it will return -EWOULDBLOCK and return a reference to the inode in
 * delegated_inode.  The caller should then break the delegation and
 * retry.  Because breaking a delegation may take a long time, the
 * caller should drop the i_mutex before doing so.
 *
 * Alternatively, a caller may pass NULL for delegated_inode.  This may
 * be appropriate for callers that expect the underlying filesystem not
 * to be NFS exported.  Also, passing NULL is fine for callers holding
 * the file open for write, as there can be no conflicting delegation in
 * that case.
 */</doc>
<use f='linux-4.18.y/fs/inode.c' l='1799' u='c' c='__remove_privs'/>
<use f='linux-4.18.y/fs/open.c' l='63' u='c' c='do_truncate'/>
<use f='linux-4.18.y/fs/open.c' l='552' u='c' c='chmod_common'/>
<use f='linux-4.18.y/fs/open.c' l='643' u='c' c='chown_common'/>
<use f='linux-4.18.y/fs/overlayfs/copy_up.c' l='207' u='c' c='ovl_set_timestamps'/>
<use f='linux-4.18.y/fs/overlayfs/copy_up.c' l='219' u='c' c='ovl_set_attr'/>
<use f='linux-4.18.y/fs/overlayfs/copy_up.c' l='227' u='c' c='ovl_set_attr'/>
<use f='linux-4.18.y/fs/overlayfs/dir.c' l='480' u='c' c='ovl_create_over_whiteout'/>
<use f='linux-4.18.y/fs/overlayfs/inode.c' l='51' u='c' c='ovl_setattr'/>
<use f='linux-4.18.y/fs/overlayfs/super.c' l='642' u='c' c='ovl_workdir_create'/>
<use f='linux-4.18.y/fs/utimes.c' l='91' u='c' c='utimes_common'/>
