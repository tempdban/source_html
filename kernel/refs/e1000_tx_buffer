<def f='linux-4.14.y/drivers/net/ethernet/intel/e1000/e1000.h' l='151' ll='160'/>
<size>40</size>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/e1000/e1000.h' l='148'>/* wrapper around a pointer to a socket buffer,
 * so a DMA handle can be stored along with the buffer
 */</doc>
<mbr r='e1000_tx_buffer::skb' o='0' t='struct sk_buff *'/>
<mbr r='e1000_tx_buffer::dma' o='64' t='dma_addr_t'/>
<mbr r='e1000_tx_buffer::time_stamp' o='128' t='unsigned long'/>
<mbr r='e1000_tx_buffer::length' o='192' t='u16'/>
<mbr r='e1000_tx_buffer::next_to_watch' o='208' t='u16'/>
<mbr r='e1000_tx_buffer::mapped_as_page' o='224' t='bool'/>
<mbr r='e1000_tx_buffer::segs' o='240' t='unsigned short'/>
<mbr r='e1000_tx_buffer::bytecount' o='256' t='unsigned int'/>
<def f='linux-4.14.y/drivers/net/ethernet/intel/e1000/e1000.h' l='151' ll='160'/>
<size>40</size>
<doc f='linux-4.14.y/drivers/net/ethernet/intel/e1000/e1000.h' l='148'>/* wrapper around a pointer to a socket buffer,
 * so a DMA handle can be stored along with the buffer
 */</doc>
<mbr r='e1000_tx_buffer::skb' o='0' t='struct sk_buff *'/>
<mbr r='e1000_tx_buffer::dma' o='64' t='dma_addr_t'/>
<mbr r='e1000_tx_buffer::time_stamp' o='128' t='unsigned long'/>
<mbr r='e1000_tx_buffer::length' o='192' t='u16'/>
<mbr r='e1000_tx_buffer::next_to_watch' o='208' t='u16'/>
<mbr r='e1000_tx_buffer::mapped_as_page' o='224' t='bool'/>
<mbr r='e1000_tx_buffer::segs' o='240' t='unsigned short'/>
<mbr r='e1000_tx_buffer::bytecount' o='256' t='unsigned int'/>
