<dec f='linux-4.18.y/include/linux/etherdevice.h' l='39' type='int eth_header(struct sk_buff * skb, struct net_device * dev, unsigned short type, const void * daddr, const void * saddr, unsigned int len)'/>
<def f='linux-4.18.y/net/ethernet/eth.c' l='82' ll='116' type='int eth_header(struct sk_buff * skb, struct net_device * dev, unsigned short type, const void * daddr, const void * saddr, unsigned int len)'/>
<dec f='linux-4.18.y/net/ethernet/eth.c' l='117' type='int eth_header(struct sk_buff * , struct net_device * , unsigned short , const void * , const void * , unsigned int )'/>
<use f='linux-4.18.y/net/ethernet/eth.c' l='117' c='eth_header'/>
<use f='linux-4.18.y/net/ethernet/eth.c' l='117' u='a'/>
<use f='linux-4.18.y/net/ethernet/eth.c' l='117' u='a'/>
<use f='linux-4.18.y/net/ethernet/eth.c' l='342'/>
<use f='linux-4.18.y/net/ethernet/eth.c' l='342'/>
<doc f='linux-4.18.y/net/ethernet/eth.c' l='69'>/**
 * eth_header - create the Ethernet header
 * @skb:	buffer to alter
 * @dev:	source device
 * @type:	Ethernet type field
 * @daddr: destination address (NULL leave destination address)
 * @saddr: source address (NULL use device source address)
 * @len:   packet length (&lt;= skb-&gt;len)
 *
 *
 * Set the protocol type. For a packet of type ETH_P_802_3/2 we put the length
 * in here instead.
 */</doc>
