<dec f='linux-4.14.y/include/linux/i2c.h' l='76' type='int __i2c_transfer(struct i2c_adapter * adap, struct i2c_msg * msgs, int num)'/>
<doc f='linux-4.14.y/include/linux/i2c.h' l='75'>/* Unlocked flavor */</doc>
<def f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1847' ll='1887' type='int __i2c_transfer(struct i2c_adapter * adap, struct i2c_msg * msgs, int num)'/>
<dec f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1888' type='int __i2c_transfer(struct i2c_adapter * , struct i2c_msg * , int )'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1888' c='__i2c_transfer'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1888' u='a'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1888' u='a'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1943' u='c' c='i2c_transfer'/>
<doc f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1835'>/**
 * __i2c_transfer - unlocked flavor of i2c_transfer
 * @adap: Handle to I2C bus
 * @msgs: One or more messages to execute before STOP is issued to
 *	terminate the operation; each message begins with a START.
 * @num: Number of messages to be executed.
 *
 * Returns negative errno, else the number of messages executed.
 *
 * Adapter lock must be held when calling this function. No debug logging
 * takes place. adap-&gt;algo-&gt;master_xfer existence isn&apos;t checked.
 */</doc>
