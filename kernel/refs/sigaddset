<def f='linux-4.18.y/include/linux/signal.h' l='50' ll='57' type='void sigaddset(sigset_t * set, int _sig)'/>
<use f='linux-4.18.y/include/linux/ptrace.h' l='216' u='c' c='ptrace_init_task'/>
<doc f='linux-4.18.y/include/linux/signal.h' l='48'>/* We don&apos;t use &lt;linux/bitops.h&gt; for these because there is no need to
   be atomic.  */</doc>
<use f='linux-4.18.y/fs/coredump.c' l='325' u='c' c='zap_process'/>
<use f='linux-4.18.y/fs/proc/array.c' l='260' u='c' c='collect_sigign_sigcatch'/>
<use f='linux-4.18.y/fs/proc/array.c' l='262' u='c' c='collect_sigign_sigcatch'/>
<use f='linux-4.18.y/kernel/signal.c' l='453' u='c' c='__flush_itimer_signals'/>
<use f='linux-4.18.y/kernel/signal.c' l='959' u='c' c='complete_signal'/>
<use f='linux-4.18.y/kernel/signal.c' l='1098' u='c' c='__send_signal'/>
<use f='linux-4.18.y/kernel/signal.c' l='1235' u='c' c='zap_other_threads'/>
<use f='linux-4.18.y/kernel/signal.c' l='1701' u='c' c='send_sigqueue'/>
<use f='linux-4.18.y/kernel/signal.c' l='2499' u='c' c='signal_delivered'/>
<use f='linux-4.18.y/kernel/signal.c' l='3359' u='c' c='kernel_sigaction'/>
<use f='linux-4.18.y/kernel/signal.c' l='3408' u='c' c='do_sigaction'/>
<dec f='include/signal.h' l='229' type='int sigaddset(sigset_t * __set, int __signo)'/>
<doc f='include/signal.h' l='228'>/* Add SIGNO to SET.  */</doc>
