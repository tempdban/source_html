<dec f='linux-4.14.y/include/acpi/acpi_bus.h' l='65' type='union acpi_object * acpi_evaluate_dsm(acpi_handle handle, const guid_t * guid, u64 rev, u64 func, union acpi_object * argv4)'/>
<use f='linux-4.14.y/include/acpi/acpi_bus.h' l='75' u='c' c='acpi_evaluate_dsm_typed'/>
<def f='linux-4.14.y/drivers/acpi/utils.c' l='627' ll='663' type='union acpi_object * acpi_evaluate_dsm(acpi_handle handle, const guid_t * guid, u64 rev, u64 func, union acpi_object * argv4)'/>
<dec f='linux-4.14.y/drivers/acpi/utils.c' l='664' type='union acpi_object * acpi_evaluate_dsm(acpi_handle , const guid_t * , u64 , u64 , union acpi_object * )'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='664' c='acpi_evaluate_dsm'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='664' u='a'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='664' u='a'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='686' u='c' c='acpi_check_dsm'/>
<doc f='linux-4.14.y/drivers/acpi/utils.c' l='613'>/**
 * acpi_evaluate_dsm - evaluate device&apos;s _DSM method
 * @handle: ACPI device handle
 * @guid: GUID of requested functions, should be 16 bytes
 * @rev: revision number of requested function
 * @func: requested function number
 * @argv4: the function specific parameter
 *
 * Evaluate device&apos;s _DSM method with specified GUID, revision id and
 * function number. Caller needs to free the returned object.
 *
 * Though ACPI defines the fourth parameter for _DSM should be a package,
 * some old BIOSes do expect a buffer or an integer etc.
 */</doc>
<use f='linux-4.14.y/drivers/pci/pci-acpi.c' l='640' u='c' c='acpi_pci_add_bus'/>
<use f='linux-4.14.y/drivers/pci/pci-acpi.c' l='705' u='c' c='pci_acpi_optimize_delay'/>
<use f='linux-4.14.y/drivers/pci/pci-label.c' l='179' u='c' c='dsm_get_label'/>
<dec f='linux-4.14.y/include/acpi/acpi_bus.h' l='65' type='union acpi_object * acpi_evaluate_dsm(acpi_handle handle, const guid_t * guid, u64 rev, u64 func, union acpi_object * argv4)'/>
<use f='linux-4.14.y/include/acpi/acpi_bus.h' l='75' u='c' c='acpi_evaluate_dsm_typed'/>
<def f='linux-4.14.y/drivers/acpi/utils.c' l='627' ll='663' type='union acpi_object * acpi_evaluate_dsm(acpi_handle handle, const guid_t * guid, u64 rev, u64 func, union acpi_object * argv4)'/>
<dec f='linux-4.14.y/drivers/acpi/utils.c' l='664' type='union acpi_object * acpi_evaluate_dsm(acpi_handle , const guid_t * , u64 , u64 , union acpi_object * )'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='664' c='acpi_evaluate_dsm'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='664' u='a'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='664' u='a'/>
<use f='linux-4.14.y/drivers/acpi/utils.c' l='686' u='c' c='acpi_check_dsm'/>
<doc f='linux-4.14.y/drivers/acpi/utils.c' l='613'>/**
 * acpi_evaluate_dsm - evaluate device&apos;s _DSM method
 * @handle: ACPI device handle
 * @guid: GUID of requested functions, should be 16 bytes
 * @rev: revision number of requested function
 * @func: requested function number
 * @argv4: the function specific parameter
 *
 * Evaluate device&apos;s _DSM method with specified GUID, revision id and
 * function number. Caller needs to free the returned object.
 *
 * Though ACPI defines the fourth parameter for _DSM should be a package,
 * some old BIOSes do expect a buffer or an integer etc.
 */</doc>
<use f='linux-4.14.y/drivers/pci/pci-acpi.c' l='640' u='c' c='acpi_pci_add_bus'/>
<use f='linux-4.14.y/drivers/pci/pci-acpi.c' l='705' u='c' c='pci_acpi_optimize_delay'/>
<use f='linux-4.14.y/drivers/pci/pci-label.c' l='179' u='c' c='dsm_get_label'/>
