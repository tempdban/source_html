<dec f='linux-4.14.y/include/drm/drm_plane.h' l='276' type='struct drm_plane_state *(*)(struct drm_plane *)'/>
<offset>320</offset>
<doc f='linux-4.14.y/include/drm/drm_plane.h' l='247'>/**
	 * @atomic_duplicate_state:
	 *
	 * Duplicate the current atomic state for this plane and return it.
	 * The core and helpers guarantee that any atomic state duplicated with
	 * this hook and still owned by the caller (i.e. not transferred to the
	 * driver by calling &amp;drm_mode_config_funcs.atomic_commit) will be
	 * cleaned up by calling the @atomic_destroy_state hook in this
	 * structure.
	 *
	 * Atomic drivers which don&apos;t subclass &amp;struct drm_plane_state should use
	 * drm_atomic_helper_plane_duplicate_state(). Drivers that subclass the
	 * state structure to extend it with driver-private state should use
	 * __drm_atomic_helper_plane_duplicate_state() to make sure shared state is
	 * duplicated in a consistent fashion across drivers.
	 *
	 * It is an error to call this hook before &amp;drm_plane.state has been
	 * initialized correctly.
	 *
	 * NOTE:
	 *
	 * If the duplicate state references refcounted resources this hook must
	 * acquire a reference for each of them. The driver must release these
	 * references again in @atomic_destroy_state.
	 *
	 * RETURNS:
	 *
	 * Duplicated atomic state or NULL when the allocation failed.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='683' u='r' c='drm_atomic_get_plane_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1075' u='r' c='drm_helper_crtc_mode_set_base'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1076' u='r' c='drm_helper_crtc_mode_set_base'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='554' u='r' c='drm_plane_helper_update'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='555' u='r' c='drm_plane_helper_update'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='603' u='r' c='drm_plane_helper_disable'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='604' u='r' c='drm_plane_helper_disable'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_simple_kms_helper.c' l='170' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='842' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='864' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_plane.c' l='128' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='348' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='357' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='559' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='568' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1369' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1378' u='w'/>
<dec f='linux-4.14.y/include/drm/drm_plane.h' l='276' type='struct drm_plane_state *(*)(struct drm_plane *)'/>
<offset>320</offset>
<doc f='linux-4.14.y/include/drm/drm_plane.h' l='247'>/**
	 * @atomic_duplicate_state:
	 *
	 * Duplicate the current atomic state for this plane and return it.
	 * The core and helpers guarantee that any atomic state duplicated with
	 * this hook and still owned by the caller (i.e. not transferred to the
	 * driver by calling &amp;drm_mode_config_funcs.atomic_commit) will be
	 * cleaned up by calling the @atomic_destroy_state hook in this
	 * structure.
	 *
	 * Atomic drivers which don&apos;t subclass &amp;struct drm_plane_state should use
	 * drm_atomic_helper_plane_duplicate_state(). Drivers that subclass the
	 * state structure to extend it with driver-private state should use
	 * __drm_atomic_helper_plane_duplicate_state() to make sure shared state is
	 * duplicated in a consistent fashion across drivers.
	 *
	 * It is an error to call this hook before &amp;drm_plane.state has been
	 * initialized correctly.
	 *
	 * NOTE:
	 *
	 * If the duplicate state references refcounted resources this hook must
	 * acquire a reference for each of them. The driver must release these
	 * references again in @atomic_destroy_state.
	 *
	 * RETURNS:
	 *
	 * Duplicated atomic state or NULL when the allocation failed.
	 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='683' u='r' c='drm_atomic_get_plane_state'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1075' u='r' c='drm_helper_crtc_mode_set_base'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_crtc_helper.c' l='1076' u='r' c='drm_helper_crtc_mode_set_base'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='554' u='r' c='drm_plane_helper_update'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='555' u='r' c='drm_plane_helper_update'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='603' u='r' c='drm_plane_helper_disable'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_plane_helper.c' l='604' u='r' c='drm_plane_helper_disable'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_simple_kms_helper.c' l='170' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='842' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_display.c' l='864' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_plane.c' l='128' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='348' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_ldu.c' l='357' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='559' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='568' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1369' u='w'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='1378' u='w'/>
