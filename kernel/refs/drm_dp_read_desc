<dec f='linux-4.14.y/include/drm/drm_dp_helper.h' l='1102' type='int drm_dp_read_desc(struct drm_dp_aux * aux, struct drm_dp_desc * desc, bool is_branch)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1270' ll='1294' type='int drm_dp_read_desc(struct drm_dp_aux * aux, struct drm_dp_desc * desc, bool is_branch)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' type='int drm_dp_read_desc(struct drm_dp_aux * , struct drm_dp_desc * , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' c='drm_dp_read_desc'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1259'>/**
 * drm_dp_read_desc - read sink/branch descriptor from DPCD
 * @aux: DisplayPort AUX channel
 * @desc: Device decriptor to fill from DPCD
 * @is_branch: true for branch devices, false for sink devices
 *
 * Read DPCD 0x400 (sink) or 0x500 (branch) into @desc. Also debug log the
 * identification.
 *
 * Returns 0 on success or a negative error code on failure.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_dp_helper.h' l='1102' type='int drm_dp_read_desc(struct drm_dp_aux * aux, struct drm_dp_desc * desc, bool is_branch)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1270' ll='1294' type='int drm_dp_read_desc(struct drm_dp_aux * aux, struct drm_dp_desc * desc, bool is_branch)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' type='int drm_dp_read_desc(struct drm_dp_aux * , struct drm_dp_desc * , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' c='drm_dp_read_desc'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1295' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='1259'>/**
 * drm_dp_read_desc - read sink/branch descriptor from DPCD
 * @aux: DisplayPort AUX channel
 * @desc: Device decriptor to fill from DPCD
 * @is_branch: true for branch devices, false for sink devices
 *
 * Read DPCD 0x400 (sink) or 0x500 (branch) into @desc. Also debug log the
 * identification.
 *
 * Returns 0 on success or a negative error code on failure.
 */</doc>
