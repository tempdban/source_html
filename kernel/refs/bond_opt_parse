<dec f='linux-4.14.y/include/net/bond_options.h' l='111' type='const struct bond_opt_value * bond_opt_parse(const struct bond_option * opt, struct bond_opt_value * val)'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4304' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4320' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4337' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4350' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4427' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4509' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4523' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4565' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4579' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4594' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4603' u='c' c='bond_check_params'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='4612' u='c' c='bond_check_params'/>
<def f='linux-4.14.y/drivers/net/bonding/bond_options.c' l='503' ll='566' type='const struct bond_opt_value * bond_opt_parse(const struct bond_option * opt, struct bond_opt_value * val)'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_options.c' l='667' u='c' c='__bond_opt_set'/>
<doc f='linux-4.14.y/drivers/net/bonding/bond_options.c' l='493'>/**
 * bond_opt_parse - parse option value
 * @opt: the option to parse against
 * @val: value to parse
 *
 * This function tries to extract the value from @val and check if it&apos;s
 * a possible match for the option and returns NULL if a match isn&apos;t found,
 * or the struct_opt_value that matched. It also strips the new line from
 * @val-&gt;string if it&apos;s present.
 */</doc>
