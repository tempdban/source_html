<dec f='linux-4.14.y/include/linux/clk.h' l='202' type='int clk_prepare(struct clk * clk)'/>
<use f='linux-4.14.y/include/linux/clk.h' l='643' u='c' c='clk_prepare_enable'/>
<use f='linux-4.14.y/drivers/clk/clk-bulk.c' l='93' u='c' c='clk_bulk_prepare'/>
<def f='linux-4.14.y/drivers/clk/clk.c' l='579' ll='585' type='int clk_prepare(struct clk * clk)'/>
<dec f='linux-4.14.y/drivers/clk/clk.c' l='586' type='int clk_prepare(struct clk * )'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='586' c='clk_prepare'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='586' u='a'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='586' u='a'/>
<doc f='linux-4.14.y/drivers/clk/clk.c' l='567'>/**
 * clk_prepare - prepare a clock source
 * @clk: the clk being prepared
 *
 * clk_prepare may sleep, which differentiates it from clk_enable.  In a simple
 * case, clk_prepare can be used instead of clk_enable to ungate a clk if the
 * operation may sleep.  One example is a clk which is accessed over I2c.  In
 * the complex case a clk ungate operation may require a fast and a slow part.
 * It is this reason that clk_prepare and clk_enable are not mutually
 * exclusive.  In fact clk_prepare must be called before clk_enable.
 * Returns 0 on success, -EERROR otherwise.
 */</doc>
<use f='linux-4.14.y/include/linux/amba/bus.h' l='112' u='c' c='amba_pclk_prepare'/>
