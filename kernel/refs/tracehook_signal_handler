<def f='linux-4.14.y/include/linux/tracehook.h' l='146' ll='150' type='void tracehook_signal_handler(int stepping)'/>
<doc f='linux-4.14.y/include/linux/tracehook.h' l='135'>/**
 * tracehook_signal_handler - signal handler setup is complete
 * @stepping:		nonzero if debugger single-step or block-step in use
 *
 * Called by the arch code after a signal handler has been set up.
 * Register and stack state reflects the user handler about to run.
 * Signal mask changes have already been made.
 *
 * Called without locks, shortly before returning to user mode
 * (or handling more signals).
 */</doc>
<use f='linux-4.14.y/kernel/signal.c' l='2381' u='c' c='signal_delivered'/>
<def f='linux-4.14.y/include/linux/tracehook.h' l='146' ll='150' type='void tracehook_signal_handler(int stepping)'/>
<doc f='linux-4.14.y/include/linux/tracehook.h' l='135'>/**
 * tracehook_signal_handler - signal handler setup is complete
 * @stepping:		nonzero if debugger single-step or block-step in use
 *
 * Called by the arch code after a signal handler has been set up.
 * Register and stack state reflects the user handler about to run.
 * Signal mask changes have already been made.
 *
 * Called without locks, shortly before returning to user mode
 * (or handling more signals).
 */</doc>
<use f='linux-4.14.y/kernel/signal.c' l='2381' u='c' c='signal_delivered'/>
