<dec f='linux-4.18.y/include/drm/ttm/ttm_object.h' l='247' type='int ttm_ref_object_add(struct ttm_object_file * tfile, struct ttm_base_object * base, enum ttm_ref_type ref_type, bool * existed, bool require_existed)'/>
<doc f='linux-4.18.y/include/drm/ttm/ttm_object.h' l='224'>/**
 * ttm_ref_object_add.
 *
 * @tfile: A struct ttm_object_file representing the application owning the
 * ref_object.
 * @base: The base object to reference.
 * @ref_type: The type of reference.
 * @existed: Upon completion, indicates that an identical reference object
 * already existed, and the refcount was upped on that object instead.
 * @require_existed: Fail with -EPERM if an identical ref object didn&apos;t
 * already exist.
 *
 * Checks that the base object is shareable and adds a ref object to it.
 *
 * Adding a ref object to a base object is basically like referencing the
 * base object, but a user-space application holds the reference. When the
 * file corresponding to @tfile is closed, all its reference objects are
 * deleted. A reference object can have different types depending on what
 * it&apos;s intended for. It can be refcounting to prevent object destruction,
 * When user-space takes a lock, it can add a ref object to that lock to
 * make sure the lock is released if the application dies. A ref object
 * will hold a single reference on a base object.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='183' u='c' c='ttm_base_object_init'/>
<def f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='320' ll='393' type='int ttm_ref_object_add(struct ttm_object_file * tfile, struct ttm_base_object * base, enum ttm_ref_type ref_type, bool * existed, bool require_existed)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='394' type='int ttm_ref_object_add(struct ttm_object_file * , struct ttm_base_object * , enum ttm_ref_type , bool * , bool )'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='394' c='ttm_ref_object_add'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='394' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='394' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/ttm/ttm_object.c' l='645' u='c' c='ttm_prime_fd_to_handle'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_fence.c' l='1119' u='c' c='vmw_fence_event_ioctl'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='550' u='c' c='vmw_user_dmabuf_synccpu_grab'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='734' u='c' c='vmw_user_dmabuf_reference'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_surface.c' l='942' u='c' c='vmw_surface_handle_reference'/>
