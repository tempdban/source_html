<dec f='linux-4.14.y/include/linux/netlink.h' l='234' type='bool netlink_net_capable(const struct sk_buff * skb, int cap)'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='4182' u='c' c='rtnetlink_rcv_msg'/>
<use f='linux-4.14.y/net/ipv4/inet_diag.c' l='466' u='c' c='inet_diag_dump_one_icsk'/>
<use f='linux-4.14.y/net/ipv4/inet_diag.c' l='781' u='c' c='inet_diag_bc_audit'/>
<use f='linux-4.14.y/net/ipv4/inet_diag.c' l='889' u='c' c='inet_diag_dump_icsk'/>
<use f='linux-4.14.y/net/netfilter/nfnetlink.c' l='507' u='c' c='nfnetlink_rcv'/>
<def f='linux-4.14.y/net/netlink/af_netlink.c' l='883' ll='886' type='bool netlink_net_capable(const struct sk_buff * skb, int cap)'/>
<dec f='linux-4.14.y/net/netlink/af_netlink.c' l='887' type='bool netlink_net_capable(const struct sk_buff * , int )'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='887' c='netlink_net_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='887' u='a'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='887' u='a'/>
<doc f='linux-4.14.y/net/netlink/af_netlink.c' l='873'>/**
 * netlink_net_capable - Netlink network namespace message capability test
 * @skb: socket buffer holding a netlink command from userspace
 * @cap: The capability to use
 *
 * Test to see if the opener of the socket we received the message
 * from had when the netlink socket was created and the sender of the
 * message has has the capability @cap over the network namespace of
 * the socket we received the message from.
 */</doc>
<use f='linux-4.14.y/net/packet/diag.c' l='197' u='c' c='packet_diag_dump'/>
<dec f='linux-4.14.y/include/linux/netlink.h' l='234' type='bool netlink_net_capable(const struct sk_buff * skb, int cap)'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='4182' u='c' c='rtnetlink_rcv_msg'/>
<use f='linux-4.14.y/net/ipv4/inet_diag.c' l='466' u='c' c='inet_diag_dump_one_icsk'/>
<use f='linux-4.14.y/net/ipv4/inet_diag.c' l='781' u='c' c='inet_diag_bc_audit'/>
<use f='linux-4.14.y/net/ipv4/inet_diag.c' l='889' u='c' c='inet_diag_dump_icsk'/>
<use f='linux-4.14.y/net/netfilter/nfnetlink.c' l='507' u='c' c='nfnetlink_rcv'/>
<def f='linux-4.14.y/net/netlink/af_netlink.c' l='883' ll='886' type='bool netlink_net_capable(const struct sk_buff * skb, int cap)'/>
<dec f='linux-4.14.y/net/netlink/af_netlink.c' l='887' type='bool netlink_net_capable(const struct sk_buff * , int )'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='887' c='netlink_net_capable'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='887' u='a'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='887' u='a'/>
<doc f='linux-4.14.y/net/netlink/af_netlink.c' l='873'>/**
 * netlink_net_capable - Netlink network namespace message capability test
 * @skb: socket buffer holding a netlink command from userspace
 * @cap: The capability to use
 *
 * Test to see if the opener of the socket we received the message
 * from had when the netlink socket was created and the sender of the
 * message has has the capability @cap over the network namespace of
 * the socket we received the message from.
 */</doc>
<use f='linux-4.14.y/net/packet/diag.c' l='197' u='c' c='packet_diag_dump'/>
