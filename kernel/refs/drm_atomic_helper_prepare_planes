<dec f='linux-4.14.y/include/drm/drm_atomic_helper.h' l='74' type='int drm_atomic_helper_prepare_planes(struct drm_device * dev, struct drm_atomic_state * state)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1506' u='c' c='drm_atomic_helper_commit'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1522' u='c' c='drm_atomic_helper_commit'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1934' ll='1969' type='int drm_atomic_helper_prepare_planes(struct drm_device * dev, struct drm_atomic_state * state)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' type='int drm_atomic_helper_prepare_planes(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' c='drm_atomic_helper_prepare_planes'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1921'>/**
 * drm_atomic_helper_prepare_planes - prepare plane resources before commit
 * @dev: DRM device
 * @state: atomic state object with new state structures
 *
 * This function prepares plane state, specifically framebuffers, for the new
 * configuration, by calling &amp;drm_plane_helper_funcs.prepare_fb. If any failure
 * is encountered this function will call &amp;drm_plane_helper_funcs.cleanup_fb on
 * any already successfully prepared framebuffer.
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_atomic_helper.h' l='74' type='int drm_atomic_helper_prepare_planes(struct drm_device * dev, struct drm_atomic_state * state)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1506' u='c' c='drm_atomic_helper_commit'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1522' u='c' c='drm_atomic_helper_commit'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1934' ll='1969' type='int drm_atomic_helper_prepare_planes(struct drm_device * dev, struct drm_atomic_state * state)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' type='int drm_atomic_helper_prepare_planes(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' c='drm_atomic_helper_prepare_planes'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1970' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1921'>/**
 * drm_atomic_helper_prepare_planes - prepare plane resources before commit
 * @dev: DRM device
 * @state: atomic state object with new state structures
 *
 * This function prepares plane state, specifically framebuffers, for the new
 * configuration, by calling &amp;drm_plane_helper_funcs.prepare_fb. If any failure
 * is encountered this function will call &amp;drm_plane_helper_funcs.cleanup_fb on
 * any already successfully prepared framebuffer.
 *
 * Returns:
 * 0 on success, negative error code on failure.
 */</doc>
