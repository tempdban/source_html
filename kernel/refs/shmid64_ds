<def f='linux-4.18.y/include/uapi/asm-generic/shmbuf.h' l='25' ll='45'/>
<size>112</size>
<doc f='linux-4.18.y/include/uapi/asm-generic/shmbuf.h' l='7'>/*
 * The shmid64_ds structure for x86 architecture.
 * Note extra padding because this structure is passed back and forth
 * between kernel and user space.
 *
 * shmid64_ds was originally meant to be architecture specific, but
 * everyone just ended up making identical copies without specific
 * optimizations, so we may just as well all use the same one.
 *
 * 64 bit architectures typically define a 64 bit __kernel_time_t,
 * so they do not need the first two padding words.
 * On big-endian systems, the padding is in the wrong place.
 *
 *
 * Pad space is left for:
 * - 2 miscellaneous 32-bit values
 */</doc>
<mbr r='shmid64_ds::shm_perm' o='0' t='struct ipc64_perm'/>
<mbr r='shmid64_ds::shm_segsz' o='384' t='size_t'/>
<mbr r='shmid64_ds::shm_atime' o='448' t='__kernel_time_t'/>
<mbr r='shmid64_ds::shm_dtime' o='512' t='__kernel_time_t'/>
<mbr r='shmid64_ds::shm_ctime' o='576' t='__kernel_time_t'/>
<mbr r='shmid64_ds::shm_cpid' o='640' t='__kernel_pid_t'/>
<mbr r='shmid64_ds::shm_lpid' o='672' t='__kernel_pid_t'/>
<mbr r='shmid64_ds::shm_nattch' o='704' t='unsigned long'/>
<mbr r='shmid64_ds::__unused4' o='768' t='unsigned long'/>
<mbr r='shmid64_ds::__unused5' o='832' t='unsigned long'/>
