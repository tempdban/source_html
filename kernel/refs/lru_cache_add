<dec f='linux-4.14.y/include/linux/swap.h' l='313' type='void lru_cache_add(struct page * )'/>
<doc f='linux-4.14.y/include/linux/swap.h' l='312'>/* linux/mm/swap.c */</doc>
<use f='linux-4.14.y/mm/filemap.c' l='826' u='c' c='add_to_page_cache_lru'/>
<def f='linux-4.14.y/mm/swap.c' l='441' ll='446' type='void lru_cache_add(struct page * page)'/>
<use f='linux-4.14.y/mm/swap.c' l='489' u='c' c='lru_cache_add_active_or_unevictable'/>
<doc f='linux-4.14.y/mm/swap.c' l='432'>/**
 * lru_cache_add - add a page to a page list
 * @page: the page to be added to the LRU.
 *
 * Queue the page for addition to the LRU via pagevec. The decision on whether
 * to add the page to the [in]active [file|anon] list is deferred until the
 * pagevec is drained. This gives a chance for the caller of lru_cache_add()
 * have the page added to the active list using mark_page_accessed().
 */</doc>
<use f='linux-4.14.y/mm/vmscan.c' l='809' u='c' c='putback_lru_page'/>
<dec f='linux-4.14.y/include/linux/swap.h' l='313' type='void lru_cache_add(struct page * )'/>
<doc f='linux-4.14.y/include/linux/swap.h' l='312'>/* linux/mm/swap.c */</doc>
<use f='linux-4.14.y/mm/filemap.c' l='826' u='c' c='add_to_page_cache_lru'/>
<def f='linux-4.14.y/mm/swap.c' l='441' ll='446' type='void lru_cache_add(struct page * page)'/>
<use f='linux-4.14.y/mm/swap.c' l='489' u='c' c='lru_cache_add_active_or_unevictable'/>
<doc f='linux-4.14.y/mm/swap.c' l='432'>/**
 * lru_cache_add - add a page to a page list
 * @page: the page to be added to the LRU.
 *
 * Queue the page for addition to the LRU via pagevec. The decision on whether
 * to add the page to the [in]active [file|anon] list is deferred until the
 * pagevec is drained. This gives a chance for the caller of lru_cache_add()
 * have the page added to the active list using mark_page_accessed().
 */</doc>
<use f='linux-4.14.y/mm/vmscan.c' l='809' u='c' c='putback_lru_page'/>
