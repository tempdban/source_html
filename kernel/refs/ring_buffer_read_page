<dec f='linux-4.18.y/include/linux/ring_buffer.h' l='195' type='int ring_buffer_read_page(struct ring_buffer * buffer, void ** data_page, size_t len, int cpu, int full)'/>
<def f='linux-4.18.y/kernel/trace/ring_buffer.c' l='4652' ll='4813' type='int ring_buffer_read_page(struct ring_buffer * buffer, void ** data_page, size_t len, int cpu, int full)'/>
<dec f='linux-4.18.y/kernel/trace/ring_buffer.c' l='4814' type='int ring_buffer_read_page(struct ring_buffer * , void ** , size_t , int , int )'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='4814' c='ring_buffer_read_page'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='4814' u='a'/>
<use f='linux-4.18.y/kernel/trace/ring_buffer.c' l='4814' u='a'/>
<doc f='linux-4.18.y/kernel/trace/ring_buffer.c' l='4619'>/**
 * ring_buffer_read_page - extract a page from the ring buffer
 * @buffer: buffer to extract from
 * @data_page: the page to use allocated from ring_buffer_alloc_read_page
 * @len: amount to extract
 * @cpu: the cpu of the buffer to extract
 * @full: should the extraction only happen when the page is full.
 *
 * This function will pull out a page from the ring buffer and consume it.
 * @data_page must be the address of the variable that was returned
 * from ring_buffer_alloc_read_page. This is because the page might be used
 * to swap with a page in the ring buffer.
 *
 * for example:
 *	rpage = ring_buffer_alloc_read_page(buffer, cpu);
 *	if (IS_ERR(rpage))
 *		return PTR_ERR(rpage);
 *	ret = ring_buffer_read_page(buffer, &amp;rpage, len, cpu, 0);
 *	if (ret &gt;= 0)
 *		process_page(rpage, ret);
 *
 * When @full is set, the function will not return true unless
 * the writer is off the reader page.
 *
 * Note: it is up to the calling functions to handle sleeps and wakeups.
 *  The ring buffer can be used anywhere in the kernel and can not
 *  blindly call wake_up. The layer that uses the ring buffer must be
 *  responsible for that.
 *
 * Returns:
 *  &gt;=0 if data has been transferred, returns the offset of consumed data.
 *  &lt;0 if no data has been transferred.
 */</doc>
<use f='linux-4.18.y/kernel/trace/trace.c' l='6736' u='c' c='tracing_buffers_read'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='6911' u='c' c='tracing_buffers_splice_read'/>
