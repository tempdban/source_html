<dec f='linux-4.14.y/include/net/ip.h' l='124' type='int ip_build_and_send_pkt(struct sk_buff * skb, const struct sock * sk, __be32 saddr, __be32 daddr, struct ip_options_rcu * opt)'/>
<doc f='linux-4.14.y/include/net/ip.h' l='120'>/*
 *	Functions provided by ip.c
 */</doc>
<def f='linux-4.14.y/net/ipv4/ip_output.c' l='143' ll='181' type='int ip_build_and_send_pkt(struct sk_buff * skb, const struct sock * sk, __be32 saddr, __be32 daddr, struct ip_options_rcu * opt)'/>
<dec f='linux-4.14.y/net/ipv4/ip_output.c' l='182' type='int ip_build_and_send_pkt(struct sk_buff * , const struct sock * , __be32 , __be32 , struct ip_options_rcu * )'/>
<use f='linux-4.14.y/net/ipv4/ip_output.c' l='182' c='ip_build_and_send_pkt'/>
<use f='linux-4.14.y/net/ipv4/ip_output.c' l='182' u='a'/>
<use f='linux-4.14.y/net/ipv4/ip_output.c' l='182' u='a'/>
<doc f='linux-4.14.y/net/ipv4/ip_output.c' l='139'>/*
 *		Add an ip header to a skbuff and send it out.
 *
 */</doc>
<use f='linux-4.14.y/net/ipv4/tcp_ipv4.c' l='878' u='c' c='tcp_v4_send_synack'/>
