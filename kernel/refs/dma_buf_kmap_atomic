<dec f='linux-4.14.y/include/linux/dma-buf.h' l='398' type='void * dma_buf_kmap_atomic(struct dma_buf * , unsigned long )'/>
<def f='linux-4.14.y/drivers/dma-buf/dma-buf.c' l='871' ll='876' type='void * dma_buf_kmap_atomic(struct dma_buf * dmabuf, unsigned long page_num)'/>
<dec f='linux-4.14.y/drivers/dma-buf/dma-buf.c' l='877' type='void * dma_buf_kmap_atomic(struct dma_buf * , unsigned long )'/>
<use f='linux-4.14.y/drivers/dma-buf/dma-buf.c' l='877' c='dma_buf_kmap_atomic'/>
<use f='linux-4.14.y/drivers/dma-buf/dma-buf.c' l='877' u='a'/>
<use f='linux-4.14.y/drivers/dma-buf/dma-buf.c' l='877' u='a'/>
<doc f='linux-4.14.y/drivers/dma-buf/dma-buf.c' l='862'>/**
 * dma_buf_kmap_atomic - Map a page of the buffer object into kernel address
 * space. The same restrictions as for kmap_atomic and friends apply.
 * @dmabuf:	[in]	buffer to map page from.
 * @page_num:	[in]	page in PAGE_SIZE units to map.
 *
 * This call must always succeed, any necessary preparations that might fail
 * need to be done in begin_cpu_access.
 */</doc>
