<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='114' type='int dm_cell_promote_or_release(struct dm_bio_prison * prison, struct dm_bio_prison_cell * cell)'/>
<def f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='273' ll='284' type='int dm_cell_promote_or_release(struct dm_bio_prison * prison, struct dm_bio_prison_cell * cell)'/>
<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' type='int dm_cell_promote_or_release(struct dm_bio_prison * , struct dm_bio_prison_cell * )'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' c='dm_cell_promote_or_release'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' u='a'/>
<doc f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='104'>/*
 * Rather than always releasing the prisoners in a cell, the client may
 * want to promote one of them to be the new holder.  There is a race here
 * though between releasing an empty cell, and other threads adding new
 * inmates.  So this function makes the decision with its lock held.
 *
 * This function can have two outcomes:
 * i) An inmate is promoted to be the holder of the cell (return value of 0).
 * ii) The cell has no inmate for promotion and is released (return value of 1).
 */</doc>
<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='114' type='int dm_cell_promote_or_release(struct dm_bio_prison * prison, struct dm_bio_prison_cell * cell)'/>
<def f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='273' ll='284' type='int dm_cell_promote_or_release(struct dm_bio_prison * prison, struct dm_bio_prison_cell * cell)'/>
<dec f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' type='int dm_cell_promote_or_release(struct dm_bio_prison * , struct dm_bio_prison_cell * )'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' c='dm_cell_promote_or_release'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' u='a'/>
<use f='linux-4.14.y/drivers/md/dm-bio-prison-v1.c' l='285' u='a'/>
<doc f='linux-4.14.y/drivers/md/dm-bio-prison-v1.h' l='104'>/*
 * Rather than always releasing the prisoners in a cell, the client may
 * want to promote one of them to be the new holder.  There is a race here
 * though between releasing an empty cell, and other threads adding new
 * inmates.  So this function makes the decision with its lock held.
 *
 * This function can have two outcomes:
 * i) An inmate is promoted to be the holder of the cell (return value of 0).
 * ii) The cell has no inmate for promotion and is released (return value of 1).
 */</doc>
