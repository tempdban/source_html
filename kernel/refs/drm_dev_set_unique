<dec f='linux-4.18.y/include/drm/drm_drv.h' l='653' type='int drm_dev_set_unique(struct drm_device * dev, const char * name)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='553' u='c' c='drm_dev_init'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='890' ll='896' type='int drm_dev_set_unique(struct drm_device * dev, const char * name)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='897' type='int drm_dev_set_unique(struct drm_device * , const char * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='897' c='drm_dev_set_unique'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='897' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='897' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_drv.c' l='879'>/**
 * drm_dev_set_unique - Set the unique name of a DRM device
 * @dev: device of which to set the unique name
 * @name: unique name
 *
 * Sets the unique name of a DRM device using the specified string. Drivers
 * can use this at driver probe time if the unique name of the devices they
 * drive is static.
 *
 * Return: 0 on success or a negative error code on failure.
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_drm_bus.c' l='75' u='c' c='drm_virtio_init'/>
