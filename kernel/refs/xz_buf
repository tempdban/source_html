<def f='linux-4.14.y/include/linux/xz.h' l='136' ll='144'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/xz.h' l='120'>/**
 * struct xz_buf - Passing input and output buffers to XZ code
 * @in:         Beginning of the input buffer. This may be NULL if and only
 *              if in_pos is equal to in_size.
 * @in_pos:     Current position in the input buffer. This must not exceed
 *              in_size.
 * @in_size:    Size of the input buffer
 * @out:        Beginning of the output buffer. This may be NULL if and only
 *              if out_pos is equal to out_size.
 * @out_pos:    Current position in the output buffer. This must not exceed
 *              out_size.
 * @out_size:   Size of the output buffer
 *
 * Only the contents of the output buffer from out[out_pos] onward, and
 * the variables in_pos and out_pos are modified by the XZ code.
 */</doc>
<mbr r='xz_buf::in' o='0' t='const uint8_t *'/>
<mbr r='xz_buf::in_pos' o='64' t='size_t'/>
<mbr r='xz_buf::in_size' o='128' t='size_t'/>
<mbr r='xz_buf::out' o='192' t='uint8_t *'/>
<mbr r='xz_buf::out_pos' o='256' t='size_t'/>
<mbr r='xz_buf::out_size' o='320' t='size_t'/>
<def f='linux-4.14.y/include/linux/xz.h' l='136' ll='144'/>
<size>48</size>
<doc f='linux-4.14.y/include/linux/xz.h' l='120'>/**
 * struct xz_buf - Passing input and output buffers to XZ code
 * @in:         Beginning of the input buffer. This may be NULL if and only
 *              if in_pos is equal to in_size.
 * @in_pos:     Current position in the input buffer. This must not exceed
 *              in_size.
 * @in_size:    Size of the input buffer
 * @out:        Beginning of the output buffer. This may be NULL if and only
 *              if out_pos is equal to out_size.
 * @out_pos:    Current position in the output buffer. This must not exceed
 *              out_size.
 * @out_size:   Size of the output buffer
 *
 * Only the contents of the output buffer from out[out_pos] onward, and
 * the variables in_pos and out_pos are modified by the XZ code.
 */</doc>
<mbr r='xz_buf::in' o='0' t='const uint8_t *'/>
<mbr r='xz_buf::in_pos' o='64' t='size_t'/>
<mbr r='xz_buf::in_size' o='128' t='size_t'/>
<mbr r='xz_buf::out' o='192' t='uint8_t *'/>
<mbr r='xz_buf::out_pos' o='256' t='size_t'/>
<mbr r='xz_buf::out_size' o='320' t='size_t'/>
