<dec f='linux-4.14.y/security/apparmor/include/resource.h' l='40' type='int aa_task_setrlimit(struct aa_label * label, struct task_struct * task, unsigned int resource, struct rlimit * new_rlim)'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='713' u='c' c='apparmor_task_setrlimit'/>
<def f='linux-4.14.y/security/apparmor/resource.c' l='108' ll='138' type='int aa_task_setrlimit(struct aa_label * label, struct task_struct * task, unsigned int resource, struct rlimit * new_rlim)'/>
<doc f='linux-4.14.y/security/apparmor/resource.c' l='97'>/**
 * aa_task_setrlimit - test permission to set an rlimit
 * @label - label confining the task  (NOT NULL)
 * @task - task the resource is being set on
 * @resource - the resource being set
 * @new_rlim - the new resource limit  (NOT NULL)
 *
 * Control raising the processes hard limit.
 *
 * Returns: 0 or error code if setting resource failed
 */</doc>
<dec f='linux-4.14.y/security/apparmor/include/resource.h' l='40' type='int aa_task_setrlimit(struct aa_label * label, struct task_struct * task, unsigned int resource, struct rlimit * new_rlim)'/>
<use f='linux-4.14.y/security/apparmor/lsm.c' l='713' u='c' c='apparmor_task_setrlimit'/>
<def f='linux-4.14.y/security/apparmor/resource.c' l='108' ll='138' type='int aa_task_setrlimit(struct aa_label * label, struct task_struct * task, unsigned int resource, struct rlimit * new_rlim)'/>
<doc f='linux-4.14.y/security/apparmor/resource.c' l='97'>/**
 * aa_task_setrlimit - test permission to set an rlimit
 * @label - label confining the task  (NOT NULL)
 * @task - task the resource is being set on
 * @resource - the resource being set
 * @new_rlim - the new resource limit  (NOT NULL)
 *
 * Control raising the processes hard limit.
 *
 * Returns: 0 or error code if setting resource failed
 */</doc>
