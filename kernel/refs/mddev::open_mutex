<dec f='linux-4.18.y/drivers/md/md.h' l='388' type='struct mutex'/>
<offset>3648</offset>
<doc f='linux-4.18.y/drivers/md/md.h' l='379'>/* &apos;open_mutex&apos; avoids races between &apos;md_open&apos; and &apos;do_md_stop&apos;, so
	 * that we are never stopping an array while it is open.
	 * &apos;reconfig_mutex&apos; protects all other reconfiguration.
	 * These locks are separate due to conflicting interactions
	 * with bdev-&gt;bd_mutex.
	 * Lock ordering is:
	 *  reconfig_mutex -&gt; bd_mutex : e.g. do_md_run -&gt; revalidate_disk
	 *  bd_mutex -&gt; open_mutex:  e.g. __blkdev_get -&gt; md_open
	 */</doc>
<use f='linux-4.18.y/drivers/md/md.c' l='560' u='a' c='mddev_init'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5361' u='a' c='md_alloc'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5376' u='a' c='md_alloc'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5958' u='a' c='md_set_readonly'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5986' u='a' c='md_set_readonly'/>
<use f='linux-4.18.y/drivers/md/md.c' l='6019' u='a' c='do_md_stop'/>
<use f='linux-4.18.y/drivers/md/md.c' l='6025' u='a' c='do_md_stop'/>
<use f='linux-4.18.y/drivers/md/md.c' l='6049' u='a' c='do_md_stop'/>
<use f='linux-4.18.y/drivers/md/md.c' l='6056' u='a' c='do_md_stop'/>
<use f='linux-4.18.y/drivers/md/md.c' l='7214' u='a' c='md_ioctl'/>
<use f='linux-4.18.y/drivers/md/md.c' l='7216' u='a' c='md_ioctl'/>
<use f='linux-4.18.y/drivers/md/md.c' l='7223' u='a' c='md_ioctl'/>
<use f='linux-4.18.y/drivers/md/md.c' l='7463' u='a' c='md_open'/>
<use f='linux-4.18.y/drivers/md/md.c' l='7467' u='a' c='md_open'/>
<use f='linux-4.18.y/drivers/md/md.c' l='7474' u='a' c='md_open'/>
