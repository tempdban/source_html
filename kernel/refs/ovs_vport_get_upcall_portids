<dec f='linux-4.18.y/net/openvswitch/vport.h' l='52' type='int ovs_vport_get_upcall_portids(const struct vport * , struct sk_buff * )'/>
<use f='linux-4.18.y/net/openvswitch/datapath.c' l='1879' u='c' c='ovs_vport_cmd_fill_info'/>
<def f='linux-4.18.y/net/openvswitch/vport.c' l='388' ll='400' type='int ovs_vport_get_upcall_portids(const struct vport * vport, struct sk_buff * skb)'/>
<doc f='linux-4.18.y/net/openvswitch/vport.c' l='374'>/**
 *	ovs_vport_get_upcall_portids - get the upcall_portids of @vport.
 *
 * @vport: vport from which to retrieve the portids.
 * @skb: sk_buff where portids should be appended.
 *
 * Retrieves the configuration of the given vport, appending the
 * %OVS_VPORT_ATTR_UPCALL_PID attribute which is the array of upcall
 * portids to @skb.
 *
 * Returns 0 if successful, -EMSGSIZE if @skb has insufficient room.
 * If an error occurs, @skb is left unmodified.  Must be called with
 * ovs_mutex or rcu_read_lock.
 */</doc>
