<dec f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='708' type='void * vmw_dma_buffer_map_and_cache(struct vmw_dma_buffer * vbo)'/>
<def f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_dmabuf.c' l='360' ll='376' type='void * vmw_dma_buffer_map_and_cache(struct vmw_dma_buffer * vbo)'/>
<doc f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_dmabuf.c' l='345'>/*
 * vmw_dma_buffer_map_and_cache - Map a buffer object and cache the map
 *
 * @vbo: The buffer object to map
 * Return: A kernel virtual address or NULL if mapping failed.
 *
 * This function maps a buffer object into the kernel address space, or
 * returns the virtual kernel address of an already existing map. The virtual
 * address remains valid as long as the buffer object is pinned or reserved.
 * The cached map is torn down on either
 * 1) Buffer object move
 * 2) Buffer object swapout
 * 3) Buffer object destruction
 *
 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_fb.c' l='200' u='c' c='vmw_fb_dirty_flush'/>
