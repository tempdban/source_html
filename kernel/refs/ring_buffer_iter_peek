<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='132' type='struct ring_buffer_event * ring_buffer_iter_peek(struct ring_buffer_iter * iter, u64 * ts)'/>
<dec f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' type='struct ring_buffer_event * ring_buffer_iter_peek(struct ring_buffer_iter * , u64 * )'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' c='ring_buffer_iter_peek'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' u='a'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' u='a'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3923' ll='3939' type='struct ring_buffer_event * ring_buffer_iter_peek(struct ring_buffer_iter * iter, u64 * ts)'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3915'>/**
 * ring_buffer_iter_peek - peek at the next event to be read
 * @iter: The ring buffer iterator
 * @ts: The timestamp counter of this event.
 *
 * This will return the event that will be read next, but does
 * not increment the iterator.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3068' u='c' c='peek_next_entry'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3213' u='c' c='tracing_iter_reset'/>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='654' u='c' c='get_return_for_leaf'/>
<dec f='linux-4.14.y/include/linux/ring_buffer.h' l='132' type='struct ring_buffer_event * ring_buffer_iter_peek(struct ring_buffer_iter * iter, u64 * ts)'/>
<dec f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' type='struct ring_buffer_event * ring_buffer_iter_peek(struct ring_buffer_iter * , u64 * )'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' c='ring_buffer_iter_peek'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' u='a'/>
<use f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3844' u='a'/>
<def f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3923' ll='3939' type='struct ring_buffer_event * ring_buffer_iter_peek(struct ring_buffer_iter * iter, u64 * ts)'/>
<doc f='linux-4.14.y/kernel/trace/ring_buffer.c' l='3915'>/**
 * ring_buffer_iter_peek - peek at the next event to be read
 * @iter: The ring buffer iterator
 * @ts: The timestamp counter of this event.
 *
 * This will return the event that will be read next, but does
 * not increment the iterator.
 */</doc>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3068' u='c' c='peek_next_entry'/>
<use f='linux-4.14.y/kernel/trace/trace.c' l='3213' u='c' c='tracing_iter_reset'/>
<use f='linux-4.14.y/kernel/trace/trace_functions_graph.c' l='654' u='c' c='get_return_for_leaf'/>
