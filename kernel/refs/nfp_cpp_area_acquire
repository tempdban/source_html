<dec f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='337' type='int nfp_cpp_area_acquire(struct nfp_cpp_area * area)'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='330'>/*
 * Acquire the resources needed to access the NFP CPP area handle
 *
 * @param[in]	area	NFP CPP area handle
 *
 * @return 0 on success, -1 on failure (and set errno accordingly).
 */</doc>
<use f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='216' u='c' c='nfp_cpp_area_alloc_acquire'/>
<def f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='258' ll='269' type='int nfp_cpp_area_acquire(struct nfp_cpp_area * area)'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='251'>/*
 * nfp_cpp_area_acquire - lock down a CPP area for access
 * @area:   CPP area handle
 *
 * Locks down the CPP area for a potential long term activity.  Area
 * must always be locked down before being accessed.
 */</doc>
