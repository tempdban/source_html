<dec f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='883' type='enum drm_mode_status (*)(struct drm_connector *, struct drm_display_mode *)'/>
<offset>128</offset>
<doc f='linux-4.18.y/include/drm/drm_modeset_helper_vtables.h' l='849'>/**
	 * @mode_valid:
	 *
	 * Callback to validate a mode for a connector, irrespective of the
	 * specific display configuration.
	 *
	 * This callback is used by the probe helpers to filter the mode list
	 * (which is usually derived from the EDID data block from the sink).
	 * See e.g. drm_helper_probe_single_connector_modes().
	 *
	 * This function is optional.
	 *
	 * NOTE:
	 *
	 * This only filters the mode list supplied to userspace in the
	 * GETCONNECTOR IOCTL. Compared to &amp;drm_encoder_helper_funcs.mode_valid,
	 * &amp;drm_crtc_helper_funcs.mode_valid and &amp;drm_bridge_funcs.mode_valid,
	 * which are also called by the atomic helpers from
	 * drm_atomic_helper_check_modeset(). This allows userspace to force and
	 * ignore sink constraint (like the pixel clock limits in the screen&apos;s
	 * EDID), which is useful for e.g. testing, or working around a broken
	 * EDID. Any source hardware constraint (which always need to be
	 * enforced) therefore should be checked in one of the above callbacks,
	 * and not this one here.
	 *
	 * To avoid races with concurrent connector state updates, the helper
	 * libraries always call this with the &amp;drm_mode_config.connection_mutex
	 * held. Because of this it&apos;s safe to inspect &amp;drm_connector-&gt;state.
         *
	 * RETURNS:
	 *
	 * Either &amp;drm_mode_status.MODE_OK or one of the failure reasons in &amp;enum
	 * drm_mode_status.
	 */</doc>
<use f='linux-4.18.y/drivers/gpu/drm/bochs/bochs_kms.c' l='222' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='203' u='r' c='drm_connector_mode_valid'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_probe_helper.c' l='206' u='r' c='drm_connector_mode_valid'/>
<use f='linux-4.18.y/drivers/gpu/drm/qxl/qxl_display.c' l='996' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='241' u='w'/>
