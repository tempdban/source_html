<dec f='linux-4.14.y/include/drm/drm_file.h' l='366' type='int drm_release(struct inode * inode, struct file * filp)'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_drv.c' l='74'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_drv.c' l='74'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_drv.c' l='125'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_drv.c' l='125'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='372' ll='448' type='int drm_release(struct inode * inode, struct file * filp)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='449' type='int drm_release(struct inode * , struct file * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='449' c='drm_release'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='449' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='449' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_file.c' l='358'>/**
 * drm_release - release method for DRM file
 * @inode: device inode
 * @filp: file pointer.
 *
 * This function must be used by drivers as their &amp;file_operations.release
 * method. It frees any resources associated with the open file, and calls the
 * &amp;drm_driver.postclose driver callback. If this is the last open file for the
 * DRM device also proceeds to call the &amp;drm_driver.lastclose driver callback.
 *
 * RETURNS:
 *
 * Always succeeds and returns 0.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.c' l='128'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.c' l='128'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='110'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='110'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1514'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1514'/>
