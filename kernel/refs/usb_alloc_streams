<dec f='linux-4.18.y/include/linux/usb.h' l='831' type='int usb_alloc_streams(struct usb_interface * interface, struct usb_host_endpoint ** eps, unsigned int num_eps, unsigned int num_streams, gfp_t mem_flags)'/>
<doc f='linux-4.18.y/include/linux/usb.h' l='830'>/* Sets up a group of bulk endpoints to support multiple stream IDs. */</doc>
<use f='linux-4.18.y/drivers/usb/core/devio.c' l='2301' u='c' c='proc_alloc_streams'/>
<def f='linux-4.18.y/drivers/usb/core/hcd.c' l='2134' ll='2169' type='int usb_alloc_streams(struct usb_interface * interface, struct usb_host_endpoint ** eps, unsigned int num_eps, unsigned int num_streams, gfp_t mem_flags)'/>
<dec f='linux-4.18.y/drivers/usb/core/hcd.c' l='2170' type='int usb_alloc_streams(struct usb_interface * , struct usb_host_endpoint ** , unsigned int , unsigned int , gfp_t )'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2170' c='usb_alloc_streams'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2170' u='a'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='2170' u='a'/>
<doc f='linux-4.18.y/drivers/usb/core/hcd.c' l='2119'>/**
 * usb_alloc_streams - allocate bulk endpoint stream IDs.
 * @interface:		alternate setting that includes all endpoints.
 * @eps:		array of endpoints that need streams.
 * @num_eps:		number of endpoints in the array.
 * @num_streams:	number of streams to allocate.
 * @mem_flags:		flags hcd should use to allocate memory.
 *
 * Sets up a group of bulk endpoints to have @num_streams stream IDs available.
 * Drivers may queue multiple transfers to different stream IDs, which may
 * complete in a different order than they were queued.
 *
 * Return: On success, the number of allocated streams. On failure, a negative
 * error code.
 */</doc>
