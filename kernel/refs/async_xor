<dec f='linux-4.14.y/include/linux/async_tx.h' l='175' type='struct dma_async_tx_descriptor * async_xor(struct page * dest, struct page ** src_list, unsigned int offset, int src_cnt, size_t len, struct async_submit_ctl * submit)'/>
<use f='linux-4.14.y/crypto/async_tx/async_pq.c' l='398' u='c' c='async_syndrome_val'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='192' u='c' c='__2data_recov_4'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='245' u='c' c='__2data_recov_5'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='252' u='c' c='__2data_recov_5'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='267' u='c' c='__2data_recov_5'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='313' u='c' c='__2data_recov_n'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='320' u='c' c='__2data_recov_n'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='335' u='c' c='__2data_recov_n'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='514' u='c' c='async_raid6_datap_recov'/>
<use f='linux-4.14.y/crypto/async_tx/async_raid6_recov.c' l='523' u='c' c='async_raid6_datap_recov'/>
<def f='linux-4.14.y/crypto/async_tx/async_xor.c' l='172' ll='233' type='struct dma_async_tx_descriptor * async_xor(struct page * dest, struct page ** src_list, unsigned int offset, int src_cnt, size_t len, struct async_submit_ctl * submit)'/>
<dec f='linux-4.14.y/crypto/async_tx/async_xor.c' l='234' type='struct dma_async_tx_descriptor * async_xor(struct page * , struct page ** , unsigned int , int , size_t , struct async_submit_ctl * )'/>
<use f='linux-4.14.y/crypto/async_tx/async_xor.c' l='234' c='async_xor'/>
<use f='linux-4.14.y/crypto/async_tx/async_xor.c' l='234' u='a'/>
<use f='linux-4.14.y/crypto/async_tx/async_xor.c' l='234' u='a'/>
<use f='linux-4.14.y/crypto/async_tx/async_xor.c' l='328' u='c' c='async_xor_val'/>
<doc f='linux-4.14.y/crypto/async_tx/async_xor.c' l='151'>/**
 * async_xor - attempt to xor a set of blocks with a dma engine.
 * @dest: destination page
 * @src_list: array of source pages
 * @offset: common src/dst offset to start transaction
 * @src_cnt: number of source pages
 * @len: length in bytes
 * @submit: submission / completion modifiers
 *
 * honored flags: ASYNC_TX_ACK, ASYNC_TX_XOR_ZERO_DST, ASYNC_TX_XOR_DROP_DST
 *
 * xor_blocks always uses the dest as a source so the
 * ASYNC_TX_XOR_ZERO_DST flag must be set to not include dest data in
 * the calculation.  The assumption with dma eninges is that they only
 * use the destination buffer as a source when it is explicity specified
 * in the source list.
 *
 * src_list note: if the dest is also a source it must be at index zero.
 * The contents of this array will be overwritten if a scribble region
 * is not specified.
 */</doc>
<use f='linux-4.14.y/drivers/md/raid5-ppl.c' l='199' u='c' c='ops_run_partial_parity'/>
<use f='linux-4.14.y/drivers/md/raid5-ppl.c' l='589' u='c' c='ppl_xor'/>
<use f='linux-4.14.y/drivers/md/raid5.c' l='1443' u='c' c='ops_run_compute5'/>
<use f='linux-4.14.y/drivers/md/raid5.c' l='1547' u='c' c='ops_run_compute6_1'/>
<use f='linux-4.14.y/drivers/md/raid5.c' l='1633' u='c' c='ops_run_compute6_2'/>
<use f='linux-4.14.y/drivers/md/raid5.c' l='1703' u='c' c='ops_run_prexor5'/>
<use f='linux-4.14.y/drivers/md/raid5.c' l='1924' u='c' c='ops_run_reconstruct5'/>
