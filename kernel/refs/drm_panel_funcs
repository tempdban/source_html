<def f='linux-4.18.y/include/drm/drm_panel.h' l='70' ll='78'/>
<size>48</size>
<doc f='linux-4.18.y/include/drm/drm_panel.h' l='36'>/**
 * struct drm_panel_funcs - perform operations on a given panel
 * @disable: disable panel (turn off back light, etc.)
 * @unprepare: turn off panel
 * @prepare: turn on panel and perform set up
 * @enable: enable panel (turn on back light, etc.)
 * @get_modes: add modes to the connector that the panel is attached to and
 * return the number of modes added
 * @get_timings: copy display timings into the provided array and return
 * the number of display timings available
 *
 * The .prepare() function is typically called before the display controller
 * starts to transmit video data. Panel drivers can use this to turn the panel
 * on and wait for it to become ready. If additional configuration is required
 * (via a control bus such as I2C, SPI or DSI for example) this is a good time
 * to do that.
 *
 * After the display controller has started transmitting video data, it&apos;s safe
 * to call the .enable() function. This will typically enable the backlight to
 * make the image on screen visible. Some panels require a certain amount of
 * time or frames before the image is displayed. This function is responsible
 * for taking this into account before enabling the backlight to avoid visual
 * glitches.
 *
 * Before stopping video transmission from the display controller it can be
 * necessary to turn off the panel to avoid visual glitches. This is done in
 * the .disable() function. Analogously to .enable() this typically involves
 * turning off the backlight and waiting for some time to make sure no image
 * is visible on the panel. It is then safe for the display controller to
 * cease transmission of video data.
 *
 * To save power when no video data is transmitted, a driver can power down
 * the panel. This is the job of the .unprepare() function.
 */</doc>
<mbr r='drm_panel_funcs::disable' o='0' t='int (*)(struct drm_panel *)'/>
<mbr r='drm_panel_funcs::unprepare' o='64' t='int (*)(struct drm_panel *)'/>
<mbr r='drm_panel_funcs::prepare' o='128' t='int (*)(struct drm_panel *)'/>
<mbr r='drm_panel_funcs::enable' o='192' t='int (*)(struct drm_panel *)'/>
<mbr r='drm_panel_funcs::get_modes' o='256' t='int (*)(struct drm_panel *)'/>
<mbr r='drm_panel_funcs::get_timings' o='320' t='int (*)(struct drm_panel *, unsigned int, struct display_timing *)'/>
