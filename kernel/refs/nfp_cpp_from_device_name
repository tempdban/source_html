<dec f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='186' type='struct nfp_cpp * nfp_cpp_from_device_name(struct rte_pci_device * dev, int driver_lock_needed)'/>
<use f='linux-4.18.y/drivers/net/nfp/nfp_net.c' l='3131' u='c' c='nfp_pf_pci_probe'/>
<use f='linux-4.18.y/drivers/net/nfp/nfp_net.c' l='3133' u='c' c='nfp_pf_pci_probe'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='179'>/*
 * Open a NFP CPP handle to a CPP device
 *
 * @param[in]	id	0-based ID for the CPP interface to use
 *
 * @return NFP CPP handle, or NULL on failure (and set errno accordingly).
 */</doc>
<def f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='607' ll='611' type='struct nfp_cpp * nfp_cpp_from_device_name(struct rte_pci_device * dev, int driver_lock_needed)'/>
