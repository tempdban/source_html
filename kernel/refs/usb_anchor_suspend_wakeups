<dec f='linux-4.18.y/include/linux/usb.h' l='1715' type='void usb_anchor_suspend_wakeups(struct usb_anchor * anchor)'/>
<use f='linux-4.18.y/drivers/usb/core/hcd.c' l='1751' u='c' c='__usb_hcd_giveback_urb'/>
<def f='linux-4.18.y/drivers/usb/core/urb.c' l='888' ll='892' type='void usb_anchor_suspend_wakeups(struct usb_anchor * anchor)'/>
<dec f='linux-4.18.y/drivers/usb/core/urb.c' l='893' type='void usb_anchor_suspend_wakeups(struct usb_anchor * )'/>
<use f='linux-4.18.y/drivers/usb/core/urb.c' l='893' c='usb_anchor_suspend_wakeups'/>
<use f='linux-4.18.y/drivers/usb/core/urb.c' l='893' u='a'/>
<use f='linux-4.18.y/drivers/usb/core/urb.c' l='893' u='a'/>
<doc f='linux-4.18.y/drivers/usb/core/urb.c' l='880'>/**
 * usb_anchor_suspend_wakeups
 * @anchor: the anchor you want to suspend wakeups on
 *
 * Call this to stop the last urb being unanchored from waking up any
 * usb_wait_anchor_empty_timeout waiters. This is used in the hcd urb give-
 * back path to delay waking up until after the completion handler has run.
 */</doc>
