<dec f='linux-4.18.y/include/linux/phy.h' l='948' type='int phy_reset_after_clk_enable(struct phy_device * phydev)'/>
<def f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1264' ll='1276' type='int phy_reset_after_clk_enable(struct phy_device * phydev)'/>
<dec f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1277' type='int phy_reset_after_clk_enable(struct phy_device * )'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1277' c='phy_reset_after_clk_enable'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1277' u='a'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1277' u='a'/>
<doc f='linux-4.18.y/drivers/net/phy/phy_device.c' l='1255'>/**
 * phy_reset_after_clk_enable - perform a PHY reset if needed
 * @phydev: target phy_device struct
 *
 * Description: Some PHYs are known to need a reset after their refclk was
 *   enabled. This function evaluates the flags and perform the reset if it&apos;s
 *   needed. Returns &lt; 0 on error, 0 if the phy wasn&apos;t reset and 1 if the phy
 *   was reset.
 */</doc>
