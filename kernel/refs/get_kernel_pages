<dec f='linux-4.18.y/include/linux/mm.h' l='1528' type='int get_kernel_pages(const struct kvec * iov, int nr_pages, int write, struct page ** pages)'/>
<def f='linux-4.18.y/mm/swap.c' l='150' ll='164' type='int get_kernel_pages(const struct kvec * kiov, int nr_segs, int write, struct page ** pages)'/>
<dec f='linux-4.18.y/mm/swap.c' l='165' type='int get_kernel_pages(const struct kvec * , int , int , struct page ** )'/>
<use f='linux-4.18.y/mm/swap.c' l='165' c='get_kernel_pages'/>
<use f='linux-4.18.y/mm/swap.c' l='165' u='a'/>
<use f='linux-4.18.y/mm/swap.c' l='165' u='a'/>
<use f='linux-4.18.y/mm/swap.c' l='185' u='c' c='get_kernel_page'/>
<doc f='linux-4.18.y/mm/swap.c' l='137'>/*
 * get_kernel_pages() - pin kernel pages in memory
 * @kiov:	An array of struct kvec structures
 * @nr_segs:	number of segments to pin
 * @write:	pinning for read/write, currently ignored
 * @pages:	array that receives pointers to the pages pinned.
 *		Should be at least nr_segs long.
 *
 * Returns number of pages pinned. This may be fewer than the number
 * requested. If nr_pages is 0 or negative, returns 0. If no pages
 * were pinned, returns -errno. Each page returned must be released
 * with a put_page() call when it is finished with.
 */</doc>
