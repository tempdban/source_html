<dec f='linux-4.18.y/include/linux/interrupt.h' l='300' type='int irq_set_affinity_notifier(unsigned int irq, struct irq_affinity_notify * notify)'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='3698' u='c' c='i40e_vsi_request_irq_msix'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='3716' u='c' c='i40e_vsi_request_irq_msix'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40e/i40e_main.c' l='4514' u='c' c='i40e_vsi_free_irq'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_main.c' l='501' u='c' c='i40evf_request_traffic_irqs'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_main.c' l='516' u='c' c='i40evf_request_traffic_irqs'/>
<use f='linux-4.18.y/drivers/net/ethernet/intel/i40evf/i40evf_main.c' l='568' u='c' c='i40evf_free_traffic_irqs'/>
<def f='linux-4.18.y/kernel/irq/manage.c' l='334' ll='363' type='int irq_set_affinity_notifier(unsigned int irq, struct irq_affinity_notify * notify)'/>
<dec f='linux-4.18.y/kernel/irq/manage.c' l='364' type='int irq_set_affinity_notifier(unsigned int , struct irq_affinity_notify * )'/>
<use f='linux-4.18.y/kernel/irq/manage.c' l='364' c='irq_set_affinity_notifier'/>
<use f='linux-4.18.y/kernel/irq/manage.c' l='364' u='a'/>
<use f='linux-4.18.y/kernel/irq/manage.c' l='364' u='a'/>
<doc f='linux-4.18.y/kernel/irq/manage.c' l='323'>/**
 *	irq_set_affinity_notifier - control notification of IRQ affinity changes
 *	@irq:		Interrupt for which to enable/disable notification
 *	@notify:	Context for notification, or %NULL to disable
 *			notification.  Function pointers must be initialised;
 *			the other fields will be initialised by this function.
 *
 *	Must be called in process context.  Notification may only be enabled
 *	after the IRQ is allocated and must be disabled before the IRQ is
 *	freed using free_irq().
 */</doc>
<use f='linux-4.18.y/lib/cpu_rmap.c' l='238' u='c' c='free_irq_cpu_rmap'/>
<use f='linux-4.18.y/lib/cpu_rmap.c' l='300' u='c' c='irq_cpu_rmap_add'/>
