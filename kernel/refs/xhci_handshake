<dec f='linux-4.18.y/drivers/usb/host/xhci.h' l='2027' type='int xhci_handshake(void * ptr, u32 mask, u32 done, int usec)'/>
<use f='linux-4.18.y/drivers/usb/host/xhci-ring.c' l='359' u='c' c='xhci_abort_cmd_ring'/>
<def f='linux-4.18.y/drivers/usb/host/xhci.c' l='69' ll='84' type='int xhci_handshake(void * ptr, u32 mask, u32 done, int usec)'/>
<use f='linux-4.18.y/drivers/usb/host/xhci.c' l='119' u='c' c='xhci_halt'/>
<use f='linux-4.18.y/drivers/usb/host/xhci.c' l='148' u='c' c='xhci_start'/>
<use f='linux-4.18.y/drivers/usb/host/xhci.c' l='201' u='c' c='xhci_reset'/>
<use f='linux-4.18.y/drivers/usb/host/xhci.c' l='215' u='c' c='xhci_reset'/>
<use f='linux-4.18.y/drivers/usb/host/xhci.c' l='283' u='c' c='xhci_zero_64b_regs'/>
<doc f='linux-4.18.y/drivers/usb/host/xhci.c' l='56'>/*
 * xhci_handshake - spin reading hc until handshake completes or fails
 * @ptr: address of hc register to be read
 * @mask: bits to look at in result of read
 * @done: value of those bits when handshake succeeds
 * @usec: timeout in microseconds
 *
 * Returns negative errno, or zero on success
 *
 * Success happens when the &quot;mask&quot; bits have the specified value (hardware
 * handshake done).  There are two failure modes:  &quot;usec&quot; have passed (major
 * hardware flakeout), or the register reads as all-ones (hardware removed).
 */</doc>
