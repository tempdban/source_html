<dec f='linux-4.14.y/include/linux/libata.h' l='1859' type='int sata_sff_hardreset(struct ata_link * link, unsigned int * class, unsigned long deadline)'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='57'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='57'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2070' ll='2085' type='int sata_sff_hardreset(struct ata_link * link, unsigned int * class, unsigned long deadline)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2086' type='int sata_sff_hardreset(struct ata_link * , unsigned int * , unsigned long )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2086' c='sata_sff_hardreset'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2086' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2086' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2197' u='r' c='ata_sff_error_handler'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2055'>/**
 *	sata_sff_hardreset - reset host port via SATA phy reset
 *	@link: link to reset
 *	@class: resulting class of attached device
 *	@deadline: deadline jiffies for the operation
 *
 *	SATA phy-reset host port using DET bits of SControl register,
 *	wait for !BSY and classify the attached device.
 *
 *	LOCKING:
 *	Kernel thread context (may sleep)
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
