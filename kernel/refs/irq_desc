<def f='linux-4.14.y/include/linux/irqdesc.h' l='55' ll='106'/>
<size>448</size>
<doc f='linux-4.14.y/include/linux/irqdesc.h' l='20'>/**
 * struct irq_desc - interrupt descriptor
 * @irq_common_data:	per irq and chip data passed down to chip functions
 * @kstat_irqs:		irq stats per cpu
 * @handle_irq:		highlevel irq-events handler
 * @preflow_handler:	handler called before the flow handler (currently used by sparc)
 * @action:		the irq action chain
 * @status:		status information
 * @core_internal_state__do_not_mess_with_it: core internal status information
 * @depth:		disable-depth, for nested irq_disable() calls
 * @wake_depth:		enable depth, for multiple irq_set_irq_wake() callers
 * @irq_count:		stats field to detect stalled irqs
 * @last_unhandled:	aging timer for unhandled count
 * @irqs_unhandled:	stats field for spurious unhandled interrupts
 * @threads_handled:	stats field for deferred spurious detection of threaded handlers
 * @threads_handled_last: comparator field for deferred spurious detection of theraded handlers
 * @lock:		locking for SMP
 * @affinity_hint:	hint to user space for preferred irq affinity
 * @affinity_notify:	context for notification of affinity changes
 * @pending_mask:	pending rebalanced interrupts
 * @threads_oneshot:	bitfield to handle shared oneshot threads
 * @threads_active:	number of irqaction threads currently running
 * @wait_for_threads:	wait queue for sync_irq to wait for threaded handlers
 * @nr_actions:		number of installed actions on this descriptor
 * @no_suspend_depth:	number of irqactions on a irq descriptor with
 *			IRQF_NO_SUSPEND set
 * @force_resume_depth:	number of irqactions on a irq descriptor with
 *			IRQF_FORCE_RESUME set
 * @rcu:		rcu head for delayed free
 * @kobj:		kobject used to represent this struct in sysfs
 * @request_mutex:	mutex to protect request/free before locking desc-&gt;lock
 * @dir:		/proc/irq/ procfs entry
 * @debugfs_file:	dentry for the debugfs file
 * @name:		flow handler name for /proc/interrupts output
 */</doc>
<mbr r='irq_desc::irq_common_data' o='0' t='struct irq_common_data'/>
<mbr r='irq_desc::irq_data' o='320' t='struct irq_data'/>
<mbr r='irq_desc::kstat_irqs' o='768' t='unsigned int *'/>
<mbr r='irq_desc::handle_irq' o='832' t='irq_flow_handler_t'/>
<mbr r='irq_desc::action' o='896' t='struct irqaction *'/>
<mbr r='irq_desc::status_use_accessors' o='960' t='unsigned int'/>
<mbr r='irq_desc::core_internal_state__do_not_mess_with_it' o='992' t='unsigned int'/>
<mbr r='irq_desc::depth' o='1024' t='unsigned int'/>
<mbr r='irq_desc::wake_depth' o='1056' t='unsigned int'/>
<mbr r='irq_desc::irq_count' o='1088' t='unsigned int'/>
<mbr r='irq_desc::last_unhandled' o='1152' t='unsigned long'/>
<mbr r='irq_desc::irqs_unhandled' o='1216' t='unsigned int'/>
<mbr r='irq_desc::threads_handled' o='1248' t='atomic_t'/>
<mbr r='irq_desc::threads_handled_last' o='1280' t='int'/>
<mbr r='irq_desc::lock' o='1312' t='raw_spinlock_t'/>
<mbr r='irq_desc::percpu_enabled' o='1344' t='struct cpumask *'/>
<mbr r='irq_desc::percpu_affinity' o='1408' t='const struct cpumask *'/>
<mbr r='irq_desc::affinity_hint' o='1472' t='const struct cpumask *'/>
<mbr r='irq_desc::affinity_notify' o='1536' t='struct irq_affinity_notify *'/>
<mbr r='irq_desc::pending_mask' o='1600' t='cpumask_var_t'/>
<mbr r='irq_desc::threads_oneshot' o='1664' t='unsigned long'/>
<mbr r='irq_desc::threads_active' o='1728' t='atomic_t'/>
<mbr r='irq_desc::wait_for_threads' o='1792' t='wait_queue_head_t'/>
<mbr r='irq_desc::dir' o='1984' t='struct proc_dir_entry *'/>
<mbr r='irq_desc::rcu' o='2048' t='struct callback_head'/>
<mbr r='irq_desc::kobj' o='2176' t='struct kobject'/>
<mbr r='irq_desc::request_mutex' o='2688' t='struct mutex'/>
<mbr r='irq_desc::parent_irq' o='2944' t='int'/>
<mbr r='irq_desc::owner' o='3008' t='struct module *'/>
<mbr r='irq_desc::name' o='3072' t='const char *'/>
