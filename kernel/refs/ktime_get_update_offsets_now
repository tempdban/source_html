<dec f='linux-4.18.y/kernel/time/timekeeping.h' l='7' type='ktime_t ktime_get_update_offsets_now(unsigned int * cwsseq, ktime_t * offs_real, ktime_t * offs_boot, ktime_t * offs_tai)'/>
<doc f='linux-4.18.y/kernel/time/timekeeping.h' l='4'>/*
 * Internal interfaces for kernel/time/
 */</doc>
<use f='linux-4.18.y/kernel/time/hrtimer.c' l='587' u='c' c='hrtimer_update_base'/>
<def f='linux-4.18.y/kernel/time/timekeeping.c' l='2189' ll='2218' type='ktime_t ktime_get_update_offsets_now(unsigned int * cwsseq, ktime_t * offs_real, ktime_t * offs_boot, ktime_t * offs_tai)'/>
<doc f='linux-4.18.y/kernel/time/timekeeping.c' l='2176'>/**
 * ktime_get_update_offsets_now - hrtimer helper
 * @cwsseq:	pointer to check and store the clock was set sequence number
 * @offs_real:	pointer to storage for monotonic -&gt; realtime offset
 * @offs_boot:	pointer to storage for monotonic -&gt; boottime offset
 * @offs_tai:	pointer to storage for monotonic -&gt; clock tai offset
 *
 * Returns current monotonic time and updates the offsets if the
 * sequence number in @cwsseq and timekeeper.clock_was_set_seq are
 * different.
 *
 * Called from hrtimer_interrupt() or retrigger_next_event()
 */</doc>
