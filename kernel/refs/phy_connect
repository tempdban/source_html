<dec f='linux-4.18.y/include/linux/phy.h' l='936' type='struct phy_device * phy_connect(struct net_device * dev, const char * bus_id, void (*)(struct net_device *) handler, phy_interface_t interface)'/>
<def f='linux-4.18.y/drivers/net/phy/phy_device.c' l='786' ll='810' type='struct phy_device * phy_connect(struct net_device * dev, const char * bus_id, void (*)(struct net_device *) handler, phy_interface_t interface)'/>
<dec f='linux-4.18.y/drivers/net/phy/phy_device.c' l='811' type='struct phy_device * phy_connect(struct net_device * , const char * , void (*)(struct net_device *) , phy_interface_t )'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='811' c='phy_connect'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='811' u='a'/>
<use f='linux-4.18.y/drivers/net/phy/phy_device.c' l='811' u='a'/>
<doc f='linux-4.18.y/drivers/net/phy/phy_device.c' l='771'>/**
 * phy_connect - connect an ethernet device to a PHY device
 * @dev: the network device to connect
 * @bus_id: the id string of the PHY device to connect
 * @handler: callback function for state change notifications
 * @interface: PHY device&apos;s interface
 *
 * Description: Convenience function for connecting ethernet
 *   devices to PHY devices.  The default behavior is for
 *   the PHY infrastructure to handle everything, and only notify
 *   the connected driver when the link status changes.  If you
 *   don&apos;t want, or can&apos;t use the provided functionality, you may
 *   choose to call only the subset of functions which provide
 *   the desired functionality.
 */</doc>
