<dec f='linux-4.14.y/fs/ext4/ext4.h' l='2400' type='int ext4_sync_file(struct file * , loff_t , loff_t , int )'/>
<doc f='linux-4.14.y/fs/ext4/ext4.h' l='2399'>/* fsync.c */</doc>
<use f='linux-4.14.y/fs/ext4/dir.c' l='660'/>
<use f='linux-4.14.y/fs/ext4/dir.c' l='660'/>
<use f='linux-4.14.y/fs/ext4/file.c' l='724'/>
<use f='linux-4.14.y/fs/ext4/file.c' l='724'/>
<def f='linux-4.14.y/fs/ext4/fsync.c' l='95' ll='164' type='int ext4_sync_file(struct file * file, loff_t start, loff_t end, int datasync)'/>
<doc f='linux-4.14.y/fs/ext4/fsync.c' l='83'>/*
 * akpm: A new design for ext4_sync_file().
 *
 * This is only called from sys_fsync(), sys_fdatasync() and sys_msync().
 * There cannot be a transaction open by this task.
 * Another task could have dirtied this inode.  Its data can be in any
 * state in the journalling system.
 *
 * What we do is just kick off a commit and wait on it.  This will snapshot the
 * inode to disk.
 */</doc>
