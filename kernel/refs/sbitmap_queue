<def f='linux-4.18.y/include/linux/sbitmap.h' l='96' ll='136'/>
<size>56</size>
<doc f='linux-4.18.y/include/linux/sbitmap.h' l='87'>/**
 * struct sbitmap_queue - Scalable bitmap with the added ability to wait on free
 * bits.
 *
 * A &amp;struct sbitmap_queue uses multiple wait queues and rolling wakeups to
 * avoid contention on the wait queue spinlock. This ensures that we don&apos;t hit a
 * scalability wall when we run out of free bits and have to start putting tasks
 * to sleep.
 */</doc>
<mbr r='sbitmap_queue::sb' o='0' t='struct sbitmap'/>
<mbr r='sbitmap_queue::alloc_hint' o='192' t='unsigned int *'/>
<mbr r='sbitmap_queue::wake_batch' o='256' t='unsigned int'/>
<mbr r='sbitmap_queue::wake_index' o='288' t='atomic_t'/>
<mbr r='sbitmap_queue::ws' o='320' t='struct sbq_wait_state *'/>
<mbr r='sbitmap_queue::round_robin' o='384' t='bool'/>
<mbr r='sbitmap_queue::min_shallow_depth' o='416' t='unsigned int'/>
