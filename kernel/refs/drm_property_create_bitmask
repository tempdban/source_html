<dec f='linux-4.18.y/include/drm/drm_property.h' l='247' type='struct drm_property * drm_property_create_bitmask(struct drm_device * dev, u32 flags, const char * name, const struct drm_prop_enum_list * props, int num_props, uint64_t supported_bits)'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_blend.c' l='199' u='c' c='drm_plane_create_rotation_property'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='205' ll='234' type='struct drm_property * drm_property_create_bitmask(struct drm_device * dev, u32 flags, const char * name, const struct drm_prop_enum_list * props, int num_props, uint64_t supported_bits)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='235' type='struct drm_property * drm_property_create_bitmask(struct drm_device * , u32 , const char * , const struct drm_prop_enum_list * , int , uint64_t )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='235' c='drm_property_create_bitmask'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='235' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='235' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_property.c' l='185'>/**
 * drm_property_create_bitmask - create a new bitmask property type
 * @dev: drm device
 * @flags: flags specifying the property type
 * @name: name of the property
 * @props: enumeration lists with property bitflags
 * @num_props: size of the @props array
 * @supported_bits: bitmask of all supported enumeration values
 *
 * This creates a new bitmask drm property which can then be attached to a drm
 * object with drm_object_attach_property(). The returned property object must
 * be freed with drm_property_destroy(), which is done automatically when
 * calling drm_mode_config_cleanup().
 *
 * Compared to plain enumeration properties userspace is allowed to set any
 * or&apos;ed together combination of the predefined property bitflag values
 *
 * Returns:
 * A pointer to the newly created property on success, NULL on failure.
 */</doc>
