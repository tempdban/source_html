<def f='linux-4.18.y/security/smack/smack.h' l='69' ll='77'/>
<size>144</size>
<doc f='linux-4.18.y/security/smack/smack.h' l='46'>/*
 * This is the repository for labels seen so that it is
 * not necessary to keep allocating tiny chuncks of memory
 * and so that they can be shared.
 *
 * Labels are never modified in place. Anytime a label
 * is imported (e.g. xattrset on a file) the list is checked
 * for it and it is added if it doesn&apos;t exist. The address
 * is passed out in either case. Entries are added, but
 * never deleted.
 *
 * Since labels are hanging around anyway it doesn&apos;t
 * hurt to maintain a secid for those awkward situations
 * where kernel components that ought to use LSM independent
 * interfaces don&apos;t. The secid should go away when all of
 * these components have been repaired.
 *
 * The cipso value associated with the label gets stored here, too.
 *
 * Keep the access rules for this subject label here so that
 * the entire set of rules does not need to be examined every
 * time.
 */</doc>
<mbr r='smack_known::list' o='0' t='struct list_head'/>
<mbr r='smack_known::smk_hashed' o='128' t='struct hlist_node'/>
<mbr r='smack_known::smk_known' o='256' t='char *'/>
<mbr r='smack_known::smk_secid' o='320' t='u32'/>
<mbr r='smack_known::smk_netlabel' o='384' t='struct netlbl_lsm_secattr'/>
<mbr r='smack_known::smk_rules' o='768' t='struct list_head'/>
<mbr r='smack_known::smk_rules_lock' o='896' t='struct mutex'/>
