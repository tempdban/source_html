<dec f='linux-4.14.y/include/drm/drm_prime.h' l='67' type='int drm_gem_prime_handle_to_fd(struct drm_device * dev, struct drm_file * file_priv, uint32_t handle, uint32_t flags, int * prime_fd)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_prime.c' l='510' ll='594' type='int drm_gem_prime_handle_to_fd(struct drm_device * dev, struct drm_file * file_priv, uint32_t handle, uint32_t flags, int * prime_fd)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_prime.c' l='595' type='int drm_gem_prime_handle_to_fd(struct drm_device * , struct drm_file * , uint32_t , uint32_t , int * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_prime.c' l='595' c='drm_gem_prime_handle_to_fd'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_prime.c' l='595' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_prime.c' l='595' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_prime.c' l='497'>/**
 * drm_gem_prime_handle_to_fd - PRIME export function for GEM drivers
 * @dev: dev to export the buffer from
 * @file_priv: drm file-private structure
 * @handle: buffer handle to export
 * @flags: flags like DRM_CLOEXEC
 * @prime_fd: pointer to storage for the fd id of the create dma-buf
 *
 * This is the PRIME export function which must be used mandatorily by GEM
 * drivers to ensure correct lifetime management of the underlying GEM object.
 * The actual exporting from GEM object to a dma-buf is done through the
 * gem_prime_export driver callback.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.c' l='269'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.c' l='269'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='129'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='129'/>
