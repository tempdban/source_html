<def f='linux-4.18.y/lib/librte_net/rte_net.h' l='188' ll='192' type='int rte_net_intel_cksum_prepare(struct rte_mbuf * m)'/>
<doc f='linux-4.18.y/lib/librte_net/rte_net.h' l='170'>/**
 * Prepare pseudo header checksum
 *
 * This function prepares pseudo header checksum for TSO and non-TSO tcp/udp in
 * provided mbufs packet data.
 *
 * - for non-TSO tcp/udp packets full pseudo-header checksum is counted and set
 *   in packet data,
 * - for TSO the IP payload length is not included in pseudo header.
 *
 * This function expects that used headers are in the first data segment of
 * mbuf, are not fragmented and can be safely modified.
 *
 * @param m
 *   The packet mbuf to be fixed.
 * @return
 *   0 if checksum is initialized properly
 */</doc>
<use f='linux-4.18.y/drivers/net/avf/avf_rxtx.c' l='1723' u='c' c='avf_prep_pkts'/>
<use f='linux-4.18.y/drivers/net/e1000/em_rxtx.c' l='628' u='c' c='eth_em_prep_pkts'/>
<use f='linux-4.18.y/drivers/net/e1000/igb_rxtx.c' l='644' u='c' c='eth_igb_prep_pkts'/>
<use f='linux-4.18.y/drivers/net/enic/enic_rxtx.c' l='671' u='c' c='enic_prep_pkts'/>
<use f='linux-4.18.y/drivers/net/fm10k/fm10k_rxtx.c' l='688' u='c' c='fm10k_prep_pkts'/>
<use f='linux-4.18.y/drivers/net/i40e/i40e_rxtx.c' l='1476' u='c' c='i40e_prep_pkts'/>
<use f='linux-4.18.y/drivers/net/ixgbe/ixgbe_rxtx.c' l='996' u='c' c='ixgbe_prep_pkts'/>
<use f='linux-4.18.y/drivers/net/vmxnet3/vmxnet3_rxtx.c' l='381' u='c' c='vmxnet3_prep_pkts'/>
