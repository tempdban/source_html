<dec f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.h' l='618' type='int vmw_resource_validate(struct vmw_resource * res)'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_execbuf.c' l='662' u='c' c='vmw_resources_validate'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2567' u='c' c='vmw_kms_helper_resource_prepare'/>
<def f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1118' ll='1181' type='int vmw_resource_validate(struct vmw_resource * res)'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1504' u='c' c='vmw_resource_pin'/>
<doc f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_resource.c' l='1107'>/**
 * vmw_resource_validate - Make a resource up-to-date and visible
 *                         to the device.
 *
 * @res:            The resource to make visible to the device.
 *
 * On succesful return, any backup DMA buffer pointed to by @res-&gt;backup will
 * be reserved and validated.
 * On hardware resource shortage, this function will repeatedly evict
 * resources of the same type until the validation succeeds.
 */</doc>
