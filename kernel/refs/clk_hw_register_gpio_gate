<dec f='linux-4.18.y/include/linux/clk-provider.h' l='700' type='struct clk_hw * clk_hw_register_gpio_gate(struct device * dev, const char * name, const char * parent_name, struct gpio_desc * gpiod, unsigned long flags)'/>
<def f='linux-4.18.y/drivers/clk/clk-gpio.c' l='146' ll='154' type='struct clk_hw * clk_hw_register_gpio_gate(struct device * dev, const char * name, const char * parent_name, struct gpio_desc * gpiod, unsigned long flags)'/>
<dec f='linux-4.18.y/drivers/clk/clk-gpio.c' l='155' type='struct clk_hw * clk_hw_register_gpio_gate(struct device * , const char * , const char * , struct gpio_desc * , unsigned long )'/>
<use f='linux-4.18.y/drivers/clk/clk-gpio.c' l='155' c='clk_hw_register_gpio_gate'/>
<use f='linux-4.18.y/drivers/clk/clk-gpio.c' l='155' u='a'/>
<use f='linux-4.18.y/drivers/clk/clk-gpio.c' l='155' u='a'/>
<use f='linux-4.18.y/drivers/clk/clk-gpio.c' l='163' u='c' c='clk_register_gpio_gate'/>
<doc f='linux-4.18.y/drivers/clk/clk-gpio.c' l='137'>/**
 * clk_hw_register_gpio_gate - register a gpio clock gate with the clock
 * framework
 * @dev: device that is registering this clock
 * @name: name of this clock
 * @parent_name: name of this clock&apos;s parent
 * @gpiod: gpio descriptor to gate this clock
 * @flags: clock flags
 */</doc>
