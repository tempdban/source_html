<dec f='linux-4.18.y/include/linux/usb/gadget.h' l='246' type='int usb_ep_dequeue(struct usb_ep * ep, struct usb_request * req)'/>
<use f='linux-4.18.y/drivers/usb/gadget/composite.c' l='2155' u='c' c='composite_dev_cleanup'/>
<use f='linux-4.18.y/drivers/usb/gadget/composite.c' l='2162' u='c' c='composite_dev_cleanup'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_fs.c' l='298' u='c' c='__ffs_ep0_queue_wait'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_fs.c' l='1011' u='c' c='ffs_epfile_io'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_fs.c' l='1083' u='c' c='ffs_aio_cancel_worker'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_mass_storage.c' l='2334' u='c' c='handle_exception'/>
<use f='linux-4.18.y/drivers/usb/gadget/function/f_mass_storage.c' l='2336' u='c' c='handle_exception'/>
<def f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='288' ll='296' type='int usb_ep_dequeue(struct usb_ep * ep, struct usb_request * req)'/>
<dec f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='297' type='int usb_ep_dequeue(struct usb_ep * , struct usb_request * )'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='297' c='usb_ep_dequeue'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='297' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='297' u='a'/>
<doc f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='273'>/**
 * usb_ep_dequeue - dequeues (cancels, unlinks) an I/O request from an endpoint
 * @ep:the endpoint associated with the request
 * @req:the request being canceled
 *
 * If the request is still active on the endpoint, it is dequeued and its
 * completion routine is called (with status -ECONNRESET); else a negative
 * error code is returned. This is guaranteed to happen before the call to
 * usb_ep_dequeue() returns.
 *
 * Note that some hardware can&apos;t clear out write fifos (to unlink the request
 * at the head of the queue) except as part of disconnecting from usb. Such
 * restrictions prevent drivers from supporting configuration changes,
 * even to configuration zero (a &quot;chapter 9&quot; requirement).
 */</doc>
