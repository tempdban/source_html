<def f='linux-4.14.y/include/linux/vfio.h' l='33' ll='45'/>
<size>64</size>
<doc f='linux-4.14.y/include/linux/vfio.h' l='21'>/**
 * struct vfio_device_ops - VFIO bus driver device callbacks
 *
 * @open: Called when userspace creates new file descriptor for device
 * @release: Called when userspace releases file descriptor for device
 * @read: Perform read(2) on device file descriptor
 * @write: Perform write(2) on device file descriptor
 * @ioctl: Perform ioctl(2) on device file descriptor, supporting VFIO_DEVICE_*
 *         operations documented below
 * @mmap: Perform mmap(2) on a region of the device file descriptor
 * @request: Request for the bus driver to release the device
 */</doc>
<mbr r='vfio_device_ops::name' o='0' t='char *'/>
<mbr r='vfio_device_ops::open' o='64' t='int (*)(void *)'/>
<mbr r='vfio_device_ops::release' o='128' t='void (*)(void *)'/>
<mbr r='vfio_device_ops::read' o='192' t='ssize_t (*)(void *, char *, size_t, loff_t *)'/>
<mbr r='vfio_device_ops::write' o='256' t='ssize_t (*)(void *, const char *, size_t, loff_t *)'/>
<mbr r='vfio_device_ops::ioctl' o='320' t='long (*)(void *, unsigned int, unsigned long)'/>
<mbr r='vfio_device_ops::mmap' o='384' t='int (*)(void *, struct vm_area_struct *)'/>
<mbr r='vfio_device_ops::request' o='448' t='void (*)(void *, unsigned int)'/>
