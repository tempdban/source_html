<dec f='linux-4.18.y/include/linux/dcache.h' l='230' type='int d_instantiate_no_diralias(struct dentry * , struct inode * )'/>
<def f='linux-4.18.y/fs/dcache.c' l='1909' ll='1924' type='int d_instantiate_no_diralias(struct dentry * entry, struct inode * inode)'/>
<dec f='linux-4.18.y/fs/dcache.c' l='1925' type='int d_instantiate_no_diralias(struct dentry * , struct inode * )'/>
<use f='linux-4.18.y/fs/dcache.c' l='1925' c='d_instantiate_no_diralias'/>
<use f='linux-4.18.y/fs/dcache.c' l='1925' u='a'/>
<use f='linux-4.18.y/fs/dcache.c' l='1925' u='a'/>
<doc f='linux-4.18.y/fs/dcache.c' l='1900'>/**
 * d_instantiate_no_diralias - instantiate a non-aliased dentry
 * @entry: dentry to complete
 * @inode: inode to attach to this dentry
 *
 * Fill in inode information in the entry.  If a directory alias is found, then
 * return an error (and drop inode).  Together with d_materialise_unique() this
 * guarantees that a directory inode may never have more than one alias.
 */</doc>
<use f='linux-4.18.y/fs/fuse/dir.c' l='574' u='c' c='create_new_entry'/>
