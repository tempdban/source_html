<dec f='linux-4.14.y/include/net/arp.h' l='67' type='struct sk_buff * arp_create(int type, int ptype, __be32 dest_ip, struct net_device * dev, __be32 src_ip, const unsigned char * dest_hw, const unsigned char * src_hw, const unsigned char * target_hw)'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_alb.c' l='459' u='c' c='rlb_update_client'/>
<use f='linux-4.14.y/drivers/net/bonding/bond_main.c' l='2337' u='c' c='bond_arp_send'/>
<use f='linux-4.14.y/net/ipv4/arp.c' l='315' u='c' c='arp_send_dst'/>
<def f='linux-4.14.y/net/ipv4/arp.c' l='525' ll='629' type='struct sk_buff * arp_create(int type, int ptype, __be32 dest_ip, struct net_device * dev, __be32 src_ip, const unsigned char * dest_hw, const unsigned char * src_hw, const unsigned char * target_hw)'/>
<dec f='linux-4.14.y/net/ipv4/arp.c' l='630' type='struct sk_buff * arp_create(int , int , __be32 , struct net_device * , __be32 , const unsigned char * , const unsigned char * , const unsigned char * )'/>
<use f='linux-4.14.y/net/ipv4/arp.c' l='630' c='arp_create'/>
<use f='linux-4.14.y/net/ipv4/arp.c' l='630' u='a'/>
<use f='linux-4.14.y/net/ipv4/arp.c' l='630' u='a'/>
<doc f='linux-4.14.y/net/ipv4/arp.c' l='521'>/*
 *	Create an arp packet. If dest_hw is not set, we create a broadcast
 *	message.
 */</doc>
