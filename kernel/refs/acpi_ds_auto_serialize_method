<dec f='linux-4.14.y/drivers/acpi/acpica/acdispat.h' l='205' type='acpi_status acpi_ds_auto_serialize_method(struct acpi_namespace_node * node, union acpi_operand_object * obj_desc)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/acdispat.h' l='201'>/*
 * dsmethod - Parser/Interpreter interface - control method parsing
 */</doc>
<use f='linux-4.14.y/drivers/acpi/acpica/dsinit.c' l='144' u='c' c='acpi_ds_init_one_object'/>
<def f='linux-4.14.y/drivers/acpi/acpica/dsmethod.c' l='88' ll='138' type='acpi_status acpi_ds_auto_serialize_method(struct acpi_namespace_node * node, union acpi_operand_object * obj_desc)'/>
<doc f='linux-4.14.y/drivers/acpi/acpica/dsmethod.c' l='64'>/*******************************************************************************
 *
 * FUNCTION:    acpi_ds_auto_serialize_method
 *
 * PARAMETERS:  node                        - Namespace Node of the method
 *              obj_desc                    - Method object attached to node
 *
 * RETURN:      Status
 *
 * DESCRIPTION: Parse a control method AML to scan for control methods that
 *              need serialization due to the creation of named objects.
 *
 * NOTE: It is a bit of overkill to mark all such methods serialized, since
 * there is only a problem if the method actually blocks during execution.
 * A blocking operation is, for example, a Sleep() operation, or any access
 * to an operation region. However, it is probably not possible to easily
 * detect whether a method will block or not, so we simply mark all suspicious
 * methods as serialized.
 *
 * NOTE2: This code is essentially a generic routine for parsing a single
 * control method.
 *
 ******************************************************************************/</doc>
