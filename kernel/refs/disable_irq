<dec f='linux-4.18.y/include/linux/interrupt.h' l='213' type='void disable_irq(unsigned int irq)'/>
<use f='linux-4.18.y/include/linux/interrupt.h' l='379' u='c' c='disable_irq_lockdep'/>
<use f='linux-4.18.y/arch/x86/kernel/hpet.c' l='543' u='c' c='hpet_setup_irq'/>
<use f='linux-4.18.y/drivers/ata/libahci.c' l='2564' u='c' c='ahci_host_activate_multi_irqs'/>
<use f='linux-4.18.y/drivers/net/ethernet/amd/xgbe/xgbe-mdio.c' l='1207' u='c' c='__xgbe_phy_config_aneg'/>
<use f='linux-4.18.y/drivers/uio/uio_dmem_genirq.c' l='140' u='c' c='uio_dmem_genirq_irqcontrol'/>
<def f='linux-4.18.y/kernel/irq/manage.c' l='520' ll='524' type='void disable_irq(unsigned int irq)'/>
<dec f='linux-4.18.y/kernel/irq/manage.c' l='525' type='void disable_irq(unsigned int )'/>
<use f='linux-4.18.y/kernel/irq/manage.c' l='525' c='disable_irq'/>
<use f='linux-4.18.y/kernel/irq/manage.c' l='525' u='a'/>
<use f='linux-4.18.y/kernel/irq/manage.c' l='525' u='a'/>
<doc f='linux-4.18.y/kernel/irq/manage.c' l='508'>/**
 *	disable_irq - disable an irq and wait for completion
 *	@irq: Interrupt to disable
 *
 *	Disable the selected interrupt line.  Enables and Disables are
 *	nested.
 *	This function waits for any pending IRQ handlers for this interrupt
 *	to complete before returning. If you use this function while
 *	holding a resource the IRQ handler may need you will deadlock.
 *
 *	This function may be called - with care - from IRQ context.
 */</doc>
