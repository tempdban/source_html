<dec f='linux-4.18.y/include/drm/drm_atomic_helper.h' l='93' type='void drm_atomic_helper_disable_planes_on_crtc(struct drm_crtc_state * old_crtc_state, bool atomic)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2376' ll='2402' type='void drm_atomic_helper_disable_planes_on_crtc(struct drm_crtc_state * old_crtc_state, bool atomic)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2403' type='void drm_atomic_helper_disable_planes_on_crtc(struct drm_crtc_state * , bool )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2403' c='drm_atomic_helper_disable_planes_on_crtc'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2403' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2403' u='a'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_atomic_helper.c' l='2360'>/**
 * drm_atomic_helper_disable_planes_on_crtc - helper to disable CRTC&apos;s planes
 * @old_crtc_state: atomic state object with the old CRTC state
 * @atomic: if set, synchronize with CRTC&apos;s atomic_begin/flush hooks
 *
 * Disables all planes associated with the given CRTC. This can be
 * used for instance in the CRTC helper atomic_disable callback to disable
 * all planes.
 *
 * If the atomic-parameter is set the function calls the CRTC&apos;s
 * atomic_begin hook before and atomic_flush hook after disabling the
 * planes.
 *
 * It is a bug to call this function without having implemented the
 * &amp;drm_plane_helper_funcs.atomic_disable plane hook.
 */</doc>
