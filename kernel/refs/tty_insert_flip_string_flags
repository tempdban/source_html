<dec f='linux-4.14.y/include/linux/tty_flip.h' l='8' type='int tty_insert_flip_string_flags(struct tty_port * port, const unsigned char * chars, const char * flags, size_t size)'/>
<def f='linux-4.14.y/drivers/tty/tty_buffer.c' l='341' ll='361' type='int tty_insert_flip_string_flags(struct tty_port * port, const unsigned char * chars, const char * flags, size_t size)'/>
<dec f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' type='int tty_insert_flip_string_flags(struct tty_port * , const unsigned char * , const char * , size_t )'/>
<use f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' c='tty_insert_flip_string_flags'/>
<use f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' u='a'/>
<use f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' u='a'/>
<doc f='linux-4.14.y/drivers/tty/tty_buffer.c' l='329'>/**
 *	tty_insert_flip_string_flags	-	Add characters to the tty buffer
 *	@port: tty port
 *	@chars: characters
 *	@flags: flag bytes
 *	@size: size
 *
 *	Queue a series of bytes to the tty buffering. For each character
 *	the flags array indicates the status of the character. Returns the
 *	number added.
 */</doc>
<dec f='linux-4.14.y/include/linux/tty_flip.h' l='8' type='int tty_insert_flip_string_flags(struct tty_port * port, const unsigned char * chars, const char * flags, size_t size)'/>
<def f='linux-4.14.y/drivers/tty/tty_buffer.c' l='341' ll='361' type='int tty_insert_flip_string_flags(struct tty_port * port, const unsigned char * chars, const char * flags, size_t size)'/>
<dec f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' type='int tty_insert_flip_string_flags(struct tty_port * , const unsigned char * , const char * , size_t )'/>
<use f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' c='tty_insert_flip_string_flags'/>
<use f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' u='a'/>
<use f='linux-4.14.y/drivers/tty/tty_buffer.c' l='362' u='a'/>
<doc f='linux-4.14.y/drivers/tty/tty_buffer.c' l='329'>/**
 *	tty_insert_flip_string_flags	-	Add characters to the tty buffer
 *	@port: tty port
 *	@chars: characters
 *	@flags: flag bytes
 *	@size: size
 *
 *	Queue a series of bytes to the tty buffering. For each character
 *	the flags array indicates the status of the character. Returns the
 *	number added.
 */</doc>
