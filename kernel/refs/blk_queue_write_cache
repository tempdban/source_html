<dec f='linux-4.14.y/include/linux/blkdev.h' l='1215' type='void blk_queue_write_cache(struct request_queue * q, bool enabled, bool fua)'/>
<def f='linux-4.14.y/block/blk-settings.c' l='892' ll='906' type='void blk_queue_write_cache(struct request_queue * q, bool wc, bool fua)'/>
<dec f='linux-4.14.y/block/blk-settings.c' l='907' type='void blk_queue_write_cache(struct request_queue * , bool , bool )'/>
<use f='linux-4.14.y/block/blk-settings.c' l='907' c='blk_queue_write_cache'/>
<use f='linux-4.14.y/block/blk-settings.c' l='907' u='a'/>
<use f='linux-4.14.y/block/blk-settings.c' l='907' u='a'/>
<doc f='linux-4.14.y/block/blk-settings.c' l='884'>/**
 * blk_queue_write_cache - configure queue&apos;s write cache
 * @q:		the request queue for the device
 * @wc:		write back cache on or off
 * @fua:	device supports FUA writes, if true
 *
 * Tell the block layer about the write cache of @q.
 */</doc>
<use f='linux-4.14.y/drivers/block/loop.c' l='931' u='c' c='loop_set_fd'/>
<use f='linux-4.14.y/drivers/block/virtio_blk.c' l='530' u='c' c='virtblk_update_cache_mode'/>
<use f='linux-4.14.y/drivers/md/dm-table.c' l='1812' u='c' c='dm_table_set_restrictions'/>
<use f='linux-4.14.y/drivers/md/md.c' l='5330' u='c' c='md_alloc'/>
<use f='linux-4.14.y/drivers/scsi/sd.c' l='152' u='c' c='sd_set_flush_flag'/>
