<dec f='linux-4.18.y/include/linux/mempool.h' l='40' type='mempool_t * mempool_create(int min_nr, mempool_alloc_t * alloc_fn, mempool_free_t * free_fn, void * pool_data)'/>
<use f='linux-4.18.y/include/linux/mempool.h' l='69' u='c' c='mempool_create_slab_pool'/>
<use f='linux-4.18.y/include/linux/mempool.h' l='88' u='c' c='mempool_create_kmalloc_pool'/>
<use f='linux-4.18.y/include/linux/mempool.h' l='107' u='c' c='mempool_create_page_pool'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5524' u='c' c='md_run'/>
<use f='linux-4.18.y/drivers/md/md.c' l='5532' u='c' c='md_run'/>
<def f='linux-4.18.y/mm/mempool.c' l='248' ll='253' type='mempool_t * mempool_create(int min_nr, mempool_alloc_t * alloc_fn, mempool_free_t * free_fn, void * pool_data)'/>
<dec f='linux-4.18.y/mm/mempool.c' l='254' type='mempool_t * mempool_create(int , mempool_alloc_t * , mempool_free_t * , void * )'/>
<use f='linux-4.18.y/mm/mempool.c' l='254' c='mempool_create'/>
<use f='linux-4.18.y/mm/mempool.c' l='254' u='a'/>
<use f='linux-4.18.y/mm/mempool.c' l='254' u='a'/>
<doc f='linux-4.18.y/mm/mempool.c' l='234'>/**
 * mempool_create - create a memory pool
 * @min_nr:    the minimum number of elements guaranteed to be
 *             allocated for this pool.
 * @alloc_fn:  user-defined element-allocation function.
 * @free_fn:   user-defined element-freeing function.
 * @pool_data: optional private data available to the user-defined functions.
 *
 * this function creates and allocates a guaranteed size, preallocated
 * memory pool. The pool can be used from the mempool_alloc() and mempool_free()
 * functions. This function might sleep. Both the alloc_fn() and the free_fn()
 * functions might sleep - as long as the mempool_alloc() function is not called
 * from IRQ contexts.
 */</doc>
