<dec f='linux-4.14.y/include/linux/tty.h' l='473' type='struct device * tty_register_device_attr(struct tty_driver * driver, unsigned int index, struct device * device, void * drvdata, const struct attribute_group ** attr_grp)'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='2909' u='c' c='tty_register_device'/>
<def f='linux-4.14.y/drivers/tty/tty_io.c' l='2939' ll='3006' type='struct device * tty_register_device_attr(struct tty_driver * driver, unsigned int index, struct device * device, void * drvdata, const struct attribute_group ** attr_grp)'/>
<dec f='linux-4.14.y/drivers/tty/tty_io.c' l='3007' type='struct device * tty_register_device_attr(struct tty_driver * , unsigned int , struct device * , void * , const struct attribute_group ** )'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='3007' c='tty_register_device_attr'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='3007' u='a'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='3007' u='a'/>
<doc f='linux-4.14.y/drivers/tty/tty_io.c' l='2919'>/**
 *	tty_register_device_attr - register a tty device
 *	@driver: the tty driver that describes the tty device
 *	@index: the index in the tty driver for this tty device
 *	@device: a struct device that is associated with this tty device.
 *		This field is optional, if there is no known struct device
 *		for this tty device it can be set to NULL safely.
 *	@drvdata: Driver data to be set to device.
 *	@attr_grp: Attribute group to be set on device.
 *
 *	Returns a pointer to the struct device for this tty device
 *	(or ERR_PTR(-EFOO) on error).
 *
 *	This call is required to be made to register an individual tty device
 *	if the tty driver&apos;s flags have the TTY_DRIVER_DYNAMIC_DEV bit set.  If
 *	that bit is not set, this function should not be called by a tty
 *	driver.
 *
 *	Locking: ??
 */</doc>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='133' u='c' c='tty_port_register_device_attr'/>
<use f='linux-4.14.y/drivers/tty/tty_port.c' l='165' u='c' c='tty_port_register_device_attr_serdev'/>
