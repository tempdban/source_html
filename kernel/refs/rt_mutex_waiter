<def f='linux-4.18.y/kernel/locking/rtmutex_common.h' l='27' ll='39'/>
<size>80</size>
<doc f='linux-4.18.y/kernel/locking/rtmutex_common.h' l='19'>/*
 * This is the control structure for tasks blocked on a rt_mutex,
 * which is allocated on the kernel stack on of the blocked task.
 *
 * @tree_entry:		pi node to enqueue into the mutex waiters tree
 * @pi_tree_entry:	pi node to enqueue into the mutex owner waiters tree
 * @task:		task reference to the blocked task
 */</doc>
<mbr r='rt_mutex_waiter::tree_entry' o='0' t='struct rb_node'/>
<mbr r='rt_mutex_waiter::pi_tree_entry' o='192' t='struct rb_node'/>
<mbr r='rt_mutex_waiter::task' o='384' t='struct task_struct *'/>
<mbr r='rt_mutex_waiter::lock' o='448' t='struct rt_mutex *'/>
<mbr r='rt_mutex_waiter::prio' o='512' t='int'/>
<mbr r='rt_mutex_waiter::deadline' o='576' t='u64'/>
