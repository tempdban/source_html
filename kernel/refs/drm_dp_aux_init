<dec f='linux-4.18.y/include/drm/drm_dp_helper.h' l='1203' type='void drm_dp_aux_init(struct drm_dp_aux * aux)'/>
<def f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1087' ll='1097' type='void drm_dp_aux_init(struct drm_dp_aux * aux)'/>
<dec f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1098' type='void drm_dp_aux_init(struct drm_dp_aux * )'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1098' c='drm_dp_aux_init'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1098' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1098' u='a'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1113' u='c' c='drm_dp_aux_register'/>
<doc f='linux-4.18.y/drivers/gpu/drm/drm_dp_helper.c' l='1078'>/**
 * drm_dp_aux_init() - minimally initialise an aux channel
 * @aux: DisplayPort AUX channel
 *
 * If you need to use the drm_dp_aux&apos;s i2c adapter prior to registering it
 * with the outside world, call drm_dp_aux_init() first. You must still
 * call drm_dp_aux_register() once the connector has been registered to
 * allow userspace access to the auxiliary DP channel.
 */</doc>
