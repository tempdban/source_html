<dec f='linux-4.14.y/include/linux/regmap.h' l='827' type='int regcache_sync_region(struct regmap * map, unsigned int min, unsigned int max)'/>
<def f='linux-4.14.y/drivers/base/regmap/regcache.c' l='412' ll='453' type='int regcache_sync_region(struct regmap * map, unsigned int min, unsigned int max)'/>
<dec f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' type='int regcache_sync_region(struct regmap * , unsigned int , unsigned int )'/>
<use f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' c='regcache_sync_region'/>
<use f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' u='a'/>
<use f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' u='a'/>
<doc f='linux-4.14.y/drivers/base/regmap/regcache.c' l='400'>/**
 * regcache_sync_region - Sync part  of the register cache with the hardware.
 *
 * @map: map to sync.
 * @min: first register to sync
 * @max: last register to sync
 *
 * Write all non-default register values in the specified region to
 * the hardware.
 *
 * Return a negative value on failure, 0 on success.
 */</doc>
<dec f='linux-4.14.y/include/linux/regmap.h' l='827' type='int regcache_sync_region(struct regmap * map, unsigned int min, unsigned int max)'/>
<def f='linux-4.14.y/drivers/base/regmap/regcache.c' l='412' ll='453' type='int regcache_sync_region(struct regmap * map, unsigned int min, unsigned int max)'/>
<dec f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' type='int regcache_sync_region(struct regmap * , unsigned int , unsigned int )'/>
<use f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' c='regcache_sync_region'/>
<use f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' u='a'/>
<use f='linux-4.14.y/drivers/base/regmap/regcache.c' l='454' u='a'/>
<doc f='linux-4.14.y/drivers/base/regmap/regcache.c' l='400'>/**
 * regcache_sync_region - Sync part  of the register cache with the hardware.
 *
 * @map: map to sync.
 * @min: first register to sync
 * @max: last register to sync
 *
 * Write all non-default register values in the specified region to
 * the hardware.
 *
 * Return a negative value on failure, 0 on success.
 */</doc>
