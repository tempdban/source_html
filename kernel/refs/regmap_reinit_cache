<dec f='linux-4.18.y/include/linux/regmap.h' l='929' type='int regmap_reinit_cache(struct regmap * map, const struct regmap_config * config)'/>
<def f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1278' ll='1296' type='int regmap_reinit_cache(struct regmap * map, const struct regmap_config * config)'/>
<dec f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1297' type='int regmap_reinit_cache(struct regmap * , const struct regmap_config * )'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1297' c='regmap_reinit_cache'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1297' u='a'/>
<use f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1297' u='a'/>
<doc f='linux-4.18.y/drivers/base/regmap/regmap.c' l='1264'>/**
 * regmap_reinit_cache() - Reinitialise the current register cache
 *
 * @map: Register map to operate on.
 * @config: New configuration.  Only the cache data will be used.
 *
 * Discard any existing register cache for the map and initialize a
 * new cache.  This can be used to restore the cache to defaults or to
 * update the cache configuration to reflect runtime discovery of the
 * hardware.
 *
 * No explicit locking is done here, the user needs to ensure that
 * this function will not race with other calls to regmap.
 */</doc>
