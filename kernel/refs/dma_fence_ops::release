<dec f='linux-4.18.y/include/linux/dma-fence.h' l='218' type='void (*)(struct dma_fence *)'/>
<offset>320</offset>
<doc f='linux-4.18.y/include/linux/dma-fence.h' l='210'>/**
	 * @release:
	 *
	 * Called on destruction of fence to release additional resources.
	 * Can be called from irq context.  This callback is optional. If it is
	 * NULL, then dma_fence_free() is instead called as the default
	 * implementation.
	 */</doc>
<use f='linux-4.18.y/drivers/dma-buf/dma-fence-array.c' l='108' u='w'/>
<use f='linux-4.18.y/drivers/dma-buf/dma-fence.c' l='177' u='r' c='dma_fence_release'/>
<use f='linux-4.18.y/drivers/dma-buf/dma-fence.c' l='178' u='r' c='dma_fence_release'/>
<use f='linux-4.18.y/drivers/dma-buf/seqno-fence.c' l='57' u='r' c='seqno_release'/>
<use f='linux-4.18.y/drivers/dma-buf/seqno-fence.c' l='58' u='r' c='seqno_release'/>
<use f='linux-4.18.y/drivers/dma-buf/seqno-fence.c' l='77' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/drm_syncobj.c' l='211' u='w'/>
<use f='linux-4.18.y/drivers/gpu/drm/vmwgfx/vmwgfx_fence.c' l='232' u='w'/>
