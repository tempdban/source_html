<dec f='linux-4.14.y/include/drm/drm_ioctl.h' l='174' type='long drm_ioctl(struct file * filp, unsigned int cmd, unsigned long arg)'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_drv.c' l='75'/>
<use f='linux-4.14.y/drivers/gpu/drm/bochs/bochs_drv.c' l='75'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_drv.c' l='126'/>
<use f='linux-4.14.y/drivers/gpu/drm/cirrus/cirrus_drv.c' l='126'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioc32.c' l='966' u='c' c='drm_compat_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioc32.c' l='970' u='c' c='drm_compat_ioctl'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='758' ll='847' type='long drm_ioctl(struct file * filp, unsigned int cmd, unsigned long arg)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='848' type='long drm_ioctl(struct file * , unsigned int , unsigned long )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='848' c='drm_ioctl'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='848' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='848' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='745'>/**
 * drm_ioctl - ioctl callback implementation for DRM drivers
 * @filp: file this ioctl is called on
 * @cmd: ioctl cmd number
 * @arg: user argument
 *
 * Looks up the ioctl function in the DRM core and the driver dispatch table,
 * stored in &amp;drm_driver.ioctls. It checks for necessary permission by calling
 * drm_ioctl_permit(), and dispatches to the respective function.
 *
 * Returns:
 * Zero on success, negative error code on failure.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.c' l='129'/>
<use f='linux-4.14.y/drivers/gpu/drm/qxl/qxl_drv.c' l='129'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='109'/>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_drv.c' l='109'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c' l='1172' u='a' c='vmw_unlocked_ioctl'/>
