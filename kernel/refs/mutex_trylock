<dec f='linux-4.14.y/include/linux/mutex.h' l='195' type='int mutex_trylock(struct mutex * lock)'/>
<use f='linux-4.14.y/include/linux/mutex.h' l='228' u='c' c='mutex_trylock_recursive'/>
<doc f='linux-4.14.y/include/linux/mutex.h' l='189'>/*
 * NOTE: mutex_trylock() follows the spin_trylock() convention,
 *       not the down_trylock() convention!
 *
 * Returns 1 if the mutex has been acquired successfully, and 0 on contention.
 */</doc>
<use f='linux-4.14.y/include/linux/device.h' l='1090' u='c' c='device_trylock'/>
<use f='linux-4.14.y/drivers/android/binder_alloc.c' l='916' u='c' c='binder_alloc_free_page'/>
<use f='linux-4.14.y/drivers/base/core.c' l='644' u='c' c='lock_device_hotplug_sysfs'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='93' u='c' c='clk_prepare_lock'/>
<use f='linux-4.14.y/include/linux/ww_mutex.h' l='334' u='c' c='ww_mutex_trylock'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_dp_helper.c' l='971' u='c' c='trylock_bus'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_probe_helper.c' l='603' u='c' c='output_poll_execute'/>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_page_alloc.c' l='408' u='c' c='ttm_pool_shrink_scan'/>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c' l='1025' u='c' c='ttm_dma_pool_shrink_scan'/>
<use f='linux-4.14.y/drivers/gpu/drm/ttm/ttm_page_alloc_dma.c' l='1060' u='c' c='ttm_dma_pool_shrink_count'/>
<use f='linux-4.14.y/drivers/md/md.h' l='512' u='c' c='mddev_trylock'/>
<use f='linux-4.14.y/drivers/md/dm-bufio.c' l='199' u='c' c='dm_bufio_trylock'/>
<use f='linux-4.14.y/drivers/md/dm-bufio.c' l='960' u='c' c='__get_memory_limit'/>
<use f='linux-4.14.y/drivers/md/raid5.c' l='6298' u='c' c='raid5d'/>
<use f='linux-4.14.y/drivers/md/raid5.c' l='6805' u='c' c='raid5_cache_scan'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_base.c' l='5728' u='c' c='mpt3sas_base_hard_reset_handler'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_ctl.c' l='2282' u='c' c='_ctl_ioctl_main'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='3285' u='c' c='spi_write_then_read'/>
<use f='linux-4.14.y/drivers/tty/n_tty.c' l='2139' u='c' c='n_tty_read'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='883' u='c' c='tty_write_lock'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/f_fs.c' l='3696' u='c' c='ffs_mutex_lock'/>
<use f='linux-4.14.y/fs/dcache.c' l='2978' u='c' c='__d_unalias'/>
<use f='linux-4.14.y/fs/f2fs/checkpoint.c' l='288' u='c' c='f2fs_write_meta_pages'/>
<use f='linux-4.14.y/fs/f2fs/extent_cache.c' l='625' u='c' c='f2fs_shrink_extent_tree'/>
<use f='linux-4.14.y/fs/f2fs/extent_cache.c' l='651' u='c' c='f2fs_shrink_extent_tree'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1960' u='c' c='f2fs_ioc_gc'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='2001' u='c' c='f2fs_ioc_gc_range'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='2411' u='c' c='f2fs_ioc_flush_device'/>
<use f='linux-4.14.y/fs/f2fs/gc.c' l='79' u='c' c='gc_thread_func'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='2177' u='c' c='try_to_free_nids'/>
<use f='linux-4.14.y/fs/f2fs/shrinker.c' l='55' u='c' c='f2fs_shrink_count'/>
<use f='linux-4.14.y/fs/f2fs/shrinker.c' l='99' u='c' c='f2fs_shrink_scan'/>
<use f='linux-4.14.y/fs/ntfs/mft.c' l='985' u='c' c='ntfs_may_write_mft_record'/>
<use f='linux-4.14.y/fs/ntfs/mft.c' l='1090' u='c' c='ntfs_may_write_mft_record'/>
<use f='linux-4.14.y/kernel/kexec.c' l='230' u='c' c='SYSC_kexec_load'/>
<use f='linux-4.14.y/kernel/kexec_core.c' l='937' u='c' c='__crash_kexec'/>
<use f='linux-4.14.y/kernel/kexec_core.c' l='1112' u='c' c='kernel_kexec'/>
<use f='linux-4.14.y/kernel/kexec_file.c' l='264' u='c' c='SYSC_kexec_file_load'/>
<def f='linux-4.14.y/kernel/locking/mutex.c' l='1177' ll='1185' type='int mutex_trylock(struct mutex * lock)'/>
<dec f='linux-4.14.y/kernel/locking/mutex.c' l='1186' type='int mutex_trylock(struct mutex * )'/>
<use f='linux-4.14.y/kernel/locking/mutex.c' l='1186' c='mutex_trylock'/>
<use f='linux-4.14.y/kernel/locking/mutex.c' l='1186' u='a'/>
<use f='linux-4.14.y/kernel/locking/mutex.c' l='1186' u='a'/>
<doc f='linux-4.14.y/kernel/locking/mutex.c' l='1163'>/**
 * mutex_trylock - try to acquire the mutex, without waiting
 * @lock: the mutex to be acquired
 *
 * Try to acquire the mutex atomically. Returns 1 if the mutex
 * has been acquired successfully, and 0 on contention.
 *
 * NOTE: this function follows the spin_trylock() convention, so
 * it is negated from the down_trylock() return values! Be careful
 * about this when converting semaphore users to mutexes.
 *
 * This function must not be used in interrupt context. The
 * mutex must be released by the same task that acquired it.
 */</doc>
<use f='linux-4.14.y/kernel/rcu/tree_exp.h' l='272' u='c' c='exp_funnel_lock'/>
<use f='linux-4.14.y/kernel/stop_machine.c' l='451' u='c' c='try_stop_cpus'/>
<use f='linux-4.14.y/kernel/stop_machine.c' l='651' u='c' c='stop_machine_from_inactive_cpu'/>
<use f='linux-4.14.y/mm/oom_kill.c' l='1104' u='c' c='pagefault_out_of_memory'/>
<use f='linux-4.14.y/mm/page_alloc.c' l='2493' u='c' c='drain_all_pages'/>
<use f='linux-4.14.y/mm/page_alloc.c' l='3291' u='c' c='__alloc_pages_may_oom'/>
<use f='linux-4.14.y/mm/slab.c' l='4038' u='c' c='cache_reap'/>
<use f='linux-4.14.y/mm/vmalloc.c' l='716' u='c' c='try_purge_vmap_area_lazy'/>
<use f='linux-4.14.y/net/core/rtnetlink.c' l='112' u='c' c='rtnl_trylock'/>
<use f='linux-4.14.y/security/tomoyo/gc.c' l='598' u='c' c='tomoyo_gc_thread'/>
