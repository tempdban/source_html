<dec f='linux-4.14.y/include/linux/bootmem.h' l='170' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<use f='linux-4.14.y/include/linux/bootmem.h' l='244' u='c' c='memblock_free_late'/>
<dec f='linux-4.14.y/include/linux/memblock.h' l='113' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<use f='linux-4.14.y/mm/memblock.c' l='299' u='c' c='memblock_discard'/>
<use f='linux-4.14.y/mm/memblock.c' l='306' u='c' c='memblock_discard'/>
<def f='linux-4.14.y/mm/memblock.c' l='1409' ll='1424' type='void __memblock_free_late(phys_addr_t base, phys_addr_t size)'/>
<doc f='linux-4.14.y/mm/memblock.c' l='1400'>/*
 * __memblock_free_late - free bootmem block pages directly to buddy allocator
 * @addr: phys starting address of the  boot memory block
 * @size: size of the boot memory block in bytes
 *
 * This is only useful when the bootmem allocator has already been torn
 * down, but we are still initializing the system.  Pages are released directly
 * to the buddy allocator, no bootmem metadata is updated because it is gone.
 */</doc>
