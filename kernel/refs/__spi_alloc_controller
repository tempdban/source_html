<dec f='linux-4.18.y/include/linux/spi/spi.h' l='619' type='struct spi_controller * __spi_alloc_controller(struct device * host, unsigned int size, bool slave)'/>
<use f='linux-4.18.y/include/linux/spi/spi.h' l='625' u='c' c='spi_alloc_master'/>
<use f='linux-4.18.y/include/linux/spi/spi.h' l='634' u='c' c='spi_alloc_slave'/>
<doc f='linux-4.18.y/include/linux/spi/spi.h' l='618'>/* the spi driver core manages memory for the spi_controller classdev */</doc>
<def f='linux-4.18.y/drivers/spi/spi.c' l='2006' ll='2031' type='struct spi_controller * __spi_alloc_controller(struct device * dev, unsigned int size, bool slave)'/>
<dec f='linux-4.18.y/drivers/spi/spi.c' l='2032' type='struct spi_controller * __spi_alloc_controller(struct device * , unsigned int , bool )'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2032' c='__spi_alloc_controller'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2032' u='a'/>
<use f='linux-4.18.y/drivers/spi/spi.c' l='2032' u='a'/>
<doc f='linux-4.18.y/drivers/spi/spi.c' l='1983'>/**
 * __spi_alloc_controller - allocate an SPI master or slave controller
 * @dev: the controller, possibly using the platform_bus
 * @size: how much zeroed driver-private data to allocate; the pointer to this
 *	memory is in the driver_data field of the returned device,
 *	accessible with spi_controller_get_devdata().
 * @slave: flag indicating whether to allocate an SPI master (false) or SPI
 *	slave (true) controller
 * Context: can sleep
 *
 * This call is used only by SPI controller drivers, which are the
 * only ones directly touching chip registers.  It&apos;s how they allocate
 * an spi_controller structure, prior to calling spi_register_controller().
 *
 * This must be called from context that can sleep.
 *
 * The caller is responsible for assigning the bus number and initializing the
 * controller&apos;s methods before calling spi_register_controller(); and (after
 * errors adding the device) calling spi_controller_put() to prevent a memory
 * leak.
 *
 * Return: the SPI controller structure on success, else NULL.
 */</doc>
