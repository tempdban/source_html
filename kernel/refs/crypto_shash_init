<def f='linux-4.14.y/include/crypto/hash.h' l='877' ll='885' type='int crypto_shash_init(struct shash_desc * desc)'/>
<doc f='linux-4.14.y/include/crypto/hash.h' l='866'>/**
 * crypto_shash_init() - (re)initialize message digest
 * @desc: operational state handle that is already filled
 *
 * The call (re-)initializes the message digest referenced by the
 * operational state handle. Any potentially existing state created by
 * previous operations is discarded.
 *
 * Return: 0 if the message digest initialization was successful; &lt; 0 if an
 *	   error occurred
 */</doc>
<use f='linux-4.14.y/crypto/drbg.c' l='1623' u='c' c='drbg_kcapi_hash'/>
<use f='linux-4.14.y/crypto/hmac.c' l='82' u='c' c='hmac_setkey'/>
<use f='linux-4.14.y/crypto/hmac.c' l='85' u='c' c='hmac_setkey'/>
<use f='linux-4.14.y/crypto/shash.c' l='180' u='c' c='shash_digest_unaligned'/>
<use f='linux-4.14.y/crypto/shash.c' l='229' u='c' c='shash_async_init'/>
<use f='linux-4.14.y/crypto/shash.c' l='305' u='c' c='shash_ahash_digest'/>
<use f='linux-4.14.y/drivers/md/dm-crypt.c' l='614' u='c' c='crypt_iv_lmk_one'/>
<use f='linux-4.14.y/drivers/md/dm-crypt.c' l='776' u='c' c='crypt_iv_tcw_whitening'/>
<use f='linux-4.14.y/kernel/kexec_file.c' l='558' u='c' c='kexec_calculate_store_digests'/>
<use f='linux-4.14.y/security/apparmor/crypto.c' l='48' u='c' c='aa_calc_hash'/>
<use f='linux-4.14.y/security/apparmor/crypto.c' l='86' u='c' c='aa_calc_profile_hash'/>
