<def f='linux-4.14.y/include/linux/sbitmap.h' l='369' ll='378' type='int sbitmap_queue_get(struct sbitmap_queue * sbq, unsigned int * cpu)'/>
<doc f='linux-4.14.y/include/linux/sbitmap.h' l='360'>/**
 * sbitmap_queue_get() - Try to allocate a free bit from a &amp;struct
 * sbitmap_queue.
 * @sbq: Bitmap queue to allocate from.
 * @cpu: Output parameter; will contain the CPU we ran on (e.g., to be passed to
 *       sbitmap_queue_clear()).
 *
 * Return: Non-negative allocated bit number if successful, -1 otherwise.
 */</doc>
<def f='linux-4.14.y/include/linux/sbitmap.h' l='369' ll='378' type='int sbitmap_queue_get(struct sbitmap_queue * sbq, unsigned int * cpu)'/>
<doc f='linux-4.14.y/include/linux/sbitmap.h' l='360'>/**
 * sbitmap_queue_get() - Try to allocate a free bit from a &amp;struct
 * sbitmap_queue.
 * @sbq: Bitmap queue to allocate from.
 * @cpu: Output parameter; will contain the CPU we ran on (e.g., to be passed to
 *       sbitmap_queue_clear()).
 *
 * Return: Non-negative allocated bit number if successful, -1 otherwise.
 */</doc>
