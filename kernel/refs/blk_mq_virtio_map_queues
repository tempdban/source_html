<dec f='linux-4.14.y/include/linux/blk-mq-virtio.h' l='8' type='int blk_mq_virtio_map_queues(struct blk_mq_tag_set * set, struct virtio_device * vdev, int first_vec)'/>
<def f='linux-4.14.y/block/blk-mq-virtio.c' l='32' ll='53' type='int blk_mq_virtio_map_queues(struct blk_mq_tag_set * set, struct virtio_device * vdev, int first_vec)'/>
<dec f='linux-4.14.y/block/blk-mq-virtio.c' l='54' type='int blk_mq_virtio_map_queues(struct blk_mq_tag_set * , struct virtio_device * , int )'/>
<use f='linux-4.14.y/block/blk-mq-virtio.c' l='54' c='blk_mq_virtio_map_queues'/>
<use f='linux-4.14.y/block/blk-mq-virtio.c' l='54' u='a'/>
<use f='linux-4.14.y/block/blk-mq-virtio.c' l='54' u='a'/>
<doc f='linux-4.14.y/block/blk-mq-virtio.c' l='20'>/**
 * blk_mq_virtio_map_queues - provide a default queue mapping for virtio device
 * @set:	tagset to provide the mapping for
 * @vdev:	virtio device associated with @set.
 * @first_vec:	first interrupt vectors to use for queues (usually 0)
 *
 * This function assumes the virtio device @vdev has at least as many available
 * interrupt vetors as @set has queues.  It will then queuery the vector
 * corresponding to each queue for it&apos;s affinity mask and built queue mapping
 * that maps a queue to the CPUs that have irq affinity for the corresponding
 * vector.
 */</doc>
<use f='linux-4.14.y/drivers/block/virtio_blk.c' l='593' u='c' c='virtblk_map_queues'/>
<use f='linux-4.14.y/drivers/scsi/virtio_scsi.c' l='795' u='c' c='virtscsi_map_queues'/>
<dec f='linux-4.14.y/include/linux/blk-mq-virtio.h' l='8' type='int blk_mq_virtio_map_queues(struct blk_mq_tag_set * set, struct virtio_device * vdev, int first_vec)'/>
<def f='linux-4.14.y/block/blk-mq-virtio.c' l='32' ll='53' type='int blk_mq_virtio_map_queues(struct blk_mq_tag_set * set, struct virtio_device * vdev, int first_vec)'/>
<dec f='linux-4.14.y/block/blk-mq-virtio.c' l='54' type='int blk_mq_virtio_map_queues(struct blk_mq_tag_set * , struct virtio_device * , int )'/>
<use f='linux-4.14.y/block/blk-mq-virtio.c' l='54' c='blk_mq_virtio_map_queues'/>
<use f='linux-4.14.y/block/blk-mq-virtio.c' l='54' u='a'/>
<use f='linux-4.14.y/block/blk-mq-virtio.c' l='54' u='a'/>
<doc f='linux-4.14.y/block/blk-mq-virtio.c' l='20'>/**
 * blk_mq_virtio_map_queues - provide a default queue mapping for virtio device
 * @set:	tagset to provide the mapping for
 * @vdev:	virtio device associated with @set.
 * @first_vec:	first interrupt vectors to use for queues (usually 0)
 *
 * This function assumes the virtio device @vdev has at least as many available
 * interrupt vetors as @set has queues.  It will then queuery the vector
 * corresponding to each queue for it&apos;s affinity mask and built queue mapping
 * that maps a queue to the CPUs that have irq affinity for the corresponding
 * vector.
 */</doc>
<use f='linux-4.14.y/drivers/block/virtio_blk.c' l='593' u='c' c='virtblk_map_queues'/>
<use f='linux-4.14.y/drivers/scsi/virtio_scsi.c' l='795' u='c' c='virtscsi_map_queues'/>
