<dec f='linux-4.18.y/include/net/netfilter/nf_tproxy.h' l='40' type='struct sock * nf_tproxy_handle_time_wait4(struct net * net, struct sk_buff * skb, __be32 laddr, __be16 lport, struct sock * sk)'/>
<def f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='22' ll='51' type='struct sock * nf_tproxy_handle_time_wait4(struct net * net, struct sk_buff * skb, __be32 laddr, __be16 lport, struct sock * sk)'/>
<dec f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='52' type='struct sock * nf_tproxy_handle_time_wait4(struct net * , struct sk_buff * , __be32 , __be16 , struct sock * )'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='52' c='nf_tproxy_handle_time_wait4'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='52' u='a'/>
<use f='linux-4.18.y/net/ipv4/netfilter/nf_tproxy_ipv4.c' l='52' u='a'/>
<doc f='linux-4.18.y/include/net/netfilter/nf_tproxy.h' l='22'>/**
 * nf_tproxy_handle_time_wait4 - handle IPv4 TCP TIME_WAIT reopen redirections
 * @skb:	The skb being processed.
 * @laddr:	IPv4 address to redirect to or zero.
 * @lport:	TCP port to redirect to or zero.
 * @sk:		The TIME_WAIT TCP socket found by the lookup.
 *
 * We have to handle SYN packets arriving to TIME_WAIT sockets
 * differently: instead of reopening the connection we should rather
 * redirect the new connection to the proxy if there&apos;s a listener
 * socket present.
 *
 * nf_tproxy_handle_time_wait4() consumes the socket reference passed in.
 *
 * Returns the listener socket if there&apos;s one, the TIME_WAIT socket if
 * no such listener is found, or NULL if the TCP header is incomplete.
 */</doc>
<use f='linux-4.18.y/net/netfilter/xt_TPROXY.c' l='76' u='c' c='tproxy_tg4'/>
