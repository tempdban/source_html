<dec f='linux-4.14.y/include/linux/hrtimer.h' l='409' type='bool hrtimer_active(const struct hrtimer * timer)'/>
<use f='linux-4.14.y/kernel/sched/core.c' l='242' u='c' c='hrtick_clear'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='220' u='c' c='task_non_contending'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='2454' u='c' c='sched_dl_overflow'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='4016' u='c' c='entity_tick'/>
<use f='linux-4.14.y/kernel/sched/rt.c' l='629' u='c' c='sched_rt_bandwidth_account'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1008' u='c' c='hrtimer_try_to_cancel'/>
<def f='linux-4.14.y/kernel/time/hrtimer.c' l='1143' ll='1160' type='bool hrtimer_active(const struct hrtimer * timer)'/>
<dec f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' type='bool hrtimer_active(const struct hrtimer * )'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' c='hrtimer_active'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' u='a'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' u='a'/>
<doc f='linux-4.14.y/kernel/time/hrtimer.c' l='1136'>/*
 * A timer is active, when it is enqueued into the rbtree or the
 * callback function is running or it&apos;s in the state of being migrated
 * to another cpu.
 *
 * It is important for this function to not return a false negative.
 */</doc>
<use f='linux-4.14.y/kernel/time/itimer.c' l='40' u='c' c='itimer_get_remtime'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2168' u='c' c='tcp_pacing_check'/>
<dec f='linux-4.14.y/include/linux/hrtimer.h' l='409' type='bool hrtimer_active(const struct hrtimer * timer)'/>
<use f='linux-4.14.y/kernel/sched/core.c' l='242' u='c' c='hrtick_clear'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='220' u='c' c='task_non_contending'/>
<use f='linux-4.14.y/kernel/sched/deadline.c' l='2454' u='c' c='sched_dl_overflow'/>
<use f='linux-4.14.y/kernel/sched/fair.c' l='4016' u='c' c='entity_tick'/>
<use f='linux-4.14.y/kernel/sched/rt.c' l='629' u='c' c='sched_rt_bandwidth_account'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1008' u='c' c='hrtimer_try_to_cancel'/>
<def f='linux-4.14.y/kernel/time/hrtimer.c' l='1143' ll='1160' type='bool hrtimer_active(const struct hrtimer * timer)'/>
<dec f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' type='bool hrtimer_active(const struct hrtimer * )'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' c='hrtimer_active'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' u='a'/>
<use f='linux-4.14.y/kernel/time/hrtimer.c' l='1161' u='a'/>
<doc f='linux-4.14.y/kernel/time/hrtimer.c' l='1136'>/*
 * A timer is active, when it is enqueued into the rbtree or the
 * callback function is running or it&apos;s in the state of being migrated
 * to another cpu.
 *
 * It is important for this function to not return a false negative.
 */</doc>
<use f='linux-4.14.y/kernel/time/itimer.c' l='40' u='c' c='itimer_get_remtime'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2168' u='c' c='tcp_pacing_check'/>
