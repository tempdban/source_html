<def f='linux-4.18.y/include/net/netfilter/nf_tables.h' l='108' ll='112' type='void nft_reg_store16(u32 * dreg, u16 val)'/>
<doc f='linux-4.18.y/include/net/netfilter/nf_tables.h' l='101'>/* Store/load an u16 or u8 integer to/from the u32 data register.
 *
 * Note, when using concatenations, register allocation happens at 32-bit
 * level. So for store instruction, pad the rest part with zero to avoid
 * garbage values.
 */</doc>
<use f='linux-4.18.y/net/netfilter/nft_ct.c' l='175' u='c' c='nft_ct_get_eval'/>
<use f='linux-4.18.y/net/netfilter/nft_ct.c' l='194' u='c' c='nft_ct_get_eval'/>
<use f='linux-4.18.y/net/netfilter/nft_ct.c' l='197' u='c' c='nft_ct_get_eval'/>
<use f='linux-4.18.y/net/netfilter/nft_meta.c' l='62' u='c' c='nft_meta_get_eval'/>
<use f='linux-4.18.y/net/netfilter/nft_meta.c' l='101' u='c' c='nft_meta_get_eval'/>
<use f='linux-4.18.y/net/netfilter/nft_meta.c' l='106' u='c' c='nft_meta_get_eval'/>
<use f='linux-4.18.y/net/netfilter/nft_rt.c' l='91' u='c' c='nft_rt_get_eval'/>
