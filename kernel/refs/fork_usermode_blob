<dec f='linux-4.18.y/include/linux/umh.h' l='51' type='int fork_usermode_blob(void * data, size_t len, struct umh_info * info)'/>
<def f='linux-4.18.y/kernel/umh.c' l='481' ll='511' type='int fork_usermode_blob(void * data, size_t len, struct umh_info * info)'/>
<dec f='linux-4.18.y/kernel/umh.c' l='512' type='int fork_usermode_blob(void * , size_t , struct umh_info * )'/>
<use f='linux-4.18.y/kernel/umh.c' l='512' c='fork_usermode_blob'/>
<use f='linux-4.18.y/kernel/umh.c' l='512' u='a'/>
<use f='linux-4.18.y/kernel/umh.c' l='512' u='a'/>
<doc f='linux-4.18.y/kernel/umh.c' l='468'>/**
 * fork_usermode_blob - fork a blob of bytes as a usermode process
 * @data: a blob of bytes that can be do_execv-ed as a file
 * @len: length of the blob
 * @info: information about usermode process (shouldn&apos;t be NULL)
 *
 * Returns either negative error or zero which indicates success
 * in executing a blob of bytes as a usermode process. In such
 * case &apos;struct umh_info *info&apos; is populated with two pipes
 * and a pid of the process. The caller is responsible for health
 * check of the user process, killing it via pid, and closing the
 * pipes when user process is no longer needed.
 */</doc>
<use f='linux-4.18.y/net/bpfilter/bpfilter_kern.c' l='93' u='c' c='load_umh'/>
