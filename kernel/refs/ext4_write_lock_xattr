<def f='linux-4.18.y/fs/ext4/xattr.h' l='139' ll='144' type='void ext4_write_lock_xattr(struct inode * inode, int * save)'/>
<doc f='linux-4.18.y/fs/ext4/xattr.h' l='130'>/*
 * The EXT4_STATE_NO_EXPAND is overloaded and used for two purposes.
 * The first is to signal that there the inline xattrs and data are
 * taking up so much space that we might as well not keep trying to
 * expand it.  The second is that xattr_sem is taken for writing, so
 * we shouldn&apos;t try to recurse into the inode expansion.  For this
 * second case, we need to make sure that we take save and restore the
 * NO_EXPAND state flag appropriately.
 */</doc>
<use f='linux-4.18.y/fs/ext4/inline.c' l='392' u='c' c='ext4_prepare_inline_data'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='569' u='c' c='ext4_convert_inline_data_to_extent'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='747' u='c' c='ext4_write_inline_data_end'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='779' u='c' c='ext4_journalled_write_inline_data'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='1271' u='c' c='ext4_try_add_inline_entry'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='1684' u='c' c='ext4_delete_inline_entry'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='1819' u='c' c='ext4_destroy_inline_data'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='1919' u='c' c='ext4_inline_data_truncate'/>
<use f='linux-4.18.y/fs/ext4/inline.c' l='2021' u='c' c='ext4_convert_inline_data'/>
<use f='linux-4.18.y/fs/ext4/inode.c' l='5904' u='c' c='ext4_expand_extra_isize'/>
<use f='linux-4.18.y/fs/ext4/xattr.c' l='2322' u='c' c='ext4_xattr_set_handle'/>
