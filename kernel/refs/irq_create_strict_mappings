<dec f='linux-4.18.y/include/linux/irqdomain.h' l='397' type='int irq_create_strict_mappings(struct irq_domain * domain, unsigned int irq_base, irq_hw_number_t hwirq_base, int count)'/>
<use f='linux-4.18.y/include/linux/irqdomain.h' l='404' u='c' c='irq_create_identity_mapping'/>
<def f='linux-4.18.y/kernel/irq/irqdomain.c' l='697' ll='711' type='int irq_create_strict_mappings(struct irq_domain * domain, unsigned int irq_base, irq_hw_number_t hwirq_base, int count)'/>
<dec f='linux-4.18.y/kernel/irq/irqdomain.c' l='712' type='int irq_create_strict_mappings(struct irq_domain * , unsigned int , irq_hw_number_t , int )'/>
<use f='linux-4.18.y/kernel/irq/irqdomain.c' l='712' c='irq_create_strict_mappings'/>
<use f='linux-4.18.y/kernel/irq/irqdomain.c' l='712' u='a'/>
<use f='linux-4.18.y/kernel/irq/irqdomain.c' l='712' u='a'/>
<doc f='linux-4.18.y/kernel/irq/irqdomain.c' l='679'>/**
 * irq_create_strict_mappings() - Map a range of hw irqs to fixed linux irqs
 * @domain: domain owning the interrupt range
 * @irq_base: beginning of linux IRQ range
 * @hwirq_base: beginning of hardware IRQ range
 * @count: Number of interrupts to map
 *
 * This routine is used for allocating and mapping a range of hardware
 * irqs to linux irqs where the linux irq numbers are at pre-defined
 * locations. For use by controllers that already have static mappings
 * to insert in to the domain.
 *
 * Non-linear users can use irq_create_identity_mapping() for IRQ-at-a-time
 * domain insertion.
 *
 * 0 is returned upon success, while any failure to establish a static
 * mapping is treated as an error.
 */</doc>
