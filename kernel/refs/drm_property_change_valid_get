<dec f='linux-4.14.y/drivers/gpu/drm/drm_crtc_internal.h' l='84' type='bool drm_property_change_valid_get(struct drm_property * property, uint64_t value, struct drm_mode_object ** ref)'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic.c' l='1902' u='c' c='drm_atomic_set_property'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_mode_object.c' l='403' u='c' c='set_property_legacy'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='855' ll='909' type='bool drm_property_change_valid_get(struct drm_property * property, uint64_t value, struct drm_mode_object ** ref)'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_property.c' l='847'>/* Some properties could refer to dynamic refcnt&apos;d objects, or things that
 * need special locking to handle lifetime issues (ie. to ensure the prop
 * value doesn&apos;t become invalid part way through the property update due to
 * race).  The value returned by reference via &apos;obj&apos; should be passed back
 * to drm_property_change_valid_put() after the property is set (and the
 * object to which the property is attached has a chance to take it&apos;s own
 * reference).
 */</doc>
