<dec f='linux-4.14.y/include/linux/pci.h' l='1513' type='void pci_cfg_access_lock(struct pci_dev * dev)'/>
<def f='linux-4.14.y/drivers/pci/access.c' l='642' ll='651' type='void pci_cfg_access_lock(struct pci_dev * dev)'/>
<dec f='linux-4.14.y/drivers/pci/access.c' l='652' type='void pci_cfg_access_lock(struct pci_dev * )'/>
<use f='linux-4.14.y/drivers/pci/access.c' l='652' c='pci_cfg_access_lock'/>
<use f='linux-4.14.y/drivers/pci/access.c' l='652' u='a'/>
<use f='linux-4.14.y/drivers/pci/access.c' l='652' u='a'/>
<doc f='linux-4.14.y/drivers/pci/access.c' l='634'>/**
 * pci_cfg_access_lock - Lock PCI config reads/writes
 * @dev:	pci device struct
 *
 * When access is locked, any userspace reads or writes to config
 * space and concurrent lock requests will sleep until access is
 * allowed via pci_cfg_access_unlock() again.
 */</doc>
<use f='linux-4.14.y/drivers/pci/pci.c' l='4095' u='c' c='pci_dev_lock'/>
<dec f='linux-4.14.y/include/linux/pci.h' l='1513' type='void pci_cfg_access_lock(struct pci_dev * dev)'/>
<def f='linux-4.14.y/drivers/pci/access.c' l='642' ll='651' type='void pci_cfg_access_lock(struct pci_dev * dev)'/>
<dec f='linux-4.14.y/drivers/pci/access.c' l='652' type='void pci_cfg_access_lock(struct pci_dev * )'/>
<use f='linux-4.14.y/drivers/pci/access.c' l='652' c='pci_cfg_access_lock'/>
<use f='linux-4.14.y/drivers/pci/access.c' l='652' u='a'/>
<use f='linux-4.14.y/drivers/pci/access.c' l='652' u='a'/>
<doc f='linux-4.14.y/drivers/pci/access.c' l='634'>/**
 * pci_cfg_access_lock - Lock PCI config reads/writes
 * @dev:	pci device struct
 *
 * When access is locked, any userspace reads or writes to config
 * space and concurrent lock requests will sleep until access is
 * allowed via pci_cfg_access_unlock() again.
 */</doc>
<use f='linux-4.14.y/drivers/pci/pci.c' l='4095' u='c' c='pci_dev_lock'/>
