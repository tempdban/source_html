<dec f='linux-4.18.y/include/linux/platform_device.h' l='78' type='struct platform_device * platform_device_register_full(const struct platform_device_info * pdevinfo)'/>
<use f='linux-4.18.y/include/linux/platform_device.h' l='111' u='c' c='platform_device_register_resndata'/>
<use f='linux-4.18.y/drivers/acpi/acpi_platform.c' l='120' u='c' c='acpi_create_platform_device'/>
<def f='linux-4.18.y/drivers/base/platform.c' l='503' ll='561' type='struct platform_device * platform_device_register_full(const struct platform_device_info * pdevinfo)'/>
<dec f='linux-4.18.y/drivers/base/platform.c' l='562' type='struct platform_device * platform_device_register_full(const struct platform_device_info * )'/>
<use f='linux-4.18.y/drivers/base/platform.c' l='562' c='platform_device_register_full'/>
<use f='linux-4.18.y/drivers/base/platform.c' l='562' u='a'/>
<use f='linux-4.18.y/drivers/base/platform.c' l='562' u='a'/>
<doc f='linux-4.18.y/drivers/base/platform.c' l='495'>/**
 * platform_device_register_full - add a platform-level device with
 * resources and platform-specific data
 *
 * @pdevinfo: data used to create device
 *
 * Returns &amp;struct platform_device pointer on success, or ERR_PTR() on error.
 */</doc>
