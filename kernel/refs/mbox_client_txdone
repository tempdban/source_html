<dec f='linux-4.14.y/include/linux/mailbox_client.h' l='47' type='void mbox_client_txdone(struct mbox_chan * chan, int r)'/>
<doc f='linux-4.14.y/include/linux/mailbox_client.h' l='47'>/* atomic */</doc>
<use f='linux-4.14.y/drivers/acpi/cppc_acpi.c' l='322' u='c' c='send_pcc_cmd'/>
<def f='linux-4.14.y/drivers/mailbox/mailbox.c' l='192' ll='200' type='void mbox_client_txdone(struct mbox_chan * chan, int r)'/>
<dec f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' type='void mbox_client_txdone(struct mbox_chan * , int )'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' c='mbox_client_txdone'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' u='a'/>
<doc f='linux-4.14.y/drivers/mailbox/mailbox.c' l='183'>/**
 * mbox_client_txdone - The way for a client to run the TX state machine.
 * @chan: Mailbox channel assigned to this client.
 * @r: Success status of last transmission.
 *
 * The client/protocol had received some &apos;ACK&apos; packet and it notifies
 * the API that the last packet was sent successfully. This only works
 * if the controller can&apos;t sense TX-Done.
 */</doc>
<dec f='linux-4.14.y/include/linux/mailbox_client.h' l='47' type='void mbox_client_txdone(struct mbox_chan * chan, int r)'/>
<doc f='linux-4.14.y/include/linux/mailbox_client.h' l='47'>/* atomic */</doc>
<use f='linux-4.14.y/drivers/acpi/cppc_acpi.c' l='322' u='c' c='send_pcc_cmd'/>
<def f='linux-4.14.y/drivers/mailbox/mailbox.c' l='192' ll='200' type='void mbox_client_txdone(struct mbox_chan * chan, int r)'/>
<dec f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' type='void mbox_client_txdone(struct mbox_chan * , int )'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' c='mbox_client_txdone'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' u='a'/>
<use f='linux-4.14.y/drivers/mailbox/mailbox.c' l='201' u='a'/>
<doc f='linux-4.14.y/drivers/mailbox/mailbox.c' l='183'>/**
 * mbox_client_txdone - The way for a client to run the TX state machine.
 * @chan: Mailbox channel assigned to this client.
 * @r: Success status of last transmission.
 *
 * The client/protocol had received some &apos;ACK&apos; packet and it notifies
 * the API that the last packet was sent successfully. This only works
 * if the controller can&apos;t sense TX-Done.
 */</doc>
