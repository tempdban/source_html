<dec f='linux-4.14.y/include/linux/libata.h' l='1870' type='int ata_pci_sff_activate_host(struct ata_host * host, irq_handler_t irq_handler, struct scsi_host_template * sht)'/>
<use f='linux-4.14.y/drivers/ata/ata_piix.c' l='1761' u='c' c='piix_init_one'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2388' ll='2469' type='int ata_pci_sff_activate_host(struct ata_host * host, irq_handler_t irq_handler, struct scsi_host_template * sht)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' type='int ata_pci_sff_activate_host(struct ata_host * , irq_handler_t , struct scsi_host_template * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' c='ata_pci_sff_activate_host'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2526' u='c' c='ata_pci_init_one'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2529' u='c' c='ata_pci_init_one'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2372'>/**
 *	ata_pci_sff_activate_host - start SFF host, request IRQ and register it
 *	@host: target SFF ATA host
 *	@irq_handler: irq_handler used when requesting IRQ(s)
 *	@sht: scsi_host_template to use when registering the host
 *
 *	This is the counterpart of ata_host_activate() for SFF ATA
 *	hosts.  This separate helper is necessary because SFF hosts
 *	use two separate interrupts in legacy mode.
 *
 *	LOCKING:
 *	Inherited from calling layer (may sleep).
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
<dec f='linux-4.14.y/include/linux/libata.h' l='1870' type='int ata_pci_sff_activate_host(struct ata_host * host, irq_handler_t irq_handler, struct scsi_host_template * sht)'/>
<use f='linux-4.14.y/drivers/ata/ata_piix.c' l='1761' u='c' c='piix_init_one'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='2388' ll='2469' type='int ata_pci_sff_activate_host(struct ata_host * host, irq_handler_t irq_handler, struct scsi_host_template * sht)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' type='int ata_pci_sff_activate_host(struct ata_host * , irq_handler_t , struct scsi_host_template * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' c='ata_pci_sff_activate_host'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2470' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2526' u='c' c='ata_pci_init_one'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2529' u='c' c='ata_pci_init_one'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='2372'>/**
 *	ata_pci_sff_activate_host - start SFF host, request IRQ and register it
 *	@host: target SFF ATA host
 *	@irq_handler: irq_handler used when requesting IRQ(s)
 *	@sht: scsi_host_template to use when registering the host
 *
 *	This is the counterpart of ata_host_activate() for SFF ATA
 *	hosts.  This separate helper is necessary because SFF hosts
 *	use two separate interrupts in legacy mode.
 *
 *	LOCKING:
 *	Inherited from calling layer (may sleep).
 *
 *	RETURNS:
 *	0 on success, -errno otherwise.
 */</doc>
