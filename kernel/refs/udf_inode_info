<def f='linux-4.14.y/fs/udf/udf_i.h' l='30' ll='56'/>
<size>736</size>
<doc f='linux-4.14.y/fs/udf/udf_i.h' l='18'>/*
 * The i_data_sem and i_mutex serve for protection of allocation information
 * of a regular files and symlinks. This includes all extents belonging to
 * the file/symlink, a fact whether data are in-inode or in external data
 * blocks, preallocation, goal block information... When extents are read,
 * i_mutex or i_data_sem must be held (for reading is enough in case of
 * i_data_sem). When extents are changed, i_data_sem must be held for writing
 * and also i_mutex must be held.
 *
 * For directories i_mutex is used for all the necessary protection.
 */</doc>
<mbr r='udf_inode_info::i_crtime' o='0' t='struct timespec'/>
<mbr r='udf_inode_info::i_location' o='128' t='struct kernel_lb_addr'/>
<mbr r='udf_inode_info::i_unique' o='192' t='__u64'/>
<mbr r='udf_inode_info::i_lenEAttr' o='256' t='__u32'/>
<mbr r='udf_inode_info::i_lenAlloc' o='288' t='__u32'/>
<mbr r='udf_inode_info::i_lenExtents' o='320' t='__u64'/>
<mbr r='udf_inode_info::i_next_alloc_block' o='384' t='__u32'/>
<mbr r='udf_inode_info::i_next_alloc_goal' o='416' t='__u32'/>
<mbr r='udf_inode_info::i_checkpoint' o='448' t='__u32'/>
<mbr r='udf_inode_info::i_alloc_type' o='480' t='unsigned int'/>
<mbr r='udf_inode_info::i_efe' o='483' t='unsigned int'/>
<mbr r='udf_inode_info::i_use' o='484' t='unsigned int'/>
<mbr r='udf_inode_info::i_strat4096' o='485' t='unsigned int'/>
<mbr r='udf_inode_info::reserved' o='486' t='unsigned int'/>
<mbr r='udf_inode_info::i_ext' o='512' t='union (anonymous union at /home/tempdban/kernel/stable/fs/udf/udf_i.h:46:2)'/>
<mbr r='udf_inode_info::i_data_sem' o='576' t='struct rw_semaphore'/>
<mbr r='udf_inode_info::cached_extent' o='896' t='struct udf_ext_cache'/>
<mbr r='udf_inode_info::i_extent_cache_lock' o='1152' t='spinlock_t'/>
<mbr r='udf_inode_info::vfs_inode' o='1216' t='struct inode'/>
