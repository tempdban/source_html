<dec f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_base.h' l='1300' type='u8 mpt3sas_scsih_event_callback(struct MPT3SAS_ADAPTER * ioc, u8 msix_index, u32 reply)'/>
<use f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_base.c' l='857' u='c' c='_base_async_event'/>
<doc f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_base.h' l='1299'>/* scsih shared API */</doc>
<def f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='7943' ll='8107' type='u8 mpt3sas_scsih_event_callback(struct MPT3SAS_ADAPTER * ioc, u8 msix_index, u32 reply)'/>
<doc f='linux-4.14.y/drivers/scsi/mpt3sas/mpt3sas_scsih.c' l='7930'>/**
 * mpt3sas_scsih_event_callback - firmware event handler (called at ISR time)
 * @ioc: per adapter object
 * @msix_index: MSIX table index supplied by the OS
 * @reply: reply message frame(lower 32bit addr)
 * Context: interrupt.
 *
 * This function merely adds a new work task into ioc-&gt;firmware_event_thread.
 * The tasks are worked from _firmware_event_work in user context.
 *
 * Return 1 meaning mf should be freed from _base_interrupt
 *        0 means the mf is freed from this function.
 */</doc>
