<def f='linux-4.18.y/include/linux/usb.h' l='1258' ll='1263'/>
<size>32</size>
<doc f='linux-4.18.y/include/linux/usb.h' l='1246'>/**
 * struct usb_class_driver - identifies a USB driver that wants to use the USB major number
 * @name: the usb class device name for this driver.  Will show up in sysfs.
 * @devnode: Callback to provide a naming hint for a possible
 *	device node to create.
 * @fops: pointer to the struct file_operations of this driver.
 * @minor_base: the start of the minor range for this driver.
 *
 * This structure is used for the usb_register_dev() and
 * usb_deregister_dev() functions, to consolidate a number of the
 * parameters used for them.
 */</doc>
<mbr r='usb_class_driver::name' o='0' t='char *'/>
<mbr r='usb_class_driver::devnode' o='64' t='char *(*)(struct device *, umode_t *)'/>
<mbr r='usb_class_driver::fops' o='128' t='const struct file_operations *'/>
<mbr r='usb_class_driver::minor_base' o='192' t='int'/>
