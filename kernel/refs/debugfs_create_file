<dec f='linux-4.14.y/include/linux/debugfs.h' l='84' type='struct dentry * debugfs_create_file(const char * name, umode_t mode, struct dentry * parent, void * data, const struct file_operations * fops)'/>
<use f='linux-4.14.y/arch/x86/kvm/debugfs.c' l='48' u='c' c='kvm_arch_create_vcpu_debugfs'/>
<use f='linux-4.14.y/arch/x86/kvm/debugfs.c' l='55' u='c' c='kvm_arch_create_vcpu_debugfs'/>
<use f='linux-4.14.y/arch/x86/kvm/debugfs.c' l='60' u='c' c='kvm_arch_create_vcpu_debugfs'/>
<use f='linux-4.14.y/arch/x86/mm/pat.c' l='1131' u='c' c='pat_memtype_list_init'/>
<use f='linux-4.14.y/arch/x86/mm/pkeys.c' l='209' u='c' c='create_init_pkru_value'/>
<use f='linux-4.14.y/arch/x86/mm/tlb.c' l='746' u='c' c='create_tlb_single_page_flush_ceiling'/>
<use f='linux-4.14.y/block/blk-mq-debugfs.c' l='797' u='c' c='debugfs_create_files'/>
<use f='linux-4.14.y/drivers/base/regmap/regcache-rbtree.c' l='194' u='c' c='rbtree_debugfs_init'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap-debugfs.c' l='566' u='c' c='regmap_debugfs_init'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap-debugfs.c' l='569' u='c' c='regmap_debugfs_init'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap-debugfs.c' l='581' u='c' c='regmap_debugfs_init'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap-debugfs.c' l='583' u='c' c='regmap_debugfs_init'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap-debugfs.c' l='588' u='c' c='regmap_debugfs_init'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap-debugfs.c' l='592' u='c' c='regmap_debugfs_init'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap-debugfs.c' l='602' u='c' c='regmap_debugfs_init'/>
<use f='linux-4.14.y/drivers/char/virtio_console.c' l='1507' u='c' c='add_port'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='2211' u='c' c='clk_debug_create_one'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='2281' u='c' c='clk_debugfs_add_file'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='2307' u='c' c='clk_debug_init'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='2312' u='c' c='clk_debug_init'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='2317' u='c' c='clk_debug_init'/>
<use f='linux-4.14.y/drivers/clk/clk.c' l='2322' u='c' c='clk_debug_init'/>
<use f='linux-4.14.y/drivers/dma-buf/dma-buf.c' l='1168' u='c' c='dma_buf_init_debugfs'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs.c' l='102' u='c' c='drm_debugfs_create_files'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs.c' l='352' u='c' c='drm_debugfs_connector_add'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs.c' l='358' u='c' c='drm_debugfs_connector_add'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='328' u='c' c='drm_debugfs_crtc_crc_add'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_debugfs_crc.c' l='333' u='c' c='drm_debugfs_crtc_crc_add'/>
<use f='linux-4.14.y/drivers/hid/hid-debug.c' l='1234' u='c' c='hid_debug_register'/>
<use f='linux-4.14.y/drivers/hid/hid-debug.c' l='1236' u='c' c='hid_debug_register'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='460' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='466' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='472' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='478' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='484' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='491' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='498' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='507' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/amd/xgbe/xgbe-debugfs.c' l='514' u='c' c='xgbe_debugfs_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='1820' u='c' c='i40e_dbg_pf_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/i40e/i40e_debugfs.c' l='1825' u='c' c='i40e_dbg_pf_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_debugfs.c' l='235' u='c' c='ixgbe_dbg_adapter_init'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_debugfs.c' l='240' u='c' c='ixgbe_dbg_adapter_init'/>
<use f='linux-4.14.y/drivers/platform/x86/pmc_atom.c' l='397' u='c' c='pmc_dbgfs_register'/>
<use f='linux-4.14.y/drivers/platform/x86/pmc_atom.c' l='402' u='c' c='pmc_dbgfs_register'/>
<use f='linux-4.14.y/drivers/platform/x86/pmc_atom.c' l='407' u='c' c='pmc_dbgfs_register'/>
<use f='linux-4.14.y/fs/debugfs/file.c' l='1086' u='c' c='debugfs_create_regset32'/>
<use f='linux-4.14.y/fs/debugfs/file.c' l='1139' u='c' c='debugfs_create_devm_seqfile'/>
<def f='linux-4.14.y/fs/debugfs/inode.c' l='394' ll='403' type='struct dentry * debugfs_create_file(const char * name, umode_t mode, struct dentry * parent, void * data, const struct file_operations * fops)'/>
<dec f='linux-4.14.y/fs/debugfs/inode.c' l='404' type='struct dentry * debugfs_create_file(const char * , umode_t , struct dentry * , void * , const struct file_operations * )'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='404' c='debugfs_create_file'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='404' u='a'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='404' u='a'/>
<use f='linux-4.14.y/fs/debugfs/inode.c' l='477' u='c' c='debugfs_create_file_size'/>
<doc f='linux-4.14.y/fs/debugfs/inode.c' l='368'>/**
 * debugfs_create_file - create a file in the debugfs filesystem
 * @name: a pointer to a string containing the name of the file to create.
 * @mode: the permission that the file should have.
 * @parent: a pointer to the parent dentry for this file.  This should be a
 *          directory dentry if set.  If this parameter is NULL, then the
 *          file will be created in the root of the debugfs filesystem.
 * @data: a pointer to something that the caller will want to get to later
 *        on.  The inode.i_private pointer will point to this value on
 *        the open() call.
 * @fops: a pointer to a struct file_operations that should be used for
 *        this file.
 *
 * This is the basic &quot;create a file&quot; function for debugfs.  It allows for a
 * wide range of flexibility in creating a file, or a directory (if you want
 * to create a directory, the debugfs_create_dir() function is
 * recommended to be used instead.)
 *
 * This function will return a pointer to a dentry if it succeeds.  This
 * pointer must be passed to the debugfs_remove() function when the file is
 * to be removed (no automatic cleanup happens if your module is unloaded,
 * you are responsible here.)  If an error occurs, %NULL will be returned.
 *
 * If debugfs is not enabled in the kernel, the value -%ENODEV will be
 * returned.
 */</doc>
<use f='linux-4.14.y/fs/f2fs/debug.c' l='491' u='c' c='f2fs_create_root_stats'/>
<use f='linux-4.14.y/kernel/power/qos.c' l='596' u='c' c='register_pm_qos_misc'/>
<use f='linux-4.14.y/kernel/sched/debug.c' l='188' u='c' c='sched_init_debug'/>
<use f='linux-4.14.y/kernel/time/timekeeping_debug.c' l='62' u='c' c='tk_debug_sleep_time_init'/>
<use f='linux-4.14.y/mm/backing-dev.c' l='119' u='c' c='bdi_debug_register'/>
<use f='linux-4.14.y/virt/kvm/kvm_main.c' l='600' u='c' c='kvm_create_vm_debugfs'/>
<use f='linux-4.14.y/virt/kvm/kvm_main.c' l='3936' u='c' c='kvm_init_debug'/>
