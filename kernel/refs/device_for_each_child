<dec f='linux-4.14.y/include/linux/device.h' l='1120' type='int device_for_each_child(struct device * dev, void * data, int (*)(struct device *, void *) fn)'/>
<use f='linux-4.14.y/drivers/base/core.c' l='114' u='c' c='device_is_dependent'/>
<use f='linux-4.14.y/drivers/base/core.c' l='143' u='c' c='device_reorder_to_tail'/>
<def f='linux-4.14.y/drivers/base/core.c' l='2123' ll='2138' type='int device_for_each_child(struct device * parent, void * data, int (*)(struct device *, void *) fn)'/>
<dec f='linux-4.14.y/drivers/base/core.c' l='2139' type='int device_for_each_child(struct device * , void * , int (*)(struct device *, void *) )'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2139' c='device_for_each_child'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2139' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2139' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2236' u='c' c='device_check_offline'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2261' u='c' c='device_offline'/>
<doc f='linux-4.14.y/drivers/base/core.c' l='2111'>/**
 * device_for_each_child - device child iterator.
 * @parent: parent struct device.
 * @fn: function to be called for each device.
 * @data: data for the callback.
 *
 * Iterate over @parent&apos;s child devices, and call @fn for each,
 * passing it @data.
 *
 * We check the return of @fn each time. If it returns anything
 * other than 0, we break out and return that value.
 */</doc>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='594' u='c' c='i2c_check_mux_parents'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='609' u='c' c='i2c_check_mux_children'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='626' u='c' c='i2c_check_addr_busy'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1477' u='c' c='i2c_del_adapter'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1478' u='c' c='i2c_del_adapter'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1702' u='c' c='i2c_clients_command'/>
<use f='linux-4.14.y/drivers/pci/pcie/portdrv_core.c' l='447' u='c' c='pcie_port_device_remove'/>
<use f='linux-4.14.y/drivers/pci/pcie/portdrv_pci.c' l='225' u='c' c='pcie_portdrv_err_resume'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='3211' u='c' c='scsi_target_block'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='3237' u='c' c='scsi_target_unblock'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1437' u='c' c='iscsi_destroy_flashnode_sess'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1465' u='c' c='iscsi_destroy_all_flashnode'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1751' u='c' c='iscsi_host_for_each_session'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1835' u='c' c='iscsi_user_scan'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2191' u='c' c='iscsi_remove_session'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='311' u='c' c='sas_remove_children'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='312' u='c' c='sas_remove_children'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_spi.c' l='412' u='c' c='store_spi_revalidate'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='80' u='c' c='shost_to_rport'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='790' u='c' c='srp_remove_host'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2269' u='c' c='spi_unregister_controller'/>
<use f='linux-4.14.y/drivers/virtio/virtio_mmio.c' l='676' u='c' c='vm_cmdline_get'/>
<use f='linux-4.14.y/drivers/virtio/virtio_mmio.c' l='699' u='c' c='vm_unregister_cmdline_devices'/>
<dec f='linux-4.14.y/include/linux/device.h' l='1120' type='int device_for_each_child(struct device * dev, void * data, int (*)(struct device *, void *) fn)'/>
<use f='linux-4.14.y/drivers/base/core.c' l='114' u='c' c='device_is_dependent'/>
<use f='linux-4.14.y/drivers/base/core.c' l='143' u='c' c='device_reorder_to_tail'/>
<def f='linux-4.14.y/drivers/base/core.c' l='2123' ll='2138' type='int device_for_each_child(struct device * parent, void * data, int (*)(struct device *, void *) fn)'/>
<dec f='linux-4.14.y/drivers/base/core.c' l='2139' type='int device_for_each_child(struct device * , void * , int (*)(struct device *, void *) )'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2139' c='device_for_each_child'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2139' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2139' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2236' u='c' c='device_check_offline'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2261' u='c' c='device_offline'/>
<doc f='linux-4.14.y/drivers/base/core.c' l='2111'>/**
 * device_for_each_child - device child iterator.
 * @parent: parent struct device.
 * @fn: function to be called for each device.
 * @data: data for the callback.
 *
 * Iterate over @parent&apos;s child devices, and call @fn for each,
 * passing it @data.
 *
 * We check the return of @fn each time. If it returns anything
 * other than 0, we break out and return that value.
 */</doc>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='594' u='c' c='i2c_check_mux_parents'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='609' u='c' c='i2c_check_mux_children'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='626' u='c' c='i2c_check_addr_busy'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1477' u='c' c='i2c_del_adapter'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1478' u='c' c='i2c_del_adapter'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1702' u='c' c='i2c_clients_command'/>
<use f='linux-4.14.y/drivers/pci/pcie/portdrv_core.c' l='447' u='c' c='pcie_port_device_remove'/>
<use f='linux-4.14.y/drivers/pci/pcie/portdrv_pci.c' l='225' u='c' c='pcie_portdrv_err_resume'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='3211' u='c' c='scsi_target_block'/>
<use f='linux-4.14.y/drivers/scsi/scsi_lib.c' l='3237' u='c' c='scsi_target_unblock'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1437' u='c' c='iscsi_destroy_flashnode_sess'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1465' u='c' c='iscsi_destroy_all_flashnode'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1751' u='c' c='iscsi_host_for_each_session'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1835' u='c' c='iscsi_user_scan'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2191' u='c' c='iscsi_remove_session'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='311' u='c' c='sas_remove_children'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_sas.c' l='312' u='c' c='sas_remove_children'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_spi.c' l='412' u='c' c='store_spi_revalidate'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='80' u='c' c='shost_to_rport'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='790' u='c' c='srp_remove_host'/>
<use f='linux-4.14.y/drivers/spi/spi.c' l='2269' u='c' c='spi_unregister_controller'/>
<use f='linux-4.14.y/drivers/virtio/virtio_mmio.c' l='676' u='c' c='vm_cmdline_get'/>
<use f='linux-4.14.y/drivers/virtio/virtio_mmio.c' l='699' u='c' c='vm_unregister_cmdline_devices'/>
