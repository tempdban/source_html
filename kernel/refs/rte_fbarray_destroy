<dec f='linux-4.18.y/lib/librte_eal/common/include/rte_fbarray.h' l='122' type='int rte_fbarray_destroy(struct rte_fbarray * arr)'/>
<doc f='linux-4.18.y/lib/librte_eal/common/include/rte_fbarray.h' l='104'>/**
 * Deallocate resources for an already allocated and correctly set up
 * ``rte_fbarray`` structure, and remove the underlying file.
 *
 * Call this function to deallocate all resources associated with an
 * ``rte_fbarray`` structure within the current process. This will also
 * zero-fill data pointed to by ``arr`` pointer and remove the underlying file
 * backing the data, so it is expected that by the time this function is called,
 * all other processes have detached from this ``rte_fbarray``.
 *
 * @param arr
 *   Valid pointer to allocated and correctly set up ``rte_fbarray`` structure.
 *
 * @return
 *  - 0 on success.
 *  - -1 on failure, with ``rte_errno`` indicating reason for failure.
 */</doc>
<def f='linux-4.18.y/lib/librte_eal/common/eal_common_fbarray.c' l='871' ll='906' type='int rte_fbarray_destroy(struct rte_fbarray * arr)'/>
<use f='linux-4.18.y/lib/librte_eal/linuxapp/eal/eal_memory.c' l='805' u='c' c='free_memseg_list'/>
<use f='linux-4.18.y/lib/librte_eal/linuxapp/eal/eal_memory.c' l='1623' u='c' c='eal_legacy_hugepage_init'/>
