<dec f='linux-4.14.y/include/drm/drm_ioctl.h' l='186' type='int drm_invalid_op(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='426' ll='430' type='int drm_invalid_op(struct drm_device * dev, void * data, struct drm_file * file_priv)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='431' type='int drm_invalid_op(struct drm_device * , void * , struct drm_file * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='431' c='drm_invalid_op'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='431' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='431' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='553'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='553'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='553'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='553'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_ioctl.c' l='411'>/**
 * drm_invalid_op - DRM invalid ioctl implemntation
 * @dev: DRM device for the ioctl
 * @data: data pointer for the ioctl
 * @file_priv: DRM file for the ioctl call
 *
 * This no-op implementation for drm ioctls is useful for deprecated
 * functionality where we really don&apos;t want to allow userspace to call the ioctl
 * any more. This is the case for old ums interfaces for drivers that
 * transitioned to kms gradually and so kept the old legacy tables around. This
 * only applies to radeon and i915 kms drivers, other drivers shouldn&apos;t need to
 * use this function.
 *
 * Always fails with a return value of -EINVAL.
 */</doc>
