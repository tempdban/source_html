<dec f='linux-4.18.y/kernel/workqueue.c' l='218' type='struct work_struct'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='1090' u='a' c='put_pwq'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='3489' u='r' c='pwq_unbound_release_workfn'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='3579' u='a' c='init_pwq'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='3579' u='a' c='init_pwq'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='3579' u='a' c='init_pwq'/>
<use f='linux-4.18.y/kernel/workqueue.c' l='3579' u='a' c='init_pwq'/>
<offset>1152</offset>
<doc f='linux-4.18.y/kernel/workqueue.c' l='212'>/*
	 * Release of unbound pwq is punted to system_wq.  See put_pwq()
	 * and pwq_unbound_release_workfn() for details.  pool_workqueue
	 * itself is also sched-RCU protected so that the first pwq can be
	 * determined without grabbing wq-&gt;mutex.
	 */</doc>
