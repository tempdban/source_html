<dec f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='429' type='int nfp_cpp_area_check_range(struct nfp_cpp_area * area, unsigned long long offset, unsigned long size)'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cpp.h' l='420'>/*
 * Verify that IO can be performed on an offset in an area
 *
 * @param[in]	area	NFP CPP area handle
 * @param[in]	offset	Offset into the area
 * @param[in]	size	Size of region to validate
 *
 * @return 0 on success, -1 on failure (and set errno accordingly).
 */</doc>
<def f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='372' ll='380' type='int nfp_cpp_area_check_range(struct nfp_cpp_area * area, unsigned long long offset, unsigned long length)'/>
<doc f='linux-4.18.y/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='362'>/*
 * nfp_cpp_area_check_range - check if address range fits in CPP area
 *
 * @area:   CPP area handle
 * @offset: offset into CPP area
 * @length: size of address range in bytes
 *
 * Check if address range fits within CPP area.  Return 0 if area fits
 * or -1 on error.
 */</doc>
