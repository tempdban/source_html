<def f='linux-4.14.y/include/net/rtnetlink.h' l='138' ll='156'/>
<size>72</size>
<doc f='linux-4.14.y/include/net/rtnetlink.h' l='124'>/**
 * 	struct rtnl_af_ops - rtnetlink address family operations
 *
 *	@list: Used internally
 * 	@family: Address family
 * 	@fill_link_af: Function to fill IFLA_AF_SPEC with address family
 * 		       specific netlink attributes.
 * 	@get_link_af_size: Function to calculate size of address family specific
 * 			   netlink attributes.
 *	@validate_link_af: Validate a IFLA_AF_SPEC attribute, must check attr
 *			   for invalid configuration settings.
 * 	@set_link_af: Function to parse a IFLA_AF_SPEC attribute and modify
 *		      net_device accordingly.
 */</doc>
<mbr r='rtnl_af_ops::list' o='0' t='struct list_head'/>
<mbr r='rtnl_af_ops::family' o='128' t='int'/>
<mbr r='rtnl_af_ops::fill_link_af' o='192' t='int (*)(struct sk_buff *, const struct net_device *, u32)'/>
<mbr r='rtnl_af_ops::get_link_af_size' o='256' t='size_t (*)(const struct net_device *, u32)'/>
<mbr r='rtnl_af_ops::validate_link_af' o='320' t='int (*)(const struct net_device *, const struct nlattr *)'/>
<mbr r='rtnl_af_ops::set_link_af' o='384' t='int (*)(struct net_device *, const struct nlattr *)'/>
<mbr r='rtnl_af_ops::fill_stats_af' o='448' t='int (*)(struct sk_buff *, const struct net_device *)'/>
<mbr r='rtnl_af_ops::get_stats_af_size' o='512' t='size_t (*)(const struct net_device *)'/>
<def f='linux-4.14.y/include/net/rtnetlink.h' l='138' ll='156'/>
<size>72</size>
<doc f='linux-4.14.y/include/net/rtnetlink.h' l='124'>/**
 * 	struct rtnl_af_ops - rtnetlink address family operations
 *
 *	@list: Used internally
 * 	@family: Address family
 * 	@fill_link_af: Function to fill IFLA_AF_SPEC with address family
 * 		       specific netlink attributes.
 * 	@get_link_af_size: Function to calculate size of address family specific
 * 			   netlink attributes.
 *	@validate_link_af: Validate a IFLA_AF_SPEC attribute, must check attr
 *			   for invalid configuration settings.
 * 	@set_link_af: Function to parse a IFLA_AF_SPEC attribute and modify
 *		      net_device accordingly.
 */</doc>
<mbr r='rtnl_af_ops::list' o='0' t='struct list_head'/>
<mbr r='rtnl_af_ops::family' o='128' t='int'/>
<mbr r='rtnl_af_ops::fill_link_af' o='192' t='int (*)(struct sk_buff *, const struct net_device *, u32)'/>
<mbr r='rtnl_af_ops::get_link_af_size' o='256' t='size_t (*)(const struct net_device *, u32)'/>
<mbr r='rtnl_af_ops::validate_link_af' o='320' t='int (*)(const struct net_device *, const struct nlattr *)'/>
<mbr r='rtnl_af_ops::set_link_af' o='384' t='int (*)(struct net_device *, const struct nlattr *)'/>
<mbr r='rtnl_af_ops::fill_stats_af' o='448' t='int (*)(struct sk_buff *, const struct net_device *)'/>
<mbr r='rtnl_af_ops::get_stats_af_size' o='512' t='size_t (*)(const struct net_device *)'/>
