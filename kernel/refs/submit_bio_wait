<dec f='linux-4.18.y/include/linux/bio.h' l='471' type='int submit_bio_wait(struct bio * bio)'/>
<def f='linux-4.18.y/block/bio.c' l='997' ll='1008' type='int submit_bio_wait(struct bio * bio)'/>
<dec f='linux-4.18.y/block/bio.c' l='1009' type='int submit_bio_wait(struct bio * )'/>
<use f='linux-4.18.y/block/bio.c' l='1009' c='submit_bio_wait'/>
<use f='linux-4.18.y/block/bio.c' l='1009' u='a'/>
<use f='linux-4.18.y/block/bio.c' l='1009' u='a'/>
<doc f='linux-4.18.y/block/bio.c' l='986'>/**
 * submit_bio_wait - submit a bio, and wait until it completes
 * @bio: The &amp;struct bio which describes the I/O
 *
 * Simple wrapper around submit_bio(). Returns 0 on success, or the error from
 * bio_endio() on failure.
 *
 * WARNING: Unlike to how submit_bio() is usually used, this function does not
 * result in bio reference to be consumed. The caller must drop the reference
 * on his own.
 */</doc>
<use f='linux-4.18.y/block/blk-flush.c' l='553' u='c' c='blkdev_issue_flush'/>
<use f='linux-4.18.y/block/blk-lib.c' l='113' u='c' c='__blkdev_issue_discard'/>
<use f='linux-4.18.y/block/blk-lib.c' l='143' u='c' c='blkdev_issue_discard'/>
<use f='linux-4.18.y/block/blk-lib.c' l='239' u='c' c='blkdev_issue_write_same'/>
<use f='linux-4.18.y/block/blk-lib.c' l='420' u='c' c='blkdev_issue_zeroout'/>
<use f='linux-4.18.y/drivers/md/md.c' l='871' u='c' c='sync_page_io'/>
<use f='linux-4.18.y/drivers/md/raid1.c' l='2364' u='c' c='narrow_write_error'/>
<use f='linux-4.18.y/drivers/md/raid10.c' l='2595' u='c' c='narrow_write_error'/>
<use f='linux-4.18.y/drivers/md/raid5-cache.c' l='1713' u='c' c='r5l_recovery_fetch_ra_pool'/>
<use f='linux-4.18.y/fs/crypto/bio.c' l='141' u='c' c='fscrypt_zeroout_range'/>
<use f='linux-4.18.y/fs/ext4/mballoc.c' l='2869' u='c' c='ext4_process_freed_data'/>
<use f='linux-4.18.y/fs/f2fs/segment.c' l='535' u='c' c='__submit_flush_wait'/>
