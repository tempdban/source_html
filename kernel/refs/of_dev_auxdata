<def f='linux-4.18.y/include/linux/of_platform.h' l='37' ll='42'/>
<size>32</size>
<doc f='linux-4.18.y/include/linux/of_platform.h' l='15'>/**
 * struct of_dev_auxdata - lookup table entry for device names &amp; platform_data
 * @compatible: compatible value of node to match against node
 * @phys_addr: Start address of registers to match against node
 * @name: Name to assign for matching nodes
 * @platform_data: platform_data to assign for matching nodes
 *
 * This lookup table allows the caller of of_platform_populate() to override
 * the names of devices when creating devices from the device tree.  The table
 * should be terminated with an empty entry.  It also allows the platform_data
 * pointer to be set.
 *
 * The reason for this functionality is that some Linux infrastructure uses
 * the device name to look up a specific device, but the Linux-specific names
 * are not encoded into the device tree, so the kernel needs to provide specific
 * values.
 *
 * Note: Using an auxdata lookup table should be considered a last resort when
 * converting a platform to use the DT.  Normally the automatically generated
 * device name will not matter, and drivers should obtain data from the device
 * node instead of from an anonymous platform_data pointer.
 */</doc>
<mbr r='of_dev_auxdata::compatible' o='0' t='char *'/>
<mbr r='of_dev_auxdata::phys_addr' o='64' t='resource_size_t'/>
<mbr r='of_dev_auxdata::name' o='128' t='char *'/>
<mbr r='of_dev_auxdata::platform_data' o='192' t='void *'/>
