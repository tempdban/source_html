<dec f='linux-4.18.y/include/linux/netdevice.h' l='3386' type='int netif_receive_skb_core(struct sk_buff * skb)'/>
<def f='linux-4.18.y/net/core/dev.c' l='4661' ll='4670' type='int netif_receive_skb_core(struct sk_buff * skb)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='4671' type='int netif_receive_skb_core(struct sk_buff * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='4671' c='netif_receive_skb_core'/>
<use f='linux-4.18.y/net/core/dev.c' l='4671' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='4671' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='4646'>/**
 *	netif_receive_skb_core - special purpose version of netif_receive_skb
 *	@skb: buffer to process
 *
 *	More direct receive version of netif_receive_skb().  It should
 *	only be used by callers that have a need to skip RPS and Generic XDP.
 *	Caller must also take care of handling if (page_is_)pfmemalloc.
 *
 *	This function may only be called from softirq context and interrupts
 *	should be enabled.
 *
 *	Return values (usually ignored):
 *	NET_RX_SUCCESS: no congestion
 *	NET_RX_DROP: packet was dropped
 */</doc>
