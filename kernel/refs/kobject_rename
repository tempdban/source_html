<dec f='linux-4.18.y/include/linux/kobject.h' l='108' type='int kobject_rename(struct kobject * , const char * new_name)'/>
<use f='linux-4.18.y/drivers/base/core.c' l='2689' u='c' c='device_rename'/>
<use f='linux-4.18.y/drivers/pci/slot.c' l='192' u='c' c='rename_slot'/>
<def f='linux-4.18.y/lib/kobject.c' l='451' ll='505' type='int kobject_rename(struct kobject * kobj, const char * new_name)'/>
<dec f='linux-4.18.y/lib/kobject.c' l='506' type='int kobject_rename(struct kobject * , const char * )'/>
<use f='linux-4.18.y/lib/kobject.c' l='506' c='kobject_rename'/>
<use f='linux-4.18.y/lib/kobject.c' l='506' u='a'/>
<use f='linux-4.18.y/lib/kobject.c' l='506' u='a'/>
<doc f='linux-4.18.y/lib/kobject.c' l='441'>/**
 * kobject_rename - change the name of an object
 * @kobj: object in question.
 * @new_name: object&apos;s new name
 *
 * It is the responsibility of the caller to provide mutual
 * exclusion between two different calls of kobject_rename
 * on the same kobject and to ensure that new_name is valid and
 * won&apos;t conflict with other kobjects.
 */</doc>
