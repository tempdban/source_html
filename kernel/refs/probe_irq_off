<dec f='linux-4.14.y/include/linux/interrupt.h' l='689' type='int probe_irq_off(unsigned long )'/>
<doc f='linux-4.14.y/include/linux/interrupt.h' l='689'>/* returns 0 or negative on failure */</doc>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_port.c' l='1396' u='c' c='autoconfig_irq'/>
<use f='linux-4.14.y/drivers/tty/serial/8250/8250_port.c' l='1417' u='c' c='autoconfig_irq'/>
<def f='linux-4.14.y/kernel/irq/autoprobe.c' l='159' ll='184' type='int probe_irq_off(unsigned long val)'/>
<dec f='linux-4.14.y/kernel/irq/autoprobe.c' l='185' type='int probe_irq_off(unsigned long )'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='185' c='probe_irq_off'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='185' u='a'/>
<use f='linux-4.14.y/kernel/irq/autoprobe.c' l='185' u='a'/>
<doc f='linux-4.14.y/kernel/irq/autoprobe.c' l='142'>/**
 *	probe_irq_off	- end an interrupt autodetect
 *	@val: mask of potential interrupts (unused)
 *
 *	Scans the unused interrupt lines and returns the line which
 *	appears to have triggered the interrupt. If no interrupt was
 *	found then zero is returned. If more than one interrupt is
 *	found then minus the first candidate is returned to indicate
 *	their is doubt.
 *
 *	The interrupt probe logic state is returned to its previous
 *	value.
 *
 *	BUGS: When used in a module (which arguably shouldn&apos;t happen)
 *	nothing prevents two IRQ probe callers from overlapping. The
 *	results of this are non-optimal.
 */</doc>
