<def f='linux-4.14.y/security/apparmor/include/policy_unpack.h' l='61' ll='74'/>
<size>144</size>
<doc f='linux-4.14.y/security/apparmor/include/policy_unpack.h' l='52'>/*
 * struct aa_loaddata - buffer of policy raw_data set
 *
 * there is no loaddata ref for being on ns list, nor a ref from
 * d_inode(@dentry) when grab a ref from these, @ns-&gt;lock must be held
 * &amp;&amp; __aa_get_loaddata() needs to be used, and the return value
 * checked, if NULL the loaddata is already being reaped and should be
 * considered dead.
 */</doc>
<mbr r='aa_loaddata::count' o='0' t='struct kref'/>
<mbr r='aa_loaddata::list' o='64' t='struct list_head'/>
<mbr r='aa_loaddata::work' o='192' t='struct work_struct'/>
<mbr r='aa_loaddata::dents' o='448' t='struct dentry *[5]'/>
<mbr r='aa_loaddata::ns' o='768' t='struct aa_ns *'/>
<mbr r='aa_loaddata::name' o='832' t='char *'/>
<mbr r='aa_loaddata::size' o='896' t='size_t'/>
<mbr r='aa_loaddata::revision' o='960' t='long'/>
<mbr r='aa_loaddata::abi' o='1024' t='int'/>
<mbr r='aa_loaddata::hash' o='1088' t='unsigned char *'/>
<mbr r='aa_loaddata::data' o='1152' t='char []'/>
