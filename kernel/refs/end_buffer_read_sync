<dec f='linux-4.18.y/include/linux/buffer_head.h' l='165' type='void end_buffer_read_sync(struct buffer_head * bh, int uptodate)'/>
<def f='linux-4.18.y/fs/buffer.c' l='161' ll='165' type='void end_buffer_read_sync(struct buffer_head * bh, int uptodate)'/>
<dec f='linux-4.18.y/fs/buffer.c' l='166' type='void end_buffer_read_sync(struct buffer_head * , int )'/>
<use f='linux-4.18.y/fs/buffer.c' l='166' c='end_buffer_read_sync'/>
<use f='linux-4.18.y/fs/buffer.c' l='166' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='166' u='a'/>
<use f='linux-4.18.y/fs/buffer.c' l='1167' u='r' c='__bread_slow'/>
<use f='linux-4.18.y/fs/buffer.c' l='3130' u='r' c='ll_rw_block'/>
<use f='linux-4.18.y/fs/buffer.c' l='3421' u='r' c='bh_submit_read'/>
<doc f='linux-4.18.y/fs/buffer.c' l='157'>/*
 * Default synchronous end-of-IO handler..  Just mark it up-to-date and
 * unlock the buffer. This is what ll_rw_block uses too.
 */</doc>
<use f='linux-4.18.y/fs/ext4/inode.c' l='4625' u='r' c='__ext4_get_inode_loc'/>
<use f='linux-4.18.y/fs/ext4/mmp.c' l='90' u='r' c='read_mmp_block'/>
<use f='linux-4.18.y/fs/ntfs/compress.c' l='672' u='r' c='ntfs_read_compressed_block'/>
<use f='linux-4.18.y/fs/ntfs/file.c' l='555' u='r' c='ntfs_submit_bh_for_read'/>
