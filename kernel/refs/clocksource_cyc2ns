<def f='linux-4.18.y/include/linux/clocksource.h' l='184' ll='187' type='s64 clocksource_cyc2ns(u64 cycles, u32 mult, u32 shift)'/>
<doc f='linux-4.18.y/include/linux/clocksource.h' l='171'>/**
 * clocksource_cyc2ns - converts clocksource cycles to nanoseconds
 * @cycles:	cycles
 * @mult:	cycle to nanosecond multiplier
 * @shift:	cycle to nanosecond divisor (power of two)
 *
 * Converts clocksource cycles to nanoseconds, using the given @mult and @shift.
 * The code is optimized for performance and is not intended to work
 * with absolute clocksource cycles (as those will easily overflow),
 * but is only intended to be used with relative (delta) clocksource cycles.
 *
 * XXX - This could use some mult_lxl_ll() asm optimization
 */</doc>
<use f='linux-4.18.y/kernel/time/clocksource.c' l='238' u='c' c='clocksource_watchdog'/>
<use f='linux-4.18.y/kernel/time/clocksource.c' l='242' u='c' c='clocksource_watchdog'/>
<use f='linux-4.18.y/kernel/time/clocksource.c' l='557' u='c' c='clocks_calc_max_nsecs'/>
