<dec f='linux-4.18.y/include/linux/assoc_array.h' l='73' type='struct assoc_array_edit * assoc_array_insert(struct assoc_array * array, const struct assoc_array_ops * ops, const void * index_key, void * object)'/>
<def f='linux-4.18.y/lib/assoc_array.c' l='966' ll='1022' type='struct assoc_array_edit * assoc_array_insert(struct assoc_array * array, const struct assoc_array_ops * ops, const void * index_key, void * object)'/>
<doc f='linux-4.18.y/lib/assoc_array.c' l='947'>/**
 * assoc_array_insert - Script insertion of an object into an associative array
 * @array: The array to insert into.
 * @ops: The operations to use.
 * @index_key: The key to insert at.
 * @object: The object to insert.
 *
 * Precalculate and preallocate a script for the insertion or replacement of an
 * object in an associative array.  This results in an edit script that can
 * either be applied or cancelled.
 *
 * The function returns a pointer to an edit script or -ENOMEM.
 *
 * The caller should lock against other modifications and must continue to hold
 * the lock until assoc_array_apply_edit() has been called.
 *
 * Accesses to the tree may take place concurrently with this function,
 * provided they hold the RCU read lock.
 */</doc>
<use f='linux-4.18.y/security/keys/keyring.c' l='1233' u='c' c='__key_link_begin'/>
