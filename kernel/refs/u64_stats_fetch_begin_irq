<def f='linux-4.14.y/include/linux/u64_stats_sync.h' l='171' ll='177' type='unsigned int u64_stats_fetch_begin_irq(const struct u64_stats_sync * syncp)'/>
<doc f='linux-4.14.y/include/linux/u64_stats_sync.h' l='165'>/*
 * In case irq handlers can update u64 counters, readers can use following helpers
 * - SMP 32bit arches use seqcount protection, irq safe.
 * - UP 32bit must disable irqs.
 * - 64bit have no problem atomically reading u64 values, irq safe.
 */</doc>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_ethtool.c' l='2336' u='c' c='igb_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_ethtool.c' l='2342' u='c' c='igb_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_ethtool.c' l='2352' u='c' c='igb_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_main.c' l='5589' u='c' c='igb_update_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_main.c' l='5605' u='c' c='igb_update_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c' l='1243' u='c' c='ixgbe_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c' l='1259' u='c' c='ixgbe_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='8627' u='c' c='ixgbe_get_ring_stats64'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='8650' u='c' c='ixgbe_get_stats64'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ethtool.c' l='439' u='c' c='ixgbevf_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ethtool.c' l='456' u='c' c='ixgbevf_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='3889' u='c' c='ixgbevf_get_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='3900' u='c' c='ixgbevf_get_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/realtek/8139too.c' l='2535' u='c' c='rtl8139_get_stats64'/>
<use f='linux-4.14.y/drivers/net/ethernet/realtek/8139too.c' l='2541' u='c' c='rtl8139_get_stats64'/>
<use f='linux-4.14.y/drivers/net/loopback.c' l='115' u='c' c='loopback_get_stats64'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1433' u='c' c='virtnet_stats'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1439' u='c' c='virtnet_stats'/>
<use f='linux-4.14.y/net/core/gen_stats.c' l='134' u='c' c='__gnet_stats_copy_basic_cpu'/>
<use f='linux-4.14.y/net/ipv4/ip_tunnel_core.c' l='207' u='c' c='ip_tunnel_get_stats64'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='1006' u='c' c='nft_dump_stats'/>
<def f='linux-4.14.y/include/linux/u64_stats_sync.h' l='171' ll='177' type='unsigned int u64_stats_fetch_begin_irq(const struct u64_stats_sync * syncp)'/>
<doc f='linux-4.14.y/include/linux/u64_stats_sync.h' l='165'>/*
 * In case irq handlers can update u64 counters, readers can use following helpers
 * - SMP 32bit arches use seqcount protection, irq safe.
 * - UP 32bit must disable irqs.
 * - 64bit have no problem atomically reading u64 values, irq safe.
 */</doc>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_ethtool.c' l='2336' u='c' c='igb_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_ethtool.c' l='2342' u='c' c='igb_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_ethtool.c' l='2352' u='c' c='igb_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_main.c' l='5589' u='c' c='igb_update_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/igb/igb_main.c' l='5605' u='c' c='igb_update_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c' l='1243' u='c' c='ixgbe_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c' l='1259' u='c' c='ixgbe_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='8627' u='c' c='ixgbe_get_ring_stats64'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c' l='8650' u='c' c='ixgbe_get_stats64'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ethtool.c' l='439' u='c' c='ixgbevf_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ethtool.c' l='456' u='c' c='ixgbevf_get_ethtool_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='3889' u='c' c='ixgbevf_get_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c' l='3900' u='c' c='ixgbevf_get_stats'/>
<use f='linux-4.14.y/drivers/net/ethernet/realtek/8139too.c' l='2535' u='c' c='rtl8139_get_stats64'/>
<use f='linux-4.14.y/drivers/net/ethernet/realtek/8139too.c' l='2541' u='c' c='rtl8139_get_stats64'/>
<use f='linux-4.14.y/drivers/net/loopback.c' l='115' u='c' c='loopback_get_stats64'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1433' u='c' c='virtnet_stats'/>
<use f='linux-4.14.y/drivers/net/virtio_net.c' l='1439' u='c' c='virtnet_stats'/>
<use f='linux-4.14.y/net/core/gen_stats.c' l='134' u='c' c='__gnet_stats_copy_basic_cpu'/>
<use f='linux-4.14.y/net/ipv4/ip_tunnel_core.c' l='207' u='c' c='ip_tunnel_get_stats64'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_api.c' l='1006' u='c' c='nft_dump_stats'/>
