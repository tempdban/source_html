<def f='linux-4.14.y/include/net/sock.h' l='150' ll='232'/>
<size>104</size>
<doc f='linux-4.14.y/include/net/sock.h' l='121'>/**
 *	struct sock_common - minimal network layer representation of sockets
 *	@skc_daddr: Foreign IPv4 addr
 *	@skc_rcv_saddr: Bound local IPv4 addr
 *	@skc_hash: hash value used with various protocol lookup tables
 *	@skc_u16hashes: two u16 hash values used by UDP lookup tables
 *	@skc_dport: placeholder for inet_dport/tw_dport
 *	@skc_num: placeholder for inet_num/tw_num
 *	@skc_family: network address family
 *	@skc_state: Connection state
 *	@skc_reuse: %SO_REUSEADDR setting
 *	@skc_reuseport: %SO_REUSEPORT setting
 *	@skc_bound_dev_if: bound device index if != 0
 *	@skc_bind_node: bind hash linkage for various protocol lookup tables
 *	@skc_portaddr_node: second hash linkage for UDP/UDP-Lite protocol
 *	@skc_prot: protocol handlers inside a network family
 *	@skc_net: reference to the network namespace of this socket
 *	@skc_node: main hash linkage for various protocol lookup tables
 *	@skc_nulls_node: main hash linkage for TCP/UDP/UDP-Lite protocol
 *	@skc_tx_queue_mapping: tx queue number for this connection
 *	@skc_flags: place holder for sk_flags
 *		%SO_LINGER (l_onoff), %SO_BROADCAST, %SO_KEEPALIVE,
 *		%SO_OOBINLINE settings, %SO_TIMESTAMPING settings
 *	@skc_incoming_cpu: record/match cpu processing incoming packets
 *	@skc_refcnt: reference count
 *
 *	This is the minimal network layer representation of sockets, the header
 *	for struct sock and struct inet_timewait_sock.
 */</doc>
<mbr r='sock_common::skc_family' o='128' t='unsigned short'/>
<mbr r='sock_common::skc_state' o='144' t='volatile unsigned char'/>
<mbr r='sock_common::skc_reuse' o='152' t='unsigned char'/>
<mbr r='sock_common::skc_reuseport' o='156' t='unsigned char'/>
<mbr r='sock_common::skc_ipv6only' o='157' t='unsigned char'/>
<mbr r='sock_common::skc_net_refcnt' o='158' t='unsigned char'/>
<mbr r='sock_common::skc_bound_dev_if' o='160' t='int'/>
<mbr r='sock_common::skc_prot' o='320' t='struct proto *'/>
<mbr r='sock_common::skc_net' o='384' t='possible_net_t'/>
<mbr r='sock_common::skc_cookie' o='448' t='atomic64_t'/>
<mbr r='sock_common::skc_dontcopy_begin' o='576' t='int [0]'/>
<mbr r='sock_common::skc_tx_queue_mapping' o='704' t='int'/>
<mbr r='sock_common::skc_refcnt' o='768' t='refcount_t'/>
<mbr r='sock_common::skc_dontcopy_end' o='800' t='int [0]'/>
<def f='linux-4.14.y/include/net/sock.h' l='150' ll='232'/>
<size>104</size>
<doc f='linux-4.14.y/include/net/sock.h' l='121'>/**
 *	struct sock_common - minimal network layer representation of sockets
 *	@skc_daddr: Foreign IPv4 addr
 *	@skc_rcv_saddr: Bound local IPv4 addr
 *	@skc_hash: hash value used with various protocol lookup tables
 *	@skc_u16hashes: two u16 hash values used by UDP lookup tables
 *	@skc_dport: placeholder for inet_dport/tw_dport
 *	@skc_num: placeholder for inet_num/tw_num
 *	@skc_family: network address family
 *	@skc_state: Connection state
 *	@skc_reuse: %SO_REUSEADDR setting
 *	@skc_reuseport: %SO_REUSEPORT setting
 *	@skc_bound_dev_if: bound device index if != 0
 *	@skc_bind_node: bind hash linkage for various protocol lookup tables
 *	@skc_portaddr_node: second hash linkage for UDP/UDP-Lite protocol
 *	@skc_prot: protocol handlers inside a network family
 *	@skc_net: reference to the network namespace of this socket
 *	@skc_node: main hash linkage for various protocol lookup tables
 *	@skc_nulls_node: main hash linkage for TCP/UDP/UDP-Lite protocol
 *	@skc_tx_queue_mapping: tx queue number for this connection
 *	@skc_flags: place holder for sk_flags
 *		%SO_LINGER (l_onoff), %SO_BROADCAST, %SO_KEEPALIVE,
 *		%SO_OOBINLINE settings, %SO_TIMESTAMPING settings
 *	@skc_incoming_cpu: record/match cpu processing incoming packets
 *	@skc_refcnt: reference count
 *
 *	This is the minimal network layer representation of sockets, the header
 *	for struct sock and struct inet_timewait_sock.
 */</doc>
<mbr r='sock_common::skc_family' o='128' t='unsigned short'/>
<mbr r='sock_common::skc_state' o='144' t='volatile unsigned char'/>
<mbr r='sock_common::skc_reuse' o='152' t='unsigned char'/>
<mbr r='sock_common::skc_reuseport' o='156' t='unsigned char'/>
<mbr r='sock_common::skc_ipv6only' o='157' t='unsigned char'/>
<mbr r='sock_common::skc_net_refcnt' o='158' t='unsigned char'/>
<mbr r='sock_common::skc_bound_dev_if' o='160' t='int'/>
<mbr r='sock_common::skc_prot' o='320' t='struct proto *'/>
<mbr r='sock_common::skc_net' o='384' t='possible_net_t'/>
<mbr r='sock_common::skc_cookie' o='448' t='atomic64_t'/>
<mbr r='sock_common::skc_dontcopy_begin' o='576' t='int [0]'/>
<mbr r='sock_common::skc_tx_queue_mapping' o='704' t='int'/>
<mbr r='sock_common::skc_refcnt' o='768' t='refcount_t'/>
<mbr r='sock_common::skc_dontcopy_end' o='800' t='int [0]'/>
