<dec f='linux-4.14.y/include/linux/security.h' l='104' type='int cap_vm_enough_memory(struct mm_struct * mm, long pages)'/>
<def f='linux-4.14.y/security/commoncap.c' l='1240' ll='1248' type='int cap_vm_enough_memory(struct mm_struct * mm, long pages)'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<doc f='linux-4.14.y/security/commoncap.c' l='1232'>/**
 * cap_vm_enough_memory - Determine whether a new virtual mapping is permitted
 * @mm: The VM space in which the new mapping is to be made
 * @pages: The size of the mapping
 *
 * Determine whether the allocation of a new virtual mapping by the current
 * task is permitted, returning 1 if permission is granted, 0 if not.
 */</doc>
<dec f='linux-4.14.y/include/linux/security.h' l='104' type='int cap_vm_enough_memory(struct mm_struct * mm, long pages)'/>
<def f='linux-4.14.y/security/commoncap.c' l='1240' ll='1248' type='int cap_vm_enough_memory(struct mm_struct * mm, long pages)'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<use f='linux-4.14.y/security/commoncap.c' l='1299'/>
<doc f='linux-4.14.y/security/commoncap.c' l='1232'>/**
 * cap_vm_enough_memory - Determine whether a new virtual mapping is permitted
 * @mm: The VM space in which the new mapping is to be made
 * @pages: The size of the mapping
 *
 * Determine whether the allocation of a new virtual mapping by the current
 * task is permitted, returning 1 if permission is granted, 0 if not.
 */</doc>
