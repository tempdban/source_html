<dec f='linux-4.14.y/include/scsi/scsi_transport_srp.h' l='121' type='enum blk_eh_timer_return srp_timed_out(struct scsi_cmnd * scmd)'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='612' ll='624' type='enum blk_eh_timer_return srp_timed_out(struct scsi_cmnd * scmd)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' type='enum blk_eh_timer_return srp_timed_out(struct scsi_cmnd * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' c='srp_timed_out'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' u='a'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='601'>/**
 * srp_timed_out() - SRP transport intercept of the SCSI timeout EH
 * @scmd: SCSI command.
 *
 * If a timeout occurs while an rport is in the blocked state, ask the SCSI
 * EH to continue waiting (BLK_EH_RESET_TIMER). Otherwise let the SCSI core
 * handle the timeout (BLK_EH_NOT_HANDLED).
 *
 * Note: This function is called from soft-IRQ context and with the request
 * queue lock held.
 */</doc>
<dec f='linux-4.14.y/include/scsi/scsi_transport_srp.h' l='121' type='enum blk_eh_timer_return srp_timed_out(struct scsi_cmnd * scmd)'/>
<def f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='612' ll='624' type='enum blk_eh_timer_return srp_timed_out(struct scsi_cmnd * scmd)'/>
<dec f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' type='enum blk_eh_timer_return srp_timed_out(struct scsi_cmnd * )'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' c='srp_timed_out'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' u='a'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='625' u='a'/>
<doc f='linux-4.14.y/drivers/scsi/scsi_transport_srp.c' l='601'>/**
 * srp_timed_out() - SRP transport intercept of the SCSI timeout EH
 * @scmd: SCSI command.
 *
 * If a timeout occurs while an rport is in the blocked state, ask the SCSI
 * EH to continue waiting (BLK_EH_RESET_TIMER). Otherwise let the SCSI core
 * handle the timeout (BLK_EH_NOT_HANDLED).
 *
 * Note: This function is called from soft-IRQ context and with the request
 * queue lock held.
 */</doc>
