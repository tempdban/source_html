<dec f='linux-4.14.y/include/linux/buffer_head.h' l='235' type='void page_zero_new_buffers(struct page * page, unsigned int from, unsigned int to)'/>
<def f='linux-4.14.y/fs/buffer.c' l='1897' ll='1931' type='void page_zero_new_buffers(struct page * page, unsigned int from, unsigned int to)'/>
<dec f='linux-4.14.y/fs/buffer.c' l='1932' type='void page_zero_new_buffers(struct page * , unsigned int , unsigned int )'/>
<use f='linux-4.14.y/fs/buffer.c' l='1932' c='page_zero_new_buffers'/>
<use f='linux-4.14.y/fs/buffer.c' l='1932' u='a'/>
<use f='linux-4.14.y/fs/buffer.c' l='1932' u='a'/>
<use f='linux-4.14.y/fs/buffer.c' l='2069' u='c' c='__block_write_begin_int'/>
<use f='linux-4.14.y/fs/buffer.c' l='2172' u='c' c='block_write_end'/>
<use f='linux-4.14.y/fs/buffer.c' l='2723' u='c' c='nobh_write_begin'/>
<doc f='linux-4.14.y/fs/buffer.c' l='1892'>/*
 * If a page has any new buffers, zero them out here, and mark them uptodate
 * and dirty so they&apos;ll be written out (in order to prevent uninitialised
 * block data from leaking). And clear the new bit.
 */</doc>
