<dec f='linux-4.14.y/include/linux/skbuff.h' l='3262' type='int skb_copy_bits(const struct sk_buff * skb, int offset, void * to, int len)'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='3320' u='c' c='__skb_header_pointer'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ptp.c' l='779' u='c' c='ixgbe_ptp_rx_pktstamp'/>
<def f='linux-4.14.y/kernel/bpf/core.c' l='1502' ll='1506' type='int skb_copy_bits(const struct sk_buff * skb, int offset, void * to, int len)'/>
<doc f='linux-4.14.y/kernel/bpf/core.c' l='1499'>/* To execute LD_ABS/LD_IND instructions __bpf_prog_run() may call
 * skb_copy_bits(), so provide a weak definition of it for NET-less config.
 */</doc>
<use f='linux-4.14.y/net/core/skbuff.c' l='1355' u='c' c='skb_copy'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1598' u='c' c='skb_copy_expand'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1881' u='c' c='__pskb_pull_tail'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='2005' ll='2080' type='int skb_copy_bits(const struct sk_buff * skb, int offset, void * to, int len)'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2065' u='c' c='skb_copy_bits'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='2081' type='int skb_copy_bits(const struct sk_buff * , int , void * , int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2081' c='skb_copy_bits'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2081' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2081' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2714' u='c' c='skb_zerocopy'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2717' u='c' c='skb_zerocopy'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4780' u='c' c='skb_try_coalesce'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='1990'>/**
 *	skb_copy_bits - copy bits from skb to kernel buffer
 *	@skb: source skb
 *	@offset: offset in source
 *	@to: destination buffer
 *	@len: number of bytes to copy
 *
 *	Copy the specified number of bytes from the source skb to the
 *	destination buffer.
 *
 *	CAUTION ! :
 *		If its prototype is ever changed,
 *		check arch/{*}/net/{*}.S files,
 *		since it is called from BPF assembly code.
 */</doc>
<use f='linux-4.14.y/net/ipv4/icmp.c' l='971' u='c' c='icmp_timestamp'/>
<use f='linux-4.14.y/net/ipv4/ip_fragment.c' l='705' u='c' c='ip_check_defrag'/>
<use f='linux-4.14.y/net/ipv4/ip_output.c' l='774' u='c' c='ip_do_fragment'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='4871' u='c' c='tcp_collapse'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='5240' u='c' c='tcp_urg'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2106' u='c' c='tcp_mtu_probe'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2705' u='c' c='tcp_collapse_retrans'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_trace.c' l='57' u='c' c='trace_fill_header'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_trace.c' l='75' u='c' c='nf_trace_fill_ll_header'/>
<use f='linux-4.14.y/net/netfilter/nfnetlink_log.c' l='597' u='c' c='__build_packet_message'/>
<use f='linux-4.14.y/net/netfilter/nft_exthdr.c' l='59' u='c' c='nft_exthdr_ipv6_eval'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='38' u='c' c='nft_payload_copy_vlan'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='70' u='c' c='nft_payload_copy_vlan'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='109' u='c' c='nft_payload_eval'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='229' u='c' c='nft_payload_l4csum_update'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='258' u='c' c='nft_payload_csum_inet'/>
<use f='linux-4.14.y/net/netfilter/xt_HMARK.c' l='143' u='c' c='hmark_set_tuple_ports'/>
<use f='linux-4.14.y/net/netfilter/xt_u32.c' l='41' u='c' c='u32_match_it'/>
<use f='linux-4.14.y/net/netfilter/xt_u32.c' l='68' u='c' c='u32_match_it'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='2320' u='c' c='tpacket_rcv'/>
<dec f='linux-4.14.y/include/linux/skbuff.h' l='3262' type='int skb_copy_bits(const struct sk_buff * skb, int offset, void * to, int len)'/>
<use f='linux-4.14.y/include/linux/skbuff.h' l='3320' u='c' c='__skb_header_pointer'/>
<use f='linux-4.14.y/drivers/net/ethernet/intel/ixgbe/ixgbe_ptp.c' l='779' u='c' c='ixgbe_ptp_rx_pktstamp'/>
<def f='linux-4.14.y/kernel/bpf/core.c' l='1502' ll='1506' type='int skb_copy_bits(const struct sk_buff * skb, int offset, void * to, int len)'/>
<doc f='linux-4.14.y/kernel/bpf/core.c' l='1499'>/* To execute LD_ABS/LD_IND instructions __bpf_prog_run() may call
 * skb_copy_bits(), so provide a weak definition of it for NET-less config.
 */</doc>
<use f='linux-4.14.y/net/core/skbuff.c' l='1355' u='c' c='skb_copy'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1598' u='c' c='skb_copy_expand'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1881' u='c' c='__pskb_pull_tail'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='2005' ll='2080' type='int skb_copy_bits(const struct sk_buff * skb, int offset, void * to, int len)'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2065' u='c' c='skb_copy_bits'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='2081' type='int skb_copy_bits(const struct sk_buff * , int , void * , int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2081' c='skb_copy_bits'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2081' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2081' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2714' u='c' c='skb_zerocopy'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='2717' u='c' c='skb_zerocopy'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='4780' u='c' c='skb_try_coalesce'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='1990'>/**
 *	skb_copy_bits - copy bits from skb to kernel buffer
 *	@skb: source skb
 *	@offset: offset in source
 *	@to: destination buffer
 *	@len: number of bytes to copy
 *
 *	Copy the specified number of bytes from the source skb to the
 *	destination buffer.
 *
 *	CAUTION ! :
 *		If its prototype is ever changed,
 *		check arch/{*}/net/{*}.S files,
 *		since it is called from BPF assembly code.
 */</doc>
<use f='linux-4.14.y/net/ipv4/icmp.c' l='971' u='c' c='icmp_timestamp'/>
<use f='linux-4.14.y/net/ipv4/ip_fragment.c' l='705' u='c' c='ip_check_defrag'/>
<use f='linux-4.14.y/net/ipv4/ip_output.c' l='774' u='c' c='ip_do_fragment'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='4871' u='c' c='tcp_collapse'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='5240' u='c' c='tcp_urg'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2106' u='c' c='tcp_mtu_probe'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2705' u='c' c='tcp_collapse_retrans'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_trace.c' l='57' u='c' c='trace_fill_header'/>
<use f='linux-4.14.y/net/netfilter/nf_tables_trace.c' l='75' u='c' c='nf_trace_fill_ll_header'/>
<use f='linux-4.14.y/net/netfilter/nfnetlink_log.c' l='597' u='c' c='__build_packet_message'/>
<use f='linux-4.14.y/net/netfilter/nft_exthdr.c' l='59' u='c' c='nft_exthdr_ipv6_eval'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='38' u='c' c='nft_payload_copy_vlan'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='70' u='c' c='nft_payload_copy_vlan'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='109' u='c' c='nft_payload_eval'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='229' u='c' c='nft_payload_l4csum_update'/>
<use f='linux-4.14.y/net/netfilter/nft_payload.c' l='258' u='c' c='nft_payload_csum_inet'/>
<use f='linux-4.14.y/net/netfilter/xt_HMARK.c' l='143' u='c' c='hmark_set_tuple_ports'/>
<use f='linux-4.14.y/net/netfilter/xt_u32.c' l='41' u='c' c='u32_match_it'/>
<use f='linux-4.14.y/net/netfilter/xt_u32.c' l='68' u='c' c='u32_match_it'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='2320' u='c' c='tpacket_rcv'/>
