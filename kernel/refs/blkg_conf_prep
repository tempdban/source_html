<dec f='linux-4.14.y/include/linux/blk-cgroup.h' l='217' type='int blkg_conf_prep(struct blkcg * blkcg, const struct blkcg_policy * pol, char * input, struct blkg_conf_ctx * ctx)'/>
<def f='linux-4.14.y/block/blk-cgroup.c' l='808' ll='921' type='int blkg_conf_prep(struct blkcg * blkcg, const struct blkcg_policy * pol, char * input, struct blkg_conf_ctx * ctx)'/>
<dec f='linux-4.14.y/block/blk-cgroup.c' l='922' type='int blkg_conf_prep(struct blkcg * , const struct blkcg_policy * , char * , struct blkg_conf_ctx * )'/>
<use f='linux-4.14.y/block/blk-cgroup.c' l='922' c='blkg_conf_prep'/>
<use f='linux-4.14.y/block/blk-cgroup.c' l='922' u='a'/>
<use f='linux-4.14.y/block/blk-cgroup.c' l='922' u='a'/>
<doc f='linux-4.14.y/block/blk-cgroup.c' l='796'>/**
 * blkg_conf_prep - parse and prepare for per-blkg config update
 * @blkcg: target block cgroup
 * @pol: target policy
 * @input: input string
 * @ctx: blkg_conf_ctx to be filled
 *
 * Parse per-blkg config update from @input and initialize @ctx with the
 * result.  @ctx-&gt;blkg points to the blkg to be updated and @ctx-&gt;body the
 * part of @input following MAJ:MIN.  This function returns with RCU read
 * lock and queue lock held and must be paired with blkg_conf_finish().
 */</doc>
