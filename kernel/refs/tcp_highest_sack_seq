<def f='linux-4.18.y/include/net/tcp.h' l='1706' ll='1715' type='u32 tcp_highest_sack_seq(struct tcp_sock * tp)'/>
<doc f='linux-4.18.y/include/net/tcp.h' l='1702'>/* Start sequence of the skb just after the highest skb with SACKed
 * bit, valid only if sacked_out &gt; 0 or when the caller has ensured
 * validity by itself.
 */</doc>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='893' u='c' c='tcp_check_sack_reordering'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='1240' u='c' c='tcp_sacktag_one'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='1584' u='c' c='tcp_sacktag_walk'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='1793' u='c' c='tcp_sacktag_write_queue'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='1808' u='c' c='tcp_sacktag_write_queue'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='2758' u='c' c='tcp_force_fast_retransmit'/>
<use f='linux-4.18.y/net/ipv4/tcp_input.c' l='3618' u='c' c='tcp_ack'/>
