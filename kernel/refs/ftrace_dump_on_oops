<dec f='linux-4.18.y/include/linux/ftrace.h' l='916' type='enum ftrace_dump_mode'/>
<use f='linux-4.18.y/kernel/sysctl.c' l='642' u='a'/>
<use f='linux-4.18.y/kernel/sysctl.c' l='642' u='a'/>
<use f='linux-4.18.y/kernel/sysctl.c' l='642' u='a'/>
<use f='linux-4.18.y/kernel/sysctl.c' l='642' u='a'/>
<def f='linux-4.18.y/kernel/trace/trace.c' l='119' type='enum ftrace_dump_mode'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='181' u='w' c='set_ftrace_dump_on_oops'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='186' u='w' c='set_ftrace_dump_on_oops'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='8180' u='r' c='trace_panic_handler'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='8181' u='r' c='trace_panic_handler'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='8197' u='r' c='trace_die_handler'/>
<use f='linux-4.18.y/kernel/trace/trace.c' l='8198' u='r' c='trace_die_handler'/>
<doc f='linux-4.18.y/kernel/trace/trace.c' l='103'>/*
 * ftrace_dump_on_oops - variable to dump ftrace buffer on oops
 *
 * If there is an oops (or kernel panic) and the ftrace_dump_on_oops
 * is set, then ftrace_dump is called. This will output the contents
 * of the ftrace buffers to the console.  This is very useful for
 * capturing traces that lead to crashes and outputing it to a
 * serial console.
 *
 * It is default off, but you can enable it with either specifying
 * &quot;ftrace_dump_on_oops&quot; in the kernel command line, or setting
 * /proc/sys/kernel/ftrace_dump_on_oops
 * Set 1 if you want to dump buffers of all CPUs
 * Set 2 if you want to dump the buffer of the CPU that triggered oops
 */</doc>
