<dec f='linux-4.14.y/include/linux/pci.h' l='1299' type='void pci_walk_bus(struct pci_bus * top, int (*)(struct pci_dev *, void *) cb, void * userdata)'/>
<def f='linux-4.14.y/drivers/pci/bus.c' l='380' ll='413' type='void pci_walk_bus(struct pci_bus * top, int (*)(struct pci_dev *, void *) cb, void * userdata)'/>
<dec f='linux-4.14.y/drivers/pci/bus.c' l='414' type='void pci_walk_bus(struct pci_bus * , int (*)(struct pci_dev *, void *) , void * )'/>
<use f='linux-4.14.y/drivers/pci/bus.c' l='414' c='pci_walk_bus'/>
<use f='linux-4.14.y/drivers/pci/bus.c' l='414' u='a'/>
<use f='linux-4.14.y/drivers/pci/bus.c' l='414' u='a'/>
<doc f='linux-4.14.y/drivers/pci/bus.c' l='367'>/** pci_walk_bus - walk devices on/under bus, calling callback.
 *  @top      bus whose devices should be walked
 *  @cb       callback to be called for each device found
 *  @userdata arbitrary pointer to be passed to callback.
 *
 *  Walk the given bus, including any bridged devices
 *  on buses under this bus.  Call the provided callback
 *  on each device found.
 *
 *  We check the return of @cb each time. If it returns anything
 *  other than 0, we break out.
 *
 */</doc>
<use f='linux-4.14.y/drivers/pci/pci.c' l='805' u='c' c='pci_wakeup_bus'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='859' u='c' c='__pci_bus_set_current_state'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='1743' u='c' c='pci_pme_wakeup_bus'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='2375' u='c' c='pci_bridge_d3_update'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='2383' u='c' c='pcie_bus_configure_settings'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='2387' u='c' c='pcie_bus_configure_settings'/>
<use f='linux-4.14.y/drivers/pci/quirks.c' l='4832' u='c' c='quirk_no_ext_tags'/>
<use f='linux-4.14.y/drivers/vfio/pci/vfio_pci.c' l='561' u='c' c='vfio_pci_for_each_slot_or_bus'/>
<dec f='linux-4.14.y/include/linux/pci.h' l='1299' type='void pci_walk_bus(struct pci_bus * top, int (*)(struct pci_dev *, void *) cb, void * userdata)'/>
<def f='linux-4.14.y/drivers/pci/bus.c' l='380' ll='413' type='void pci_walk_bus(struct pci_bus * top, int (*)(struct pci_dev *, void *) cb, void * userdata)'/>
<dec f='linux-4.14.y/drivers/pci/bus.c' l='414' type='void pci_walk_bus(struct pci_bus * , int (*)(struct pci_dev *, void *) , void * )'/>
<use f='linux-4.14.y/drivers/pci/bus.c' l='414' c='pci_walk_bus'/>
<use f='linux-4.14.y/drivers/pci/bus.c' l='414' u='a'/>
<use f='linux-4.14.y/drivers/pci/bus.c' l='414' u='a'/>
<doc f='linux-4.14.y/drivers/pci/bus.c' l='367'>/** pci_walk_bus - walk devices on/under bus, calling callback.
 *  @top      bus whose devices should be walked
 *  @cb       callback to be called for each device found
 *  @userdata arbitrary pointer to be passed to callback.
 *
 *  Walk the given bus, including any bridged devices
 *  on buses under this bus.  Call the provided callback
 *  on each device found.
 *
 *  We check the return of @cb each time. If it returns anything
 *  other than 0, we break out.
 *
 */</doc>
<use f='linux-4.14.y/drivers/pci/pci.c' l='805' u='c' c='pci_wakeup_bus'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='859' u='c' c='__pci_bus_set_current_state'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='1743' u='c' c='pci_pme_wakeup_bus'/>
<use f='linux-4.14.y/drivers/pci/pci.c' l='2375' u='c' c='pci_bridge_d3_update'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='2383' u='c' c='pcie_bus_configure_settings'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='2387' u='c' c='pcie_bus_configure_settings'/>
<use f='linux-4.14.y/drivers/pci/quirks.c' l='4832' u='c' c='quirk_no_ext_tags'/>
<use f='linux-4.14.y/drivers/vfio/pci/vfio_pci.c' l='561' u='c' c='vfio_pci_for_each_slot_or_bus'/>
