<dec f='linux-4.14.y/include/net/tcp.h' l='548' type='int __tcp_retransmit_skb(struct sock * sk, struct sk_buff * skb, int segs)'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='5647' u='c' c='tcp_rcv_fastopen_synack'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2501' u='c' c='tcp_send_loss_probe'/>
<def f='linux-4.14.y/net/ipv4/tcp_output.c' l='2805' ll='2904' type='int __tcp_retransmit_skb(struct sock * sk, struct sk_buff * skb, int segs)'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2909' u='c' c='tcp_retransmit_skb'/>
<doc f='linux-4.14.y/net/ipv4/tcp_output.c' l='2801'>/* This retransmits one SKB.  Policy decisions and retransmit queue
 * state updates are done by the caller.  Returns non-zero if an
 * error occurred which prevented the send.
 */</doc>
<dec f='linux-4.14.y/include/net/tcp.h' l='548' type='int __tcp_retransmit_skb(struct sock * sk, struct sk_buff * skb, int segs)'/>
<use f='linux-4.14.y/net/ipv4/tcp_input.c' l='5647' u='c' c='tcp_rcv_fastopen_synack'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2501' u='c' c='tcp_send_loss_probe'/>
<def f='linux-4.14.y/net/ipv4/tcp_output.c' l='2805' ll='2904' type='int __tcp_retransmit_skb(struct sock * sk, struct sk_buff * skb, int segs)'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2909' u='c' c='tcp_retransmit_skb'/>
<doc f='linux-4.14.y/net/ipv4/tcp_output.c' l='2801'>/* This retransmits one SKB.  Policy decisions and retransmit queue
 * state updates are done by the caller.  Returns non-zero if an
 * error occurred which prevented the send.
 */</doc>
