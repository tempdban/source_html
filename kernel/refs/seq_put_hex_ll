<dec f='linux-4.18.y/include/linux/seq_file.h' l='126' type='void seq_put_hex_ll(struct seq_file * m, const char * delimiter, unsigned long long v, unsigned int width)'/>
<use f='linux-4.18.y/fs/proc/array.c' l='312' u='c' c='render_cap_t'/>
<use f='linux-4.18.y/fs/proc/task_mmu.c' l='282' u='c' c='show_vma_header_prefix'/>
<use f='linux-4.18.y/fs/proc/task_mmu.c' l='283' u='c' c='show_vma_header_prefix'/>
<use f='linux-4.18.y/fs/proc/task_mmu.c' l='289' u='c' c='show_vma_header_prefix'/>
<use f='linux-4.18.y/fs/proc/task_mmu.c' l='290' u='c' c='show_vma_header_prefix'/>
<use f='linux-4.18.y/fs/proc/task_mmu.c' l='291' u='c' c='show_vma_header_prefix'/>
<def f='linux-4.18.y/fs/seq_file.c' l='742' ll='774' type='void seq_put_hex_ll(struct seq_file * m, const char * delimiter, unsigned long long v, unsigned int width)'/>
<doc f='linux-4.18.y/fs/seq_file.c' l='730'>/**
 * seq_put_hex_ll - put a number in hexadecimal notation
 * @m: seq_file identifying the buffer to which data should be written
 * @delimiter: a string which is printed before the number
 * @v: the number
 * @width: a minimum field width
 *
 * seq_put_hex_ll(m, &quot;&quot;, v, 8) is equal to seq_printf(m, &quot;%08llx&quot;, v)
 *
 * This routine is very quick when you show lots of numbers.
 * In usual cases, it will be better to use seq_printf(). It&apos;s easier to read.
 */</doc>
