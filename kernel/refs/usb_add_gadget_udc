<dec f='linux-4.18.y/include/linux/usb/gadget.h' l='726' type='int usb_add_gadget_udc(struct device * parent, struct usb_gadget * gadget)'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/bdc/bdc_udc.c' l='547' u='c' c='bdc_udc_init'/>
<def f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1252' ll='1255' type='int usb_add_gadget_udc(struct device * parent, struct usb_gadget * gadget)'/>
<dec f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1256' type='int usb_add_gadget_udc(struct device * , struct usb_gadget * )'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1256' c='usb_add_gadget_udc'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1256' u='a'/>
<use f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1256' u='a'/>
<doc f='linux-4.18.y/drivers/usb/gadget/udc/core.c' l='1244'>/**
 * usb_add_gadget_udc - adds a new gadget to the udc class driver list
 * @parent: the parent device to this udc. Usually the controller
 * driver&apos;s device.
 * @gadget: the gadget to be added to the list
 *
 * Returns zero on success, negative errno otherwise.
 */</doc>
<use f='linux-4.18.y/drivers/usb/gadget/udc/pch_udc.c' l='3133' u='c' c='pch_udc_probe'/>
