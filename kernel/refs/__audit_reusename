<dec f='linux-4.14.y/include/linux/audit.h' l='234' type='struct filename * __audit_reusename(const char * uptr)'/>
<use f='linux-4.14.y/include/linux/audit.h' l='277' u='c' c='audit_reusename'/>
<def f='linux-4.14.y/kernel/auditsc.c' l='1715' ll='1730' type='struct filename * __audit_reusename(const char * uptr)'/>
<doc f='linux-4.14.y/kernel/auditsc.c' l='1707'>/**
 * __audit_reusename - fill out filename with info from existing entry
 * @uptr: userland ptr to pathname
 *
 * Search the audit_names list for the current audit context. If there is an
 * existing entry with a matching &quot;uptr&quot; then return the filename
 * associated with that audit_name. If not, return NULL.
 */</doc>
<dec f='linux-4.14.y/include/linux/audit.h' l='234' type='struct filename * __audit_reusename(const char * uptr)'/>
<use f='linux-4.14.y/include/linux/audit.h' l='277' u='c' c='audit_reusename'/>
<def f='linux-4.14.y/kernel/auditsc.c' l='1715' ll='1730' type='struct filename * __audit_reusename(const char * uptr)'/>
<doc f='linux-4.14.y/kernel/auditsc.c' l='1707'>/**
 * __audit_reusename - fill out filename with info from existing entry
 * @uptr: userland ptr to pathname
 *
 * Search the audit_names list for the current audit context. If there is an
 * existing entry with a matching &quot;uptr&quot; then return the filename
 * associated with that audit_name. If not, return NULL.
 */</doc>
