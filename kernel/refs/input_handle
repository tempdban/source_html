<def f='linux-4.14.y/include/linux/input.h' l='323' ll='335'/>
<size>72</size>
<doc f='linux-4.14.y/include/linux/input.h' l='311'>/**
 * struct input_handle - links input device with an input handler
 * @private: handler-specific data
 * @open: counter showing whether the handle is &apos;open&apos;, i.e. should deliver
 *	events from its device
 * @name: name given to the handle by handler that created it
 * @dev: input device the handle is attached to
 * @handler: handler that works with the device through this handle
 * @d_node: used to put the handle on device&apos;s list of attached handles
 * @h_node: used to put the handle on handler&apos;s list of handles from which
 *	it gets events
 */</doc>
<mbr r='input_handle::private' o='0' t='void *'/>
<mbr r='input_handle::open' o='64' t='int'/>
<mbr r='input_handle::name' o='128' t='const char *'/>
<mbr r='input_handle::dev' o='192' t='struct input_dev *'/>
<mbr r='input_handle::handler' o='256' t='struct input_handler *'/>
<mbr r='input_handle::d_node' o='320' t='struct list_head'/>
<mbr r='input_handle::h_node' o='448' t='struct list_head'/>
<def f='linux-4.14.y/include/linux/input.h' l='323' ll='335'/>
<size>72</size>
<doc f='linux-4.14.y/include/linux/input.h' l='311'>/**
 * struct input_handle - links input device with an input handler
 * @private: handler-specific data
 * @open: counter showing whether the handle is &apos;open&apos;, i.e. should deliver
 *	events from its device
 * @name: name given to the handle by handler that created it
 * @dev: input device the handle is attached to
 * @handler: handler that works with the device through this handle
 * @d_node: used to put the handle on device&apos;s list of attached handles
 * @h_node: used to put the handle on handler&apos;s list of handles from which
 *	it gets events
 */</doc>
<mbr r='input_handle::private' o='0' t='void *'/>
<mbr r='input_handle::open' o='64' t='int'/>
<mbr r='input_handle::name' o='128' t='const char *'/>
<mbr r='input_handle::dev' o='192' t='struct input_dev *'/>
<mbr r='input_handle::handler' o='256' t='struct input_handler *'/>
<mbr r='input_handle::d_node' o='320' t='struct list_head'/>
<mbr r='input_handle::h_node' o='448' t='struct list_head'/>
