<def f='linux-4.18.y/include/linux/if_vlan.h' l='454' ll='462' type='struct sk_buff * vlan_insert_tag_set_proto(struct sk_buff * skb, __be16 vlan_proto, u16 vlan_tci)'/>
<use f='linux-4.18.y/include/linux/if_vlan.h' l='475' u='c' c='__vlan_hwaccel_push_inside'/>
<doc f='linux-4.18.y/include/linux/if_vlan.h' l='442'>/**
 * vlan_insert_tag_set_proto - regular VLAN tag inserting
 * @skb: skbuff to tag
 * @vlan_proto: VLAN encapsulation protocol
 * @vlan_tci: VLAN TCI to insert
 *
 * Inserts the VLAN tag into @skb as part of the payload
 * Returns a VLAN tagged skb. If a new skb is created, @skb is freed.
 *
 * Following the skb_unshare() example, in case of error, the calling function
 * doesn&apos;t have to worry about freeing the original skb.
 */</doc>
<use f='linux-4.18.y/drivers/net/bonding/bond_main.c' l='2386' u='c' c='bond_arp_send'/>
