<def f='linux-4.18.y/include/linux/spi/spi.h' l='994' ll='1001'/>
<size>48</size>
<doc f='linux-4.18.y/include/linux/spi/spi.h' l='975'>/**
 * struct spi_replaced_transfers - structure describing the spi_transfer
 *                                 replacements that have occurred
 *                                 so that they can get reverted
 * @release:            some extra release code to get executed prior to
 *                      relasing this structure
 * @extradata:          pointer to some extra data if requested or NULL
 * @replaced_transfers: transfers that have been replaced and which need
 *                      to get restored
 * @replaced_after:     the transfer after which the @replaced_transfers
 *                      are to get re-inserted
 * @inserted:           number of transfers inserted
 * @inserted_transfers: array of spi_transfers of array-size @inserted,
 *                      that have been replacing replaced_transfers
 *
 * note: that @extradata will point to @inserted_transfers[@inserted]
 * if some extra allocation is requested, so alignment will be the same
 * as for spi_transfers
 */</doc>
<mbr r='spi_replaced_transfers::release' o='0' t='spi_replaced_release_t'/>
<mbr r='spi_replaced_transfers::extradata' o='64' t='void *'/>
<mbr r='spi_replaced_transfers::replaced_transfers' o='128' t='struct list_head'/>
<mbr r='spi_replaced_transfers::replaced_after' o='256' t='struct list_head *'/>
<mbr r='spi_replaced_transfers::inserted' o='320' t='size_t'/>
<mbr r='spi_replaced_transfers::inserted_transfers' o='384' t='struct spi_transfer []'/>
