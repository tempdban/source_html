<dec f='linux-4.14.y/include/linux/mdio.h' l='128' type='int mdio_set_flag(const struct mdio_if_info * mdio, int prtad, int devad, u16 addr, int mask, bool sense)'/>
<def f='linux-4.14.y/drivers/net/mdio.c' l='69' ll='85' type='int mdio_set_flag(const struct mdio_if_info * mdio, int prtad, int devad, u16 addr, int mask, bool sense)'/>
<dec f='linux-4.14.y/drivers/net/mdio.c' l='86' type='int mdio_set_flag(const struct mdio_if_info * , int , int , u16 , int , bool )'/>
<use f='linux-4.14.y/drivers/net/mdio.c' l='86' c='mdio_set_flag'/>
<use f='linux-4.14.y/drivers/net/mdio.c' l='86' u='a'/>
<use f='linux-4.14.y/drivers/net/mdio.c' l='86' u='a'/>
<use f='linux-4.14.y/drivers/net/mdio.c' l='145' u='c' c='mdio45_nway_restart'/>
<doc f='linux-4.14.y/drivers/net/mdio.c' l='57'>/**
 * mdio_set_flag - set or clear flag in an MDIO register
 * @mdio: MDIO interface
 * @prtad: PHY address
 * @devad: MMD address
 * @addr: Register address
 * @mask: Mask for flag (single bit set)
 * @sense: New value of flag
 *
 * This debounces changes: it does not write the register if the flag
 * already has the proper value.  Returns 0 on success, negative on error.
 */</doc>
