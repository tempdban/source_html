<dec f='linux-4.14.y/include/drm/drm_atomic_helper.h' l='71' type='void drm_atomic_helper_commit_modeset_enables(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1067' ll='1132' type='void drm_atomic_helper_commit_modeset_enables(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' type='void drm_atomic_helper_commit_modeset_enables(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' c='drm_atomic_helper_commit_modeset_enables'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1305' u='c' c='drm_atomic_helper_commit_tail'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1331' u='c' c='drm_atomic_helper_commit_tail_rpm'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1053'>/**
 * drm_atomic_helper_commit_modeset_enables - modeset commit to enable outputs
 * @dev: DRM device
 * @old_state: atomic state object with old state structures
 *
 * This function enables all the outputs with the new configuration which had to
 * be turned off for the update.
 *
 * For compatibility with legacy crtc helpers this should be called after
 * drm_atomic_helper_commit_planes(), which is what the default commit function
 * does. But drivers with different needs can group the modeset commits together
 * and do the plane commits at the end. This is useful for drivers doing runtime
 * PM since planes updates then only happen when the CRTC is actually enabled.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='342' u='c' c='vgdev_atomic_commit_tail'/>
<dec f='linux-4.14.y/include/drm/drm_atomic_helper.h' l='71' type='void drm_atomic_helper_commit_modeset_enables(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1067' ll='1132' type='void drm_atomic_helper_commit_modeset_enables(struct drm_device * dev, struct drm_atomic_state * old_state)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' type='void drm_atomic_helper_commit_modeset_enables(struct drm_device * , struct drm_atomic_state * )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' c='drm_atomic_helper_commit_modeset_enables'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1133' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1305' u='c' c='drm_atomic_helper_commit_tail'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1331' u='c' c='drm_atomic_helper_commit_tail_rpm'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_atomic_helper.c' l='1053'>/**
 * drm_atomic_helper_commit_modeset_enables - modeset commit to enable outputs
 * @dev: DRM device
 * @old_state: atomic state object with old state structures
 *
 * This function enables all the outputs with the new configuration which had to
 * be turned off for the update.
 *
 * For compatibility with legacy crtc helpers this should be called after
 * drm_atomic_helper_commit_planes(), which is what the default commit function
 * does. But drivers with different needs can group the modeset commits together
 * and do the plane commits at the end. This is useful for drivers doing runtime
 * PM since planes updates then only happen when the CRTC is actually enabled.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/virtio/virtgpu_display.c' l='342' u='c' c='vgdev_atomic_commit_tail'/>
