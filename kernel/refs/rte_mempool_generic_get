<def f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='1421' ll='1430' type='int rte_mempool_generic_get(struct rte_mempool * mp, void ** obj_table, unsigned int n, struct rte_mempool_cache * cache)'/>
<use f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='1459' u='c' c='rte_mempool_get_bulk'/>
<doc f='linux-4.18.y/lib/librte_mempool/rte_mempool.h' l='1401'>/**
 * Get several objects from the mempool.
 *
 * If cache is enabled, objects will be retrieved first from cache,
 * subsequently from the common pool. Note that it can return -ENOENT when
 * the local cache and common pool are empty, even if cache from other
 * lcores are full.
 *
 * @param mp
 *   A pointer to the mempool structure.
 * @param obj_table
 *   A pointer to a table of void * pointers (objects) that will be filled.
 * @param n
 *   The number of objects to get from mempool to obj_table.
 * @param cache
 *   A pointer to a mempool cache structure. May be NULL if not needed.
 * @return
 *   - 0: Success; objects taken.
 *   - -ENOENT: Not enough entries in the mempool; no object is retrieved.
 */</doc>
