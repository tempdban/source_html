<dec f='linux-4.18.y/include/linux/netdevice.h' l='2531' type='struct net_device * dev_get_by_name(struct net * net, const char * name)'/>
<def f='linux-4.18.y/net/core/dev.c' l='786' ll='796' type='struct net_device * dev_get_by_name(struct net * net, const char * name)'/>
<dec f='linux-4.18.y/net/core/dev.c' l='797' type='struct net_device * dev_get_by_name(struct net * , const char * )'/>
<use f='linux-4.18.y/net/core/dev.c' l='797' c='dev_get_by_name'/>
<use f='linux-4.18.y/net/core/dev.c' l='797' u='a'/>
<use f='linux-4.18.y/net/core/dev.c' l='797' u='a'/>
<doc f='linux-4.18.y/net/core/dev.c' l='774'>/**
 *	dev_get_by_name		- find a device by its name
 *	@net: the applicable net namespace
 *	@name: name to find
 *
 *	Find an interface by name. This can be called from any
 *	context and does its own locking. The returned handle has
 *	the usage count incremented and the caller must use dev_put() to
 *	release it when it is no longer needed. %NULL is returned if no
 *	matching device is found.
 */</doc>
<use f='linux-4.18.y/net/core/utils.c' l='348' u='c' c='inet6_pton'/>
<use f='linux-4.18.y/net/openvswitch/vport-netdev.c' l='95' u='c' c='ovs_netdev_link'/>
