<dec f='linux-4.18.y/include/net/netfilter/nf_conntrack_count.h' l='11' type='unsigned int nf_conncount_count(struct net * net, struct nf_conncount_data * data, const u32 * key, const struct nf_conntrack_tuple * tuple, const struct nf_conntrack_zone * zone)'/>
<def f='linux-4.18.y/net/netfilter/nf_conncount.c' l='301' ll='321' type='unsigned int nf_conncount_count(struct net * net, struct nf_conncount_data * data, const u32 * key, const struct nf_conntrack_tuple * tuple, const struct nf_conntrack_zone * zone)'/>
<dec f='linux-4.18.y/net/netfilter/nf_conncount.c' l='322' type='unsigned int nf_conncount_count(struct net * , struct nf_conncount_data * , const u32 * , const struct nf_conntrack_tuple * , const struct nf_conntrack_zone * )'/>
<use f='linux-4.18.y/net/netfilter/nf_conncount.c' l='322' c='nf_conncount_count'/>
<use f='linux-4.18.y/net/netfilter/nf_conncount.c' l='322' u='a'/>
<use f='linux-4.18.y/net/netfilter/nf_conncount.c' l='322' u='a'/>
<doc f='linux-4.18.y/net/netfilter/nf_conncount.c' l='298'>/* Count and return number of conntrack entries in &apos;net&apos; with particular &apos;key&apos;.
 * If &apos;tuple&apos; is not null, insert it into the accounting data structure.
 */</doc>
<use f='linux-4.18.y/net/netfilter/xt_connlimit.c' l='70' u='c' c='connlimit_mt'/>
<use f='linux-4.18.y/net/openvswitch/conntrack.c' l='1141' u='c' c='ovs_ct_check_limit'/>
<use f='linux-4.18.y/net/openvswitch/conntrack.c' l='1976' u='c' c='__ovs_ct_limit_get_zone_limit'/>
