<dec f='linux-4.18.y/drivers/net/tap/tap_netlink.h' l='33' type='int tap_nl_recv_ack(int nlsk_fd)'/>
<use f='linux-4.18.y/drivers/net/tap/tap_flow.c' l='1400' u='c' c='tap_flow_create'/>
<use f='linux-4.18.y/drivers/net/tap/tap_flow.c' l='1445' u='c' c='tap_flow_create'/>
<use f='linux-4.18.y/drivers/net/tap/tap_flow.c' l='1497' u='c' c='tap_flow_destroy_pmd'/>
<use f='linux-4.18.y/drivers/net/tap/tap_flow.c' l='1522' u='c' c='tap_flow_destroy_pmd'/>
<use f='linux-4.18.y/drivers/net/tap/tap_flow.c' l='1744' u='c' c='tap_flow_implicit_create'/>
<use f='linux-4.18.y/drivers/net/tap/tap_flow.c' l='1939' u='c' c='rss_enable'/>
<def f='linux-4.18.y/drivers/net/tap/tap_netlink.c' l='138' ll='142' type='int tap_nl_recv_ack(int nlsk_fd)'/>
<doc f='linux-4.18.y/drivers/net/tap/tap_netlink.c' l='128'>/**
 * Check that the kernel sends an appropriate ACK in response
 * to an tap_nl_send().
 *
 * @param[in] nlsk_fd
 *   The netlink socket file descriptor used for communication.
 *
 * @return
 *   0 on success, -1 otherwise with errno set.
 */</doc>
<use f='linux-4.18.y/drivers/net/tap/tap_tcmsgs.c' l='94' u='c' c='qdisc_del'/>
<use f='linux-4.18.y/drivers/net/tap/tap_tcmsgs.c' l='130' u='c' c='qdisc_add_multiq'/>
<use f='linux-4.18.y/drivers/net/tap/tap_tcmsgs.c' l='158' u='c' c='qdisc_add_ingress'/>
