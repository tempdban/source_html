<dec f='linux-4.18.y/include/linux/phy.h' l='256' type='struct phy_device * mdiobus_scan(struct mii_bus * bus, int addr)'/>
<use f='linux-4.18.y/drivers/net/phy/mdio_bus.c' l='410' u='c' c='__mdiobus_register'/>
<def f='linux-4.18.y/drivers/net/phy/mdio_bus.c' l='506' ll='528' type='struct phy_device * mdiobus_scan(struct mii_bus * bus, int addr)'/>
<dec f='linux-4.18.y/drivers/net/phy/mdio_bus.c' l='529' type='struct phy_device * mdiobus_scan(struct mii_bus * , int )'/>
<use f='linux-4.18.y/drivers/net/phy/mdio_bus.c' l='529' c='mdiobus_scan'/>
<use f='linux-4.18.y/drivers/net/phy/mdio_bus.c' l='529' u='a'/>
<use f='linux-4.18.y/drivers/net/phy/mdio_bus.c' l='529' u='a'/>
<doc f='linux-4.18.y/drivers/net/phy/mdio_bus.c' l='494'>/**
 * mdiobus_scan - scan a bus for MDIO devices.
 * @bus: mii_bus to scan
 * @addr: address on bus to scan
 *
 * This function scans the MDIO bus, looking for devices which can be
 * identified using a vendor/product ID in registers 2 and 3. Not all
 * MDIO devices have such registers, but PHY devices typically
 * do. Hence this function assumes anything found is a PHY, or can be
 * treated as a PHY. Other MDIO devices, such as switches, will
 * probably not be found during the scan.
 */</doc>
