<dec f='linux-4.14.y/security/selinux/ss/avtab.h' l='110' type='struct avtab_node * avtab_insert_nonunique(struct avtab * h, struct avtab_key * key, struct avtab_datum * datum)'/>
<def f='linux-4.14.y/security/selinux/ss/avtab.c' l='152' ll='181' type='struct avtab_node * avtab_insert_nonunique(struct avtab * h, struct avtab_key * key, struct avtab_datum * datum)'/>
<doc f='linux-4.14.y/security/selinux/ss/avtab.c' l='148'>/* Unlike avtab_insert(), this function allow multiple insertions of the same
 * key/specified mask into the table, as needed by the conditional avtab.
 * It also returns a pointer to the node inserted.
 */</doc>
<use f='linux-4.14.y/security/selinux/ss/conditional.c' l='328' u='c' c='cond_insertf'/>
<dec f='linux-4.14.y/security/selinux/ss/avtab.h' l='110' type='struct avtab_node * avtab_insert_nonunique(struct avtab * h, struct avtab_key * key, struct avtab_datum * datum)'/>
<def f='linux-4.14.y/security/selinux/ss/avtab.c' l='152' ll='181' type='struct avtab_node * avtab_insert_nonunique(struct avtab * h, struct avtab_key * key, struct avtab_datum * datum)'/>
<doc f='linux-4.14.y/security/selinux/ss/avtab.c' l='148'>/* Unlike avtab_insert(), this function allow multiple insertions of the same
 * key/specified mask into the table, as needed by the conditional avtab.
 * It also returns a pointer to the node inserted.
 */</doc>
<use f='linux-4.14.y/security/selinux/ss/conditional.c' l='328' u='c' c='cond_insertf'/>
