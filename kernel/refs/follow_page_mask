<dec f='linux-4.14.y/include/linux/mm.h' l='2359' type='struct page * follow_page_mask(struct vm_area_struct * vma, unsigned long address, unsigned int foll_flags, unsigned int * page_mask)'/>
<use f='linux-4.14.y/include/linux/mm.h' l='2367' u='c' c='follow_page'/>
<def f='linux-4.14.y/mm/gup.c' l='381' ll='419' type='struct page * follow_page_mask(struct vm_area_struct * vma, unsigned long address, unsigned int flags, unsigned int * page_mask)'/>
<use f='linux-4.14.y/mm/gup.c' l='699' u='c' c='__get_user_pages'/>
<doc f='linux-4.14.y/mm/gup.c' l='368'>/**
 * follow_page_mask - look up a page descriptor from a user-virtual address
 * @vma: vm_area_struct mapping @address
 * @address: virtual address to look up
 * @flags: flags modifying lookup behaviour
 * @page_mask: on output, *page_mask is set according to the size of the page
 *
 * @flags can have FOLL_ flags set, defined in &lt;linux/mm.h&gt;
 *
 * Returns the mapped (struct page *), %NULL if no mapping exists, or
 * an error pointer if there is a mapping to something not represented
 * by a page descriptor (see also vm_normal_page()).
 */</doc>
