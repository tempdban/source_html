<dec f='linux-4.14.y/include/linux/pagemap.h' l='546' type='void wait_for_stable_page(struct page * page)'/>
<use f='linux-4.14.y/fs/buffer.c' l='2546' u='c' c='block_page_mkwrite'/>
<use f='linux-4.14.y/fs/ext4/inode.c' l='1303' u='c' c='ext4_write_begin'/>
<use f='linux-4.14.y/fs/ext4/inode.c' l='3084' u='c' c='ext4_da_write_begin'/>
<use f='linux-4.14.y/fs/ext4/inode.c' l='6081' u='c' c='ext4_page_mkwrite'/>
<use f='linux-4.14.y/mm/filemap.c' l='2605' u='c' c='filemap_page_mkwrite'/>
<use f='linux-4.14.y/mm/filemap.c' l='2977' u='c' c='grab_cache_page_write_begin'/>
<def f='linux-4.14.y/mm/page-writeback.c' l='2848' ll='2852' type='void wait_for_stable_page(struct page * page)'/>
<dec f='linux-4.14.y/mm/page-writeback.c' l='2853' type='void wait_for_stable_page(struct page * )'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2853' c='wait_for_stable_page'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2853' u='a'/>
<use f='linux-4.14.y/mm/page-writeback.c' l='2853' u='a'/>
<doc f='linux-4.14.y/mm/page-writeback.c' l='2840'>/**
 * wait_for_stable_page() - wait for writeback to finish, if necessary.
 * @page:	The page to wait on.
 *
 * This function determines if the given page is related to a backing device
 * that requires page contents to be held stable during writeback.  If so, then
 * it will wait for any pending writeback to complete.
 */</doc>
