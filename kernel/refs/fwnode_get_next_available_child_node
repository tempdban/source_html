<dec f='linux-4.18.y/include/linux/property.h' l='86' type='struct fwnode_handle * fwnode_get_next_available_child_node(const struct fwnode_handle * fwnode, struct fwnode_handle * child)'/>
<def f='linux-4.18.y/drivers/base/property.c' l='1065' ll='1082' type='struct fwnode_handle * fwnode_get_next_available_child_node(const struct fwnode_handle * fwnode, struct fwnode_handle * child)'/>
<dec f='linux-4.18.y/drivers/base/property.c' l='1083' type='struct fwnode_handle * fwnode_get_next_available_child_node(const struct fwnode_handle * , struct fwnode_handle * )'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1083' c='fwnode_get_next_available_child_node'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1083' u='a'/>
<use f='linux-4.18.y/drivers/base/property.c' l='1083' u='a'/>
<doc f='linux-4.18.y/drivers/base/property.c' l='1059'>/**
 * fwnode_get_next_available_child_node - Return the next
 * available child node handle for a node
 * @fwnode: Firmware node to find the next child node for.
 * @child: Handle to one of the node&apos;s child nodes or a %NULL handle.
 */</doc>
