<def f='linux-4.18.y/include/linux/input.h' l='510' ll='530'/>
<size>120</size>
<doc f='linux-4.18.y/include/linux/input.h' l='483'>/**
 * struct ff_device - force-feedback part of an input device
 * @upload: Called to upload an new effect into device
 * @erase: Called to erase an effect from device
 * @playback: Called to request device to start playing specified effect
 * @set_gain: Called to set specified gain
 * @set_autocenter: Called to auto-center device
 * @destroy: called by input core when parent input device is being
 *	destroyed
 * @private: driver-specific data, will be freed automatically
 * @ffbit: bitmap of force feedback capabilities truly supported by
 *	device (not emulated like ones in input_dev-&gt;ffbit)
 * @mutex: mutex for serializing access to the device
 * @max_effects: maximum number of effects supported by device
 * @effects: pointer to an array of effects currently loaded into device
 * @effect_owners: array of effect owners; when file handle owning
 *	an effect gets closed the effect is automatically erased
 *
 * Every force-feedback device must implement upload() and playback()
 * methods; erase() is optional. set_gain() and set_autocenter() need
 * only be implemented if driver sets up FF_GAIN and FF_AUTOCENTER
 * bits.
 *
 * Note that playback(), set_gain() and set_autocenter() are called with
 * dev-&gt;event_lock spinlock held and interrupts off and thus may not
 * sleep.
 */</doc>
<mbr r='ff_device::upload' o='0' t='int (*)(struct input_dev *, struct ff_effect *, struct ff_effect *)'/>
<mbr r='ff_device::erase' o='64' t='int (*)(struct input_dev *, int)'/>
<mbr r='ff_device::playback' o='128' t='int (*)(struct input_dev *, int, int)'/>
<mbr r='ff_device::set_gain' o='192' t='void (*)(struct input_dev *, u16)'/>
<mbr r='ff_device::set_autocenter' o='256' t='void (*)(struct input_dev *, u16)'/>
<mbr r='ff_device::destroy' o='320' t='void (*)(struct ff_device *)'/>
<mbr r='ff_device::private' o='384' t='void *'/>
<mbr r='ff_device::ffbit' o='448' t='unsigned long [2]'/>
<mbr r='ff_device::mutex' o='576' t='struct mutex'/>
<mbr r='ff_device::max_effects' o='832' t='int'/>
<mbr r='ff_device::effects' o='896' t='struct ff_effect *'/>
<mbr r='ff_device::effect_owners' o='960' t='struct file *[]'/>
