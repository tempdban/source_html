<dec f='linux-4.14.y/drivers/usb/gadget/function/u_serial.h' l='64' type='int gserial_connect(struct gserial * , u8 port_num)'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/f_acm.c' l='459' u='c' c='acm_set_alt'/>
<doc f='linux-4.14.y/drivers/usb/gadget/function/u_serial.h' l='63'>/* connect/disconnect is handled by individual functions */</doc>
<use f='linux-4.14.y/drivers/usb/gadget/function/f_obex.c' l='231' u='c' c='obex_set_alt'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/f_serial.c' l='171' u='c' c='gser_set_alt'/>
<def f='linux-4.14.y/drivers/usb/gadget/function/u_serial.c' l='1428' ll='1491' type='int gserial_connect(struct gserial * gser, u8 port_num)'/>
<dec f='linux-4.14.y/drivers/usb/gadget/function/u_serial.c' l='1492' type='int gserial_connect(struct gserial * , u8 )'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/u_serial.c' l='1492' c='gserial_connect'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/u_serial.c' l='1492' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/function/u_serial.c' l='1492' u='a'/>
<doc f='linux-4.14.y/drivers/usb/gadget/function/u_serial.c' l='1407'>/**
 * gserial_connect - notify TTY I/O glue that USB link is active
 * @gser: the function, set up with endpoints and descriptors
 * @port_num: which port is active
 * Context: any (usually from irq)
 *
 * This is called activate endpoints and let the TTY layer know that
 * the connection is active ... not unlike &quot;carrier detect&quot;.  It won&apos;t
 * necessarily start I/O queues; unless the TTY is held open by any
 * task, there would be no point.  However, the endpoints will be
 * activated so the USB host can perform I/O, subject to basic USB
 * hardware flow control.
 *
 * Caller needs to have set up the endpoints and USB function in @dev
 * before calling this, as well as the appropriate (speed-specific)
 * endpoint descriptors, and also have allocate @port_num by calling
 * @gserial_alloc_line().
 *
 * Returns negative errno or zero.
 * On success, ep-&gt;driver_data will be overwritten.
 */</doc>
