<dec f='linux-4.14.y/include/linux/timer.h' l='241' type='unsigned long round_jiffies_relative(unsigned long j)'/>
<use f='linux-4.14.y/drivers/ata/libata-scsi.c' l='4643' u='c' c='ata_scsi_scan_host'/>
<def f='linux-4.14.y/kernel/time/timer.c' l='384' ll='387' type='unsigned long round_jiffies_relative(unsigned long j)'/>
<dec f='linux-4.14.y/kernel/time/timer.c' l='388' type='unsigned long round_jiffies_relative(unsigned long )'/>
<use f='linux-4.14.y/kernel/time/timer.c' l='388' c='round_jiffies_relative'/>
<use f='linux-4.14.y/kernel/time/timer.c' l='388' u='a'/>
<use f='linux-4.14.y/kernel/time/timer.c' l='388' u='a'/>
<doc f='linux-4.14.y/kernel/time/timer.c' l='369'>/**
 * round_jiffies_relative - function to round jiffies to a full second
 * @j: the time in (relative) jiffies that should be rounded
 *
 * round_jiffies_relative() rounds a time delta  in the future (in jiffies)
 * up or down to (approximately) full seconds. This is useful for timers
 * for which the exact time they fire does not matter too much, as long as
 * they fire approximately every X seconds.
 *
 * By rounding these timers to whole seconds, all such timers will fire
 * at the same time, rather than at various times spread out. The goal
 * of this is to have the CPU wake up less, which saves power.
 *
 * The return value is the rounded version of the @j parameter.
 */</doc>
<use f='linux-4.14.y/mm/slab.c' l='4085' u='c' c='cache_reap'/>
<use f='linux-4.14.y/mm/vmstat.c' l='1775' u='c' c='vmstat_update'/>
<use f='linux-4.14.y/mm/vmstat.c' l='1864' u='c' c='vmstat_shepherd'/>
<use f='linux-4.14.y/mm/vmstat.c' l='1876' u='c' c='start_shepherd_timer'/>
<dec f='linux-4.14.y/include/linux/timer.h' l='241' type='unsigned long round_jiffies_relative(unsigned long j)'/>
<use f='linux-4.14.y/drivers/ata/libata-scsi.c' l='4643' u='c' c='ata_scsi_scan_host'/>
<use f='linux-4.14.y/kernel/livepatch/transition.c' l='406' u='c' c='klp_try_complete_transition'/>
<def f='linux-4.14.y/kernel/time/timer.c' l='384' ll='387' type='unsigned long round_jiffies_relative(unsigned long j)'/>
<dec f='linux-4.14.y/kernel/time/timer.c' l='388' type='unsigned long round_jiffies_relative(unsigned long )'/>
<use f='linux-4.14.y/kernel/time/timer.c' l='388' c='round_jiffies_relative'/>
<use f='linux-4.14.y/kernel/time/timer.c' l='388' u='a'/>
<use f='linux-4.14.y/kernel/time/timer.c' l='388' u='a'/>
<doc f='linux-4.14.y/kernel/time/timer.c' l='369'>/**
 * round_jiffies_relative - function to round jiffies to a full second
 * @j: the time in (relative) jiffies that should be rounded
 *
 * round_jiffies_relative() rounds a time delta  in the future (in jiffies)
 * up or down to (approximately) full seconds. This is useful for timers
 * for which the exact time they fire does not matter too much, as long as
 * they fire approximately every X seconds.
 *
 * By rounding these timers to whole seconds, all such timers will fire
 * at the same time, rather than at various times spread out. The goal
 * of this is to have the CPU wake up less, which saves power.
 *
 * The return value is the rounded version of the @j parameter.
 */</doc>
<use f='linux-4.14.y/mm/slab.c' l='4085' u='c' c='cache_reap'/>
<use f='linux-4.14.y/mm/vmstat.c' l='1775' u='c' c='vmstat_update'/>
<use f='linux-4.14.y/mm/vmstat.c' l='1864' u='c' c='vmstat_shepherd'/>
<use f='linux-4.14.y/mm/vmstat.c' l='1876' u='c' c='start_shepherd_timer'/>
