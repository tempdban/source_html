<dec f='linux-4.14.y/fs/fuse/fuse_i.h' l='861' type='void fuse_invalidate_entry_cache(struct dentry * entry)'/>
<def f='linux-4.14.y/fs/fuse/dir.c' l='127' ll='130' type='void fuse_invalidate_entry_cache(struct dentry * entry)'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='139' u='c' c='fuse_invalidate_entry'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='383' u='c' c='fuse_lookup'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='689' u='c' c='fuse_unlink'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='711' u='c' c='fuse_rmdir'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='756' u='c' c='fuse_rename_common'/>
<use f='linux-4.14.y/fs/fuse/dir.c' l='1783' u='c' c='fuse_setattr'/>
<doc f='linux-4.14.y/fs/fuse/dir.c' l='119'>/*
 * Just mark the entry as stale, so that a next attempt to look it up
 * will result in a new lookup call to userspace
 *
 * This is called when a dentry is about to become negative and the
 * timeout is unknown (unlink, rmdir, rename and in some cases
 * lookup)
 */</doc>
<use f='linux-4.14.y/fs/fuse/inode.c' l='698' u='c' c='fuse_get_dentry'/>
<use f='linux-4.14.y/fs/fuse/inode.c' l='791' u='c' c='fuse_get_parent'/>
