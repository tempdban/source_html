<dec f='linux-4.14.y/include/drm/drm_scdc_helper.h' l='135' type='bool drm_scdc_set_high_tmds_clock_ratio(struct i2c_adapter * adapter, bool set)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='221' ll='250' type='bool drm_scdc_set_high_tmds_clock_ratio(struct i2c_adapter * adapter, bool set)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' type='bool drm_scdc_set_high_tmds_clock_ratio(struct i2c_adapter * , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' c='drm_scdc_set_high_tmds_clock_ratio'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='192'>/**
 * drm_scdc_set_high_tmds_clock_ratio - set TMDS clock ratio
 * @adapter: I2C adapter for DDC channel
 * @set: ret or reset the high clock ratio
 *
 *
 *	TMDS clock ratio calculations go like this:
 *		TMDS character = 10 bit TMDS encoded value
 *
 *		TMDS character rate = The rate at which TMDS characters are
 *		transmitted (Mcsc)
 *
 *		TMDS bit rate = 10x TMDS character rate
 *
 *	As per the spec:
 *		TMDS clock rate for pixel clock &lt; 340 MHz = 1x the character
 *		rate = 1/10 pixel clock rate
 *
 *		TMDS clock rate for pixel clock &gt; 340 MHz = 0.25x the character
 *		rate = 1/40 pixel clock rate
 *
 *	Writes to the TMDS config register over SCDC channel, and:
 *		sets TMDS clock ratio to 1/40 when set = 1
 *
 *		sets TMDS clock ratio to 1/10 when set = 0
 *
 * Returns:
 * True if write is successful, false otherwise.
 */</doc>
<dec f='linux-4.14.y/include/drm/drm_scdc_helper.h' l='135' type='bool drm_scdc_set_high_tmds_clock_ratio(struct i2c_adapter * adapter, bool set)'/>
<def f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='221' ll='250' type='bool drm_scdc_set_high_tmds_clock_ratio(struct i2c_adapter * adapter, bool set)'/>
<dec f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' type='bool drm_scdc_set_high_tmds_clock_ratio(struct i2c_adapter * , bool )'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' c='drm_scdc_set_high_tmds_clock_ratio'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' u='a'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='251' u='a'/>
<doc f='linux-4.14.y/drivers/gpu/drm/drm_scdc_helper.c' l='192'>/**
 * drm_scdc_set_high_tmds_clock_ratio - set TMDS clock ratio
 * @adapter: I2C adapter for DDC channel
 * @set: ret or reset the high clock ratio
 *
 *
 *	TMDS clock ratio calculations go like this:
 *		TMDS character = 10 bit TMDS encoded value
 *
 *		TMDS character rate = The rate at which TMDS characters are
 *		transmitted (Mcsc)
 *
 *		TMDS bit rate = 10x TMDS character rate
 *
 *	As per the spec:
 *		TMDS clock rate for pixel clock &lt; 340 MHz = 1x the character
 *		rate = 1/10 pixel clock rate
 *
 *		TMDS clock rate for pixel clock &gt; 340 MHz = 0.25x the character
 *		rate = 1/40 pixel clock rate
 *
 *	Writes to the TMDS config register over SCDC channel, and:
 *		sets TMDS clock ratio to 1/40 when set = 1
 *
 *		sets TMDS clock ratio to 1/10 when set = 0
 *
 * Returns:
 * True if write is successful, false otherwise.
 */</doc>
