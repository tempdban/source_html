<dec f='linux-4.18.y/include/linux/cpuidle.h' l='148' type='void cpuidle_unregister_driver(struct cpuidle_driver * drv)'/>
<use f='linux-4.18.y/drivers/acpi/processor_idle.c' l='1473' u='c' c='acpi_processor_power_init'/>
<use f='linux-4.18.y/drivers/acpi/processor_idle.c' l='1492' u='c' c='acpi_processor_power_exit'/>
<use f='linux-4.18.y/drivers/cpuidle/cpuidle.c' l='601' u='c' c='cpuidle_unregister'/>
<def f='linux-4.18.y/drivers/cpuidle/driver.c' l='275' ll='280' type='void cpuidle_unregister_driver(struct cpuidle_driver * drv)'/>
<dec f='linux-4.18.y/drivers/cpuidle/driver.c' l='281' type='void cpuidle_unregister_driver(struct cpuidle_driver * )'/>
<use f='linux-4.18.y/drivers/cpuidle/driver.c' l='281' c='cpuidle_unregister_driver'/>
<use f='linux-4.18.y/drivers/cpuidle/driver.c' l='281' u='a'/>
<use f='linux-4.18.y/drivers/cpuidle/driver.c' l='281' u='a'/>
<doc f='linux-4.18.y/drivers/cpuidle/driver.c' l='267'>/**
 * cpuidle_unregister_driver - unregisters a driver
 * @drv: a pointer to a valid struct cpuidle_driver
 *
 * Unregisters the cpuidle driver under a lock to prevent concurrent attempts
 * to [un]register the driver from occuring at the same time.  @drv has to
 * match the currently registered driver.
 */</doc>
