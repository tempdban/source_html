<dec f='linux-4.14.y/include/linux/usb/composite.h' l='419' type='void usb_composite_setup_continue(struct usb_composite_dev * cdev)'/>
<def f='linux-4.14.y/drivers/usb/gadget/composite.c' l='2378' ll='2403' type='void usb_composite_setup_continue(struct usb_composite_dev * cdev)'/>
<dec f='linux-4.14.y/drivers/usb/gadget/composite.c' l='2404' type='void usb_composite_setup_continue(struct usb_composite_dev * )'/>
<use f='linux-4.14.y/drivers/usb/gadget/composite.c' l='2404' c='usb_composite_setup_continue'/>
<use f='linux-4.14.y/drivers/usb/gadget/composite.c' l='2404' u='a'/>
<use f='linux-4.14.y/drivers/usb/gadget/composite.c' l='2404' u='a'/>
<doc f='linux-4.14.y/drivers/usb/gadget/composite.c' l='2368'>/**
 * usb_composite_setup_continue() - Continue with the control transfer
 * @cdev: the composite device who&apos;s control transfer was kept waiting
 *
 * This function must be called by the USB function driver to continue
 * with the control transfer&apos;s data/status stage in case it had requested to
 * delay the data/status stages. A USB function&apos;s setup handler (e.g. set_alt())
 * can request the composite framework to delay the setup request&apos;s data/status
 * stages by returning USB_GADGET_DELAYED_STATUS.
 */</doc>
<use f='linux-4.14.y/drivers/usb/gadget/function/f_mass_storage.c' l='2418' u='c' c='handle_exception'/>
