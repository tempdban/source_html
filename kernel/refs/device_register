<dec f='linux-4.14.y/include/linux/device.h' l='1115' type='int device_register(struct device * dev)'/>
<doc f='linux-4.14.y/include/linux/device.h' l='1112'>/*
 * High level routines for use by the bus drivers
 */</doc>
<use f='linux-4.14.y/drivers/base/bus.c' l='1166' u='c' c='subsys_register'/>
<def f='linux-4.14.y/drivers/base/core.c' l='1917' ll='1921' type='int device_register(struct device * dev)'/>
<dec f='linux-4.14.y/drivers/base/core.c' l='1922' type='int device_register(struct device * )'/>
<use f='linux-4.14.y/drivers/base/core.c' l='1922' c='device_register'/>
<use f='linux-4.14.y/drivers/base/core.c' l='1922' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='1922' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2367' u='c' c='__root_device_register'/>
<doc f='linux-4.14.y/drivers/base/core.c' l='1899'>/**
 * device_register - register a device with the system.
 * @dev: pointer to the device structure
 *
 * This happens in two clean steps - initialize the device
 * and add it to the system. The two steps can be called
 * separately, but this is the easiest and most common.
 * I.e. you should only call the two helpers separately if
 * have a clearly defined need to use and refcount the device
 * before it is added to the hierarchy.
 *
 * For more information, see the kerneldoc for device_initialize()
 * and device_add().
 *
 * NOTE: _Never_ directly free @dev after calling this function, even
 * if it returned an error! Always use put_device() to give up the
 * reference initialized in this function instead.
 */</doc>
<use f='linux-4.14.y/drivers/base/cpu.c' l='374' u='c' c='register_cpu'/>
<use f='linux-4.14.y/drivers/base/platform.c' l='1155' u='c' c='platform_bus_init'/>
<use f='linux-4.14.y/drivers/dma/dmaengine.c' l='1046' u='c' c='dma_async_device_register'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_sysfs.c' l='378' u='c' c='drm_class_device_register'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='781' u='c' c='i2c_new_device'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1256' u='c' c='i2c_register_adapter'/>
<use f='linux-4.14.y/drivers/pci/pcie/portdrv_core.c' l='316' u='c' c='pcie_device_init'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='792' u='c' c='pci_register_host_bridge'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='810' u='c' c='pci_register_host_bridge'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='919' u='c' c='pci_alloc_child_bus'/>
<use f='linux-4.14.y/drivers/pnp/card.c' l='241' u='c' c='pnp_add_card'/>
<use f='linux-4.14.y/drivers/pnp/core.c' l='86' u='c' c='pnp_register_protocol'/>
<use f='linux-4.14.y/drivers/pnp/core.c' l='196' u='c' c='__pnp_add_device'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='223' u='c' c='iscsi_create_endpoint'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='768' u='c' c='iscsi_create_iface'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1253' u='c' c='iscsi_create_flashnode_sess'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1301' u='c' c='iscsi_create_flashnode_conn'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2254' u='c' c='iscsi_create_conn'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='4429' u='c' c='iscsi_register_transport'/>
<use f='linux-4.14.y/drivers/thermal/thermal_core.c' l='978' u='c' c='__thermal_cooling_device_register'/>
<use f='linux-4.14.y/drivers/thermal/thermal_core.c' l='1235' u='c' c='thermal_zone_device_register'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='2975' u='c' c='tty_register_device_attr'/>
<use f='linux-4.14.y/drivers/virtio/virtio.c' l='335' u='c' c='register_virtio_device'/>
<use f='linux-4.14.y/drivers/virtio/virtio_mmio.c' l='636' u='c' c='vm_cmdline_set'/>
<use f='linux-4.14.y/kernel/time/clockevents.c' l='719' u='c' c='tick_broadcast_init_sysfs'/>
<use f='linux-4.14.y/kernel/time/clockevents.c' l='743' u='c' c='tick_init_sysfs'/>
<use f='linux-4.14.y/kernel/time/clocksource.c' l='1019' u='c' c='init_clocksource_sysfs'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='5351' u='c' c='workqueue_sysfs_register'/>
<dec f='linux-4.14.y/include/linux/device.h' l='1115' type='int device_register(struct device * dev)'/>
<doc f='linux-4.14.y/include/linux/device.h' l='1112'>/*
 * High level routines for use by the bus drivers
 */</doc>
<use f='linux-4.14.y/drivers/base/bus.c' l='1166' u='c' c='subsys_register'/>
<def f='linux-4.14.y/drivers/base/core.c' l='1917' ll='1921' type='int device_register(struct device * dev)'/>
<dec f='linux-4.14.y/drivers/base/core.c' l='1922' type='int device_register(struct device * )'/>
<use f='linux-4.14.y/drivers/base/core.c' l='1922' c='device_register'/>
<use f='linux-4.14.y/drivers/base/core.c' l='1922' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='1922' u='a'/>
<use f='linux-4.14.y/drivers/base/core.c' l='2367' u='c' c='__root_device_register'/>
<doc f='linux-4.14.y/drivers/base/core.c' l='1899'>/**
 * device_register - register a device with the system.
 * @dev: pointer to the device structure
 *
 * This happens in two clean steps - initialize the device
 * and add it to the system. The two steps can be called
 * separately, but this is the easiest and most common.
 * I.e. you should only call the two helpers separately if
 * have a clearly defined need to use and refcount the device
 * before it is added to the hierarchy.
 *
 * For more information, see the kerneldoc for device_initialize()
 * and device_add().
 *
 * NOTE: _Never_ directly free @dev after calling this function, even
 * if it returned an error! Always use put_device() to give up the
 * reference initialized in this function instead.
 */</doc>
<use f='linux-4.14.y/drivers/base/cpu.c' l='374' u='c' c='register_cpu'/>
<use f='linux-4.14.y/drivers/base/platform.c' l='1155' u='c' c='platform_bus_init'/>
<use f='linux-4.14.y/drivers/dma/dmaengine.c' l='1046' u='c' c='dma_async_device_register'/>
<use f='linux-4.14.y/drivers/gpu/drm/drm_sysfs.c' l='378' u='c' c='drm_class_device_register'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='781' u='c' c='i2c_new_device'/>
<use f='linux-4.14.y/drivers/i2c/i2c-core-base.c' l='1256' u='c' c='i2c_register_adapter'/>
<use f='linux-4.14.y/drivers/pci/pcie/portdrv_core.c' l='316' u='c' c='pcie_device_init'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='792' u='c' c='pci_register_host_bridge'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='810' u='c' c='pci_register_host_bridge'/>
<use f='linux-4.14.y/drivers/pci/probe.c' l='919' u='c' c='pci_alloc_child_bus'/>
<use f='linux-4.14.y/drivers/pnp/card.c' l='241' u='c' c='pnp_add_card'/>
<use f='linux-4.14.y/drivers/pnp/core.c' l='86' u='c' c='pnp_register_protocol'/>
<use f='linux-4.14.y/drivers/pnp/core.c' l='196' u='c' c='__pnp_add_device'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='223' u='c' c='iscsi_create_endpoint'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='768' u='c' c='iscsi_create_iface'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1253' u='c' c='iscsi_create_flashnode_sess'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='1301' u='c' c='iscsi_create_flashnode_conn'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='2254' u='c' c='iscsi_create_conn'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='4429' u='c' c='iscsi_register_transport'/>
<use f='linux-4.14.y/drivers/thermal/thermal_core.c' l='978' u='c' c='__thermal_cooling_device_register'/>
<use f='linux-4.14.y/drivers/thermal/thermal_core.c' l='1235' u='c' c='thermal_zone_device_register'/>
<use f='linux-4.14.y/drivers/tty/tty_io.c' l='2975' u='c' c='tty_register_device_attr'/>
<use f='linux-4.14.y/drivers/virtio/virtio.c' l='335' u='c' c='register_virtio_device'/>
<use f='linux-4.14.y/drivers/virtio/virtio_mmio.c' l='636' u='c' c='vm_cmdline_set'/>
<use f='linux-4.14.y/kernel/time/clockevents.c' l='719' u='c' c='tick_broadcast_init_sysfs'/>
<use f='linux-4.14.y/kernel/time/clockevents.c' l='743' u='c' c='tick_init_sysfs'/>
<use f='linux-4.14.y/kernel/time/clocksource.c' l='1019' u='c' c='init_clocksource_sysfs'/>
<use f='linux-4.14.y/kernel/workqueue.c' l='5351' u='c' c='workqueue_sysfs_register'/>
