<dec f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.h' l='297' type='void vmw_kms_helper_buffer_finish(struct vmw_private * dev_priv, struct drm_file * file_priv, struct vmw_dma_buffer * buf, struct vmw_fence_obj ** out_fence, struct drm_vmw_fence_rep * user_fence_rep)'/>
<def f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2496' ll='2521' type='void vmw_kms_helper_buffer_finish(struct vmw_private * dev_priv, struct drm_file * file_priv, struct vmw_dma_buffer * buf, struct vmw_fence_obj ** out_fence, struct drm_vmw_fence_rep * user_fence_rep)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2612' u='c' c='vmw_kms_helper_resource_finish'/>
<doc f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2481'>/**
 * vmw_kms_helper_buffer_finish - Unreserve and fence a buffer object after
 * kms command submission.
 *
 * @dev_priv: Pointer to a device private structure.
 * @file_priv: Pointer to a struct drm_file representing the caller&apos;s
 * connection. Must be set to NULL if @user_fence_rep is NULL, and conversely
 * if non-NULL, @user_fence_rep must be non-NULL.
 * @buf: The buffer object.
 * @out_fence:  Optional pointer to a fence pointer. If non-NULL, a
 * ref-counted fence pointer is returned here.
 * @user_fence_rep: Optional pointer to a user-space provided struct
 * drm_vmw_fence_rep. If provided, @file_priv must also be provided and the
 * function copies fence data to user-space in a fail-safe manner.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='1046' u='c' c='vmw_kms_sou_do_dmabuf_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='1141' u='c' c='vmw_kms_sou_readback'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='857' u='c' c='vmw_kms_stdu_dma'/>
<dec f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.h' l='297' type='void vmw_kms_helper_buffer_finish(struct vmw_private * dev_priv, struct drm_file * file_priv, struct vmw_dma_buffer * buf, struct vmw_fence_obj ** out_fence, struct drm_vmw_fence_rep * user_fence_rep)'/>
<def f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2496' ll='2521' type='void vmw_kms_helper_buffer_finish(struct vmw_private * dev_priv, struct drm_file * file_priv, struct vmw_dma_buffer * buf, struct vmw_fence_obj ** out_fence, struct drm_vmw_fence_rep * user_fence_rep)'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2612' u='c' c='vmw_kms_helper_resource_finish'/>
<doc f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_kms.c' l='2481'>/**
 * vmw_kms_helper_buffer_finish - Unreserve and fence a buffer object after
 * kms command submission.
 *
 * @dev_priv: Pointer to a device private structure.
 * @file_priv: Pointer to a struct drm_file representing the caller&apos;s
 * connection. Must be set to NULL if @user_fence_rep is NULL, and conversely
 * if non-NULL, @user_fence_rep must be non-NULL.
 * @buf: The buffer object.
 * @out_fence:  Optional pointer to a fence pointer. If non-NULL, a
 * ref-counted fence pointer is returned here.
 * @user_fence_rep: Optional pointer to a user-space provided struct
 * drm_vmw_fence_rep. If provided, @file_priv must also be provided and the
 * function copies fence data to user-space in a fail-safe manner.
 */</doc>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='1046' u='c' c='vmw_kms_sou_do_dmabuf_dirty'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_scrn.c' l='1141' u='c' c='vmw_kms_sou_readback'/>
<use f='linux-4.14.y/drivers/gpu/drm/vmwgfx/vmwgfx_stdu.c' l='857' u='c' c='vmw_kms_stdu_dma'/>
