<dec f='linux-4.14.y/include/linux/skbuff.h' l='2076' type='void * skb_pull(struct sk_buff * skb, unsigned int len)'/>
<use f='linux-4.14.y/drivers/scsi/scsi_netlink.c' l='116' u='c' c='scsi_nl_rcv_msg'/>
<use f='linux-4.14.y/drivers/scsi/scsi_transport_iscsi.c' l='3712' u='c' c='iscsi_if_rx'/>
<def f='linux-4.14.y/net/core/skbuff.c' l='1732' ll='1735' type='void * skb_pull(struct sk_buff * skb, unsigned int len)'/>
<dec f='linux-4.14.y/net/core/skbuff.c' l='1736' type='void * skb_pull(struct sk_buff * , unsigned int )'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1736' c='skb_pull'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1736' u='a'/>
<use f='linux-4.14.y/net/core/skbuff.c' l='1736' u='a'/>
<doc f='linux-4.14.y/net/core/skbuff.c' l='1722'>/**
 *	skb_pull - remove data from the start of a buffer
 *	@skb: buffer to use
 *	@len: amount of data to remove
 *
 *	This function removes data from the start of a buffer, returning
 *	the memory to the headroom. A pointer to the next data in the buffer
 *	is returned. Once the data has been pulled future pushes will overwrite
 *	the old data.
 */</doc>
<use f='linux-4.14.y/net/ipv4/ip_sockglue.c' l='418' u='c' c='ip_icmp_error'/>
<use f='linux-4.14.y/net/ipv4/tcp_output.c' l='2128' u='c' c='tcp_mtu_probe'/>
<use f='linux-4.14.y/net/netfilter/nfnetlink.c' l='436' u='c' c='nfnetlink_rcv_batch'/>
<use f='linux-4.14.y/net/netfilter/nfnetlink.c' l='488' u='c' c='nfnetlink_rcv_skb_batch'/>
<use f='linux-4.14.y/net/netlink/af_netlink.c' l='2437' u='c' c='netlink_rcv_skb'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='2101' u='c' c='packet_rcv'/>
<use f='linux-4.14.y/net/packet/af_packet.c' l='2223' u='c' c='tpacket_rcv'/>
