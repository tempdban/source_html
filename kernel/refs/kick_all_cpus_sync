<dec f='linux-4.14.y/include/linux/smp.h' l='107' type='void kick_all_cpus_sync()'/>
<def f='linux-4.14.y/kernel/smp.c' l='719' ll='724' type='void kick_all_cpus_sync()'/>
<dec f='linux-4.14.y/kernel/smp.c' l='725' type='void kick_all_cpus_sync()'/>
<use f='linux-4.14.y/kernel/smp.c' l='725' c='kick_all_cpus_sync'/>
<use f='linux-4.14.y/kernel/smp.c' l='725' u='a'/>
<use f='linux-4.14.y/kernel/smp.c' l='725' u='a'/>
<doc f='linux-4.14.y/kernel/smp.c' l='708'>/**
 * kick_all_cpus_sync - Force all cpus out of idle
 *
 * Used to synchronize the update of pm_idle function pointer. It&apos;s
 * called after the pointer is updated and returns after the dummy
 * callback function has been executed on all cpus. The execution of
 * the function can only happen on the remote cpus after they have
 * left the idle function which had been called via pm_idle function
 * pointer. So it&apos;s guaranteed that nothing uses the previous pointer
 * anymore.
 */</doc>
<use f='linux-4.14.y/mm/slab.c' l='3867' u='c' c='__do_tune_cpucache'/>
