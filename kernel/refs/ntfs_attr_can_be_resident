<dec f='linux-4.18.y/fs/ntfs/attrib.h' l='99' type='int ntfs_attr_can_be_resident(const ntfs_volume * vol, const ATTR_TYPE type)'/>
<def f='linux-4.18.y/fs/ntfs/attrib.c' l='1410' ll='1415' type='int ntfs_attr_can_be_resident(const ntfs_volume * vol, const ATTR_TYPE type)'/>
<doc f='linux-4.18.y/fs/ntfs/attrib.c' l='1392'>/**
 * ntfs_attr_can_be_resident - check if an attribute can be resident
 * @vol:	ntfs volume to which the attribute belongs
 * @type:	attribute type which to check
 *
 * Check whether the attribute of @type on the ntfs volume @vol is allowed to
 * be resident.  This information is derived from our ntfs knowledge and may
 * not be completely accurate, especially when user defined attributes are
 * present.  Basically we allow everything to be resident except for index
 * allocation and $EA attributes.
 *
 * Return 0 if the attribute is allowed to be non-resident and -EPERM if not.
 *
 * Warning: In the system file $MFT the attribute $Bitmap must be non-resident
 *	    otherwise windows will not boot (blue screen of death)!  We cannot
 *	    check for this here as we do not know which inode&apos;s $Bitmap is
 *	    being asked about so the caller needs to special case this.
 */</doc>
