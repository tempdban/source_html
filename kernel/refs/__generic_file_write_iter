<dec f='linux-4.18.y/include/linux/fs.h' l='2960' type='ssize_t __generic_file_write_iter(struct kiocb * , struct iov_iter * )'/>
<use f='linux-4.18.y/fs/block_dev.c' l='1914' u='c' c='blkdev_write_iter'/>
<use f='linux-4.18.y/fs/ext4/file.c' l='266' u='c' c='ext4_file_write_iter'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='2981' u='c' c='f2fs_file_write_iter'/>
<use f='linux-4.18.y/fs/udf/file.c' l='169' u='c' c='udf_file_write_iter'/>
<def f='linux-4.18.y/mm/filemap.c' l='3199' ll='3271' type='ssize_t __generic_file_write_iter(struct kiocb * iocb, struct iov_iter * from)'/>
<dec f='linux-4.18.y/mm/filemap.c' l='3272' type='ssize_t __generic_file_write_iter(struct kiocb * , struct iov_iter * )'/>
<use f='linux-4.18.y/mm/filemap.c' l='3272' c='__generic_file_write_iter'/>
<use f='linux-4.18.y/mm/filemap.c' l='3272' u='a'/>
<use f='linux-4.18.y/mm/filemap.c' l='3272' u='a'/>
<use f='linux-4.18.y/mm/filemap.c' l='3292' u='c' c='generic_file_write_iter'/>
<doc f='linux-4.18.y/mm/filemap.c' l='3182'>/**
 * __generic_file_write_iter - write data to a file
 * @iocb:	IO state structure (file, offset, etc.)
 * @from:	iov_iter with data to write
 *
 * This function does all the work needed for actually writing data to a
 * file. It does all basic checks, removes SUID from the file, updates
 * modification times and calls proper subroutines depending on whether we
 * do direct IO or a standard buffered write.
 *
 * It expects i_mutex to be grabbed unless we work on a block device or similar
 * object which does not need locking at all.
 *
 * This function does *not* take care of syncing data in case of O_SYNC write.
 * A caller has to handle it. This is mainly due to the fact that we want to
 * avoid syncing under i_mutex.
 */</doc>
