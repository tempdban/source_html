<dec f='linux-4.18.y/include/linux/key.h' l='310' type='int key_link(struct key * keyring, struct key * key)'/>
<use f='linux-4.18.y/security/keys/keyctl.c' l='522' u='c' c='keyctl_keyring_link'/>
<use f='linux-4.18.y/security/keys/keyctl.c' l='723' u='c' c='keyctl_keyring_search'/>
<def f='linux-4.18.y/security/keys/keyring.c' l='1356' ll='1379' type='int key_link(struct key * keyring, struct key * key)'/>
<dec f='linux-4.18.y/security/keys/keyring.c' l='1380' type='int key_link(struct key * , struct key * )'/>
<use f='linux-4.18.y/security/keys/keyring.c' l='1380' c='key_link'/>
<use f='linux-4.18.y/security/keys/keyring.c' l='1380' u='a'/>
<use f='linux-4.18.y/security/keys/keyring.c' l='1380' u='a'/>
<doc f='linux-4.18.y/security/keys/keyring.c' l='1336'>/**
 * key_link - Link a key to a keyring
 * @keyring: The keyring to make the link in.
 * @key: The key to link to.
 *
 * Make a link in a keyring to a key, such that the keyring holds a reference
 * on that key and the key can potentially be found by searching that keyring.
 *
 * This function will write-lock the keyring&apos;s semaphore and will consume some
 * of the user&apos;s key data quota to hold the link.
 *
 * Returns 0 if successful, -ENOTDIR if the keyring isn&apos;t a keyring,
 * -EKEYREVOKED if the keyring has been revoked, -ENFILE if the keyring is
 * full, -EDQUOT if there is insufficient key data quota remaining to add
 * another link or -ENOMEM if there&apos;s insufficient memory.
 *
 * It is assumed that the caller has checked that it is permitted for a link to
 * be made (the keyring should have Write permission and the key Link
 * permission).
 */</doc>
<use f='linux-4.18.y/security/keys/process_keys.c' l='108' u='c' c='install_user_keyrings'/>
<use f='linux-4.18.y/security/keys/request_key.c' l='128' u='c' c='call_sbin_request_key'/>
<use f='linux-4.18.y/security/keys/request_key.c' l='577' u='c' c='request_key_and_link'/>
