<dec f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.h' l='98' type='s32 e1000_read_phy_reg_mdic(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_80003es2lan.c' l='510' u='c' c='e1000_read_phy_reg_gg82563_80003es2lan'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_80003es2lan.c' l='519' u='c' c='e1000_read_phy_reg_gg82563_80003es2lan'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_80003es2lan.c' l='525' u='c' c='e1000_read_phy_reg_gg82563_80003es2lan'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_80003es2lan.c' l='581' u='c' c='e1000_write_phy_reg_gg82563_80003es2lan'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_82575.c' l='2384' u='c' c='e1000_read_phy_reg_82580'/>
<def f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='290' ll='345' type='s32 e1000_read_phy_reg_mdic(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='667' u='c' c='e1000_read_phy_reg_m88'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='757' u='c' c='__e1000_read_phy_reg_igp'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='3220' u='c' c='e1000_read_phy_reg_bm'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='3266' u='c' c='e1000_read_phy_reg_bm2'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='3347' u='c' c='e1000_enable_phy_wakeup_reg_access_bm'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='3471' u='c' c='e1000_access_phy_wakeup_reg_bm'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='3585' u='c' c='__e1000_read_phy_reg_hv'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='3814' u='c' c='e1000_access_phy_debug_regs_hv'/>
<use f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='4098' u='c' c='e1000_read_phy_reg_gs40g'/>
<doc f='linux-4.18.y/drivers/net/e1000/base/e1000_phy.c' l='281'>/**
 *  e1000_read_phy_reg_mdic - Read MDI control register
 *  @hw: pointer to the HW structure
 *  @offset: register offset to be read
 *  @data: pointer to the read data
 *
 *  Reads the MDI control register in the PHY at offset and stores the
 *  information read to data.
 **/</doc>
<dec f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.h' l='71' type='s32 e1000_read_phy_reg_mdic(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<use f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_82575.c' l='2330' u='c' c='e1000_read_phy_reg_82580'/>
<def f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='248' ll='297' type='s32 e1000_read_phy_reg_mdic(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<use f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='613' u='c' c='e1000_read_phy_reg_m88'/>
<use f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='703' u='c' c='__e1000_read_phy_reg_igp'/>
<use f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='3230' u='c' c='e1000_read_phy_reg_gs40g'/>
<doc f='linux-4.18.y/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='239'>/**
 *  e1000_read_phy_reg_mdic - Read MDI control register
 *  @hw: pointer to the HW structure
 *  @offset: register offset to be read
 *  @data: pointer to the read data
 *
 *  Reads the MDI control register in the PHY at offset and stores the
 *  information read to data.
 **/</doc>
