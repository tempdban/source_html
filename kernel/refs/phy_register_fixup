<dec f='linux-4.14.y/include/linux/phy.h' l='913' type='int phy_register_fixup(const char * bus_id, u32 phy_uid, u32 phy_uid_mask, int (*)(struct phy_device *) run)'/>
<def f='linux-4.14.y/drivers/net/phy/phy_device.c' l='196' ll='214' type='int phy_register_fixup(const char * bus_id, u32 phy_uid, u32 phy_uid_mask, int (*)(struct phy_device *) run)'/>
<dec f='linux-4.14.y/drivers/net/phy/phy_device.c' l='215' type='int phy_register_fixup(const char * , u32 , u32 , int (*)(struct phy_device *) )'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='215' c='phy_register_fixup'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='215' u='a'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='215' u='a'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='221' u='c' c='phy_register_fixup_for_uid'/>
<use f='linux-4.14.y/drivers/net/phy/phy_device.c' l='229' u='c' c='phy_register_fixup_for_id'/>
<doc f='linux-4.14.y/drivers/net/phy/phy_device.c' l='187'>/**
 * phy_register_fixup - creates a new phy_fixup and adds it to the list
 * @bus_id: A string which matches phydev-&gt;mdio.dev.bus_id (or PHY_ANY_ID)
 * @phy_uid: Used to match against phydev-&gt;phy_id (the UID of the PHY)
 *	It can also be PHY_ANY_UID
 * @phy_uid_mask: Applied to phydev-&gt;phy_id and fixup-&gt;phy_uid before
 *	comparison
 * @run: The actual code to be run when a matching PHY is found
 */</doc>
