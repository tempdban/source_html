<def f='linux-4.18.y/fs/f2fs/f2fs.h' l='572' ll='580'/>
<dec f='linux-4.18.y/fs/f2fs/f2fs.h' l='2969' type='int f2fs_map_blocks(struct inode * inode, struct f2fs_map_blocks * map, int create, int flag)'/>
<size>40</size>
<mbr r='f2fs_map_blocks::m_pblk' o='0' t='block_t'/>
<mbr r='f2fs_map_blocks::m_lblk' o='32' t='block_t'/>
<mbr r='f2fs_map_blocks::m_len' o='64' t='unsigned int'/>
<mbr r='f2fs_map_blocks::m_flags' o='96' t='unsigned int'/>
<mbr r='f2fs_map_blocks::m_next_pgofs' o='128' t='unsigned long *'/>
<mbr r='f2fs_map_blocks::m_next_extent' o='192' t='unsigned long *'/>
<mbr r='f2fs_map_blocks::m_seg_type' o='256' t='int'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='951' u='c' c='f2fs_preallocate_blocks'/>
<def f='linux-4.18.y/fs/f2fs/data.c' l='984' ll='1177' type='int f2fs_map_blocks(struct inode * inode, struct f2fs_map_blocks * map, int create, int flag)'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='1196' u='c' c='f2fs_overwrite_io'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='1217' u='c' c='__get_data_block'/>
<use f='linux-4.18.y/fs/f2fs/data.c' l='1485' u='c' c='f2fs_mpage_readpages'/>
<doc f='linux-4.18.y/fs/f2fs/data.c' l='975'>/*
 * f2fs_map_blocks() now supported readahead/bmap/rw direct_IO with
 * f2fs_map_blocks structure.
 * If original data blocks are allocated, then give them to blockdev.
 * Otherwise,
 *     a. preallocate requested block addresses
 *     b. do not use extent cache for better performance
 *     c. give the block addresses to blockdev
 */</doc>
<use f='linux-4.18.y/fs/f2fs/file.c' l='1493' u='c' c='expand_inode_data'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='2199' u='c' c='f2fs_defragment_range'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='2244' u='c' c='f2fs_defragment_range'/>
<use f='linux-4.18.y/fs/f2fs/file.c' l='2854' u='c' c='f2fs_precache_extents'/>
