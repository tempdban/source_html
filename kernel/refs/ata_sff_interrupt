<dec f='linux-4.14.y/include/linux/libata.h' l='1848' type='irqreturn_t ata_sff_interrupt(int irq, void * dev_instance)'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='1654' ll='1657' type='irqreturn_t ata_sff_interrupt(int irq, void * dev_instance)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' type='irqreturn_t ata_sff_interrupt(int , void * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' c='ata_sff_interrupt'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2529' u='r' c='ata_pci_init_one'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='1640'>/**
 *	ata_sff_interrupt - Default SFF ATA host interrupt handler
 *	@irq: irq line (unused)
 *	@dev_instance: pointer to our ata_host information structure
 *
 *	Default interrupt handler for PCI IDE devices.  Calls
 *	ata_sff_port_intr() for each port that is not disabled.
 *
 *	LOCKING:
 *	Obtains host lock during operation.
 *
 *	RETURNS:
 *	IRQ_NONE or IRQ_HANDLED.
 */</doc>
<use f='linux-4.14.y/drivers/ata/pata_mpiix.c' l='211' u='r' c='mpiix_init_one'/>
<dec f='linux-4.14.y/include/linux/libata.h' l='1848' type='irqreturn_t ata_sff_interrupt(int irq, void * dev_instance)'/>
<def f='linux-4.14.y/drivers/ata/libata-sff.c' l='1654' ll='1657' type='irqreturn_t ata_sff_interrupt(int irq, void * dev_instance)'/>
<dec f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' type='irqreturn_t ata_sff_interrupt(int , void * )'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' c='ata_sff_interrupt'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='1658' u='a'/>
<use f='linux-4.14.y/drivers/ata/libata-sff.c' l='2529' u='r' c='ata_pci_init_one'/>
<doc f='linux-4.14.y/drivers/ata/libata-sff.c' l='1640'>/**
 *	ata_sff_interrupt - Default SFF ATA host interrupt handler
 *	@irq: irq line (unused)
 *	@dev_instance: pointer to our ata_host information structure
 *
 *	Default interrupt handler for PCI IDE devices.  Calls
 *	ata_sff_port_intr() for each port that is not disabled.
 *
 *	LOCKING:
 *	Obtains host lock during operation.
 *
 *	RETURNS:
 *	IRQ_NONE or IRQ_HANDLED.
 */</doc>
<use f='linux-4.14.y/drivers/ata/pata_mpiix.c' l='211' u='r' c='mpiix_init_one'/>
