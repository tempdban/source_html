<def f='linux-4.14.y/include/linux/pwm.h' l='227' ll='239' type='int pwm_set_relative_duty_cycle(struct pwm_state * state, unsigned int duty_cycle, unsigned int scale)'/>
<doc f='linux-4.14.y/include/linux/pwm.h' l='209'>/**
 * pwm_set_relative_duty_cycle() - Set a relative duty cycle value
 * @state: PWM state to fill
 * @duty_cycle: relative duty cycle value
 * @scale: scale in which @duty_cycle is expressed
 *
 * This functions converts a relative into an absolute duty cycle (expressed
 * in nanoseconds), and puts the result in state-&gt;duty_cycle.
 *
 * For example if you want to configure a 50% duty cycle, call:
 *
 * pwm_init_state(pwm, &amp;state);
 * pwm_set_relative_duty_cycle(&amp;state, 50, 100);
 * pwm_apply_state(pwm, &amp;state);
 *
 * This functions returns -EINVAL if @duty_cycle and/or @scale are
 * inconsistent (@scale == 0 or @duty_cycle &gt; @scale).
 */</doc>
