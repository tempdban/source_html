<dec f='linux-4.18.y/lib/librte_ethdev/rte_ethdev_driver.h' l='222' type='int rte_eth_switch_domain_alloc(uint16_t * domain_id)'/>
<doc f='linux-4.18.y/lib/librte_ethdev/rte_ethdev_driver.h' l='204'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice.
 *
 * Allocate an unique switch domain identifier.
 *
 * A pool of switch domain identifiers which can be allocated on request. This
 * will enabled devices which support the concept of switch domains to request
 * a switch domain id which is guaranteed to be unique from other devices
 * running in the same process.
 *
 * @param domain_id
 *  switch domain identifier parameter to pass back to application
 *
 * @return
 *   Negative errno value on error, 0 on success.
 */</doc>
<use f='linux-4.18.y/drivers/net/i40e/i40e_ethdev.c' l='5976' u='c' c='i40e_pf_setup'/>
<use f='linux-4.18.y/drivers/net/ixgbe/ixgbe_pf.c' l='93' u='c' c='ixgbe_pf_host_init'/>
<def f='linux-4.18.y/lib/librte_ethdev/rte_ethdev.c' l='4208' ll='4227' type='int rte_eth_switch_domain_alloc(uint16_t * domain_id)'/>
