<dec f='linux-4.18.y/include/net/tcp.h' l='1016' type='void tcp_unregister_congestion_control(struct tcp_congestion_ops * type)'/>
<use f='linux-4.18.y/net/ipv4/tcp_bic.c' l='219' u='c' c='bictcp_unregister'/>
<def f='linux-4.18.y/net/ipv4/tcp_cong.c' l='103' ll='117' type='void tcp_unregister_congestion_control(struct tcp_congestion_ops * ca)'/>
<dec f='linux-4.18.y/net/ipv4/tcp_cong.c' l='118' type='void tcp_unregister_congestion_control(struct tcp_congestion_ops * )'/>
<use f='linux-4.18.y/net/ipv4/tcp_cong.c' l='118' c='tcp_unregister_congestion_control'/>
<use f='linux-4.18.y/net/ipv4/tcp_cong.c' l='118' u='a'/>
<use f='linux-4.18.y/net/ipv4/tcp_cong.c' l='118' u='a'/>
<doc f='linux-4.18.y/net/ipv4/tcp_cong.c' l='97'>/*
 * Remove congestion control algorithm, called from
 * the module&apos;s remove function.  Module ref counts are used
 * to ensure that this can&apos;t be done till all sockets using
 * that method are closed.
 */</doc>
<use f='linux-4.18.y/net/ipv4/tcp_cubic.c' l='506' u='c' c='cubictcp_unregister'/>
<use f='linux-4.18.y/net/ipv4/tcp_htcp.c' l='308' u='c' c='htcp_unregister'/>
<use f='linux-4.18.y/net/ipv4/tcp_westwood.c' l='299' u='c' c='tcp_westwood_unregister'/>
