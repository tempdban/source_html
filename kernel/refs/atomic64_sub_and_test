<def f='linux-4.14.y/arch/x86/include/asm/atomic64_64.h' l='74' ll='77' type='bool atomic64_sub_and_test(long i, atomic64_t * v)'/>
<use f='linux-4.14.y/include/asm-generic/atomic-long.h' l='194' macro='1' u='c'/>
<doc f='linux-4.14.y/arch/x86/include/asm/atomic64_64.h' l='65'>/**
 * atomic64_sub_and_test - subtract value from variable and test result
 * @i: integer value to subtract
 * @v: pointer to type atomic64_t
 *
 * Atomically subtracts @i from @v and returns
 * true if the result is zero, or false for all
 * other cases.
 */</doc>
<def f='linux-4.14.y/arch/x86/include/asm/atomic64_32.h' l='208' ll='211' type='int atomic64_sub_and_test(long long i, atomic64_t * v)'/>
<doc f='linux-4.14.y/arch/x86/include/asm/atomic64_32.h' l='199'>/**
 * atomic64_sub_and_test - subtract value from variable and test result
 * @i: integer value to subtract
 * @v: pointer to type atomic64_t
 *
 * Atomically subtracts @i from @v and returns
 * true if the result is zero, or false for all
 * other cases.
 */</doc>
<def f='linux-4.14.y/arch/x86/include/asm/atomic64_64.h' l='74' ll='77' type='bool atomic64_sub_and_test(long i, atomic64_t * v)'/>
<use f='linux-4.14.y/include/asm-generic/atomic-long.h' l='194' macro='1' u='c'/>
<doc f='linux-4.14.y/arch/x86/include/asm/atomic64_64.h' l='65'>/**
 * atomic64_sub_and_test - subtract value from variable and test result
 * @i: integer value to subtract
 * @v: pointer to type atomic64_t
 *
 * Atomically subtracts @i from @v and returns
 * true if the result is zero, or false for all
 * other cases.
 */</doc>
<def f='linux-4.14.y/arch/x86/include/asm/atomic64_32.h' l='208' ll='211' type='int atomic64_sub_and_test(long long i, atomic64_t * v)'/>
<doc f='linux-4.14.y/arch/x86/include/asm/atomic64_32.h' l='199'>/**
 * atomic64_sub_and_test - subtract value from variable and test result
 * @i: integer value to subtract
 * @v: pointer to type atomic64_t
 *
 * Atomically subtracts @i from @v and returns
 * true if the result is zero, or false for all
 * other cases.
 */</doc>
