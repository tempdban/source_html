<def f='linux-4.18.y/include/linux/crash_dump.h' l='60' ll='63' type='bool is_kdump_kernel()'/>
<use f='linux-4.18.y/include/linux/crash_dump.h' l='75' u='c' c='is_vmcore_usable'/>
<use f='linux-4.18.y/include/linux/crash_dump.h' l='84' u='c' c='vmcore_unusable'/>
<doc f='linux-4.18.y/include/linux/crash_dump.h' l='50'>/*
 * is_kdump_kernel() checks whether this kernel is booting after a panic of
 * previous kernel or not. This is determined by checking if previous kernel
 * has passed the elf core header address on command line.
 *
 * This is not just a test if CONFIG_CRASH_DUMP is enabled or not. It will
 * return true if CONFIG_CRASH_DUMP=y and if kernel is booting after a panic
 * of previous kernel.
 */</doc>
<use f='linux-4.18.y/block/blk-mq.c' l='2751' u='c' c='blk_mq_alloc_tag_set'/>
<use f='linux-4.18.y/drivers/iommu/amd_iommu_init.c' l='1538' u='c' c='init_iommu_one'/>
<use f='linux-4.18.y/drivers/iommu/amd_iommu_init.c' l='2504' u='c' c='early_amd_iommu_init'/>
<use f='linux-4.18.y/drivers/iommu/intel-iommu.c' l='3333' u='c' c='init_dmars'/>
<use f='linux-4.18.y/drivers/iommu/intel_irq_remapping.c' l='573' u='c' c='intel_setup_irq_remapping'/>
<use f='linux-4.18.y/net/core/dev.c' l='2491' u='c' c='netif_get_num_default_rss_queues'/>
