<dec f='linux-4.14.y/fs/f2fs/f2fs.h' l='2468' type='int get_dnode_of_data(struct dnode_of_data * dn, unsigned long index, int mode)'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='592' u='c' c='f2fs_reserve_block'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='635' u='c' c='get_read_data_page'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='928' u='c' c='f2fs_map_blocks'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='1424' u='c' c='do_write_data_page'/>
<use f='linux-4.14.y/fs/f2fs/data.c' l='1904' u='c' c='prepare_write_begin'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='377' u='c' c='f2fs_seek_block'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='596' u='c' c='truncate_blocks'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='850' u='c' c='truncate_hole'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='938' u='c' c='__read_out_blkaddrs'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='988' u='c' c='__roll_back_blkaddrs'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1021' u='c' c='__clone_blkaddrs'/>
<use f='linux-4.14.y/fs/f2fs/file.c' l='1291' u='c' c='f2fs_zero_range'/>
<use f='linux-4.14.y/fs/f2fs/gc.c' l='638' u='c' c='move_data_block'/>
<use f='linux-4.14.y/fs/f2fs/inline.c' l='210' u='c' c='f2fs_write_inline_data'/>
<def f='linux-4.14.y/fs/f2fs/node.c' l='585' ll='692' type='int get_dnode_of_data(struct dnode_of_data * dn, unsigned long index, int mode)'/>
<use f='linux-4.14.y/fs/f2fs/node.c' l='1014' u='c' c='remove_inode_page'/>
<doc f='linux-4.14.y/fs/f2fs/node.c' l='579'>/*
 * Caller should call f2fs_put_dnode(dn).
 * Also, it should grab and release a rwsem by calling f2fs_lock_op() and
 * f2fs_unlock_op() only if ro is not set RDONLY_NODE.
 * In the case of RDONLY_NODE, we don&apos;t need to care about mutex.
 */</doc>
<use f='linux-4.14.y/fs/f2fs/recovery.c' l='383' u='c' c='check_index_in_prev_nodes'/>
<use f='linux-4.14.y/fs/f2fs/recovery.c' l='434' u='c' c='do_recover_data'/>
<use f='linux-4.14.y/fs/f2fs/segment.c' l='235' u='c' c='__revoke_inmem_pages'/>
