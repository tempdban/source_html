<def f='linux-4.18.y/include/net/sctp/structs.h' l='1058' ll='1098'/>
<size>112</size>
<doc f='linux-4.18.y/include/net/sctp/structs.h' l='1039'>/* This is the structure we use to hold outbound chunks.  You push
 * chunks in and they automatically pop out the other end as bundled
 * packets (it calls (*output_handler)()).
 *
 * This structure covers sections 6.3, 6.4, 6.7, 6.8, 6.10, 7., 8.1,
 * and 8.2 of the v13 draft.
 *
 * It handles retransmissions.	The connection to the timeout portion
 * of the state machine is through sctp_..._timeout() and timeout_handler.
 *
 * If you feed it SACKs, it will eat them.
 *
 * If you give it big chunks, it will fragment them.
 *
 * It assigns TSN&apos;s to data chunks.  This happens at the last possible
 * instant before transmission.
 *
 * When free()&apos;d, it empties itself out via output_handler().
 */</doc>
<mbr r='sctp_outq::asoc' o='0' t='struct sctp_association *'/>
<mbr r='sctp_outq::out_chunk_list' o='64' t='struct list_head'/>
<mbr r='sctp_outq::sched' o='192' t='struct sctp_sched_ops *'/>
<mbr r='sctp_outq::out_qlen' o='256' t='unsigned int'/>
<mbr r='sctp_outq::error' o='288' t='unsigned int'/>
<mbr r='sctp_outq::control_chunk_list' o='320' t='struct list_head'/>
<mbr r='sctp_outq::sacked' o='448' t='struct list_head'/>
<mbr r='sctp_outq::retransmit' o='576' t='struct list_head'/>
<mbr r='sctp_outq::abandoned' o='704' t='struct list_head'/>
<mbr r='sctp_outq::outstanding_bytes' o='832' t='__u32'/>
<mbr r='sctp_outq::fast_rtx' o='864' t='char'/>
<mbr r='sctp_outq::cork' o='872' t='char'/>
