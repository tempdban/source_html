<dec f='linux-4.14.y/include/linux/regmap.h' l='799' type='int regmap_raw_write(struct regmap * map, unsigned int reg, const void * val, size_t val_len)'/>
<def f='linux-4.14.y/drivers/base/regmap/regmap.c' l='1733' ll='1752' type='int regmap_raw_write(struct regmap * map, unsigned int reg, const void * val, size_t val_len)'/>
<dec f='linux-4.14.y/drivers/base/regmap/regmap.c' l='1753' type='int regmap_raw_write(struct regmap * , unsigned int , const void * , size_t )'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='1753' c='regmap_raw_write'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='1753' u='a'/>
<use f='linux-4.14.y/drivers/base/regmap/regmap.c' l='1753' u='a'/>
<doc f='linux-4.14.y/drivers/base/regmap/regmap.c' l='1717'>/**
 * regmap_raw_write() - Write raw values to one or more registers
 *
 * @map: Register map to write to
 * @reg: Initial register to write to
 * @val: Block of data to be written, laid out for direct transmission to the
 *       device
 * @val_len: Length of data pointed to by val.
 *
 * This function is intended to be used for things like firmware
 * download where a large block of data needs to be transferred to the
 * device.  No formatting will be done on the data provided.
 *
 * A value of zero will be returned on success, a negative errno will
 * be returned in error cases.
 */</doc>
