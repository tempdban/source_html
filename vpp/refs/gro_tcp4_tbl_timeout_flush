<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_gro/gro_tcp4.h' l='162' type='uint16_t gro_tcp4_tbl_timeout_flush(struct gro_tcp4_tbl * tbl, uint64_t flush_timestamp, struct rte_mbuf ** out, uint16_t nb_out)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_gro/gro_tcp4.c' l='319' ll='359' type='uint16_t gro_tcp4_tbl_timeout_flush(struct gro_tcp4_tbl * tbl, uint64_t flush_timestamp, struct rte_mbuf ** out, uint16_t nb_out)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_gro/gro_tcp4.h' l='144'>/**
 * This function flushes timeout packets in a TCP/IPv4 reassembly table,
 * and without updating checksums.
 *
 * @param tbl
 *  TCP/IPv4 reassembly table pointer
 * @param flush_timestamp
 *  Flush packets which are inserted into the table before or at the
 *  flush_timestamp.
 * @param out
 *  Pointer array used to keep flushed packets
 * @param nb_out
 *  The element number in &apos;out&apos;. It also determines the maximum number of
 *  packets that can be flushed finally.
 *
 * @return
 *  The number of flushed packets
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_gro/rte_gro.c' l='206' u='c' c='rte_gro_reassemble_burst'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_gro/rte_gro.c' l='291' u='c' c='rte_gro_timeout_flush'/>
