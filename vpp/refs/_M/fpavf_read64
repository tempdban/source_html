<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.h' l='55'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.h' l='50'>/*
 * In Cavium OcteonTX SoC, all accesses to the device registers are
 * implicitly strongly ordered. So, the relaxed version of IO operation is
 * safe to use with out any IO memory barriers.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='487' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='489' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='492' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='606' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='615' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='633' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='720' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/octeontx_fpavf.c' l='726' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/octeontx/rte_mempool_octeontx.c' l='57' u='c'/>
