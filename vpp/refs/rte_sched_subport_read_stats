<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.h' l='306' type='int rte_sched_subport_read_stats(struct rte_sched_port * port, uint32_t subport_id, struct rte_sched_subport_stats * stats, uint32_t * tc_ov)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.h' l='289'>/**
 * Hierarchical scheduler subport statistics read
 *
 * @param port
 *   Handle to port scheduler instance
 * @param subport_id
 *   Subport ID
 * @param stats
 *   Pointer to pre-allocated subport statistics structure where the statistics
 *   counters should be stored
 * @param tc_ov
 *   Pointer to pre-allocated 4-entry array where the oversubscription status for
 *   each of the 4 subport traffic classes should be stored.
 * @return
 *   0 upon success, error code otherwise
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/softnic/rte_eth_softnic_tm.c' l='3054' u='c' c='read_port_stats'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/softnic/rte_eth_softnic_tm.c' l='3102' u='c' c='read_subport_stats'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.c' l='975' ll='998' type='int rte_sched_subport_read_stats(struct rte_sched_port * port, uint32_t subport_id, struct rte_sched_subport_stats * stats, uint32_t * tc_ov)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_sched.h' l='306' type='int rte_sched_subport_read_stats(struct rte_sched_port * port, uint32_t subport_id, struct rte_sched_subport_stats * stats, uint32_t * tc_ov)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_sched.h' l='289'>/**
 * Hierarchical scheduler subport statistics read
 *
 * @param port
 *   Handle to port scheduler instance
 * @param subport_id
 *   Subport ID
 * @param stats
 *   Pointer to pre-allocated subport statistics structure where the statistics
 *   counters should be stored
 * @param tc_ov
 *   Pointer to pre-allocated 4-entry array where the oversubscription status for
 *   each of the 4 subport traffic classes should be stored.
 * @return
 *   0 upon success, error code otherwise
 */</doc>
