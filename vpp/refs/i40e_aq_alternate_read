<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_prototype.h' l='428' type='enum i40e_status_code i40e_aq_alternate_read(struct i40e_hw * hw, u32 reg_addr0, u32 * reg_val0, u32 reg_addr1, u32 * reg_val1)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='6029' ll='6055' type='enum i40e_status_code i40e_aq_alternate_read(struct i40e_hw * hw, u32 reg_addr0, u32 * reg_val0, u32 reg_addr1, u32 * reg_val1)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='6327' u='c' c='i40e_read_bw_from_alt_ram'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='6016'>/**
 * i40e_aq_alternate_read
 * @hw: pointer to the hardware structure
 * @reg_addr0: address of first dword to be read
 * @reg_val0: pointer for data read from &apos;reg_addr0&apos;
 * @reg_addr1: address of second dword to be read
 * @reg_val1: pointer for data read from &apos;reg_addr1&apos;
 *
 * Read one or two dwords from alternate structure. Fields are indicated
 * by &apos;reg_addr0&apos; and &apos;reg_addr1&apos; register numbers. If &apos;reg_val1&apos; pointer
 * is not passed then only register at &apos;reg_addr0&apos; is read.
 *
 **/</doc>
