<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_hash.h' l='261' type='int rte_hash_get_key_with_position(const struct rte_hash * h, const int32_t position, void ** key)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_hash.h' l='245'>/**
 * Find a key in the hash table given the position.
 * This operation is multi-thread safe.
 *
 * @param h
 *   Hash table to get the key from.
 * @param position
 *   Position returned when the key was inserted.
 * @param key
 *   Output containing a pointer to the key
 * @return
 *   - 0 if retrieved successfully
 *   - EINVAL if the parameters are invalid.
 *   - ENOENT if no valid key is found in the given position.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_cuckoo_hash.c' l='884' ll='902' type='int rte_hash_get_key_with_position(const struct rte_hash * h, const int32_t position, void ** key)'/>
