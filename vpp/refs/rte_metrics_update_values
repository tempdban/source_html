<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_metrics/rte_metrics.h' l='212' type='int rte_metrics_update_values(int port_id, uint16_t key, const uint64_t * values, uint32_t count)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_metrics/rte_metrics.h' l='194'>/**
 * Updates a metric set. Note that it is an error to try to
 * update across a set boundary.
 *
 * @param port_id
 *   Port to update metrics for
 * @param key
 *   Base id of metrics set to update
 * @param values
 *   Set of new values
 * @param count
 *   Number of new values
 *
 * @return
 *   - -ERANGE if count exceeds metric set size
 *   - -EIO if unable to access shared metrics memory
 *   - Zero on success
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_bitratestats/rte_bitrate.c' l='121' u='c' c='rte_stats_bitrate_calc'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_latencystats/rte_latencystats.c' l='85' u='c' c='rte_latencystats_update'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_metrics/rte_metrics.c' l='135' u='c' c='rte_metrics_update_value'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_metrics/rte_metrics.c' l='138' ll='193' type='int rte_metrics_update_values(int port_id, uint16_t key, const uint64_t * values, uint32_t count)'/>
