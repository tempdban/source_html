<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.h' l='2693' type='int rte_eth_dev_mac_addr_add(uint16_t port_id, struct ether_addr * mac_addr, uint32_t pool)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.h' l='2674'>/**
 * Add a MAC address to an internal array of addresses used to enable whitelist
 * filtering to accept packets only if the destination MAC address matches.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param mac_addr
 *   The MAC address to add.
 * @param pool
 *   VMDq pool index to associate address with (if VMDq is enabled). If VMDq is
 *   not enabled, this should be set to 0.
 * @return
 *   - (0) if successfully added or *mac_addr* was already added.
 *   - (-ENOTSUP) if hardware doesn&apos;t support this feature.
 *   - (-ENODEV) if *port* is invalid.
 *   - (-EIO) if device is removed.
 *   - (-ENOSPC) if no more MAC addresses can be added.
 *   - (-EINVAL) if MAC address is invalid.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-pmd/cmdline.c' l='7193' u='c' c='cmd_mac_addr_parsed'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/failsafe/failsafe_ether.c' l='172' u='c' c='fs_eth_dev_conf_apply'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/failsafe/failsafe_ops.c' l='983' u='c' c='fs_mac_addr_add'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.c' l='2920' ll='2971' type='int rte_eth_dev_mac_addr_add(uint16_t port_id, struct ether_addr * addr, uint32_t pool)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ethdev.h' l='2693' type='int rte_eth_dev_mac_addr_add(uint16_t port_id, struct ether_addr * mac_addr, uint32_t pool)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ethdev.h' l='2674'>/**
 * Add a MAC address to an internal array of addresses used to enable whitelist
 * filtering to accept packets only if the destination MAC address matches.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param mac_addr
 *   The MAC address to add.
 * @param pool
 *   VMDq pool index to associate address with (if VMDq is enabled). If VMDq is
 *   not enabled, this should be set to 0.
 * @return
 *   - (0) if successfully added or *mac_addr* was already added.
 *   - (-ENOTSUP) if hardware doesn&apos;t support this feature.
 *   - (-ENODEV) if *port* is invalid.
 *   - (-EIO) if device is removed.
 *   - (-ENOSPC) if no more MAC addresses can be added.
 *   - (-EINVAL) if MAC address is invalid.
 */</doc>
<use f='vpp_1804/src/plugins/dpdk/device/init.c' l='1551' u='c' c='dpdk_process'/>
