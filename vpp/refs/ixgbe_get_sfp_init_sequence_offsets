<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_phy.h' l='197' type='s32 ixgbe_get_sfp_init_sequence_offsets(struct ixgbe_hw * hw, u16 * list_offset, u16 * data_offset)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_82598.c' l='229' u='c' c='ixgbe_init_phy_ops_82598'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_82599.c' l='184' u='c' c='ixgbe_setup_sfp_modules_82599'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_phy.c' l='1190' u='c' c='ixgbe_reset_phy_nl'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_phy.c' l='1842' ll='1926' type='s32 ixgbe_get_sfp_init_sequence_offsets(struct ixgbe_hw * hw, u16 * list_offset, u16 * data_offset)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_phy.c' l='1833'>/**
 *  ixgbe_get_sfp_init_sequence_offsets - Provides offset of PHY init sequence
 *  @hw: pointer to hardware structure
 *  @list_offset: offset to the SFP ID list
 *  @data_offset: offset to the SFP data block
 *
 *  Checks the MAC&apos;s EEPROM to see if it supports a given SFP+ module type, if
 *  so it returns the offsets to the phy init sequence block.
 **/</doc>
