<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/hashtbl.h' l='75' type='void ** hash_find(struct hash_table * head, const char * string, struct hash_insert * insert)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/asm/labels.c' l='175' u='c' c='find_label'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/asm/preproc.c' l='1574' u='c' c='inc_fopen'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/nasmlib/hashtbl.c' l='84' ll='107' type='void ** hash_find(struct hash_table * head, const char * key, struct hash_insert * insert)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/nasmlib/hashtbl.c' l='72'>/*
 * Find an entry in a hash table.
 *
 * On failure, if &quot;insert&quot; is non-NULL, store data in that structure
 * which can be used to insert that node using hash_add().
 *
 * WARNING: this data is only valid until the very next call of
 * hash_add(); it cannot be &quot;saved&quot; to a later date.
 *
 * On success, return a pointer to the &quot;data&quot; element of the hash
 * structure.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/nasmlib/srcfile.c' l='78' u='c' c='src_set_fname'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/output/codeview.c' l='397' u='c' c='register_file'/>
