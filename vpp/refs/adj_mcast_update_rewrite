<dec f='vpp_1804/src/vnet/adj/adj_mcast.h' l='67' type='void adj_mcast_update_rewrite(adj_index_t adj_index, u8 * rewrite, u8 offset, u32 mask)'/>
<doc f='vpp_1804/src/vnet/adj/adj_mcast.h' l='50'>/**
 * @brief
 *  Update the rewrite string for an existing adjacecny.
 *
 * @param
 *  The index of the adj to update
 *
 * @param
 *  The new rewrite
 *
 * @param
 *  The offset in the rewrite a which to write in packet&apos;s
 *  IP Address
 *
 * @param
 *  The mask to apply to the packet berfore the rewrite.
 */</doc>
<def f='vpp_1804/src/vnet/adj/adj_mcast.c' l='101' ll='130' type='void adj_mcast_update_rewrite(adj_index_t adj_index, u8 * rewrite, u8 offset, u32 mask)'/>
<doc f='vpp_1804/src/vnet/adj/adj_mcast.c' l='94'>/**
 * adj_mcast_update_rewrite
 *
 * Update the adjacency&apos;s rewrite string. A NULL string implies the
 * rewirte is reset (i.e. when ARP/ND etnry is gone).
 * NB: the adj being updated may be handling traffic in the DP.
 */</doc>
<use f='vpp_1804/src/vnet/ethernet/arp.c' l='514' u='c' c='arp_update_adjacency'/>
<use f='vpp_1804/src/vnet/interface.c' l='1535' u='c' c='default_update_adjacency'/>
<use f='vpp_1804/src/vnet/ip/ip6_neighbor.c' l='678' u='c' c='ip6_ethernet_update_adjacency'/>
