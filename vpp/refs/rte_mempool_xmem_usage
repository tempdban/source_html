<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mempool/rte_mempool.h' l='1583' type='ssize_t rte_mempool_xmem_usage(void * vaddr, uint32_t elt_num, size_t total_elt_sz, const rte_iova_t * iova, uint32_t pg_num, uint32_t pg_shift, unsigned int flags)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mempool/rte_mempool.h' l='1555'>/**
 * Get the size of memory required to store mempool elements.
 *
 * Calculate how much memory would be actually required with the given
 * memory footprint to store required number of objects.
 *
 * @param vaddr
 *   Virtual address of the externally allocated memory buffer.
 *   Will be used to store mempool objects.
 * @param elt_num
 *   Number of elements.
 * @param total_elt_sz
 *   The size of each element, including header and trailer, as returned
 *   by rte_mempool_calc_obj_size().
 * @param iova
 *   Array of IO addresses of the pages that comprises given memory buffer.
 * @param pg_num
 *   Number of elements in the iova array.
 * @param pg_shift
 *   LOG2 of the physical pages size.
 * @param flags
 *  The mempool flags.
 * @return
 *   On success, the number of bytes needed to store given number of
 *   objects, aligned to the given page size. If the provided memory
 *   buffer is too small, return a negative value whose absolute value
 *   is the actual number of elements that can be stored in that buffer.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mempool/rte_mempool.c' l='242' ll='291' type='ssize_t rte_mempool_xmem_usage(void * vaddr, uint32_t elt_num, size_t total_elt_sz, const rte_iova_t * iova, uint32_t pg_num, uint32_t pg_shift, unsigned int flags)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mempool/rte_mempool.c' l='238'>/*
 * Calculate how much memory would be actually required with the
 * given memory footprint to store required number of elements.
 */</doc>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mempool.h' l='1583' type='ssize_t rte_mempool_xmem_usage(void * vaddr, uint32_t elt_num, size_t total_elt_sz, const rte_iova_t * iova, uint32_t pg_num, uint32_t pg_shift, unsigned int flags)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mempool.h' l='1555'>/**
 * Get the size of memory required to store mempool elements.
 *
 * Calculate how much memory would be actually required with the given
 * memory footprint to store required number of objects.
 *
 * @param vaddr
 *   Virtual address of the externally allocated memory buffer.
 *   Will be used to store mempool objects.
 * @param elt_num
 *   Number of elements.
 * @param total_elt_sz
 *   The size of each element, including header and trailer, as returned
 *   by rte_mempool_calc_obj_size().
 * @param iova
 *   Array of IO addresses of the pages that comprises given memory buffer.
 * @param pg_num
 *   Number of elements in the iova array.
 * @param pg_shift
 *   LOG2 of the physical pages size.
 * @param flags
 *  The mempool flags.
 * @return
 *   On success, the number of bytes needed to store given number of
 *   objects, aligned to the given page size. If the provided memory
 *   buffer is too small, return a negative value whose absolute value
 *   is the actual number of elements that can be stored in that buffer.
 */</doc>
