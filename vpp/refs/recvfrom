<dec f='include/sys/socket.h' l='175' type='ssize_t recvfrom(int __fd, void *restrict __buf, size_t __n, int __flags, struct sockaddr *restrict __addr, socklen_t *restrict __addr_len)'/>
<doc f='include/sys/socket.h' l='168'>/* Read N bytes into BUF through socket FD.
   If ADDR is not NULL, fill in *ADDR_LEN bytes of it with tha address of
   the sender, and store the actual size of the address in *ADDR_LEN.
   Returns the number of bytes read or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.c' l='506' u='c' c='pdump_thread_main'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.c' l='680' u='c' c='pdump_create_client_socket'/>
<dec f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='183' type='ssize_t recvfrom(int __fd, void *restrict __buf, size_t __n, int __flags, struct sockaddr *restrict __addr, socklen_t *restrict __addr_len)'/>
<def f='vpp_1804/src/vcl/ldp.c' l='2095' ll='2164' type='ssize_t recvfrom(int fd, void *restrict buf, size_t n, int flags, struct sockaddr *restrict addr, socklen_t *restrict addr_len)'/>
<doc f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='175'>/* Read N bytes into BUF through socket FD.
   If ADDR is not NULL, fill in *ADDR_LEN bytes of it with tha address of
   the sender, and store the actual size of the address in *ADDR_LEN.
   Returns the number of bytes read or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
