<dec f='vpp_1804/src/vnet/srv6/sr.h' l='275' type='int sr_steering_policy(int is_del, ip6_address_t * bsid, u32 sr_policy_index, u32 table_id, ip46_address_t * prefix, u32 mask_width, u32 sw_if_index, u8 traffic_type)'/>
<use f='vpp_1804/src/vnet/srv6/sr_api.c' l='180' u='c' c='vl_api_sr_steering_add_del_t_handler'/>
<def f='vpp_1804/src/vnet/srv6/sr_steering.c' l='59' ll='361' type='int sr_steering_policy(int is_del, ip6_address_t * bsid, u32 sr_policy_index, u32 table_id, ip46_address_t * prefix, u32 mask_width, u32 sw_if_index, u8 traffic_type)'/>
<use f='vpp_1804/src/vnet/srv6/sr_steering.c' l='434' u='c' c='sr_steer_policy_command_fn'/>
<doc f='vpp_1804/src/vnet/srv6/sr_steering.c' l='45'>/**
 * @brief Steer traffic L2 and L3 traffic through a given SR policy
 *
 * @param is_del
 * @param bsid is the bindingSID of the SR Policy (alt to sr_policy_index)
 * @param sr_policy is the index of the SR Policy (alt to bsid)
 * @param table_id is the VRF where to install the FIB entry for the BSID
 * @param prefix is the IPv4/v6 address for L3 traffic type
 * @param mask_width is the mask for L3 traffic type
 * @param sw_if_index is the incoming interface for L2 traffic
 * @param traffic_type describes the type of traffic
 *
 * @return 0 if correct, else error
 */</doc>
