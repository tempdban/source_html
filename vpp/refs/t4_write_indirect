<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/common.h' l='385' type='void t4_write_indirect(struct adapter * adap, unsigned int addr_reg, unsigned int data_reg, const u32 * vals, unsigned int nregs, unsigned int start_idx)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/t4_hw.c' l='235' ll='243' type='void t4_write_indirect(struct adapter * adap, unsigned int addr_reg, unsigned int data_reg, const u32 * vals, unsigned int nregs, unsigned int start_idx)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/t4_hw.c' l='223'>/**
 * t4_write_indirect - write indirectly addressed registers
 * @adap: the adapter
 * @addr_reg: register holding the indirect addresses
 * @data_reg: register holding the value for the indirect registers
 * @vals: values to write
 * @nregs: how many indirect registers to write
 * @start_idx: address of first indirect register to write
 *
 * Writes a sequential block of registers that are accessed indirectly
 * through an address/data register pair.
 */</doc>
