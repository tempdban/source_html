<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_prototype.h' l='568' type='enum i40e_status_code i40e_aq_rx_ctl_read_register(struct i40e_hw * hw, u32 reg_addr, u32 * reg_val, struct i40e_asq_cmd_details * cmd_details)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='6923' ll='6945' type='enum i40e_status_code i40e_aq_rx_ctl_read_register(struct i40e_hw * hw, u32 reg_addr, u32 * reg_val, struct i40e_asq_cmd_details * cmd_details)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='6964' u='c' c='i40e_read_rx_ctl'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='6913'>/**
 * i40e_aq_rx_ctl_read_register - use FW to read from an Rx control register
 * @hw: pointer to the hw struct
 * @reg_addr: register address
 * @reg_val: ptr to register value
 * @cmd_details: pointer to command details structure or NULL
 *
 * Use the firmware to read the Rx control register,
 * especially useful if the Rx unit is under heavy pressure
 **/</doc>
