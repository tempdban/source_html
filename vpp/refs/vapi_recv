<dec f='vpp_1804/src/vpp-api/vapi/vapi.h' l='171' type='vapi_error_e vapi_recv(vapi_ctx_t ctx, void ** msg, size_t * msg_size, svm_q_conditional_wait_t cond, u32 time)'/>
<def f='vpp_1804/src/vpp-api/vapi/vapi.c' l='504' ll='566' type='vapi_error_e vapi_recv(vapi_ctx_t ctx, void ** msg, size_t * msg_size, svm_q_conditional_wait_t cond, u32 time)'/>
<use f='vpp_1804/src/vpp-api/vapi/vapi.c' l='706' u='c' c='vapi_dispatch_one'/>
<doc f='vpp_1804/src/vpp-api/vapi/vapi.h' l='157'>/**
 * @brief low-level api for reading messages from vpp
 *
 * @note it is not recommended to use this api directly, use generated api
 * instead
 *
 * @param ctx opaque vapi context
 * @param[out] msg pointer to result variable containing message
 * @param[out] msg_size pointer to result variable containing message size
 * @param cond enum type for blocking, non-blocking or timed wait call
 * @param time in sec for timed wait
 *
 * @return VAPI_OK on success, other error code on error
 */</doc>
<use f='vpp_1804/src/vpp-api/vapi/vapi.hpp' l='257' u='c' c='_ZN4vapi10Connection8dispatchEPKNS_10Common_reqEj'/>
