<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched_common.h' l='91' ll='95' type='uint32_t rte_get_lcd(uint32_t a, uint32_t b)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.c' l='565' u='c' c='rte_sched_port_config_pipe_profile_table'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.c' l='566' u='c' c='rte_sched_port_config_pipe_profile_table'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.c' l='567' u='c' c='rte_sched_port_config_pipe_profile_table'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched_common.h' l='85'>/*
 * Compute the Lowest Common Denominator (LCD) of two numbers.
 * This implementation computes GCD first:
 *    LCD(a, b) = (a * b) / GCD(a, b)
 *
 */</doc>
