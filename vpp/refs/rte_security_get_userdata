<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_security/rte_security.h' l='380' type='void * rte_security_get_userdata(struct rte_security_ctx * instance, uint64_t md)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_security/rte_security.h' l='364'>/**
 * Get userdata associated with the security session which processed the
 * packet. This userdata would be registered while creating the session, and
 * application can use this to identify the SA etc. Device-specific metadata
 * in the mbuf would be used for this.
 *
 * This is valid only for inline processed ingress packets.
 *
 * @param   instance	security instance
 * @param   md		device-specific metadata set in mbuf
 *
 * @return
 *  - On success, userdata
 *  - On failure, NULL
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_security/rte_security.c' l='118' ll='128' type='void * rte_security_get_userdata(struct rte_security_ctx * instance, uint64_t md)'/>
