<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.h' l='155' type='size_t malloc_elem_free_list_index(size_t size)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.h' l='151'>/*
 * Given an element size, compute its freelist index.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.c' l='126' ll='147' type='size_t malloc_elem_free_list_index(size_t size)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.c' l='157' u='c' c='malloc_elem_free_list_insert'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.c' l='112'>/*
 * Given an element size, compute its freelist index.
 * We free an element into the freelist containing similarly-sized elements.
 * We try to allocate elements starting with the freelist containing
 * similarly-sized elements, and if necessary, we search freelists
 * containing larger elements.
 *
 * Example element size ranges for a heap with five free lists:
 *   heap-&gt;free_head[0] - (0   , 2^8]
 *   heap-&gt;free_head[1] - (2^8 , 2^10]
 *   heap-&gt;free_head[2] - (2^10 ,2^12]
 *   heap-&gt;free_head[3] - (2^12, 2^14]
 *   heap-&gt;free_head[4] - (2^14, MAX_SIZE]
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_heap.c' l='100' u='c' c='find_suitable_element'/>
