<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_mac.h' l='87' type='void e1000_pcix_mmrbc_workaround_generic(struct e1000_hw * hw)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_82540.c' l='369' u='c' c='e1000_init_hw_82540'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_82543.c' l='985' u='c' c='e1000_init_hw_82543'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_mac.c' l='618' ll='644' type='void e1000_pcix_mmrbc_workaround_generic(struct e1000_hw * hw)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_mac.c' l='609'>/**
 *  e1000_pcix_mmrbc_workaround_generic - Fix incorrect MMRBC value
 *  @hw: pointer to the HW structure
 *
 *  In certain situations, a system BIOS may report that the PCIx maximum
 *  memory read byte count (MMRBC) value is higher than than the actual
 *  value. We check the PCIx command register with the current PCIx status
 *  register.
 **/</doc>
