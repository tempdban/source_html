<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/generic/rte_atomic.h' l='688' type='int rte_atomic64_cmpset(volatile uint64_t * dst, uint64_t exp, uint64_t src)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/arch/x86/rte_atomic_64.h' l='54' ll='72' type='int rte_atomic64_cmpset(volatile uint64_t * dst, uint64_t exp, uint64_t src)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/arch/x86/rte_atomic_64.h' l='190' u='c' c='rte_atomic64_test_and_set'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/generic/rte_atomic.h' l='672'>/**
 * An atomic compare and set function used by the mutex functions.
 * (atomic) equivalent to:
 *   if (*dst == exp)
 *     *dst = src (all 64-bit words)
 *
 * @param dst
 *   The destination into which the value will be written.
 * @param exp
 *   The expected value.
 * @param src
 *   The new value.
 * @return
 *   Non-zero on success; 0 on failure.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_ethdev.c' l='614' u='c' c='avf_dev_link_update'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1214' u='c' c='bond_mode_8023ad_handle_slow_pkt'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/em_ethdev.c' l='219' u='c' c='rte_em_dev_atomic_read_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/em_ethdev.c' l='245' u='c' c='rte_em_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/igb_ethdev.c' l='544' u='c' c='rte_igb_dev_atomic_read_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/igb_ethdev.c' l='570' u='c' c='rte_igb_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/enic_ethdev.c' l='414' u='c' c='enicpmd_dev_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev.c' l='637' u='c' c='rte_i40e_dev_atomic_read_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev.c' l='651' u='c' c='rte_i40e_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev_vf.c' l='1046' u='c' c='i40evf_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_ethdev.c' l='809' u='c' c='rte_ixgbe_dev_atomic_read_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_ethdev.c' l='835' u='c' c='rte_ixgbe_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/liquidio/lio_ethdev.c' l='926' u='c' c='lio_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/nfp/nfp_net.c' l='234' u='c' c='nfp_net_dev_atomic_read_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/nfp/nfp_net.c' l='260' u='c' c='nfp_net_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_ethdev.c' l='498' u='c' c='octeontx_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ethdev.c' l='251' u='c' c='sfc_dev_link_update'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ethdev.c' l='262' u='c' c='sfc_dev_link_update'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ev.c' l='400' u='c' c='sfc_ev_link_change'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_ethdev.c' l='79' u='c' c='nicvf_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_ethdev.c' l='784' u='c' c='virtio_dev_atomic_read_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_ethdev.c' l='810' u='c' c='virtio_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/vmxnet3/vmxnet3_ethdev.c' l='183' u='c' c='vmxnet3_dev_atomic_read_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/vmxnet3/vmxnet3_ethdev.c' l='209' u='c' c='vmxnet3_dev_atomic_write_link_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.c' l='1775' u='c' c='rte_eth_dev_atomic_read_link_status'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/generic/rte_atomic.h' l='688' type='int rte_atomic64_cmpset(volatile uint64_t * dst, uint64_t exp, uint64_t src)'/>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_atomic_64.h' l='54' ll='72' type='int rte_atomic64_cmpset(volatile uint64_t * dst, uint64_t exp, uint64_t src)'/>
<use f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_atomic_64.h' l='190' u='c' c='rte_atomic64_test_and_set'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/generic/rte_atomic.h' l='672'>/**
 * An atomic compare and set function used by the mutex functions.
 * (atomic) equivalent to:
 *   if (*dst == exp)
 *     *dst = src (all 64-bit words)
 *
 * @param dst
 *   The destination into which the value will be written.
 * @param exp
 *   The expected value.
 * @param src
 *   The new value.
 * @return
 *   Non-zero on success; 0 on failure.
 */</doc>
