<dec f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='254' type='u32'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='286' u='w' c='vnet_sctp_common_hdr_params_host_to_net'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='286' u='r' c='vnet_sctp_common_hdr_params_host_to_net'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='292' u='w' c='vnet_sctp_common_hdr_params_net_to_host'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='292' u='r' c='vnet_sctp_common_hdr_params_net_to_host'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='298' u='w' c='vnet_sctp_set_ubit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='299' u='w' c='vnet_sctp_set_ubit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='305' u='r' c='vnet_sctp_get_ubit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='311' u='w' c='vnet_sctp_set_bbit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='312' u='w' c='vnet_sctp_set_bbit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='318' u='r' c='vnet_sctp_get_bbit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='324' u='w' c='vnet_sctp_set_ebit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='325' u='w' c='vnet_sctp_set_ebit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='331' u='r' c='vnet_sctp_get_ebit'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='337' u='w' c='vnet_sctp_set_chunk_type'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='338' u='w' c='vnet_sctp_set_chunk_type'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='344' u='r' c='vnet_sctp_get_chunk_type'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='350' u='w' c='vnet_sctp_set_chunk_length'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='351' u='w' c='vnet_sctp_set_chunk_length'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='357' u='r' c='vnet_sctp_get_chunk_length'/>
<offset>0</offset>
<doc f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='235'>/*
   * This value represents the size of the chunk in bytes, including
   * the Chunk Type, Chunk Flags, Chunk Length, and Chunk Value fields.
   * Therefore, if the Chunk Value field is zero-length, the Length
   * field will be set to 4.
   * The Chunk Length field does not count any chunk padding.
   * Chunks (including Type, Length, and Value fields) are padded out
   * by the sender with all zero bytes to be a multiple of 4 bytes
   * long. This padding MUST NOT be more than 3 bytes in total. The
   * Chunk Length value does not include terminating padding of the
   * chunk. However, it does include padding of any variable-length
   * parameter except the last parameter in the chunk. The receiver
   * MUST ignore the padding.
   *
   * Note: A robust implementation should accept the chunk whether or
   * not the final padding has been included in the Chunk Length.
   */
  //u16 length;</doc>
