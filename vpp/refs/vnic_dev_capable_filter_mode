<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/base/vnic_dev.h' l='110' type='int vnic_dev_capable_filter_mode(struct vnic_dev * vdev, u32 * mode, u8 * filter_tags)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/base/vnic_dev.c' l='486' ll='532' type='int vnic_dev_capable_filter_mode(struct vnic_dev * vdev, u32 * mode, u8 * filter_tags)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/base/vnic_dev.c' l='476'>/*  Determine the &quot;best&quot; filtering mode VIC is capaible of. Returns one of 3
 *  value or 0 on error:
 *	FILTER_DPDK_1- advanced filters availabile
 *	FILTER_USNIC_IP_FLAG - advanced filters but with the restriction that
 *		the IP layer must explicitly specified. I.e. cannot have a UDP
 *		filter that matches both IPv4 and IPv6.
 *	FILTER_IPV4_5TUPLE - fallback if either of the 2 above aren&apos;t available.
 *		all other filter types are not available.
 *   Retrun true in filter_tags if supported
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/enic_res.c' l='78' u='c' c='enic_get_vnic_config'/>
