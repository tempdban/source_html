<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_mac.h' l='89' type='s32 e1000_check_alt_mac_addr_generic(struct e1000_hw * hw)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_80003es2lan.c' l='874' u='c' c='e1000_reset_hw_80003es2lan'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_80003es2lan.c' l='1455' u='c' c='e1000_read_mac_addr_80003es2lan'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_82571.c' l='1169' u='c' c='e1000_reset_hw_82571'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_82571.c' l='1954' u='c' c='e1000_read_mac_addr_82571'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_82575.c' l='1478' u='c' c='e1000_reset_hw_82575'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_82575.c' l='2017' u='c' c='e1000_read_mac_addr_82575'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_82575.c' l='2540' u='c' c='e1000_reset_hw_82580'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_mac.c' l='394' ll='461' type='s32 e1000_check_alt_mac_addr_generic(struct e1000_hw * hw)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_mac.c' l='382'>/**
 *  e1000_check_alt_mac_addr_generic - Check for alternate MAC addr
 *  @hw: pointer to the HW structure
 *
 *  Checks the nvm for an alternate MAC address.  An alternate MAC address
 *  can be setup by pre-boot software and must be treated like a permanent
 *  address and must override the actual permanent MAC address. If an
 *  alternate MAC address is found it is programmed into RAR0, replacing
 *  the permanent address that was installed into RAR0 by the Si on reset.
 *  This function will return SUCCESS unless it encounters an error while
 *  reading the EEPROM.
 **/</doc>
