<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/nasm.h' l='823' type='void (*)(int32_t, const void *, enum out_type, uint64_t, int32_t, int32_t)'/>
<offset>512</offset>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/nasm.h' l='809'>/*
     * This procedure is called by assemble() to write actual
     * generated code or data to the object file. Typically it
     * doesn&apos;t have to actually _write_ it, just store it for
     * later.
     *
     * The `type&apos; argument specifies the type of output data, and
     * usually the size as well: its contents are described below.
     *
     * This is used for backends which have not yet been ported to
     * the new interface, and should be NULL on ported backends.
     * To use this entry point, set the output pointer to
     * nasm_do_legacy_output.
     */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/output/legacy.c' l='111' u='r' c='nasm_do_legacy_output'/>
