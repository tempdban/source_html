<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev_pmd.h' l='463' type='struct rte_cryptodev * rte_cryptodev_pmd_create(const char * name, struct rte_device * device, struct rte_cryptodev_pmd_init_params * params)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/aesni_gcm/aesni_gcm_pmd.c' l='471' u='c' c='aesni_gcm_create'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev_pmd.h' l='448'>/**
 * @internal
 *
 * PMD assist function to provide boiler plate code for crypto driver to create
 * and allocate resources for a new crypto PMD device instance.
 *
 * @param	name	crypto device name.
 * @param	device	base device instance
 * @param	params	PMD initialisation parameters
 *
 * @return
 *  - crypto device instance on success
 *  - NULL on creation failure
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/aesni_mb/rte_aesni_mb_pmd.c' l='820' u='c' c='cryptodev_aesni_mb_create'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/null/null_crypto_pmd.c' l='165' u='c' c='cryptodev_null_create'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/qat/rte_qat_cryptodev.c' l='80' u='c' c='crypto_qat_create'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/scheduler/scheduler_pmd.c' l='81' u='c' c='cryptodev_scheduler_create'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev_pmd.c' l='95' ll='149' type='struct rte_cryptodev * rte_cryptodev_pmd_create(const char * name, struct rte_device * device, struct rte_cryptodev_pmd_init_params * params)'/>
