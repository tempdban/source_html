<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_manage.h' l='40' type='s32 e1000_mng_host_if_write_generic(struct e1000_hw * hw, u8 * buffer, u16 length, u16 offset, u8 * sum)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_api.c' l='918' u='c' c='e1000_mng_host_if_write'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_manage.c' l='223' ll='285' type='s32 e1000_mng_host_if_write_generic(struct e1000_hw * hw, u8 * buffer, u16 length, u16 offset, u8 * sum)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_manage.c' l='316' u='c' c='e1000_mng_write_dhcp_info_generic'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_manage.c' l='211'>/**
 *  e1000_mng_host_if_write_generic - Write to the manageability host interface
 *  @hw: pointer to the HW structure
 *  @buffer: pointer to the host interface buffer
 *  @length: size of the buffer
 *  @offset: location in the buffer to write to
 *  @sum: sum of the data (not checksum)
 *
 *  This function writes the buffer content at the offset given on the host if.
 *  It also does alignment considerations to do the writes in most efficient
 *  way.  Also fills up the sum of the buffer in *buffer parameter.
 **/</doc>
