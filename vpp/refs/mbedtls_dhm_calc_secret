<dec f='include/mbedtls/dhm.h' l='242' type='int mbedtls_dhm_calc_secret(mbedtls_dhm_context * ctx, unsigned char * output, size_t output_size, size_t * olen, int (*)(void *, unsigned char *, size_t) f_rng, void * p_rng)'/>
<doc f='include/mbedtls/dhm.h' l='221'>/**
 * \brief               This function derives and exports the shared secret
 *                      \c (G^Y)^X mod \c P.
 *
 * \param ctx           The DHM context.
 * \param output        The destination buffer.
 * \param output_size   The size of the destination buffer. Must be at least
 *                      the size of ctx-&gt;len.
 * \param olen          On exit, holds the actual number of Bytes written.
 * \param f_rng         The RNG function, for blinding purposes.
 * \param p_rng         The RNG parameter.
 *
 * \return         \c 0 on success, or an \c MBEDTLS_ERR_DHM_XXX error code
 *                 on failure.
 *
 * \note           If non-NULL, \p f_rng is used to blind the input as
 *                 a countermeasure against timing attacks. Blinding is used
 *                 only if our secret value \p X is re-used and omitted
 *                 otherwise. Therefore, we recommend always passing a
 *                 non-NULL \p f_rng argument.
 */</doc>
