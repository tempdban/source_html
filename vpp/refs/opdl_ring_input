<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/event/opdl/opdl_ring.h' l='228' type='uint32_t opdl_ring_input(struct opdl_ring * t, const void * entries, uint32_t num_entries, _Bool block)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/event/opdl/opdl_ring.h' l='207'>/**
 * Inputs a new batch of entries into the opdl_ring. This function is only
 * threadsafe (with the same opdl_ring parameter) if the threadsafe parameter of
 * opdl_ring_create() was true. For performance reasons, this function does not
 * check input parameters.
 *
 * @param t
 *   The opdl_ring to input entries in to.
 * @param entries
 *   An array of entries that will be copied in to the opdl_ring.
 * @param num_entries
 *   The size of the entries array.
 * @param block
 *   If this is true, the function blocks until enough slots are available to
 *   input all the requested entries. If false, then the function inputs as
 *   many entries as currently possible.
 *
 * @return
 *   The number of entries successfully input.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/event/opdl/opdl_evdev_init.c' l='139' u='c' c='opdl_rx_enqueue'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/event/opdl/opdl_ring.c' l='619' ll='629' type='uint32_t opdl_ring_input(struct opdl_ring * t, const void * entries, uint32_t num_entries, _Bool block)'/>
