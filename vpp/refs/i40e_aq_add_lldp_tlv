<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_prototype.h' l='280' type='enum i40e_status_code i40e_aq_add_lldp_tlv(struct i40e_hw * hw, u8 bridge_type, void * buff, u16 buff_size, u16 tlv_len, u16 * mib_len, struct i40e_asq_cmd_details * cmd_details)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='4292' ll='4324' type='enum i40e_status_code i40e_aq_add_lldp_tlv(struct i40e_hw * hw, u8 bridge_type, void * buff, u16 buff_size, u16 tlv_len, u16 * mib_len, struct i40e_asq_cmd_details * cmd_details)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='4276'>/**
 * i40e_aq_add_lldp_tlv
 * @hw: pointer to the hw struct
 * @bridge_type: type of bridge
 * @buff: buffer with TLV to add
 * @buff_size: length of the buffer
 * @tlv_len: length of the TLV to be added
 * @mib_len: length of the LLDP MIB returned in response
 * @cmd_details: pointer to command details structure or NULL
 *
 * Add the specified TLV to LLDP Local MIB for the given bridge type,
 * it is responsibility of the caller to make sure that the TLV is not
 * already present in the LLDPDU.
 * In return firmware will write the complete LLDP MIB with the newly
 * added TLV in the response buffer.
 **/</doc>
