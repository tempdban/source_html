<dec f='include/sys/epoll.h' l='136' type='int epoll_pwait(int __epfd, struct epoll_event * __events, int __maxevents, int __timeout, const __sigset_t * __ss)'/>
<doc f='include/sys/epoll.h' l='131'>/* Same as epoll_wait, but the thread&apos;s signal mask is temporarily
   and atomically replaced with the one provided as parameter.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<dec f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='319' type='int epoll_pwait(int __epfd, struct epoll_event * __events, int __maxevents, int __timeout, const __sigset_t * __ss)'/>
<def f='vpp_1804/src/vcl/ldp.c' l='3263' ll='3268' type='int epoll_pwait(int epfd, struct epoll_event * events, int maxevents, int timeout, const sigset_t * sigmask)'/>
<doc f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='313'>/* Same as epoll_wait, but the thread&apos;s signal mask is temporarily
   and atomically replaced with the one provided as parameter.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='vpp_1804/src/vlib/unix/input.c' l='196' u='c' c='linux_epoll_input_inline'/>
