<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_crypto_sym.h' l='425' ll='439'/>
<size>48</size>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_crypto_sym.h' l='416'>/**
 * Symmetric crypto transform structure.
 *
 * This is used to specify the crypto transforms required, multiple transforms
 * can be chained together to specify a chain transforms such as authentication
 * then cipher, or cipher then authentication. Each transform structure can
 * hold a single transform, the type field is used to specify which transform
 * is contained within the union
 */</doc>
<mbr r='rte_crypto_sym_xform::next' o='0' t='struct rte_crypto_sym_xform *'/>
<mbr r='rte_crypto_sym_xform::type' o='64' t='enum rte_crypto_sym_xform_type'/>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_crypto_sym.h' l='425' ll='439'/>
<size>48</size>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_crypto_sym.h' l='416'>/**
 * Symmetric crypto transform structure.
 *
 * This is used to specify the crypto transforms required, multiple transforms
 * can be chained together to specify a chain transforms such as authentication
 * then cipher, or cipher then authentication. Each transform structure can
 * hold a single transform, the type field is used to specify which transform
 * is contained within the union
 */</doc>
<mbr r='rte_crypto_sym_xform::next' o='0' t='struct rte_crypto_sym_xform *'/>
<mbr r='rte_crypto_sym_xform::type' o='64' t='enum rte_crypto_sym_xform_type'/>
