<dec f='vpp_1804/src/vnet/fib/fib_entry_src_rr.h' l='52' type='void fib_entry_src_rr_use_covers_pl(fib_entry_src_t * src, const fib_entry_t * fib_entry, const fib_entry_t * cover)'/>
<use f='vpp_1804/src/vnet/fib/fib_entry_src_interpose.c' l='163' u='c' c='fib_entry_src_interpose_activate'/>
<doc f='vpp_1804/src/vnet/fib/fib_entry_src_rr.h' l='37'>/*
 * use the path-list of the cover, unless it would form a loop.
 * that is unless the cover is via this entry.
 * If a loop were to form it would be a 1 level loop (i.e. X via X),
 * and there would be 2 locks on the path-list; one since its used
 * by the cover, and 1 from here. The first lock will go when the
 * cover is removed, the second, and last, when the covered walk
 * occurs during the cover&apos;s removel - this is not a place where
 * we can handle last lock gone.
 * In short, don&apos;t let the loop form. The usual rules of &apos;we must
 * let it form so we know when it breaks&apos; don&apos;t apply here, since
 * the loop will break when the cover changes, and this function
 * will be called again when that happens.
 */</doc>
<def f='vpp_1804/src/vnet/fib/fib_entry_src_rr.c' l='89' ll='112' type='void fib_entry_src_rr_use_covers_pl(fib_entry_src_t * src, const fib_entry_t * fib_entry, const fib_entry_t * cover)'/>
<use f='vpp_1804/src/vnet/fib/fib_entry_src_rr.c' l='157' u='c' c='fib_entry_src_rr_activate'/>
<use f='vpp_1804/src/vnet/fib/fib_entry_src_rr.c' l='268' u='c' c='fib_entry_src_rr_cover_update'/>
<doc f='vpp_1804/src/vnet/fib/fib_entry_src_rr.c' l='75'>/*
 * use the path-list of the cover, unless it would form a loop.
 * that is unless the cover is via this entry.
 * If a loop were to form it would be a 1 level loop (i.e. X via X),
 * and there would be 2 locks on the path-list; one since its used
 * by the cover, and 1 from here. The first lock will go when the
 * cover is removed, the second, and last, when the covered walk
 * occurs during the cover&apos;s removel - this is not a place where
 * we can handle last lock gone.
 * In short, don&apos;t let the loop form. The usual rules of &apos;we must
 * let it form so we know when it breaks&apos; don&apos;t apply here, since
 * the loop will break when the cover changes, and this function
 * will be called again when that happens.
 */</doc>
