<dec f='include/mbedtls/rsa.h' l='302' type='int mbedtls_rsa_export(const mbedtls_rsa_context * ctx, mbedtls_mpi * N, mbedtls_mpi * P, mbedtls_mpi * Q, mbedtls_mpi * D, mbedtls_mpi * E)'/>
<doc f='include/mbedtls/rsa.h' l='267'>/**
 * \brief          This function exports the core parameters of an RSA key.
 *
 *                 If this function runs successfully, the non-NULL buffers
 *                 pointed to by \p N, \p P, \p Q, \p D, and \p E are fully
 *                 written, with additional unused space filled leading by
 *                 zero Bytes.
 *
 *                 Possible reasons for returning
 *                 #MBEDTLS_ERR_RSA_UNSUPPORTED_OPERATION:&lt;ul&gt;
 *                 &lt;li&gt;An alternative RSA implementation is in use, which
 *                 stores the key externally, and either cannot or should
 *                 not export it into RAM.&lt;/li&gt;
 *                 &lt;li&gt;A SW or HW implementation might not support a certain
 *                 deduction. For example, \p P, \p Q from \p N, \p D,
 *                 and \p E if the former are not part of the
 *                 implementation.&lt;/li&gt;&lt;/ul&gt;
 *
 *                 If the function fails due to an unsupported operation,
 *                 the RSA context stays intact and remains usable.
 *
 * \param ctx      The initialized RSA context.
 * \param N        The MPI to hold the RSA modulus, or NULL.
 * \param P        The MPI to hold the first prime factor of \p N, or NULL.
 * \param Q        The MPI to hold the second prime factor of \p N, or NULL.
 * \param D        The MPI to hold the private exponent, or NULL.
 * \param E        The MPI to hold the public exponent, or NULL.
 *
 * \return         \c 0 on success,
 *                 #MBEDTLS_ERR_RSA_UNSUPPORTED_OPERATION if exporting the
 *                 requested parameters cannot be done due to missing
 *                 functionality or because of security policies,
 *                 or a non-zero return code on any other failure.
 *
 */</doc>
