<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1300' ll='1336' type='void rte_pktmbuf_attach(struct rte_mbuf * mi, struct rte_mbuf * m)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1506' u='c' c='rte_pktmbuf_clone'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1283'>/**
 * Attach packet mbuf to another packet mbuf.
 *
 * After attachment we refer the mbuf we attached as &apos;indirect&apos;,
 * while mbuf we attached to as &apos;direct&apos;.
 * The direct mbuf&apos;s reference counter is incremented.
 *
 * Right now, not supported:
 *  - attachment for already indirect mbuf (e.g. - mi has to be direct).
 *  - mbuf we trying to attach (mi) is used by someone else
 *    e.g. it&apos;s reference counter is greater then 1.
 *
 * @param mi
 *   The indirect packet mbuf.
 * @param m
 *   The packet mbuf we&apos;re attaching to.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_gso/gso_common.c' l='89' u='c' c='gso_do_segment'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ip_frag/rte_ipv4_fragmentation.c' l='138' u='c' c='rte_ipv4_fragment_packet'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ip_frag/rte_ipv6_fragmentation.c' l='132' u='c' c='rte_ipv6_fragment_packet'/>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1300' ll='1336' type='void rte_pktmbuf_attach(struct rte_mbuf * mi, struct rte_mbuf * m)'/>
<use f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1506' u='c' c='rte_pktmbuf_clone'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1283'>/**
 * Attach packet mbuf to another packet mbuf.
 *
 * After attachment we refer the mbuf we attached as &apos;indirect&apos;,
 * while mbuf we attached to as &apos;direct&apos;.
 * The direct mbuf&apos;s reference counter is incremented.
 *
 * Right now, not supported:
 *  - attachment for already indirect mbuf (e.g. - mi has to be direct).
 *  - mbuf we trying to attach (mi) is used by someone else
 *    e.g. it&apos;s reference counter is greater then 1.
 *
 * @param mi
 *   The indirect packet mbuf.
 * @param m
 *   The packet mbuf we&apos;re attaching to.
 */</doc>
