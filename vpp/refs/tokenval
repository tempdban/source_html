<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/nasm.h' l='232' ll='238'/>
<size>32</size>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/nasm.h' l='223'>/*
 * The expression evaluator must be passed a scanner function; a
 * standard scanner is provided as part of nasmlib.c. The
 * preprocessor will use a different one. Scanners, and the
 * token-value structures they return, look like this.
 *
 * The return value from the scanner is always a copy of the
 * `t_type&apos; field in the structure.
 */</doc>
<mbr r='tokenval::t_charptr' o='0' t='char *'/>
<mbr r='tokenval::t_integer' o='64' t='int64_t'/>
<mbr r='tokenval::t_inttwo' o='128' t='int64_t'/>
<mbr r='tokenval::t_type' o='192' t='enum token_type'/>
<mbr r='tokenval::t_flag' o='224' t='int8_t'/>
