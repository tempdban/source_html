<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/base/avf_prototype.h' l='62' type='enum avf_status_code avf_clean_arq_element(struct avf_hw * hw, struct avf_arq_event_info * e, u16 * events_pending)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_vchnl.c' l='46' u='c' c='avf_read_msg_from_pf'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_vchnl.c' l='191' u='c' c='avf_handle_virtchnl_msg'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/base/avf_adminq.c' l='909' ll='1009' type='enum avf_status_code avf_clean_arq_element(struct avf_hw * hw, struct avf_arq_event_info * e, u16 * pending)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/base/avf_adminq.c' l='899'>/**
 *  avf_clean_arq_element
 *  @hw: pointer to the hw struct
 *  @e: event info from the receive descriptor, includes any buffers
 *  @pending: number of events that could be left to process
 *
 *  This function cleans one Admin Receive Queue element and returns
 *  the contents through e.  It can also return how many events are
 *  left to process through &apos;pending&apos;
 **/</doc>
