<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev.h' l='947' type='int rte_cryptodev_sym_session_init(uint8_t dev_id, struct rte_cryptodev_sym_session * sess, struct rte_crypto_sym_xform * xforms, struct rte_mempool * mempool)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/cperf_ops.c' l='507' u='c' c='cperf_create_session'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/cperf_ops.c' l='534' u='c' c='cperf_create_session'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/cperf_ops.c' l='591' u='c' c='cperf_create_session'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/cperf_ops.c' l='596' u='c' c='cperf_create_session'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/cperf_ops.c' l='617' u='c' c='cperf_create_session'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev.h' l='931'>/**
 * Fill out private data for the device id, based on its device type.
 *
 * @param   dev_id   ID of device that we want the session to be used on
 * @param   sess     Session where the private data will be attached to
 * @param   xforms   Symmetric crypto transform operations to apply on flow
 *                   processed with this session
 * @param   mempool  Mempool where the private data is allocated.
 *
 * @return
 *  - On success, zero.
 *  - -EINVAL if input parameters are invalid.
 *  - -ENOTSUP if crypto device does not support the crypto transform.
 *  - -ENOMEM if the private session could not be allocated.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/scheduler/scheduler_pmd_ops.c' l='493' u='c' c='scheduler_pmd_session_configure'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev.c' l='1061' ll='1089' type='int rte_cryptodev_sym_session_init(uint8_t dev_id, struct rte_cryptodev_sym_session * sess, struct rte_crypto_sym_xform * xforms, struct rte_mempool * mp)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_cryptodev.h' l='947' type='int rte_cryptodev_sym_session_init(uint8_t dev_id, struct rte_cryptodev_sym_session * sess, struct rte_crypto_sym_xform * xforms, struct rte_mempool * mempool)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_cryptodev.h' l='931'>/**
 * Fill out private data for the device id, based on its device type.
 *
 * @param   dev_id   ID of device that we want the session to be used on
 * @param   sess     Session where the private data will be attached to
 * @param   xforms   Symmetric crypto transform operations to apply on flow
 *                   processed with this session
 * @param   mempool  Mempool where the private data is allocated.
 *
 * @return
 *  - On success, zero.
 *  - -EINVAL if input parameters are invalid.
 *  - -ENOTSUP if crypto device does not support the crypto transform.
 *  - -ENOMEM if the private session could not be allocated.
 */</doc>
<use f='vpp_1804/src/plugins/dpdk/ipsec/ipsec.c' l='393' u='c' c='create_sym_session'/>
