<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.h' l='328' type='int rte_sched_queue_read_stats(struct rte_sched_port * port, uint32_t queue_id, struct rte_sched_queue_stats * stats, uint16_t * qlen)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.h' l='311'>/**
 * Hierarchical scheduler queue statistics read
 *
 * @param port
 *   Handle to port scheduler instance
 * @param queue_id
 *   Queue ID within port scheduler
 * @param stats
 *   Pointer to pre-allocated subport statistics structure where the statistics
 *   counters should be stored
 * @param qlen
 *   Pointer to pre-allocated variable where the current queue length
 *   should be stored.
 * @return
 *   0 upon success, error code otherwise
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/softnic/rte_eth_softnic_tm.c' l='3163' u='c' c='read_pipe_stats'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/softnic/rte_eth_softnic_tm.c' l='3224' u='c' c='read_tc_stats'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/softnic/rte_eth_softnic_tm.c' l='3284' u='c' c='read_queue_stats'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_sched/rte_sched.c' l='1000' ll='1027' type='int rte_sched_queue_read_stats(struct rte_sched_port * port, uint32_t queue_id, struct rte_sched_queue_stats * stats, uint16_t * qlen)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_sched.h' l='328' type='int rte_sched_queue_read_stats(struct rte_sched_port * port, uint32_t queue_id, struct rte_sched_queue_stats * stats, uint16_t * qlen)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_sched.h' l='311'>/**
 * Hierarchical scheduler queue statistics read
 *
 * @param port
 *   Handle to port scheduler instance
 * @param queue_id
 *   Queue ID within port scheduler
 * @param stats
 *   Pointer to pre-allocated subport statistics structure where the statistics
 *   counters should be stored
 * @param qlen
 *   Pointer to pre-allocated variable where the current queue length
 *   should be stored.
 * @return
 *   0 upon success, error code otherwise
 */</doc>
