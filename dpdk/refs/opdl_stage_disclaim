<dec f='dpdk_1805/drivers/event/opdl/opdl_ring.h' l='433' type='int opdl_stage_disclaim(struct opdl_stage * s, uint32_t num_entries, _Bool block)'/>
<doc f='dpdk_1805/drivers/event/opdl/opdl_ring.h' l='406'>/**
 * This function must be called when a stage has finished its processing of
 * entries, to make them available to any dependent stages. All entries that are
 * claimed by the calling thread in the stage will be disclaimed. It is possible
 * to claim multiple batches before disclaiming. For performance reasons, this
 * function does not check input parameters.
 *
 * @param s
 *   The opdl_ring stage in which to disclaim all claimed entries.
 *
 * @param block
 *   Entries are always made available to a stage in the same order that they
 *   were input in the stage. If a stage is multithread safe, this may mean that
 *   full disclaiming of a batch of entries can not be considered complete until
 *   all earlier threads in the stage have disclaimed. If this parameter is true
 *   then the function blocks until all entries are fully disclaimed, otherwise
 *   it disclaims as many as currently possible, with non fully disclaimed
 *   batches stored until the next call to a claim or disclaim function for this
 *   stage on this thread.
 *
 *   If a thread is not going to process any more entries in this stage, it
 *   *must* first call this function with this parameter set to true to ensure
 *   it does not block the entire opdl_ring.
 *
 *   In a single threaded stage, this parameter has no effect.
 */</doc>
<use f='dpdk_1805/drivers/event/opdl/opdl_evdev_init.c' l='224' u='c' c='opdl_tx_dequeue_multi_inst'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_evdev_init.c' l='276' u='c' c='opdl_disclaim'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_ring.c' l='556' u='c' c='opdl_stage_claim_singlethread'/>
<def f='dpdk_1805/drivers/event/opdl/opdl_ring.c' l='754' ll='773' type='int opdl_stage_disclaim(struct opdl_stage * s, uint32_t num_entries, _Bool block)'/>
