<dec f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cpp.h' l='405' type='int nfp_cpp_area_write(struct nfp_cpp_area * area, unsigned long offset, const void * buffer, size_t length)'/>
<doc f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cpp.h' l='394'>/*
 * Write to a NFP CPP area handle from a buffer. The area must be acquired with
 * &apos;nfp_cpp_area_acquire()&apos; before calling this operation.
 *
 * @param[in]	area	NFP CPP area handle
 * @param[in]	offset	Offset into the area
 * @param[in]	buffer	Location of buffer that holds the data
 * @param[in]	length	Length of the data to read
 *
 * @return bytes written on success, -1 on failure (and set errno accordingly).
 */</doc>
<def f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='344' ll='352' type='int nfp_cpp_area_write(struct nfp_cpp_area * area, unsigned long offset, const void * kernel_vaddr, size_t length)'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='446' u='c' c='nfp_cpp_area_writel'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='470' u='c' c='nfp_cpp_area_writeq'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='731' u='c' c='nfp_cpp_write'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='762' u='c' c='nfp_cpp_area_fill'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='773' u='c' c='nfp_cpp_area_fill'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='783' u='c' c='nfp_cpp_area_fill'/>
<doc f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='330'>/*
 * nfp_cpp_area_write - write data to CPP area
 *
 * @area:       CPP area handle
 * @offset:     offset into CPP area
 * @kernel_vaddr:   kernel address to read data from
 * @length:     number of bytes to write
 *
 * Write data to indicated CPP region.
 *
 * NOTE: @offset and @length must be 32-bit aligned values.
 *
 * NOTE: Area must have been locked down with an &apos;acquire&apos;.
 */</doc>
