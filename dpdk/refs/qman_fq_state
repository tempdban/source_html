<def f='dpdk_1805/drivers/bus/dpaa/include/fsl_qman.h' l='1166' ll='1171'/>
<dec f='dpdk_1805/drivers/bus/dpaa/include/fsl_qman.h' l='1553' type='void qman_fq_state(struct qman_fq * fq, enum qman_fq_state * state, u32 * flags)'/>
<doc f='dpdk_1805/drivers/bus/dpaa/include/fsl_qman.h' l='1154'>/*
 * s/w-visible states. Ie. tentatively scheduled + truly scheduled + active +
 * held-active + held-suspended are just &quot;sched&quot;. Things like &quot;retired&quot; will not
 * be assumed until it is complete (ie. QMAN_FQ_STATE_CHANGING is set until
 * then, to indicate it&apos;s completing and to gate attempts to retry the retire
 * command). Note, park commands do not set QMAN_FQ_STATE_CHANGING because it&apos;s
 * technically impossible in the case of enqueue DCAs (which refer to DQRR ring
 * index rather than the FQ that ring entry corresponds to), so repeated park
 * commands are allowed (if you&apos;re silly enough to try) but won&apos;t change FQ
 * state, and the resulting park notifications move FQs from &quot;sched&quot; to
 * &quot;parked&quot;.
 */</doc>
<doc f='dpdk_1805/drivers/bus/dpaa/include/fsl_qman.h' l='1543'>/**
 * qman_fq_state - Queries the state of a FQ object
 * @fq: the frame queue object to query
 * @state: pointer to state enum to return the FQ scheduling state
 * @flags: pointer to state flags to receive QMAN_FQ_STATE_*** bitmask
 *
 * Queries the state of the FQ object, without performing any h/w commands.
 * This captures the state, as seen by the driver, at the time the function
 * executes.
 */</doc>
<def f='dpdk_1805/drivers/bus/dpaa/base/qbman/qman.c' l='1454' ll='1460' type='void qman_fq_state(struct qman_fq * fq, enum qman_fq_state * state, u32 * flags)'/>
