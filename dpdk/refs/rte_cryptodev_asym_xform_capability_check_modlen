<dec f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.h' l='318' type='int rte_cryptodev_asym_xform_capability_check_modlen(const struct rte_cryptodev_asymmetric_xform_capability * capability, uint16_t modlen)'/>
<doc f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.h' l='307'>/**
 * Check if modulus length is in supported range
 *
 * @param	capability	Description of the asymmetric crypto capability.
 * @param	modlen		modulus length.
 *
 * @return
 *   - Return 0 if the parameters are in range of the capability.
 *   - Return -1 if the parameters are out of range of the capability.
 */</doc>
<def f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.c' l='417' ll='440' type='int rte_cryptodev_asym_xform_capability_check_modlen(const struct rte_cryptodev_asymmetric_xform_capability * capability, uint16_t modlen)'/>
