<dec f='dpdk_1805/lib/librte_eventdev/rte_eventdev.h' l='863' type='int rte_event_dev_stop_flush_callback_register(uint8_t dev_id, eventdev_stop_flush_t callback, void * userdata)'/>
<doc f='dpdk_1805/lib/librte_eventdev/rte_eventdev.h' l='838'>/**
 * Registers a callback function to be invoked during rte_event_dev_stop() for
 * each flushed event. This function can be used to properly dispose of queued
 * events, for example events containing memory pointers.
 *
 * The callback function is only registered for the calling process. The
 * callback function must be registered in every process that can call
 * rte_event_dev_stop().
 *
 * To unregister a callback, call this function with a NULL callback pointer.
 *
 * @param dev_id
 *   The identifier of the device.
 * @param callback
 *   Callback function invoked once per flushed event.
 * @param userdata
 *   Argument supplied to callback.
 *
 * @return
 *  - 0 on success.
 *  - -EINVAL if *dev_id* is invalid
 *
 * @see rte_event_dev_stop()
 */</doc>
<def f='dpdk_1805/lib/librte_eventdev/rte_eventdev.c' l='1173' ll='1188' type='int rte_event_dev_stop_flush_callback_register(uint8_t dev_id, eventdev_stop_flush_t callback, void * userdata)'/>
