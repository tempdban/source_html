<dec f='master/drivers/net/nfp/nfpcore/nfp_cpp.h' l='700' type='struct nfp_cpp_mutex * nfp_cpp_mutex_alloc(struct nfp_cpp * cpp, int target, unsigned long long address, uint32_t key_id)'/>
<doc f='master/drivers/net/nfp/nfpcore/nfp_cpp.h' l='683'>/*
 * Create a mutex handle from an address controlled by a MU Atomic engine
 *
 * The CPP target:address must point to a 64-bit aligned location, and reserve
 * 64 bits of data at the location for use by the handle.
 *
 * Only target/address pairs that point to entities that support the MU Atomic
 * Engine&apos;s CmpAndSwap32 command are supported.
 *
 * @param cpp		NFP CPP handle
 * @param target	NFP CPP target ID
 * @param address	Offset into the address space of the NFP CPP target ID
 * @param key_id	32-bit unique key (must match the key at this location)
 *
 * @return		A non-NULL struct nfp_cpp_mutex * on success, NULL on
 *                      failure.
 */</doc>
<def f='master/drivers/net/nfp/nfpcore/nfp_mutex.c' l='117' ll='175' type='struct nfp_cpp_mutex * nfp_cpp_mutex_alloc(struct nfp_cpp * cpp, int target, unsigned long long address, uint32_t key)'/>
<doc f='master/drivers/net/nfp/nfpcore/nfp_mutex.c' l='100'>/*
 * Create a mutex handle from an address controlled by a MU Atomic engine
 *
 * The CPP target:address must point to a 64-bit aligned location, and
 * reserve 64 bits of data at the location for use by the handle.
 *
 * Only target/address pairs that point to entities that support the
 * MU Atomic Engine are supported.
 *
 * @param cpp       NFP CPP handle
 * @param target    NFP CPP target ID (ie NFP_CPP_TARGET_CLS or
 *		    NFP_CPP_TARGET_MU)
 * @param address   Offset into the address space of the NFP CPP target ID
 * @param key       32-bit unique key (must match the key at this location)
 *
 * @return      A non-NULL struct nfp_cpp_mutex * on success, NULL on failure.
 */</doc>
<use f='master/drivers/net/nfp/nfpcore/nfp_resource.c' l='100' u='c' c='nfp_cpp_resource_find'/>
<use f='master/drivers/net/nfp/nfpcore/nfp_resource.c' l='168' u='c' c='nfp_resource_acquire'/>
