<dec f='master/lib/librte_acl/rte_acl.h' l='221' type='int rte_acl_build(struct rte_acl_ctx * ctx, const struct rte_acl_config * cfg)'/>
<doc f='master/lib/librte_acl/rte_acl.h' l='206'>/**
 * Analyze set of rules and build required internal run-time structures.
 * This function is not multi-thread safe.
 *
 * @param ctx
 *   ACL context to build.
 * @param cfg
 *   Pointer to struct rte_acl_config - defines build parameters.
 * @return
 *   - -ENOMEM if couldn&apos;t allocate enough memory.
 *   - -EINVAL if the parameters are invalid.
 *   - Negative error code if operation failed.
 *   - Zero if operation completed successfully.
 */</doc>
<def f='master/lib/librte_acl/acl_bld.c' l='1520' ll='1569' type='int rte_acl_build(struct rte_acl_ctx * ctx, const struct rte_acl_config * cfg)'/>
<use f='master/lib/librte_acl/rte_acl.c' l='335' u='c' c='rte_acl_reset'/>
<use f='master/lib/librte_table/rte_table_acl.c' l='201' u='c' c='rte_table_acl_build'/>
