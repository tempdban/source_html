<dec f='dpdk_1805/drivers/net/e1000/base/e1000_api.h' l='67' type='s32 e1000_setup_link(struct e1000_hw * hw)'/>
<def f='dpdk_1805/drivers/net/e1000/base/e1000_api.c' l='677' ll='683' type='s32 e1000_setup_link(struct e1000_hw * hw)'/>
<use f='dpdk_1805/drivers/net/e1000/base/e1000_api.c' l='1343' u='c' c='e1000_power_up_phy'/>
<doc f='dpdk_1805/drivers/net/e1000/base/e1000_api.c' l='669'>/**
 *  e1000_setup_link - Configures link and flow control
 *  @hw: pointer to the HW structure
 *
 *  This configures link and flow control settings for the adapter. This
 *  is a function pointer entry point called by drivers. While modules can
 *  also call this, they probably call their own version of this function.
 **/</doc>
<use f='dpdk_1805/drivers/net/e1000/em_ethdev.c' l='682' u='c' c='eth_em_start'/>
<use f='dpdk_1805/drivers/net/e1000/igb_ethdev.c' l='1432' u='c' c='eth_igb_start'/>
<dec f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.h' l='39' type='s32 e1000_setup_link(struct e1000_hw * hw)'/>
<def f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.c' l='441' ll='447' type='s32 e1000_setup_link(struct e1000_hw * hw)'/>
<use f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.c' l='1078' u='c' c='e1000_power_up_phy'/>
<doc f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.c' l='433'>/**
 *  e1000_setup_link - Configures link and flow control
 *  @hw: pointer to the HW structure
 *
 *  This configures link and flow control settings for the adapter. This
 *  is a function pointer entry point called by drivers. While modules can
 *  also call this, they probably call their own version of this function.
 **/</doc>
