<dec f='dpdk_1805/lib/librte_ethdev/rte_ethdev.h' l='2718' type='int rte_eth_dev_rx_intr_ctl_q(uint16_t port_id, uint16_t queue_id, int epfd, int op, void * data)'/>
<doc f='dpdk_1805/lib/librte_ethdev/rte_ethdev.h' l='2697'>/**
 * RX Interrupt control per queue.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param queue_id
 *   The index of the receive queue from which to retrieve input packets.
 *   The value must be in the range [0, nb_rx_queue - 1] previously supplied
 *   to rte_eth_dev_configure().
 * @param epfd
 *   Epoll instance fd which the intr vector associated to.
 *   Using RTE_EPOLL_PER_THREAD allows to use per thread epoll instance.
 * @param op
 *   The operation be performed for the vector.
 *   Operation type of {RTE_INTR_EVENT_ADD, RTE_INTR_EVENT_DEL}.
 * @param data
 *   User raw data.
 * @return
 *   - On success, zero.
 *   - On failure, a negative value.
 */</doc>
<use f='dpdk_1805/drivers/net/failsafe/failsafe_intr.c' l='302' u='c' c='failsafe_eth_rx_intr_ctl_subdevice'/>
<def f='dpdk_1805/lib/librte_ethdev/rte_ethdev.c' l='3543' ll='3581' type='int rte_eth_dev_rx_intr_ctl_q(uint16_t port_id, uint16_t queue_id, int epfd, int op, void * data)'/>
<use f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='1388' u='c' c='rxa_disable_intr'/>
<use f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='1498' u='c' c='rxa_config_intr'/>
<use f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='1531' u='c' c='rxa_config_intr'/>
