<def f='master/drivers/net/avf/base/virtchnl.h' l='516' ll='520'/>
<size>6</size>
<doc f='master/drivers/net/avf/base/virtchnl.h' l='507'>/* VIRTCHNL_OP_CONFIG_RSS_KEY
 * VIRTCHNL_OP_CONFIG_RSS_LUT
 * VF sends these messages to configure RSS. Only supported if both PF
 * and VF drivers set the VIRTCHNL_VF_OFFLOAD_RSS_PF bit during
 * configuration negotiation. If this is the case, then the RSS fields in
 * the VF resource struct are valid.
 * Both the key and LUT are initialized to 0 by the PF, meaning that
 * RSS is effectively disabled until set up by the VF.
 */</doc>
<mbr r='virtchnl_rss_key::vsi_id' o='0' t='u16'/>
<mbr r='virtchnl_rss_key::key_len' o='16' t='u16'/>
<mbr r='virtchnl_rss_key::key' o='32' t='u8 [1]'/>
<def f='master/drivers/net/i40e/base/virtchnl.h' l='501' ll='505'/>
<size>6</size>
<doc f='master/drivers/net/i40e/base/virtchnl.h' l='492'>/* VIRTCHNL_OP_CONFIG_RSS_KEY
 * VIRTCHNL_OP_CONFIG_RSS_LUT
 * VF sends these messages to configure RSS. Only supported if both PF
 * and VF drivers set the VIRTCHNL_VF_OFFLOAD_RSS_PF bit during
 * configuration negotiation. If this is the case, then the RSS fields in
 * the VF resource struct are valid.
 * Both the key and LUT are initialized to 0 by the PF, meaning that
 * RSS is effectively disabled until set up by the VF.
 */</doc>
<mbr r='virtchnl_rss_key::vsi_id' o='0' t='u16'/>
<mbr r='virtchnl_rss_key::key_len' o='16' t='u16'/>
<mbr r='virtchnl_rss_key::key' o='32' t='u8 [1]'/>
