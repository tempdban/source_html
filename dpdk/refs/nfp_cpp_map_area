<dec f='master/drivers/net/nfp/nfpcore/nfp_cpp.h' l='366' type='uint8_t * nfp_cpp_map_area(struct nfp_cpp * cpp, int domain, int target, uint64_t addr, unsigned long size, struct nfp_cpp_area ** area)'/>
<use f='master/drivers/net/nfp/nfp_net.c' l='2777' u='c' c='nfp_net_init'/>
<def f='master/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='835' ll='858' type='uint8_t * nfp_cpp_map_area(struct nfp_cpp * cpp, int domain, int target, uint64_t addr, unsigned long size, struct nfp_cpp_area ** area)'/>
<doc f='master/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='821'>/*
 * nfp_cpp_map_area() - Helper function to map an area
 * @cpp:    NFP CPP handler
 * @domain: CPP domain
 * @target: CPP target
 * @addr:   CPP address
 * @size:   Size of the area
 * @area:   Area handle (output)
 *
 * Map an area of IOMEM access.  To undo the effect of this function call
 * @nfp_cpp_area_release_free(*area).
 *
 * Return: Pointer to memory mapped area or ERR_PTR
 */</doc>
<use f='master/drivers/net/nfp/nfpcore/nfp_rtsym.c' l='316' u='c' c='nfp_rtsym_map'/>
