<dec f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev_pmd.h' l='418' type='struct rte_cryptodev * rte_cryptodev_pmd_create(const char * name, struct rte_device * device, struct rte_cryptodev_pmd_init_params * params)'/>
<doc f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev_pmd.h' l='403'>/**
 * @internal
 *
 * PMD assist function to provide boiler plate code for crypto driver to create
 * and allocate resources for a new crypto PMD device instance.
 *
 * @param	name	crypto device name.
 * @param	device	base device instance
 * @param	params	PMD initialisation parameters
 *
 * @return
 *  - crypto device instance on success
 *  - NULL on creation failure
 */</doc>
<use f='dpdk_1805/drivers/crypto/null/null_crypto_pmd.c' l='164' u='c' c='cryptodev_null_create'/>
<use f='dpdk_1805/drivers/crypto/scheduler/scheduler_pmd.c' l='86' u='c' c='cryptodev_scheduler_create'/>
<use f='dpdk_1805/drivers/crypto/virtio/virtio_cryptodev.c' l='735' u='c' c='crypto_virtio_create'/>
<def f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev_pmd.c' l='88' ll='141' type='struct rte_cryptodev * rte_cryptodev_pmd_create(const char * name, struct rte_device * device, struct rte_cryptodev_pmd_init_params * params)'/>
