<dec f='master/lib/librte_distributor/rte_distributor.h' l='166' type='int rte_distributor_get_pkt(struct rte_distributor * d, unsigned int worker_id, struct rte_mbuf ** pkts, struct rte_mbuf ** oldpkt, unsigned int retcount)'/>
<def f='master/lib/librte_distributor/rte_distributor.c' l='156' macro='1' type='int rte_distributor_get_pkt(struct rte_distributor * d, unsigned int worker_id, struct rte_mbuf ** pkts, struct rte_mbuf ** oldpkt, unsigned int return_count)'/>
<doc f='master/lib/librte_distributor/rte_distributor.h' l='145'>/**
 * API called by a worker to get new packets to process. Any previous packets
 * given to the worker is assumed to have completed processing, and may be
 * optionally returned to the distributor via the oldpkt parameter.
 *
 * @param d
 *   The distributor instance to be used
 * @param worker_id
 *   The worker instance number to use - must be less that num_workers passed
 *   at distributor creation time.
 * @param pkts
 *   The mbufs pointer array to be filled in (up to 8 packets)
 * @param oldpkt
 *   The previous packet, if any, being processed by the worker
 * @param retcount
 *   The number of packets being returned
 *
 * @return
 *   The number of packets in the pkts array
 */</doc>
