<dec f='dpdk_1805/lib/librte_ethdev/rte_ethdev.h' l='3116' type='int rte_eth_dev_filter_ctrl(uint16_t port_id, enum rte_filter_type filter_type, enum rte_filter_op filter_op, void * arg)'/>
<doc f='dpdk_1805/lib/librte_ethdev/rte_ethdev.h' l='3097'>/**
 * Take operations to assigned filter type on an Ethernet device.
 * All the supported operations and filter types are defined in &apos;rte_eth_ctrl.h&apos;.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param filter_type
 *   Filter type.
 * @param filter_op
 *   Type of operation.
 * @param arg
 *   A pointer to arguments defined specifically for the operation.
 * @return
 *   - (0) if successful.
 *   - (-ENOTSUP) if hardware doesn&apos;t support.
 *   - (-ENODEV) if *port_id* invalid.
 *   - (-EIO) if device is removed.
 *   - others depends on the specific operations implementation.
 */</doc>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='7957' u='c' c='cmd_set_vf_macvlan_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='7962' u='c' c='cmd_set_vf_macvlan_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='8564' u='c' c='cmd_tunnel_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='8569' u='c' c='cmd_tunnel_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='8800' u='c' c='cmd_global_config_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='9234' u='c' c='cmd_syn_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='9239' u='c' c='cmd_syn_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='9792' u='c' c='cmd_2tuple_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='9797' u='c' c='cmd_2tuple_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='9972' u='c' c='cmd_5tuple_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='9977' u='c' c='cmd_5tuple_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='10195' u='c' c='cmd_flex_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='10200' u='c' c='cmd_flex_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='10348' u='c' c='cmd_ethertype_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='10353' u='c' c='cmd_ethertype_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='10775' u='c' c='cmd_flow_director_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='10778' u='c' c='cmd_flow_director_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='10781' u='c' c='cmd_flow_director_filter_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='11175' u='c' c='cmd_flush_flow_director_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='11440' u='c' c='cmd_flow_director_flex_mask_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='11659' u='c' c='cmd_get_sym_hash_per_port_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='11717' u='c' c='cmd_set_sym_hash_per_port_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='11812' u='c' c='cmd_get_hash_global_config_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='11911' u='c' c='cmd_set_hash_global_config_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='12033' u='c' c='cmd_set_hash_input_set_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='12106' u='c' c='cmd_set_fdir_input_set_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='12784' u='c' c='cmd_config_e_tag_filter_add_parsed'/>
<use f='dpdk_1805/app/test-pmd/cmdline.c' l='12841' u='c' c='cmd_config_e_tag_filter_del_parsed'/>
<use f='dpdk_1805/app/test-pmd/config.c' l='3329' u='c' c='fdir_get_infos'/>
<use f='dpdk_1805/app/test-pmd/config.c' l='3332' u='c' c='fdir_get_infos'/>
<use f='dpdk_1805/drivers/net/failsafe/failsafe_ops.c' l='998' u='c' c='fs_filter_ctrl'/>
<def f='dpdk_1805/lib/librte_ethdev/rte_ethdev.c' l='3628' ll='3640' type='int rte_eth_dev_filter_ctrl(uint16_t port_id, enum rte_filter_type filter_type, enum rte_filter_op filter_op, void * arg)'/>
