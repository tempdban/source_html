<def f='dpdk_1805/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1085' ll='1144' type='int cnstr_shdsc_ipsec_new_encap(uint32_t * descbuf, _Bool ps, _Bool swap, struct ipsec_encap_pdb * pdb, uint8_t * opt_ip_hdr, struct alginfo * cipherdata, struct alginfo * authdata)'/>
<use f='dpdk_1805/drivers/crypto/dpaa2_sec/dpaa2_sec_dpseci.c' l='2330' u='c' c='dpaa2_sec_set_ipsec_session'/>
<doc f='dpdk_1805/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1058'>/**
 * cnstr_shdsc_ipsec_new_encap -  IPSec new mode ESP encapsulation
 *     protocol-level shared descriptor.
 * @descbuf: pointer to buffer used for descriptor construction
 * @ps: if 36/40bit addressing is desired, this parameter must be true
 * @swap: must be true when core endianness doesn&apos;t match SEC endianness
 * @pdb: pointer to the PDB to be used with this descriptor
 *       This structure will be copied inline to the descriptor under
 *       construction. No error checking will be made. Refer to the
 *       block guide for details about the encapsulation PDB.
 * @opt_ip_hdr:  pointer to Optional IP Header
 *     -if OIHI = PDBOPTS_ESP_OIHI_PDB_INL, opt_ip_hdr points to the buffer to
 *     be inlined in the PDB. Number of bytes (buffer size) copied is provided
 *     in pdb-&gt;ip_hdr_len.
 *     -if OIHI = PDBOPTS_ESP_OIHI_PDB_REF, opt_ip_hdr points to the address of
 *     the Optional IP Header. The address will be inlined in the PDB verbatim.
 *     -for other values of OIHI options field, opt_ip_hdr is not used.
 * @cipherdata: pointer to block cipher transform definitions
 *              Valid algorithm values - one of OP_PCL_IPSEC_*
 * @authdata: pointer to authentication transform definitions.
 *            If an authentication key is required by the protocol, a &quot;normal&quot;
 *            key must be provided; DKP (Derived Key Protocol) will be used to
 *            compute MDHA on the fly in HW.
 *            Valid algorithm values - one of OP_PCL_IPSEC_*
 *
 * Return: size of descriptor written in words or negative number on error
 */</doc>
<use f='dpdk_1805/drivers/crypto/dpaa_sec/dpaa_sec.c' l='489' u='c' c='dpaa_sec_prep_cdb'/>
