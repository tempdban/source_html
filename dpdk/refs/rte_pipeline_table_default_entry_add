<dec f='master/lib/librte_pipeline/rte_pipeline.h' l='365' type='int rte_pipeline_table_default_entry_add(struct rte_pipeline * p, uint32_t table_id, struct rte_pipeline_table_entry * default_entry, struct rte_pipeline_table_entry ** default_entry_ptr)'/>
<doc f='master/lib/librte_pipeline/rte_pipeline.h' l='344'>/**
 * Pipeline table default entry add
 *
 * The contents of the table default entry is updated with the provided actions
 * and meta-data. When the default entry is not configured (by using this
 * function), the built-in default entry has the action &quot;Drop&quot; and meta-data
 * set to all-zeros.
 *
 * @param p
 *   Handle to pipeline instance
 * @param table_id
 *   Table ID (returned by previous invocation of pipeline table create)
 * @param default_entry
 *   New contents for the table default entry
 * @param default_entry_ptr
 *   On successful invocation, pointer to the default table entry which can be
 *   used for further read-write accesses to this table entry. This pointer
 *   is valid until the default entry is deleted or re-added.
 * @return
 *   0 on success, error code otherwise
 */</doc>
<use f='master/drivers/net/softnic/rte_eth_softnic_thread.c' l='1298' u='c' c='softnic_pipeline_table_rule_add_default'/>
<use f='master/drivers/net/softnic/rte_eth_softnic_thread.c' l='2506' u='c' c='pipeline_msg_handle_table_rule_add_default'/>
<def f='master/lib/librte_pipeline/rte_pipeline.c' l='399' ll='447' type='int rte_pipeline_table_default_entry_add(struct rte_pipeline * p, uint32_t table_id, struct rte_pipeline_table_entry * default_entry, struct rte_pipeline_table_entry ** default_entry_ptr)'/>
