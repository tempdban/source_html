<dec f='master/lib/librte_ethdev/rte_mtr.h' l='573' type='int rte_mtr_meter_disable(uint16_t port_id, uint32_t mtr_id, struct rte_mtr_error * error)'/>
<use f='master/app/test-pmd/cmdline_mtr.c' l='950' u='c' c='cmd_disable_port_meter_parsed'/>
<doc f='master/lib/librte_ethdev/rte_mtr.h' l='550'>/**
 * MTR object meter disable
 *
 * Disable the meter of an existing MTR object. In disabled state, the meter of
 * the current MTR object works in pass-through mode, meaning that for each
 * input packet the meter output color is always the same as the input color. In
 * particular, when the meter of the current MTR object is configured in color
 * blind mode, the input color is always green, so the meter output color is
 * also always green. Note that the policer and the statistics of the current
 * MTR object are working as usual while the meter is disabled. No action is
 * taken and this function returns successfully when the meter of the current
 * MTR object is already disabled.
 *
 * @param[in] port_id
 *   The port identifier of the Ethernet device.
 * @param[in] mtr_id
 *   MTR object ID.
 * @param[out] error
 *   Error details. Filled in only on error, when not NULL.
 * @return
 *   0 on success, non-zero error code otherwise.
 */</doc>
<def f='master/lib/librte_ethdev/rte_mtr.c' l='130' ll='138' type='int rte_mtr_meter_disable(uint16_t port_id, uint32_t mtr_id, struct rte_mtr_error * error)'/>
<doc f='master/lib/librte_ethdev/rte_mtr.c' l='129'>/** MTR object meter disable */</doc>
