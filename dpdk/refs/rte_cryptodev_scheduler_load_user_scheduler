<dec f='master/drivers/crypto/scheduler/rte_cryptodev_scheduler.h' l='101' type='int rte_cryptodev_scheduler_load_user_scheduler(uint8_t scheduler_id, struct rte_cryptodev_scheduler * scheduler)'/>
<doc f='master/drivers/crypto/scheduler/rte_cryptodev_scheduler.h' l='86'>/**
 * Load a user defined scheduler
 *
 * @param scheduler_id
 *   The target scheduler device ID
 * @param scheduler
 *   Pointer to the user defined scheduler
 *
 * @return
 *   - 0 if the scheduler is successfully loaded
 *   - -ENOTSUP if the operation is not supported.
 *   - -EBUSY if device is started.
 *   - -EINVAL if input values are invalid.
 */</doc>
<use f='master/drivers/crypto/scheduler/rte_cryptodev_scheduler.c' l='310' u='c' c='rte_cryptodev_scheduler_mode_set'/>
<use f='master/drivers/crypto/scheduler/rte_cryptodev_scheduler.c' l='317' u='c' c='rte_cryptodev_scheduler_mode_set'/>
<use f='master/drivers/crypto/scheduler/rte_cryptodev_scheduler.c' l='324' u='c' c='rte_cryptodev_scheduler_mode_set'/>
<use f='master/drivers/crypto/scheduler/rte_cryptodev_scheduler.c' l='331' u='c' c='rte_cryptodev_scheduler_mode_set'/>
<def f='master/drivers/crypto/scheduler/rte_cryptodev_scheduler.c' l='416' ll='487' type='int rte_cryptodev_scheduler_load_user_scheduler(uint8_t scheduler_id, struct rte_cryptodev_scheduler * scheduler)'/>
