<dec f='master/drivers/net/e1000/base/e1000_api.h' l='100' type='s32 e1000_read_pba_string(struct e1000_hw * hw, u8 * pba_num, u32 pba_num_size)'/>
<def f='master/drivers/net/e1000/base/e1000_api.c' l='1201' ll='1204' type='s32 e1000_read_pba_string(struct e1000_hw * hw, u8 * pba_num, u32 pba_num_size)'/>
<doc f='master/drivers/net/e1000/base/e1000_api.c' l='1190'>/**
 *  e1000_read_pba_string - Read device part number string
 *  @hw: pointer to the HW structure
 *  @pba_num: pointer to device part number
 *  @pba_num_size: size of part number buffer
 *
 *  Reads the product board assembly (PBA) number from the EEPROM and stores
 *  the value in pba_num.
 *  Currently no func pointer exists and all implementations are handled in the
 *  generic version of this function.
 **/</doc>
<dec f='master/kernel/linux/kni/ethtool/igb/e1000_api.h' l='70' type='s32 e1000_read_pba_string(struct e1000_hw * hw, u8 * pba_num, u32 pba_num_size)'/>
<def f='master/kernel/linux/kni/ethtool/igb/e1000_api.c' l='951' ll='954' type='s32 e1000_read_pba_string(struct e1000_hw * hw, u8 * pba_num, u32 pba_num_size)'/>
<doc f='master/kernel/linux/kni/ethtool/igb/e1000_api.c' l='940'>/**
 *  e1000_read_pba_string - Read device part number string
 *  @hw: pointer to the HW structure
 *  @pba_num: pointer to device part number
 *  @pba_num_size: size of part number buffer
 *
 *  Reads the product board assembly (PBA) number from the EEPROM and stores
 *  the value in pba_num.
 *  Currently no func pointer exists and all implementations are handled in the
 *  generic version of this function.
 **/</doc>
<use f='master/kernel/linux/kni/ethtool/igb/igb_main.c' l='2955' u='c' c='igb_probe'/>
<use f='master/kernel/linux/kni/ethtool/igb/igb_main.c' l='10228' u='c' c='igb_kni_probe'/>
