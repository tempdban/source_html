<dec f='dpdk_1805/drivers/net/i40e/base/i40e_prototype.h' l='192' type='enum i40e_status_code i40e_aq_add_veb(struct i40e_hw * hw, u16 uplink_seid, u16 downlink_seid, u8 enabled_tc, _Bool default_port, u16 * pveb_seid, _Bool enable_stats, struct i40e_asq_cmd_details * cmd_details)'/>
<def f='dpdk_1805/drivers/net/i40e/base/i40e_common.c' l='2931' ll='2973' type='enum i40e_status_code i40e_aq_add_veb(struct i40e_hw * hw, u16 uplink_seid, u16 downlink_seid, u8 enabled_tc, _Bool default_port, u16 * veb_seid, _Bool enable_stats, struct i40e_asq_cmd_details * cmd_details)'/>
<doc f='dpdk_1805/drivers/net/i40e/base/i40e_common.c' l='2917'>/**
 * i40e_aq_add_veb - Insert a VEB between the VSI and the MAC
 * @hw: pointer to the hw struct
 * @uplink_seid: the MAC or other gizmo SEID
 * @downlink_seid: the VSI SEID
 * @enabled_tc: bitmap of TCs to be enabled
 * @default_port: true for default port VSI, false for control port
 * @veb_seid: pointer to where to put the resulting VEB SEID
 * @enable_stats: true to turn on VEB stats
 * @cmd_details: pointer to command details structure or NULL
 *
 * This asks the FW to add a VEB between the uplink and downlink
 * elements.  If the uplink SEID is 0, this will be a floating VEB.
 **/</doc>
<use f='dpdk_1805/drivers/net/i40e/i40e_ethdev.c' l='5046' u='c' c='i40e_veb_setup'/>
<use f='dpdk_1805/drivers/net/i40e/i40e_ethdev.c' l='5050' u='c' c='i40e_veb_setup'/>
