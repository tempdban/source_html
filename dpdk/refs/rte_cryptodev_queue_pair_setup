<dec f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.h' l='691' type='int rte_cryptodev_queue_pair_setup(uint8_t dev_id, uint16_t queue_pair_id, const struct rte_cryptodev_qp_conf * qp_conf, int socket_id, struct rte_mempool * session_pool)'/>
<doc f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.h' l='665'>/**
 * Allocate and set up a receive queue pair for a device.
 *
 *
 * @param	dev_id		The identifier of the device.
 * @param	queue_pair_id	The index of the queue pairs to set up. The
 *				value must be in the range [0, nb_queue_pair
 *				- 1] previously supplied to
 *				rte_cryptodev_configure().
 * @param	qp_conf		The pointer to the configuration data to be
 *				used for the queue pair. NULL value is
 *				allowed, in which case default configuration
 *				will be used.
 * @param	socket_id	The *socket_id* argument is the socket
 *				identifier in case of NUMA. The value can be
 *				*SOCKET_ID_ANY* if there is no NUMA constraint
 *				for the DMA memory allocated for the receive
 *				queue pair.
 * @param	session_pool	Pointer to device session mempool, used
 *				for session-less operations.
 *
 * @return
 *   - 0: Success, queue pair correctly set up.
 *   - &lt;0: Queue pair configuration failed
 */</doc>
<use f='dpdk_1805/app/test-crypto-perf/main.c' l='228' u='c' c='cperf_initialize_cryptodev'/>
<use f='dpdk_1805/drivers/crypto/scheduler/scheduler_pmd_ops.c' l='421' u='c' c='scheduler_pmd_qp_setup'/>
<def f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.c' l='944' ll='973' type='int rte_cryptodev_queue_pair_setup(uint8_t dev_id, uint16_t queue_pair_id, const struct rte_cryptodev_qp_conf * qp_conf, int socket_id, struct rte_mempool * session_pool)'/>
