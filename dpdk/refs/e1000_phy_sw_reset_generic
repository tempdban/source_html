<dec f='master/drivers/net/e1000/base/e1000_phy.h' l='68' type='s32 e1000_phy_sw_reset_generic(struct e1000_hw * hw)'/>
<use f='master/drivers/net/e1000/base/e1000_80003es2lan.c' l='111' u='r' c='e1000_init_phy_params_80003es2lan'/>
<use f='master/drivers/net/e1000/base/e1000_82540.c' l='77' u='r' c='e1000_init_phy_params_82540'/>
<use f='master/drivers/net/e1000/base/e1000_82543.c' l='103' u='r' c='e1000_init_phy_params_82543'/>
<use f='master/drivers/net/e1000/base/e1000_82571.c' l='135' u='r' c='e1000_init_phy_params_82571'/>
<use f='master/drivers/net/e1000/base/e1000_82571.c' l='151' u='r' c='e1000_init_phy_params_82571'/>
<use f='master/drivers/net/e1000/base/e1000_82575.c' l='186' u='r' c='e1000_init_phy_params_82575'/>
<use f='master/drivers/net/e1000/base/e1000_ich8lan.c' l='521' u='r' c='e1000_init_phy_params_pchlan'/>
<use f='master/drivers/net/e1000/base/e1000_ich8lan.c' l='615' u='r' c='e1000_init_phy_params_ich8lan'/>
<use f='master/drivers/net/e1000/base/e1000_ich8lan.c' l='2619' u='c' c='e1000_hv_phy_workarounds_ich8lan'/>
<def f='master/drivers/net/e1000/base/e1000_phy.c' l='2823' ll='2845' type='s32 e1000_phy_sw_reset_generic(struct e1000_hw * hw)'/>
<doc f='master/drivers/net/e1000/base/e1000_phy.c' l='2816'>/**
 *  e1000_phy_sw_reset_generic - PHY software reset
 *  @hw: pointer to the HW structure
 *
 *  Does a software reset of the PHY by reading the PHY control register and
 *  setting/write the control register reset bit to the PHY.
 **/</doc>
<dec f='master/kernel/linux/kni/ethtool/igb/e1000_phy.h' l='45' type='s32 e1000_phy_sw_reset_generic(struct e1000_hw * hw)'/>
<use f='master/kernel/linux/kni/ethtool/igb/e1000_82575.c' l='166' u='r' c='e1000_init_phy_params_82575'/>
<def f='master/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='2705' ll='2727' type='s32 e1000_phy_sw_reset_generic(struct e1000_hw * hw)'/>
<doc f='master/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='2698'>/**
 *  e1000_phy_sw_reset_generic - PHY software reset
 *  @hw: pointer to the HW structure
 *
 *  Does a software reset of the PHY by reading the PHY control register and
 *  setting/write the control register reset bit to the PHY.
 **/</doc>
