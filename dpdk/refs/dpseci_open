<dec f='master/drivers/crypto/dpaa2_sec/mc/fsl_dpseci.h' l='30' type='int dpseci_open(struct fsl_mc_io * mc_io, uint32_t cmd_flags, int dpseci_id, uint16_t * token)'/>
<use f='master/drivers/crypto/dpaa2_sec/dpaa2_sec_dpseci.c' l='2969' u='c' c='dpaa2_sec_dev_init'/>
<def f='master/drivers/crypto/dpaa2_sec/mc/dpseci.c' l='29' ll='54' type='int dpseci_open(struct fsl_mc_io * mc_io, uint32_t cmd_flags, int dpseci_id, uint16_t * token)'/>
<doc f='master/drivers/crypto/dpaa2_sec/mc/dpseci.c' l='12'>/**
 * dpseci_open() - Open a control session for the specified object
 * @mc_io:	Pointer to MC portal&apos;s I/O object
 * @cmd_flags:	Command flags; one or more of &apos;MC_CMD_FLAG_&apos;
 * @dpseci_id:	DPSECI unique ID
 * @token:	Returned token; use in subsequent API calls
 *
 * This function can be used to open a control session for an
 * already created object; an object may have been declared in
 * the DPL or by calling the dpseci_create() function.
 * This function returns a unique authentication token,
 * associated with the specific object ID and the specific MC
 * portal; this token must be used in all subsequent commands for
 * this specific object.
 *
 * Return:	&apos;0&apos; on Success; Error code otherwise.
 */</doc>
