<def f='dpdk_1805/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1188' ll='1230' type='int cnstr_shdsc_ipsec_new_decap(uint32_t * descbuf, _Bool ps, _Bool swap, struct ipsec_decap_pdb * pdb, struct alginfo * cipherdata, struct alginfo * authdata)'/>
<use f='dpdk_1805/drivers/crypto/dpaa2_sec/dpaa2_sec_dpseci.c' l='2340' u='c' c='dpaa2_sec_set_ipsec_session'/>
<doc f='dpdk_1805/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1168'>/**
 * cnstr_shdsc_ipsec_new_decap - IPSec new mode ESP decapsulation protocol-level
 *     shared descriptor.
 * @descbuf: pointer to buffer used for descriptor construction
 * @ps: if 36/40bit addressing is desired, this parameter must be true
 * @swap: must be true when core endianness doesn&apos;t match SEC endianness
 * @pdb: pointer to the PDB to be used with this descriptor
 *       This structure will be copied inline to the descriptor under
 *       construction. No error checking will be made. Refer to the
 *       block guide for details about the decapsulation PDB.
 * @cipherdata: pointer to block cipher transform definitions
 *              Valid algorithm values 0 one of OP_PCL_IPSEC_*
 * @authdata: pointer to authentication transform definitions.
 *            If an authentication key is required by the protocol, a &quot;normal&quot;
 *            key must be provided; DKP (Derived Key Protocol) will be used to
 *            compute MDHA on the fly in HW.
 *            Valid algorithm values - one of OP_PCL_IPSEC_*
 *
 * Return: size of descriptor written in words or negative number on error
 */</doc>
<use f='dpdk_1805/drivers/crypto/dpaa_sec/dpaa_sec.c' l='495' u='c' c='dpaa_sec_prep_cdb'/>
