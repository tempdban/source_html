<def f='master/lib/librte_eal/common/include/rte_eal.h' l='220' ll='224'/>
<dec f='master/lib/librte_eal/common/include/rte_eal.h' l='378' type='int rte_mp_reply(struct rte_mp_msg * msg, const char * peer)'/>
<size>16</size>
<doc f='master/lib/librte_eal/common/include/rte_eal.h' l='358'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Send a reply to the peer process.
 *
 * This function will send a reply message in response to a request message
 * received previously.
 *
 * @param msg
 *   The msg argument contains the customized message.
 *
 * @param peer
 *   The peer argument is the pointer to the peer socket path.
 *
 * @return
 *  - On success, return 0.
 *  - On failure, return -1, and the reason will be stored in rte_errno.
 */</doc>
<mbr r='rte_mp_reply::nb_sent' o='0' t='int'/>
<mbr r='rte_mp_reply::nb_received' o='32' t='int'/>
<mbr r='rte_mp_reply::msgs' o='64' t='struct rte_mp_msg *'/>
<use f='master/drivers/bus/vdev/vdev.c' l='379' u='c' c='vdev_action'/>
<def f='master/lib/librte_eal/common/eal_common_proc.c' l='1161' ll='1181' type='int rte_mp_reply(struct rte_mp_msg * msg, const char * peer)'/>
<use f='master/lib/librte_eal/common/malloc_mp.c' l='172' u='c' c='handle_sync'/>
<use f='master/lib/librte_eal/linuxapp/eal/eal_vfio_mp_sync.c' l='77' u='c' c='vfio_mp_primary'/>
<use f='master/lib/librte_pdump/rte_pdump.c' l='399' u='c' c='pdump_server'/>
