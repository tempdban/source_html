<dec f='master/drivers/event/opdl/opdl_ring.h' l='161' type='struct opdl_stage * opdl_stage_add(struct opdl_ring * t, _Bool threadsafe, _Bool is_input)'/>
<doc f='master/drivers/event/opdl/opdl_ring.h' l='137'>/**
 * Adds a new processing stage to a specified opdl_ring instance. Adding a stage
 * while there are entries in the opdl_ring being processed will cause undefined
 * behaviour.
 *
 * @param t
 *   The opdl_ring to add the stage to.
 * @param deps
 *   An array of pointers to other stages that this stage depends on. The other
 *   stages must be part of the same opdl_ring! Note that input is an implied
 *   dependency. This can be NULL if num_deps is 0.
 * @param num_deps
 *   The size of the deps array.
 * @param threadsafe
 *   Whether to support multiple threads processing this stage or  not.
 *   Enabling this may have a negative impact on performance if only one thread
 *   will be processing this stage.
 * @param is_input
 *   Indication to nitialise the stage with all slots available or none
 *
 * @return
 *   A pointer to the new stage, or NULL on error.
 */</doc>
<use f='master/drivers/event/opdl/opdl_evdev_init.c' l='718' u='c' c='initialise_all_other_ports'/>
<use f='master/drivers/event/opdl/opdl_evdev_init.c' l='742' u='c' c='initialise_all_other_ports'/>
<use f='master/drivers/event/opdl/opdl_evdev_init.c' l='771' u='c' c='initialise_all_other_ports'/>
<use f='master/drivers/event/opdl/opdl_evdev_init.c' l='801' u='c' c='initialise_all_other_ports'/>
<use f='master/drivers/event/opdl/opdl_evdev_init.c' l='892' u='c' c='initialise_queue_zero_ports'/>
<def f='master/drivers/event/opdl/opdl_ring.c' l='1092' ll='1121' type='struct opdl_stage * opdl_stage_add(struct opdl_ring * t, _Bool threadsafe, _Bool is_input)'/>
