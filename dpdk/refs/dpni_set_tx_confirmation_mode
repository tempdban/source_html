<dec f='master/drivers/net/dpaa2/mc/fsl_dpni.h' l='1011' type='int dpni_set_tx_confirmation_mode(struct fsl_mc_io * mc_io, uint32_t cmd_flags, uint16_t token, enum dpni_confirmation_mode mode)'/>
<use f='master/drivers/net/dpaa2/dpaa2_ethdev.c' l='550' u='c' c='dpaa2_dev_tx_queue_setup'/>
<def f='master/drivers/net/dpaa2/mc/dpni.c' l='1498' ll='1515' type='int dpni_set_tx_confirmation_mode(struct fsl_mc_io * mc_io, uint32_t cmd_flags, uint16_t token, enum dpni_confirmation_mode mode)'/>
<doc f='master/drivers/net/dpaa2/mc/dpni.c' l='1479'>/**
 * dpni_set_tx_confirmation_mode() - Tx confirmation mode
 * @mc_io:	Pointer to MC portal&apos;s I/O object
 * @cmd_flags:	Command flags; one or more of &apos;MC_CMD_FLAG_&apos;
 * @token:	Token of DPNI object
 * @mode:	Tx confirmation mode
 *
 * This function is useful only when &apos;DPNI_OPT_TX_CONF_DISABLED&apos; is not
 * selected at DPNI creation.
 * Calling this function with &apos;mode&apos; set to DPNI_CONF_DISABLE disables all
 * transmit confirmation (including the private confirmation queues), regardless
 * of previous settings; Note that in this case, Tx error frames are still
 * enqueued to the general transmit errors queue.
 * Calling this function with &apos;mode&apos; set to DPNI_CONF_SINGLE switches all
 * Tx confirmations to a shared Tx conf queue. &apos;index&apos; field in dpni_get_queue
 * command will be ignored.
 *
 * Return:	&apos;0&apos; on Success; Error code otherwise.
 */</doc>
