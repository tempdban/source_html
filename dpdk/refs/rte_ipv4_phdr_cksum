<def f='dpdk_1805/lib/librte_net/rte_ip.h' l='277' ll='300' type='uint16_t rte_ipv4_phdr_cksum(const struct ipv4_hdr * ipv4_hdr, uint64_t ol_flags)'/>
<use f='dpdk_1805/lib/librte_net/rte_ip.h' l='325' u='c' c='rte_ipv4_udptcp_cksum'/>
<doc f='dpdk_1805/lib/librte_net/rte_ip.h' l='259'>/**
 * Process the pseudo-header checksum of an IPv4 header.
 *
 * The checksum field must be set to 0 by the caller.
 *
 * Depending on the ol_flags, the pseudo-header checksum expected by the
 * drivers is not the same. For instance, when TSO is enabled, the IP
 * payload length must not be included in the packet.
 *
 * When ol_flags is 0, it computes the standard pseudo-header checksum.
 *
 * @param ipv4_hdr
 *   The pointer to the contiguous IPv4 header.
 * @param ol_flags
 *   The ol_flags of the associated mbuf.
 * @return
 *   The non-complemented checksum to set in the L4 header.
 */</doc>
<use f='dpdk_1805/lib/librte_net/rte_net.h' l='135' u='c' c='rte_net_intel_cksum_flags_prepare'/>
<use f='dpdk_1805/lib/librte_net/rte_net.h' l='158' u='c' c='rte_net_intel_cksum_flags_prepare'/>
<use f='dpdk_1805/drivers/net/tap/rte_eth_tap.c' l='484' u='c' c='tap_tx_l3_cksum'/>
