<dec f='master/lib/librte_hash/rte_hash.h' l='465' type='int32_t rte_hash_iterate(const struct rte_hash * h, const void ** key, void ** data, uint32_t * next)'/>
<doc f='master/lib/librte_hash/rte_hash.h' l='445'>/**
 * Iterate through the hash table, returning key-value pairs.
 *
 * @param h
 *   Hash table to iterate
 * @param key
 *   Output containing the key where current iterator
 *   was pointing at
 * @param data
 *   Output containing the data associated with key.
 *   Returns NULL if data was not stored.
 * @param next
 *   Pointer to iterator. Should be 0 to start iterating the hash table.
 *   Iterator is incremented after each call of this function.
 * @return
 *   Position where key was stored, if successful.
 *   - -EINVAL if the parameters are invalid.
 *   - -ENOENT if end of the hash table.
 */</doc>
<def f='master/lib/librte_hash/rte_cuckoo_hash.c' l='1303' ll='1344' type='int32_t rte_hash_iterate(const struct rte_hash * h, const void ** key, void ** data, uint32_t * next)'/>
<use f='master/lib/librte_lpm/rte_lpm6.c' l='236' u='c' c='rebuild_lpm'/>
