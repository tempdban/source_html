<dec f='master/lib/librte_mbuf/rte_mbuf.h' l='1118' type='struct rte_mempool * rte_pktmbuf_pool_create(const char * name, unsigned int n, unsigned int cache_size, uint16_t priv_size, uint16_t data_room_size, int socket_id)'/>
<use f='master/app/pdump/main.c' l='585' u='c' c='create_mp_ring_vdev'/>
<doc f='master/lib/librte_mbuf/rte_mbuf.h' l='1083'>/**
 * Create a mbuf pool.
 *
 * This function creates and initializes a packet mbuf pool. It is
 * a wrapper to rte_mempool functions.
 *
 * @param name
 *   The name of the mbuf pool.
 * @param n
 *   The number of elements in the mbuf pool. The optimum size (in terms
 *   of memory usage) for a mempool is when n is a power of two minus one:
 *   n = (2^q - 1).
 * @param cache_size
 *   Size of the per-core object cache. See rte_mempool_create() for
 *   details.
 * @param priv_size
 *   Size of application private are between the rte_mbuf structure
 *   and the data buffer. This value must be aligned to RTE_MBUF_PRIV_ALIGN.
 * @param data_room_size
 *   Size of data buffer in each mbuf, including RTE_PKTMBUF_HEADROOM.
 * @param socket_id
 *   The socket identifier where the memory should be allocated. The
 *   value can be *SOCKET_ID_ANY* if there is no NUMA constraint for the
 *   reserved zone.
 * @return
 *   The pointer to the new allocated mempool, on success. NULL on error
 *   with rte_errno set appropriately. Possible rte_errno values include:
 *    - E_RTE_NO_CONFIG - function could not get pointer to rte_config structure
 *    - E_RTE_SECONDARY - function was called from a secondary process instance
 *    - EINVAL - cache size provided is too large, or priv_size is not aligned.
 *    - ENOSPC - the maximum number of memzones has already been allocated
 *    - EEXIST - a memzone with the same name already exists
 *    - ENOMEM - no appropriate memory area found in which to create memzone
 */</doc>
<use f='master/app/test-bbdev/test_bbdev_perf.c' l='263' u='c' c='create_mbuf_pool'/>
<use f='master/app/test-eventdev/test_order_common.c' l='193' u='c' c='order_mempool_setup'/>
<use f='master/app/test-eventdev/test_perf_common.c' l='771' u='c' c='perf_mempool_setup'/>
<use f='master/app/test-eventdev/test_pipeline_common.c' l='496' u='c' c='pipeline_mempool_setup'/>
<use f='master/app/test-pmd/testpmd.c' l='567' u='c' c='mbuf_pool_create'/>
<use f='master/drivers/event/octeontx/ssovf_evdev_selftest.c' l='155' u='c' c='_eventdev_setup'/>
<use f='master/drivers/event/opdl/opdl_test.c' l='1016' u='c' c='opdl_selftest'/>
<use f='master/drivers/event/sw/sw_evdev_selftest.c' l='3129' u='c' c='test_sw_eventdev'/>
<use f='master/drivers/net/bonding/rte_eth_bond_8023ad.c' l='971' u='c' c='bond_mode_8023ad_activate_slave'/>
<use f='master/drivers/net/bonding/rte_eth_bond_alb.c' l='56' u='c' c='bond_mode_alb_enable'/>
<use f='master/drivers/net/bonding/rte_eth_bond_pmd.c' l='1727' u='c' c='slave_configure_slow_queue'/>
<use f='master/drivers/net/cxgbe/cxgbe_main.c' l='139' u='c' c='setup_sge_ctrl_txq'/>
<use f='master/drivers/net/liquidio/lio_rxtx.c' l='1213' u='c' c='lio_setup_sc_buffer_pool'/>
<use f='master/drivers/net/softnic/rte_eth_softnic_mempool.c' l='77' u='c' c='softnic_mempool_create'/>
<use f='master/drivers/net/tap/rte_eth_tap.c' l='1180' u='c' c='tap_gso_ctx_setup'/>
<def f='master/lib/librte_mbuf/rte_mbuf.c' l='161' ll='168' type='struct rte_mempool * rte_pktmbuf_pool_create(const char * name, unsigned int n, unsigned int cache_size, uint16_t priv_size, uint16_t data_room_size, int socket_id)'/>
<doc f='master/lib/librte_mbuf/rte_mbuf.c' l='160'>/* helper to create a mbuf pool */</doc>
<use f='master/lib/librte_vhost/vhost_crypto.c' l='1179' u='c' c='rte_vhost_crypto_create'/>
