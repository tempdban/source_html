<dec f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.h' l='214' type='const struct rte_cryptodev_symmetric_capability * rte_cryptodev_sym_capability_get(uint8_t dev_id, const struct rte_cryptodev_sym_capability_idx * idx)'/>
<doc f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.h' l='203'>/**
 *  Provide capabilities available for defined device and algorithm
 *
 * @param	dev_id		The identifier of the device.
 * @param	idx		Description of crypto algorithms.
 *
 * @return
 *   - Return description of the symmetric crypto capability if exist.
 *   - Return NULL if the capability not exist.
 */</doc>
<use f='dpdk_1805/app/test-crypto-perf/main.c' l='226' u='c' c='cperf_verify_devices_capabilities'/>
<use f='dpdk_1805/app/test-crypto-perf/main.c' l='247' u='c' c='cperf_verify_devices_capabilities'/>
<use f='dpdk_1805/app/test-crypto-perf/main.c' l='265' u='c' c='cperf_verify_devices_capabilities'/>
<def f='dpdk_1805/lib/librte_cryptodev/rte_cryptodev.c' l='230' ll='263' type='const struct rte_cryptodev_symmetric_capability * rte_cryptodev_sym_capability_get(uint8_t dev_id, const struct rte_cryptodev_sym_capability_idx * idx)'/>
