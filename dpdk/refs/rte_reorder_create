<dec f='master/lib/librte_reorder/rte_reorder.h' l='46' type='struct rte_reorder_buffer * rte_reorder_create(const char * name, unsigned int socket_id, unsigned int size)'/>
<doc f='master/lib/librte_reorder/rte_reorder.h' l='26'>/**
 * Create a new reorder buffer instance
 *
 * Allocate memory and initialize a new reorder buffer in that
 * memory, returning the reorder buffer pointer to the user
 *
 * @param name
 *   The name to be given to the reorder buffer instance.
 * @param socket_id
 *   The NUMA node on which the memory for the reorder buffer
 *   instance is to be reserved.
 * @param size
 *   Max number of elements that can be stored in the reorder buffer
 * @return
 *   The initialized reorder buffer instance, or NULL on error
 *   On error case, rte_errno will be set appropriately:
 *    - ENOMEM - no appropriate memory area found in which to create memzone
 *    - EINVAL - invalid parameters
 */</doc>
<def f='master/lib/librte_reorder/rte_reorder.c' l='96' ll='156' type='struct rte_reorder_buffer * rte_reorder_create(const char * name, unsigned int socket_id, unsigned int size)'/>
