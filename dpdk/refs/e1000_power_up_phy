<dec f='master/drivers/net/e1000/base/e1000_api.h' l='96' type='void e1000_power_up_phy(struct e1000_hw * hw)'/>
<def f='master/drivers/net/e1000/base/e1000_api.c' l='1338' ll='1344' type='void e1000_power_up_phy(struct e1000_hw * hw)'/>
<doc f='master/drivers/net/e1000/base/e1000_api.c' l='1331'>/**
 * e1000_power_up_phy - Restores link in case of PHY power down
 * @hw: pointer to the HW structure
 *
 * The phy may be powered down to save power, to turn off link when the
 * driver is unloaded, or wake on lan is not enabled (among others).
 **/</doc>
<use f='master/drivers/net/e1000/em_ethdev.c' l='556' u='c' c='eth_em_start'/>
<use f='master/drivers/net/e1000/igb_ethdev.c' l='1541' u='c' c='eth_igb_dev_set_link_up'/>
<dec f='master/kernel/linux/kni/ethtool/igb/e1000_api.h' l='67' type='void e1000_power_up_phy(struct e1000_hw * hw)'/>
<def f='master/kernel/linux/kni/ethtool/igb/e1000_api.c' l='1073' ll='1079' type='void e1000_power_up_phy(struct e1000_hw * hw)'/>
<doc f='master/kernel/linux/kni/ethtool/igb/e1000_api.c' l='1066'>/**
 * e1000_power_up_phy - Restores link in case of PHY power down
 * @hw: pointer to the HW structure
 *
 * The phy may be powered down to save power, to turn off link when the
 * driver is unloaded, or wake on lan is not enabled (among others).
 **/</doc>
<use f='master/kernel/linux/kni/ethtool/igb/igb_main.c' l='1538' u='c' c='igb_power_up_link'/>
