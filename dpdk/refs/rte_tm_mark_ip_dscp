<dec f='dpdk_1805/lib/librte_ethdev/rte_tm.h' l='1951' type='int rte_tm_mark_ip_dscp(uint16_t port_id, int mark_green, int mark_yellow, int mark_red, struct rte_tm_error * error)'/>
<doc f='dpdk_1805/lib/librte_ethdev/rte_tm.h' l='1909'>/**
 * Traffic manager packet marking - IPv4 / IPv6 DSCP (IETF RFC 2597)
 *
 * IETF RFC 2597 maps the traffic class and the drop priority to the IPv4/IPv6
 * Differentiated Services Codepoint (DSCP) field (6 bits). Here are the DSCP
 * values proposed by this RFC:
 *
 * &lt;pre&gt;                   Class 1    Class 2    Class 3    Class 4   &lt;/pre&gt;
 * &lt;pre&gt;                 +----------+----------+----------+----------+&lt;/pre&gt;
 * &lt;pre&gt;Low Drop Prec    |  001010  |  010010  |  011010  |  100010  |&lt;/pre&gt;
 * &lt;pre&gt;Medium Drop Prec |  001100  |  010100  |  011100  |  100100  |&lt;/pre&gt;
 * &lt;pre&gt;High Drop Prec   |  001110  |  010110  |  011110  |  100110  |&lt;/pre&gt;
 * &lt;pre&gt;                 +----------+----------+----------+----------+&lt;/pre&gt;
 *
 * There are 4 traffic classes (classes 1 .. 4) encoded by DSCP bits 1 and 2,
 * as well as 3 drop priorities (low/medium/high) encoded by DSCP bits 3 and 4.
 *
 * All IPv4/IPv6 packets have their color marked into DSCP bits 3 and 4 as
 * follows: green mapped to Low Drop Precedence (2’b01), yellow to Medium
 * (2’b10) and red to High (2’b11). Marking needs to be explicitly enabled
 * for each color; when not enabled for a given color, the DSCP field of all
 * packets with that color is left as is.
 *
 * @param[in] port_id
 *   The port identifier of the Ethernet device.
 * @param[in] mark_green
 *   Set to non-zero value to enable marking of green packets and to zero to
 *   disable it.
 * @param[in] mark_yellow
 *   Set to non-zero value to enable marking of yellow packets and to zero to
 *   disable it.
 * @param[in] mark_red
 *   Set to non-zero value to enable marking of red packets and to zero to
 *   disable it.
 * @param[out] error
 *   Error details. Filled in only on error, when not NULL.
 * @return
 *   0 on success, non-zero error code otherwise.
 *
 * @see struct rte_tm_capabilities::mark_ip_dscp_supported
 */</doc>
<def f='dpdk_1805/lib/librte_ethdev/rte_tm.c' l='400' ll='409' type='int rte_tm_mark_ip_dscp(uint16_t port_id, int mark_green, int mark_yellow, int mark_red, struct rte_tm_error * error)'/>
<doc f='dpdk_1805/lib/librte_ethdev/rte_tm.c' l='399'>/* Packet marking - IPv4/IPv6 DSCP */</doc>
