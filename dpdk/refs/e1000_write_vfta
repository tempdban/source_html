<dec f='dpdk_1805/drivers/net/e1000/base/e1000_api.h' l='62' type='void e1000_write_vfta(struct e1000_hw * hw, u32 offset, u32 value)'/>
<def f='dpdk_1805/drivers/net/e1000/base/e1000_api.c' l='559' ll='563' type='void e1000_write_vfta(struct e1000_hw * hw, u32 offset, u32 value)'/>
<doc f='dpdk_1805/drivers/net/e1000/base/e1000_api.c' l='550'>/**
 *  e1000_write_vfta - Write value to VLAN filter table
 *  @hw: pointer to the HW structure
 *  @offset: the 32-bit offset in which to write the value to.
 *  @value: the 32-bit value to write at location offset.
 *
 *  This writes a 32-bit value to a 32-bit offset in the VLAN filter
 *  table. This is a function pointer entry point called by drivers.
 **/</doc>
<dec f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.h' l='34' type='void e1000_write_vfta(struct e1000_hw * hw, u32 offset, u32 value)'/>
<def f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.c' l='323' ll='327' type='void e1000_write_vfta(struct e1000_hw * hw, u32 offset, u32 value)'/>
<doc f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.c' l='314'>/**
 *  e1000_write_vfta - Write value to VLAN filter table
 *  @hw: pointer to the HW structure
 *  @offset: the 32-bit offset in which to write the value to.
 *  @value: the 32-bit value to write at location offset.
 *
 *  This writes a 32-bit value to a 32-bit offset in the VLAN filter
 *  table. This is a function pointer entry point called by drivers.
 **/</doc>
<use f='dpdk_1805/kernel/linux/kni/ethtool/igb/igb_main.c' l='334' u='c' c='igb_vfta_set'/>
