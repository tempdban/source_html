<dec f='master/lib/librte_ring/rte_ring.h' l='219' type='struct rte_ring * rte_ring_create(const char * name, unsigned int count, int socket_id, unsigned int flags)'/>
<use f='master/app/pdump/main.c' l='603' u='c' c='create_mp_ring_vdev'/>
<use f='master/app/pdump/main.c' l='614' u='c' c='create_mp_ring_vdev'/>
<use f='master/app/pdump/main.c' l='686' u='c' c='create_mp_ring_vdev'/>
<use f='master/app/pdump/main.c' l='723' u='c' c='create_mp_ring_vdev'/>
<doc f='master/lib/librte_ring/rte_ring.h' l='180'>/**
 * Create a new ring named *name* in memory.
 *
 * This function uses ``memzone_reserve()`` to allocate memory. Then it
 * calls rte_ring_init() to initialize an empty ring.
 *
 * The new ring size is set to *count*, which must be a power of
 * two. Water marking is disabled by default. The real usable ring size
 * is *count-1* instead of *count* to differentiate a free ring from an
 * empty ring.
 *
 * The ring is added in RTE_TAILQ_RING list.
 *
 * @param name
 *   The name of the ring.
 * @param count
 *   The size of the ring (must be a power of 2).
 * @param socket_id
 *   The *socket_id* argument is the socket identifier in case of
 *   NUMA. The value can be *SOCKET_ID_ANY* if there is no NUMA
 *   constraint for the reserved zone.
 * @param flags
 *   An OR of the following:
 *    - RING_F_SP_ENQ: If this flag is set, the default behavior when
 *      using ``rte_ring_enqueue()`` or ``rte_ring_enqueue_bulk()``
 *      is &quot;single-producer&quot;. Otherwise, it is &quot;multi-producers&quot;.
 *    - RING_F_SC_DEQ: If this flag is set, the default behavior when
 *      using ``rte_ring_dequeue()`` or ``rte_ring_dequeue_bulk()``
 *      is &quot;single-consumer&quot;. Otherwise, it is &quot;multi-consumers&quot;.
 * @return
 *   On success, the pointer to the new allocated ring. NULL on error with
 *    rte_errno set appropriately. Possible errno values include:
 *    - E_RTE_NO_CONFIG - function could not get pointer to rte_config structure
 *    - E_RTE_SECONDARY - function was called from a secondary process instance
 *    - EINVAL - count provided is not a power of 2
 *    - ENOSPC - the maximum number of memzones has already been allocated
 *    - EEXIST - a memzone with the same name already exists
 *    - ENOMEM - no appropriate memory area found in which to create memzone
 */</doc>
<use f='master/drivers/baseband/null/bbdev_null.c' l='119' u='c' c='q_setup'/>
<use f='master/drivers/compress/octeontx/otx_zip_pmd.c' l='369' u='c' c='zip_pmd_qp_create_processed_pkts_ring'/>
<use f='master/drivers/crypto/null/null_crypto_pmd_ops.c' l='179' u='c' c='null_crypto_pmd_qp_create_processed_pkts_ring'/>
<use f='master/drivers/crypto/scheduler/scheduler_multicore.c' l='355' u='c' c='scheduler_create_private_ctx'/>
<use f='master/drivers/crypto/scheduler/scheduler_multicore.c' l='369' u='c' c='scheduler_create_private_ctx'/>
<use f='master/drivers/crypto/scheduler/scheduler_pmd_ops.c' l='110' u='c' c='update_order_ring'/>
<use f='master/drivers/event/sw/sw_evdev.c' l='269' u='c' c='qid_init'/>
<use f='master/drivers/mempool/bucket/rte_mempool_bucket.c' l='447' u='c' c='bucket_alloc'/>
<use f='master/drivers/mempool/bucket/rte_mempool_bucket.c' l='463' u='c' c='bucket_alloc'/>
<use f='master/drivers/mempool/bucket/rte_mempool_bucket.c' l='477' u='c' c='bucket_alloc'/>
<use f='master/drivers/mempool/ring/rte_mempool_ring.c' l='75' u='c' c='common_ring_alloc'/>
<use f='master/drivers/net/bonding/rte_eth_bond_8023ad.c' l='984' u='c' c='bond_mode_8023ad_activate_slave'/>
<use f='master/drivers/net/bonding/rte_eth_bond_8023ad.c' l='994' u='c' c='bond_mode_8023ad_activate_slave'/>
<use f='master/drivers/net/netvsc/hn_rxtx.c' l='803' u='c' c='hn_dev_rx_queue_setup'/>
<use f='master/drivers/net/ring/rte_eth_ring.c' l='416' u='c' c='eth_dev_ring_create'/>
<use f='master/drivers/net/softnic/rte_eth_softnic_pipeline.c' l='116' u='c' c='softnic_pipeline_create'/>
<use f='master/drivers/net/softnic/rte_eth_softnic_pipeline.c' l='127' u='c' c='softnic_pipeline_create'/>
<use f='master/drivers/net/softnic/rte_eth_softnic_swq.c' l='91' u='c' c='softnic_swq_create'/>
<use f='master/drivers/net/softnic/rte_eth_softnic_thread.c' l='56' u='c' c='softnic_thread_init'/>
<use f='master/drivers/net/softnic/rte_eth_softnic_thread.c' l='70' u='c' c='softnic_thread_init'/>
<use f='master/drivers/raw/dpaa2_qdma/dpaa2_qdma.c' l='317' u='c' c='rte_qdma_vq_create'/>
<use f='master/lib/librte_efd/rte_efd.c' l='691' u='c' c='rte_efd_create'/>
<use f='master/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='1297' u='c' c='rxa_create_intr_thread'/>
<use f='master/lib/librte_eventdev/rte_event_timer_adapter.c' l='883' u='c' c='sw_event_timer_adapter_init'/>
<use f='master/lib/librte_hash/rte_cuckoo_hash.c' l='141' u='c' c='rte_hash_create'/>
<def f='master/lib/librte_ring/rte_ring.c' l='110' ll='175' type='struct rte_ring * rte_ring_create(const char * name, unsigned int count, int socket_id, unsigned int flags)'/>
<doc f='master/lib/librte_ring/rte_ring.c' l='109'>/* create the ring */</doc>
