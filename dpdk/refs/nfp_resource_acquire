<dec f='master/drivers/net/nfp/nfpcore/nfp_resource.h' l='20' type='struct nfp_resource * nfp_resource_acquire(struct nfp_cpp * cpp, const char * name)'/>
<use f='master/drivers/net/nfp/nfpcore/nfp_hwinfo.c' l='88' u='c' c='nfp_hwinfo_try_fetch'/>
<use f='master/drivers/net/nfp/nfpcore/nfp_nffw.c' l='131' u='c' c='nfp_nffw_info_open'/>
<use f='master/drivers/net/nfp/nfpcore/nfp_nsp.c' l='116' u='c' c='nfp_nsp_open'/>
<def f='master/drivers/net/nfp/nfpcore/nfp_resource.c' l='151' ll='204' type='struct nfp_resource * nfp_resource_acquire(struct nfp_cpp * cpp, const char * name)'/>
<doc f='master/drivers/net/nfp/nfpcore/nfp_resource.c' l='142'>/*
 * nfp_resource_acquire() - Acquire a resource handle
 * @cpp:	NFP CPP handle
 * @name:	Name of the resource
 *
 * NOTE: This function locks the acquired resource
 *
 * Return: NFP Resource handle, or ERR_PTR()
 */</doc>
