<dec f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.h' l='368' type='int rte_event_eth_rx_adapter_queue_add(uint8_t id, uint16_t eth_dev_id, int32_t rx_queue_id, const struct rte_event_eth_rx_adapter_queue_conf * conf)'/>
<doc f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.h' l='333'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Add receive queue to an event adapter. After a queue has been
 * added to the event adapter, the result of the application calling
 * rte_eth_rx_burst(eth_dev_id, rx_queue_id, ..) is undefined.
 *
 * @param id
 *  Adapter identifier.
 *
 * @param eth_dev_id
 *  Port identifier of Ethernet device.
 *
 * @param rx_queue_id
 *  Ethernet device receive queue index.
 *  If rx_queue_id is -1, then all Rx queues configured for
 *  the device are added. If the ethdev Rx queues can only be
 *  connected to a single event queue then rx_queue_id is
 *  required to be -1.
 * @see RTE_EVENT_ETH_RX_ADAPTER_CAP_MULTI_EVENTQ
 *
 * @param conf
 *  Additional configuration structure of type *rte_event_eth_rx_adapter_conf*
 *
 * @return
 *  - 0: Success, Receive queue added correctly.
 *  - &lt;0: Error code on failure.
 *  - (-EIO) device reconfiguration and restart error. The adapter reconfigures
 *  the event device with an additional port if it is required to use a service
 *  function for packet transfer from the ethernet device to the event device.
 *  If the device had been started before this call, this error code indicates
 *  an error in restart following an error in reconfiguration, i.e., a
 *  combination of the two error codes.
 */</doc>
<use f='dpdk_1805/app/test-eventdev/test_perf_common.c' l='376' u='c' c='perf_event_rx_adapter_setup'/>
<use f='dpdk_1805/app/test-eventdev/test_pipeline_common.c' l='368' u='c' c='pipeline_event_rx_adapter_setup'/>
<def f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='2073' ll='2169' type='int rte_event_eth_rx_adapter_queue_add(uint8_t id, uint16_t eth_dev_id, int32_t rx_queue_id, const struct rte_event_eth_rx_adapter_queue_conf * queue_conf)'/>
