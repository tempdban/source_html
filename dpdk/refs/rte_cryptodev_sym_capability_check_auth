<dec f='master/lib/librte_cryptodev/rte_cryptodev.h' l='268' type='int rte_cryptodev_sym_capability_check_auth(const struct rte_cryptodev_symmetric_capability * capability, uint16_t key_size, uint16_t digest_size, uint16_t iv_size)'/>
<doc f='master/lib/librte_cryptodev/rte_cryptodev.h' l='254'>/**
 * Check if key size and initial vector are supported
 * in crypto auth capability
 *
 * @param	capability	Description of the symmetric crypto capability.
 * @param	key_size	Auth key size.
 * @param	digest_size	Auth digest size.
 * @param	iv_size		Auth initial vector size.
 *
 * @return
 *   - Return 0 if the parameters are in range of the capability.
 *   - Return -1 if the parameters are out of range of the capability.
 */</doc>
<use f='master/app/test-crypto-perf/main.c' l='275' u='c' c='cperf_verify_devices_capabilities'/>
<def f='master/lib/librte_cryptodev/rte_cryptodev.c' l='369' ll='384' type='int rte_cryptodev_sym_capability_check_auth(const struct rte_cryptodev_symmetric_capability * capability, uint16_t key_size, uint16_t digest_size, uint16_t iv_size)'/>
