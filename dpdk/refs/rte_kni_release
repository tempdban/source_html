<dec f='dpdk_1805/lib/librte_kni/rte_kni.h' l='128' type='int rte_kni_release(struct rte_kni * kni)'/>
<use f='dpdk_1805/drivers/net/kni/rte_eth_kni.c' l='471' u='c' c='eth_kni_remove'/>
<doc f='dpdk_1805/lib/librte_kni/rte_kni.h' l='114'>/**
 * Release KNI interface according to the context. It will also release the
 * paired KNI interface in kernel space. All processing on the specific KNI
 * context need to be stopped before calling this interface.
 *
 * rte_kni_release is thread safe.
 *
 * @param kni
 *  The pointer to the context of an existent KNI interface.
 *
 * @return
 *  - 0 indicates success.
 *  - negative value indicates failure.
 */</doc>
<def f='dpdk_1805/lib/librte_kni/rte_kni.c' l='462' ll='505' type='int rte_kni_release(struct rte_kni * kni)'/>
