<dec f='dpdk_1805/lib/librte_pipeline/rte_table_action.h' l='826' type='int rte_table_action_meter_read(struct rte_table_action * action, void * data, uint32_t tc_mask, struct rte_table_action_mtr_counters * stats, int clear)'/>
<doc f='dpdk_1805/lib/librte_pipeline/rte_table_action.h' l='798'>/**
 * Table action meter read.
 *
 * @param[in] action
 *   Handle to table action object (needs to be valid).
 * @param[in] data
 *   Data byte array (typically table rule data) with meter action previously
 *   applied on it.
 * @param[in] tc_mask
 *   Bit mask defining which traffic classes should have the meter stats
 *   counters read from *data* and stored into *stats*. If bit N is set in this
 *   bit mask, then traffic class N is part of this operation, otherwise it is
 *   not. If bit N is set in this bit mask, then traffic class N must be one of
 *   the traffic classes that are enabled for the meter action in the table
 *   action profile used by the *action* object.
 * @param[inout] stats
 *   When non-NULL, it points to the area where the meter stats counters read
 *   from *data* are saved. Only the meter stats counters for the *tc_mask*
 *   traffic classes are read and stored to *stats*.
 * @param[in] clear
 *   When non-zero, the meter stats counters are cleared (i.e. set to zero),
 *   otherwise the counters are not modified. When the read operation is enabled
 *   (*stats* is non-NULL), the clear operation is performed after the read
 *   operation is completed.
 * @return
 *   Zero on success, non-zero error code otherwise.
 */</doc>
<use f='dpdk_1805/drivers/net/softnic/rte_eth_softnic_thread.c' l='1811' u='c' c='softnic_pipeline_table_rule_mtr_read'/>
<use f='dpdk_1805/drivers/net/softnic/rte_eth_softnic_thread.c' l='2732' u='c' c='pipeline_msg_handle_table_rule_mtr_read'/>
<def f='dpdk_1805/lib/librte_pipeline/rte_table_action.c' l='1716' ll='1776' type='int rte_table_action_meter_read(struct rte_table_action * action, void * data, uint32_t tc_mask, struct rte_table_action_mtr_counters * stats, int clear)'/>
