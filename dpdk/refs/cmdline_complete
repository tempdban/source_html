<dec f='dpdk_1805/lib/librte_cmdline/cmdline_parse.h' l='176' type='int cmdline_complete(struct cmdline * cl, const char * buf, int * state, char * dst, unsigned int size)'/>
<doc f='dpdk_1805/lib/librte_cmdline/cmdline_parse.h' l='157'>/**
 * complete() must be called with *state==0 (try to complete) or
 * with *state==-1 (just display choices), then called without
 * modifying *state until it returns CMDLINE_PARSE_COMPLETED_BUFFER or
 * CMDLINE_PARSE_COMPLETED_BUFFER.
 *
 * It returns &lt; 0 on error.
 *
 * Else it returns:
 *   - CMDLINE_PARSE_COMPLETED_BUFFER on completion (one possible
 *     choice). In this case, the chars are appended in dst buffer.
 *   - CMDLINE_PARSE_COMPLETE_AGAIN if there is several possible
 *     choices. In this case, you must call the function again,
 *     keeping the value of state intact.
 *   - CMDLINE_PARSE_COMPLETED_BUFFER when the iteration is
 *     finished. The dst is not valid for this last call.
 *
 * The returned dst buf ends with \0.
 */</doc>
<use f='dpdk_1805/lib/librte_cmdline/cmdline.c' l='46' u='c' c='cmdline_complete_buffer'/>
<def f='dpdk_1805/lib/librte_cmdline/cmdline_parse.c' l='312' ll='537' type='int cmdline_complete(struct cmdline * cl, const char * buf, int * state, char * dst, unsigned int size)'/>
