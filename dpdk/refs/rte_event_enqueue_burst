<def f='dpdk_1805/lib/librte_eventdev/rte_eventdev.h' l='1355' ll='1363' type='uint16_t rte_event_enqueue_burst(uint8_t dev_id, uint8_t port_id, const struct rte_event * ev, uint16_t nb_events)'/>
<doc f='dpdk_1805/lib/librte_eventdev/rte_eventdev.h' l='1313'>/**
 * Enqueue a burst of events objects or an event object supplied in *rte_event*
 * structure on an  event device designated by its *dev_id* through the event
 * port specified by *port_id*. Each event object specifies the event queue on
 * which it will be enqueued.
 *
 * The *nb_events* parameter is the number of event objects to enqueue which are
 * supplied in the *ev* array of *rte_event* structure.
 *
 * Event operations RTE_EVENT_OP_FORWARD and RTE_EVENT_OP_RELEASE must only be
 * enqueued to the same port that their associated events were dequeued from.
 *
 * The rte_event_enqueue_burst() function returns the number of
 * events objects it actually enqueued. A return value equal to *nb_events*
 * means that all event objects have been enqueued.
 *
 * @param dev_id
 *   The identifier of the device.
 * @param port_id
 *   The identifier of the event port.
 * @param ev
 *   Points to an array of *nb_events* objects of type *rte_event* structure
 *   which contain the event object enqueue operations to be processed.
 * @param nb_events
 *   The number of event objects to enqueue, typically number of
 *   rte_event_port_enqueue_depth() available for this port.
 *
 * @return
 *   The number of event objects actually enqueued on the event device. The
 *   return value can be less than the value of the *nb_events* parameter when
 *   the event devices queue is full or if invalid parameters are specified in a
 *   *rte_event*. If the return value is less than *nb_events*, the remaining
 *   events at the end of ev[] are not consumed and the caller has to take care
 *   of them, and rte_errno is set accordingly. Possible errno values include:
 *   - -EINVAL  The port ID is invalid, device ID is invalid, an event&apos;s queue
 *              ID is invalid, or an event&apos;s sched type doesn&apos;t match the
 *              capabilities of the destination queue.
 *   - -ENOSPC  The event port was backpressured and unable to enqueue
 *              one or more events. This error code is only applicable to
 *              closed systems.
 * @see rte_event_port_enqueue_depth()
 */</doc>
<use f='dpdk_1805/app/test-eventdev/test_order_atq.c' l='39' u='c' c='order_atq_worker'/>
<use f='dpdk_1805/app/test-eventdev/test_order_atq.c' l='84' u='c' c='order_atq_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_order_atq.c' l='86' u='c' c='order_atq_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_order_common.c' l='56' u='c' c='order_producer'/>
<use f='dpdk_1805/app/test-eventdev/test_order_queue.c' l='39' u='c' c='order_queue_worker'/>
<use f='dpdk_1805/app/test-eventdev/test_order_queue.c' l='84' u='c' c='order_queue_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_order_queue.c' l='86' u='c' c='order_queue_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_perf_atq.c' l='65' u='c' c='perf_atq_worker'/>
<use f='dpdk_1805/app/test-eventdev/test_perf_atq.c' l='116' u='c' c='perf_atq_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_perf_atq.c' l='118' u='c' c='perf_atq_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_perf_common.c' l='63' u='c' c='perf_producer'/>
<use f='dpdk_1805/app/test-eventdev/test_perf_queue.c' l='66' u='c' c='perf_queue_worker'/>
<use f='dpdk_1805/app/test-eventdev/test_perf_queue.c' l='116' u='c' c='perf_queue_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_perf_queue.c' l='118' u='c' c='perf_queue_worker_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_pipeline_common.h' l='116' u='c' c='pipeline_event_enqueue'/>
<use f='dpdk_1805/app/test-eventdev/test_pipeline_common.h' l='126' u='c' c='pipeline_event_enqueue_burst'/>
<use f='dpdk_1805/app/test-eventdev/test_pipeline_common.h' l='128' u='c' c='pipeline_event_enqueue_burst'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='262' u='c' c='ordered_basic'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='298' u='c' c='ordered_basic'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='402' u='c' c='atomic_basic'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='441' u='c' c='atomic_basic'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='631' u='c' c='single_link_w_stats'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='658' u='c' c='single_link_w_stats'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='855' u='c' c='qid_basic'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='904' u='c' c='qid_basic'/>
<use f='dpdk_1805/drivers/event/opdl/opdl_test.c' l='949' u='c' c='qid_basic'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev.c' l='414' u='c' c='sw_drain_ports'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='387' u='c' c='run_prio_packet_test'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='479' u='c' c='test_single_directed_packet'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='548' u='c' c='test_directed_forward_credits'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='709' u='c' c='burst_packets'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='797' u='c' c='abuse_inflights'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='935' u='c' c='xstats_tests'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='1260' u='c' c='port_reconfig_credits'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='1488' u='c' c='xstats_id_reset_tests'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='1876' u='c' c='qid_priorities'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='1957' u='c' c='load_balancing'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2056' u='c' c='load_balancing_history'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2078' u='c' c='load_balancing_history'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2106' u='c' c='load_balancing_history'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2156' u='c' c='load_balancing_history'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2216' u='c' c='invalid_qid'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2303' u='c' c='single_packet'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2347' u='c' c='single_packet'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2415' u='c' c='inflight_counts'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2432' u='c' c='inflight_counts'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2483' u='c' c='inflight_counts'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2518' u='c' c='inflight_counts'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2617' u='c' c='parallel_basic'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2646' u='c' c='parallel_basic'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2726' u='c' c='holb'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2751' u='c' c='holb'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2761' u='c' c='holb'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2784' u='c' c='holb'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2848' u='c' c='dev_stop_flush'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2911' u='c' c='worker_loopback_worker_fn'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2925' u='c' c='worker_loopback_worker_fn'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2938' u='c' c='worker_loopback_worker_fn'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2972' u='c' c='worker_loopback_producer_fn'/>
<use f='dpdk_1805/drivers/event/sw/sw_evdev_selftest.c' l='2973' u='c' c='worker_loopback_producer_fn'/>
<use f='dpdk_1805/lib/librte_eventdev/rte_event_crypto_adapter.c' l='540' u='c' c='eca_ops_enqueue_burst'/>
<use f='dpdk_1805/lib/librte_eventdev/rte_event_timer_adapter.c' l='494' u='c' c='event_buffer_flush'/>
