<def f='dpdk_1805/drivers/crypto/dpaa2_sec/hw/desc/common.h' l='62' ll='84' type='int rta_inline_query(unsigned int sd_base_len, unsigned int jd_len, unsigned int * data_len, uint32_t * inl_mask, unsigned int count)'/>
<use f='dpdk_1805/drivers/crypto/dpaa2_sec/dpaa2_sec_dpseci.c' l='1805' u='c' c='dpaa2_sec_aead_init'/>
<use f='dpdk_1805/drivers/crypto/dpaa2_sec/dpaa2_sec_dpseci.c' l='2027' u='c' c='dpaa2_sec_aead_chain_init'/>
<doc f='dpdk_1805/drivers/crypto/dpaa2_sec/hw/desc/common.h' l='44'>/**
 * rta_inline_query() - Provide indications on which data items can be inlined
 *                      and which shall be referenced in a shared descriptor.
 * @sd_base_len: Shared descriptor base length - bytes consumed by the commands,
 *               excluding the data items to be inlined (or corresponding
 *               pointer if an item is not inlined). Each cnstr_* function that
 *               generates descriptors should have a define mentioning
 *               corresponding length.
 * @jd_len: Maximum length of the job descriptor(s) that will be used
 *          together with the shared descriptor.
 * @data_len: Array of lengths of the data items trying to be inlined
 * @inl_mask: 32bit mask with bit x = 1 if data item x can be inlined, 0
 *            otherwise.
 * @count: Number of data items (size of @data_len array); must be &lt;= 32
 *
 * Return: 0 if data can be inlined / referenced, negative value if not. If 0,
 *         check @inl_mask for details.
 */</doc>
<use f='dpdk_1805/drivers/crypto/dpaa_sec/dpaa_sec.c' l='461' u='c' c='dpaa_sec_prep_cdb'/>
