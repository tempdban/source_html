<dec f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.h' l='144'/>
<doc f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.h' l='130'>/* To avoid needless dynamic allocation, the driver API often gives the caller
 * a &quot;descriptor&quot; type that the caller can instantiate however they like.
 * Ultimately though, it is just a cacheline of binary storage (or something
 * smaller when it is known that the descriptor doesn&apos;t need all 64 bytes) for
 * holding pre-formatted pieces of hardware commands. The performance-critical
 * code can then copy these descriptors directly into hardware command
 * registers more efficiently than trying to construct/format commands
 * on-the-fly. The API user sees the descriptor as an array of 32-bit words in
 * order for the compiler to know its size, but the internal details are not
 * exposed. The following macro is used within the driver for converting *any*
 * descriptor pointer to a usable array pointer. The use of a macro (instead of
 * an inline) is necessary to work with different descriptor types and to work
 * correctly with const and non-const inputs (and similarly-qualified outputs).
 */</doc>
<use f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.c' l='429' u='c'/>
<use f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.c' l='452' u='c'/>
<use f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.c' l='502' u='c'/>
<use f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.c' l='597' u='c'/>
<use f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.c' l='611' u='c'/>
<use f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.c' l='741' u='c'/>
<use f='dpdk_1805/drivers/bus/fslmc/qbman/qbman_portal.c' l='1149' u='c'/>
