<dec f='master/drivers/crypto/dpaa2_sec/hw/rta.h' l='699'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='904' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='912' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='922' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='925' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1042' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1045' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1055' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1063' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1076' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1077' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1091' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1237' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1241' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1506' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1512' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1522' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1528' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1540' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1542' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1586' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/ipsec.h' l='1588' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='59' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='60' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='112' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='195' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='196' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='293' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='295' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='350' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='351' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='401' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='431' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='491' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='494' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='500' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='503' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='509' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='519' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='601' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='605' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='608' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='619' u='c'/>
<use f='master/drivers/crypto/dpaa2_sec/hw/desc/algo.h' l='625' u='c'/>
<doc f='master/drivers/crypto/dpaa2_sec/hw/rta.h' l='677'>/**
 * MATHB - Configures MATHB command to perform binary operations
 * @program: pointer to struct program
 * @operand1: first operand: MATH0-MATH3, DPOVRD, SEQINSZ, SEQOUTSZ, VSEQINSZ,
 *            VSEQOUTSZ, ZERO, ONE, NONE, Immediate value. IMMED must be used to
 *            indicate immediate value.
 * @operator: function to be performed: ADD, ADDC, SUB, SUBB, OR, AND, XOR,
 *            LSHIFT, RSHIFT, SHLD.
 * @operand2: second operand: MATH0-MATH3, DPOVRD, VSEQINSZ, VSEQOUTSZ, ABD,
 *            OFIFO, JOBSRC, ZERO, ONE, Immediate value. IMMED2 must be used to
 *            indicate immediate value.
 * @result: destination for the result: MATH0-MATH3, DPOVRD, SEQINSZ, SEQOUTSZ,
 *          NONE, VSEQINSZ, VSEQOUTSZ.
 * @length: length in bytes of the operation and the immediate value, if there
 *          is one (int).
 * @opt: operational flags: IFB, NFU, STL, SWP, IMMED, IMMED2
 *
 * Return: On success, descriptor buffer offset where this command is inserted.
 *         On error, a negative error code; first error program counter will
 *         point to offset in descriptor buffer where the instruction should
 *         have been written.
 */</doc>
