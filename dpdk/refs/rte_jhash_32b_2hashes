<def f='dpdk_1805/lib/librte_hash/rte_jhash.h' l='285' ll='289' type='void rte_jhash_32b_2hashes(const uint32_t * k, uint32_t length, uint32_t * pc, uint32_t * pb)'/>
<use f='dpdk_1805/lib/librte_hash/rte_jhash.h' l='336' u='c' c='rte_jhash_32b'/>
<doc f='dpdk_1805/lib/librte_hash/rte_jhash.h' l='270'>/**
 * Same as rte_jhash_32b, but takes two seeds and return two uint32_ts.
 * pc and pb must be non-null, and *pc and *pb must both be initialized
 * with seeds. If you pass in (*pb)=0, the output (*pc) will be
 * the same as the return value from rte_jhash_32b.
 *
 * @param k
 *   Key to calculate hash of.
 * @param length
 *   Length of key in units of 4 bytes.
 * @param pc
 *   IN: seed OUT: primary hash value.
 * @param pb
 *   IN: second seed OUT: secondary hash value.
 */</doc>
