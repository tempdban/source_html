<dec f='dpdk_1805/lib/librte_pipeline/rte_table_action.h' l='852' type='int rte_table_action_ttl_read(struct rte_table_action * action, void * data, struct rte_table_action_ttl_counters * stats, int clear)'/>
<doc f='dpdk_1805/lib/librte_pipeline/rte_table_action.h' l='832'>/**
 * Table action TTL read.
 *
 * @param[in] action
 *   Handle to table action object (needs to be valid).
 * @param[in] data
 *   Data byte array (typically table rule data) with TTL action previously
 *   applied on it.
 * @param[inout] stats
 *   When non-NULL, it points to the area where the TTL stats counters read from
 *   *data* are saved.
 * @param[in] clear
 *   When non-zero, the TTL stats counters are cleared (i.e. set to zero),
 *   otherwise the counters are not modified. When the read operation is enabled
 *   (*stats* is non-NULL), the clear operation is performed after the read
 *   operation is completed.
 * @return
 *   Zero on success, non-zero error code otherwise.
 */</doc>
<use f='dpdk_1805/drivers/net/softnic/rte_eth_softnic_thread.c' l='1933' u='c' c='softnic_pipeline_table_rule_ttl_read'/>
<use f='dpdk_1805/drivers/net/softnic/rte_eth_softnic_thread.c' l='2769' u='c' c='pipeline_msg_handle_table_rule_ttl_read'/>
<def f='dpdk_1805/lib/librte_pipeline/rte_table_action.c' l='1778' ll='1804' type='int rte_table_action_ttl_read(struct rte_table_action * action, void * data, struct rte_table_action_ttl_counters * stats, int clear)'/>
