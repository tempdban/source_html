<dec f='dpdk_1805/lib/librte_eal/common/include/generic/rte_spinlock.h' l='265' type='void rte_spinlock_recursive_lock_tm(rte_spinlock_recursive_t * slr)'/>
<def f='dpdk_1805/lib/librte_eal/common/include/arch/x86/rte_spinlock.h' l='136' ll='143' type='void rte_spinlock_recursive_lock_tm(rte_spinlock_recursive_t * slr)'/>
<doc f='dpdk_1805/lib/librte_eal/common/include/generic/rte_spinlock.h' l='252'>/**
 * Try to execute critical section in a hardware memory transaction,
 * if it fails or not available take the recursive spinlocks
 *
 * NOTE: An attempt to perform a HW I/O operation inside a hardware memory
 * transaction always aborts the transaction since the CPU is not able to
 * roll-back should the transaction fail. Therefore, hardware transactional
 * locks are not advised to be used around rte_eth_rx_burst() and
 * rte_eth_tx_burst() calls.
 *
 * @param slr
 *   A pointer to the recursive spinlock.
 */</doc>
