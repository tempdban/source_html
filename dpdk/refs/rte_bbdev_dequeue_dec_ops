<def f='dpdk_1805/lib/librte_bbdev/rte_bbdev.h' l='555' ll='562' type='uint16_t rte_bbdev_dequeue_dec_ops(uint16_t dev_id, uint16_t queue_id, struct rte_bbdev_dec_op ** ops, uint16_t num_ops)'/>
<use f='dpdk_1805/app/test-bbdev/test_bbdev.c' l='712' u='c' c='test_bbdev_stats'/>
<doc f='dpdk_1805/lib/librte_bbdev/rte_bbdev.h' l='533'>/**
 * Dequeue a burst of processed decode operations from a queue of the device.
 * This functions returns only the current contents of the queue, and does not
 * block until @ num_ops is available.
 * This function does not provide any error notification to avoid the
 * corresponding overhead.
 *
 * @param dev_id
 *   The identifier of the device.
 * @param queue_id
 *   The index of the queue.
 * @param ops
 *   Pointer array where operations will be dequeued to. Must have at least
 *   @p num_ops entries
 * @param num_ops
 *   The maximum number of operations to dequeue.
 *
 * @return
 *   The number of operations actually dequeued (this is the number of entries
 *   copied into the @p ops array).
 */</doc>
<use f='dpdk_1805/app/test-bbdev/test_bbdev_perf.c' l='1196' u='c' c='dequeue_event_callback'/>
<use f='dpdk_1805/app/test-bbdev/test_bbdev_perf.c' l='1446' u='c' c='throughput_pmd_lcore_dec'/>
<use f='dpdk_1805/app/test-bbdev/test_bbdev_perf.c' l='1758' u='c' c='latency_test_dec'/>
