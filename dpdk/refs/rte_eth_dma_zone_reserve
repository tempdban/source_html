<dec f='dpdk_1805/lib/librte_ethdev/rte_ethdev_driver.h' l='138' type='const struct rte_memzone * rte_eth_dma_zone_reserve(const struct rte_eth_dev * eth_dev, const char * name, uint16_t queue_id, size_t size, unsigned int align, int socket_id)'/>
<doc f='dpdk_1805/lib/librte_ethdev/rte_ethdev_driver.h' l='118'>/**
 * Create memzone for HW rings.
 * malloc can&apos;t be used as the physical address is needed.
 * If the memzone is already created, then this function returns a ptr
 * to the old one.
 *
 * @param eth_dev
 *   The *eth_dev* pointer is the address of the *rte_eth_dev* structure
 * @param name
 *   The name of the memory zone
 * @param queue_id
 *   The index of the queue to add to name
 * @param size
 *   The sizeof of the memory area
 * @param align
 *   Alignment for resulting memzone. Must be a power of 2.
 * @param socket_id
 *   The *socket_id* argument is the socket identifier in case of NUMA.
 */</doc>
<use f='dpdk_1805/drivers/net/i40e/i40e_rxtx.c' l='1851' u='c' c='i40e_dev_rx_queue_setup'/>
<use f='dpdk_1805/drivers/net/i40e/i40e_rxtx.c' l='2237' u='c' c='i40e_dev_tx_queue_setup'/>
<use f='dpdk_1805/drivers/net/i40e/i40e_rxtx.c' l='2789' u='c' c='i40e_fdir_setup_tx_resources'/>
<use f='dpdk_1805/drivers/net/i40e/i40e_rxtx.c' l='2845' u='c' c='i40e_fdir_setup_rx_resources'/>
<use f='dpdk_1805/drivers/net/ixgbe/ixgbe_rxtx.c' l='2576' u='c' c='ixgbe_dev_tx_queue_setup'/>
<use f='dpdk_1805/drivers/net/ixgbe/ixgbe_rxtx.c' l='2964' u='c' c='ixgbe_dev_rx_queue_setup'/>
<def f='dpdk_1805/lib/librte_ethdev/rte_ethdev.c' l='3524' ll='3542' type='const struct rte_memzone * rte_eth_dma_zone_reserve(const struct rte_eth_dev * dev, const char * ring_name, uint16_t queue_id, size_t size, unsigned int align, int socket_id)'/>
