<def f='dpdk_1805/lib/librte_mempool/rte_mempool.h' l='1512' ll='1529' type='int rte_mempool_get_contig_blocks(struct rte_mempool * mp, void ** first_obj_table, unsigned int n)'/>
<doc f='dpdk_1805/lib/librte_mempool/rte_mempool.h' l='1488'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice.
 *
 * Get a contiguous blocks of objects from the mempool.
 *
 * If cache is enabled, consider to flush it first, to reuse objects
 * as soon as possible.
 *
 * The application should check that the driver supports the operation
 * by calling rte_mempool_ops_get_info() and checking that `contig_block_size`
 * is not zero.
 *
 * @param mp
 *   A pointer to the mempool structure.
 * @param first_obj_table
 *   A pointer to a pointer to the first object in each block.
 * @param n
 *   The number of blocks to get from mempool.
 * @return
 *   - 0: Success; blocks taken.
 *   - -ENOBUFS: Not enough entries in the mempool; no object is retrieved.
 *   - -EOPNOTSUPP: The mempool driver does not support block dequeue
 */</doc>
<use f='dpdk_1805/drivers/net/sfc/sfc_ef10_essb_rx.c' l='175' u='c' c='sfc_ef10_essb_rx_qrefill'/>
