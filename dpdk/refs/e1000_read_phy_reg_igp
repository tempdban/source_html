<dec f='dpdk_1805/drivers/net/e1000/base/e1000_phy.h' l='75' type='s32 e1000_read_phy_reg_igp(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<use f='dpdk_1805/drivers/net/e1000/base/e1000_82541.c' l='101' u='r' c='e1000_init_phy_params_82541'/>
<use f='dpdk_1805/drivers/net/e1000/base/e1000_82571.c' l='125' u='r' c='e1000_init_phy_params_82571'/>
<use f='dpdk_1805/drivers/net/e1000/base/e1000_82575.c' l='220' u='r' c='e1000_init_phy_params_82575'/>
<use f='dpdk_1805/drivers/net/e1000/base/e1000_ich8lan.c' l='558' u='r' c='e1000_init_phy_params_ich8lan'/>
<def f='dpdk_1805/drivers/net/e1000/base/e1000_phy.c' l='776' ll='779' type='s32 e1000_read_phy_reg_igp(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<doc f='dpdk_1805/drivers/net/e1000/base/e1000_phy.c' l='766'>/**
 *  e1000_read_phy_reg_igp - Read igp PHY register
 *  @hw: pointer to the HW structure
 *  @offset: register offset to be read
 *  @data: pointer to the read data
 *
 *  Acquires semaphore then reads the PHY register at offset and stores the
 *  retrieved information in data.
 *  Release the acquired semaphore before exiting.
 **/</doc>
<dec f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_phy.h' l='52' type='s32 e1000_read_phy_reg_igp(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<use f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_82575.c' l='200' u='r' c='e1000_init_phy_params_82575'/>
<def f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='722' ll='725' type='s32 e1000_read_phy_reg_igp(struct e1000_hw * hw, u32 offset, u16 * data)'/>
<doc f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_phy.c' l='712'>/**
 *  e1000_read_phy_reg_igp - Read igp PHY register
 *  @hw: pointer to the HW structure
 *  @offset: register offset to be read
 *  @data: pointer to the read data
 *
 *  Acquires semaphore then reads the PHY register at offset and stores the
 *  retrieved information in data.
 *  Release the acquired semaphore before exiting.
 **/</doc>
