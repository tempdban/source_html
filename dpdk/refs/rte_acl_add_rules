<dec f='master/lib/librte_acl/rte_acl.h' l='192' type='int rte_acl_add_rules(struct rte_acl_ctx * ctx, const struct rte_acl_rule * rules, uint32_t num)'/>
<doc f='master/lib/librte_acl/rte_acl.h' l='172'>/**
 * Add rules to an existing ACL context.
 * This function is not multi-thread safe.
 *
 * @param ctx
 *   ACL context to add patterns to.
 * @param rules
 *   Array of rules to add to the ACL context.
 *   Note that all fields in rte_acl_rule structures are expected
 *   to be in host byte order.
 *   Each rule expected to be in the same format and not exceed size
 *   specified at ACL context creation time.
 * @param num
 *   Number of elements in the input array of rules.
 * @return
 *   - -ENOMEM if there is no space in the ACL context for these rules.
 *   - -EINVAL if the parameters are invalid.
 *   - Zero if operation completed successfully.
 */</doc>
<def f='master/lib/librte_acl/rte_acl.c' l='291' ll='314' type='int rte_acl_add_rules(struct rte_acl_ctx * ctx, const struct rte_acl_rule * rules, uint32_t num)'/>
<use f='master/lib/librte_table/rte_table_acl.c' l='180' u='c' c='rte_table_acl_build'/>
