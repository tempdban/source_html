<dec f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cpp.h' l='646' type='int nfp_cpp_readq(struct nfp_cpp * cpp, uint32_t cpp_id, unsigned long long address, uint64_t * value)'/>
<doc f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cpp.h' l='636'>/*
 * Read a 64-bit work from a NFP CPP ID
 *
 * @param cpp           NFP CPP handle
 * @param cpp_id        NFP CPP ID
 * @param address       offset into the NFP CPP ID address space
 * @param value         output value
 *
 * @return 0 on success, or -1 on failure (and set errno accordingly).
 */</doc>
<def f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_cppcore.c' l='500' ll='511' type='int nfp_cpp_readq(struct nfp_cpp * cpp, uint32_t cpp_id, unsigned long long address, uint64_t * value)'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_nsp.c' l='79' u='c' c='nfp_nsp_check'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_nsp.c' l='174' u='c' c='nfp_nsp_wait_reg'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_nsp.c' l='262' u='c' c='nfp_nsp_command'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_nsp.c' l='297' u='c' c='nfp_nsp_command_buf'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_nsp.c' l='314' u='c' c='nfp_nsp_command_buf'/>
<use f='dpdk_1805/drivers/net/nfp/nfpcore/nfp_rtsym.c' l='273' u='c' c='nfp_rtsym_read_le'/>
