<def f='dpdk_1805/lib/librte_ring/rte_ring.h' l='905' ll='911' type='unsigned int rte_ring_sc_dequeue_burst(struct rte_ring * r, void ** obj_table, unsigned int n, unsigned int * available)'/>
<doc f='dpdk_1805/lib/librte_ring/rte_ring.h' l='888'>/**
 * Dequeue several objects from a ring (NOT multi-consumers safe).When the
 * request objects are more than the available objects, only dequeue the
 * actual number of objects
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj_table
 *   A pointer to a table of void * pointers (objects) that will be filled.
 * @param n
 *   The number of objects to dequeue from the ring to the obj_table.
 * @param available
 *   If non-NULL, returns the number of remaining ring entries after the
 *   dequeue has finished.
 * @return
 *   - n: Actual number of objects dequeued, 0 if ring is empty
 */</doc>
<use f='dpdk_1805/drivers/net/netvsc/hn_rxtx.c' l='1332' u='c' c='hn_recv_pkts'/>
<use f='dpdk_1805/drivers/net/softnic/rte_eth_softnic.c' l='233' u='c' c='pmd_rx_pkt_burst'/>
<use f='dpdk_1805/lib/librte_port/rte_port_frag.c' l='159' u='c' c='rte_port_ring_reader_frag_rx'/>
<use f='dpdk_1805/lib/librte_port/rte_port_ring.c' l='85' u='c' c='rte_port_ring_reader_rx'/>
