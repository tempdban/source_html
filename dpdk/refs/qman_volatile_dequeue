<dec f='master/drivers/bus/dpaa/include/fsl_qman.h' l='1717' type='int qman_volatile_dequeue(struct qman_fq * fq, u32 flags, u32 vdqcr)'/>
<doc f='master/drivers/bus/dpaa/include/fsl_qman.h' l='1699'>/**
 * qman_volatile_dequeue - Issue a volatile dequeue command
 * @fq: the frame queue object to dequeue from
 * @flags: a bit-mask of QMAN_VOLATILE_FLAG_*** options
 * @vdqcr: bit mask of QM_VDQCR_*** options, as per qm_dqrr_vdqcr_set()
 *
 * Attempts to lock access to the portal&apos;s VDQCR volatile dequeue functionality.
 * The function will block and sleep if QMAN_VOLATILE_FLAG_WAIT is specified and
 * the VDQCR is already in use, otherwise returns non-zero for failure. If
 * QMAN_VOLATILE_FLAG_FINISH is specified, the function will only return once
 * the VDQCR command has finished executing (ie. once the callback for the last
 * DQRR entry resulting from the VDQCR command has been called). If not using
 * the FINISH flag, completion can be determined either by detecting the
 * presence of the QM_DQRR_STAT_UNSCHEDULED and QM_DQRR_STAT_DQCR_EXPIRED bits
 * in the &quot;stat&quot; field of the &quot;struct qm_dqrr_entry&quot; passed to the FQ&apos;s dequeue
 * callback, or by waiting for the QMAN_FQ_STATE_VDQCR bit to disappear from the
 * &quot;flags&quot; retrieved from qman_fq_state().
 */</doc>
<def f='master/drivers/bus/dpaa/base/qbman/qman.c' l='2089' ll='2122' type='int qman_volatile_dequeue(struct qman_fq * fq, u32 flags, u32 vdqcr)'/>
