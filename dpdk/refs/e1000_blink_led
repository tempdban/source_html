<dec f='dpdk_1805/drivers/net/e1000/base/e1000_api.h' l='78' type='s32 e1000_blink_led(struct e1000_hw * hw)'/>
<def f='dpdk_1805/drivers/net/e1000/base/e1000_api.c' l='742' ll='748' type='s32 e1000_blink_led(struct e1000_hw * hw)'/>
<doc f='dpdk_1805/drivers/net/e1000/base/e1000_api.c' l='734'>/**
 *  e1000_blink_led - Blink SW controllable LED
 *  @hw: pointer to the HW structure
 *
 *  This starts the adapter LED blinking. Request the LED to be setup first
 *  and cleaned up after. This is a function pointer entry point called by
 *  drivers.
 **/</doc>
<dec f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.h' l='50' type='s32 e1000_blink_led(struct e1000_hw * hw)'/>
<def f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.c' l='506' ll='512' type='s32 e1000_blink_led(struct e1000_hw * hw)'/>
<doc f='dpdk_1805/kernel/linux/kni/ethtool/igb/e1000_api.c' l='498'>/**
 *  e1000_blink_led - Blink SW controllable LED
 *  @hw: pointer to the HW structure
 *
 *  This starts the adapter LED blinking. Request the LED to be setup first
 *  and cleaned up after. This is a function pointer entry point called by
 *  drivers.
 **/</doc>
<use f='dpdk_1805/kernel/linux/kni/ethtool/igb/igb_ethtool.c' l='1897' u='c' c='igb_set_phys_id'/>
