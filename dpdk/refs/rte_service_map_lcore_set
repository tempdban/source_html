<dec f='dpdk_1805/lib/librte_eal/common/include/rte_service.h' l='120' type='int32_t rte_service_map_lcore_set(uint32_t service_id, uint32_t lcore, uint32_t enable)'/>
<use f='dpdk_1805/app/test-eventdev/evt_common.h' l='87' u='c' c='evt_service_setup'/>
<use f='dpdk_1805/app/test-eventdev/evt_common.h' l='96' u='c' c='evt_service_setup'/>
<doc f='dpdk_1805/lib/librte_eal/common/include/rte_service.h' l='101'>/**
 * Map or unmap a lcore to a service.
 *
 * Each core can be added or removed from running a specific service. This
 * function enables or disables *lcore* to run *service_id*.
 *
 * If multiple cores are enabled on a service, an atomic is used to ensure that
 * only one cores runs the service at a time. The exception to this is when
 * a service indicates that it is multi-thread safe by setting the capability
 * called RTE_SERVICE_CAP_MT_SAFE. With the multi-thread safe capability set,
 * the service function can be run on multiple threads at the same time.
 *
 * @param service_id the service to apply the lcore to
 * @param lcore The lcore that will be mapped to service
 * @param enable Zero to unmap or disable the core, non-zero to enable
 *
 * @retval 0 lcore map updated successfully
 * @retval -EINVAL An invalid service or lcore was provided.
 */</doc>
<use f='dpdk_1805/drivers/net/failsafe/failsafe_intr.c' l='97' u='c' c='fs_rx_event_proxy_service_uninstall'/>
<use f='dpdk_1805/drivers/net/failsafe/failsafe_intr.c' l='191' u='c' c='fs_rx_event_proxy_service_install'/>
<use f='dpdk_1805/lib/librte_eal/common/rte_service.c' l='531' u='c' c='rte_service_start_with_defaults'/>
<def f='dpdk_1805/lib/librte_eal/common/rte_service.c' l='591' ll='598' type='int32_t rte_service_map_lcore_set(uint32_t id, uint32_t lcore, uint32_t enabled)'/>
