<dec f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.h' l='314' type='int rte_event_eth_rx_adapter_create(uint8_t id, uint8_t dev_id, struct rte_event_port_conf * port_config)'/>
<doc f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.h' l='288'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Create a new ethernet Rx event adapter with the specified identifier.
 * This function uses an internal configuration function that creates an event
 * port. This default function reconfigures the event device with an
 * additional event port and setups up the event port using the port_config
 * parameter passed into this function. In case the application needs more
 * control in configuration of the service, it should use the
 * rte_event_eth_rx_adapter_create_ext() version.
 *
 * @param id
 *  The identifier of the ethernet Rx event adapter.
 *
 * @param dev_id
 *  The identifier of the device to configure.
 *
 * @param port_config
 *  Argument of type *rte_event_port_conf* that is passed to the conf_cb
 *  function.
 *
 * @return
 *   - 0: Success
 *   - &lt;0: Error code on failure
 */</doc>
<use f='dpdk_1805/app/test-eventdev/test_perf_common.c' l='370' u='c' c='perf_event_rx_adapter_setup'/>
<use f='dpdk_1805/app/test-eventdev/test_pipeline_common.c' l='362' u='c' c='pipeline_event_rx_adapter_setup'/>
<def f='dpdk_1805/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='2024' ll='2045' type='int rte_event_eth_rx_adapter_create(uint8_t id, uint8_t dev_id, struct rte_event_port_conf * port_config)'/>
