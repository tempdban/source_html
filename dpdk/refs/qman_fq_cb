<def f='master/drivers/bus/dpaa/include/fsl_qman.h' l='1201' ll='1210'/>
<size>32</size>
<doc f='master/drivers/bus/dpaa/include/fsl_qman.h' l='1174'>/*
 * Frame queue objects (struct qman_fq) are stored within memory passed to
 * qman_create_fq(), as this allows stashing of caller-provided demux callback
 * pointers at no extra cost to stashing of (driver-internal) FQ state. If the
 * caller wishes to add per-FQ state and have it benefit from dequeue-stashing,
 * they should;
 *
 * (a) extend the qman_fq structure with their state; eg.
 *
 *     // myfq is allocated and driver_fq callbacks filled in;
 *     struct my_fq {
 *	   struct qman_fq base;
 *	   int an_extra_field;
 *	   [ ... add other fields to be associated with each FQ ...]
 *     } *myfq = some_my_fq_allocator();
 *     struct qman_fq *fq = qman_create_fq(fqid, flags, &amp;myfq-&gt;base);
 *
 *     // in a dequeue callback, access extra fields from &apos;fq&apos; via a cast;
 *     struct my_fq *myfq = (struct my_fq *)fq;
 *     do_something_with(myfq-&gt;an_extra_field);
 *     [...]
 *
 * (b) when and if configuring the FQ for context stashing, specify how ever
 *     many cachelines are required to stash &apos;struct my_fq&apos;, to accelerate not
 *     only the QMan driver but the callback as well.
 */</doc>
<mbr r='qman_fq_cb::dqrr_prepare' o='64' t='qman_dpdk_cb_prepare'/>
<mbr r='qman_fq_cb::ern' o='128' t='qman_cb_mr'/>
<mbr r='qman_fq_cb::fqs' o='192' t='qman_cb_mr'/>
