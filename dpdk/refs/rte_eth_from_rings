<dec f='dpdk_1805/drivers/net/ring/rte_eth_ring.h' l='32' type='int rte_eth_from_rings(const char * name, struct rte_ring *const * rx_queues, const unsigned int nb_rx_queues, struct rte_ring *const * tx_queues, const unsigned int nb_tx_queues, const unsigned int numa_node)'/>
<def f='dpdk_1805/drivers/net/ring/rte_eth_ring.c' l='346' ll='392' type='int rte_eth_from_rings(const char * name, struct rte_ring *const * rx_queues, const unsigned int nb_rx_queues, struct rte_ring *const * tx_queues, const unsigned int nb_tx_queues, const unsigned int numa_node)'/>
<use f='dpdk_1805/drivers/net/ring/rte_eth_ring.c' l='397' u='c' c='rte_eth_from_ring'/>
<doc f='dpdk_1805/drivers/net/ring/rte_eth_ring.h' l='14'>/**
 * Create a new ethdev port from a set of rings
 *
 * @param name
 *    name to be given to the new ethdev port
 * @param rx_queues
 *    pointer to array of rte_rings to be used as RX queues
 * @param nb_rx_queues
 *    number of elements in the rx_queues array
 * @param tx_queues
 *    pointer to array of rte_rings to be used as TX queues
 * @param nb_tx_queues
 *    number of elements in the tx_queues array
 * @param numa_node
 *    the numa node on which the memory for this port is to be allocated
 * @return
 *    the port number of the newly created the ethdev or -1 on error.
 */</doc>
