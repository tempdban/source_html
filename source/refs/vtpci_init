<dec f='dpdk_18.05/drivers/net/virtio/virtio_pci.h' l='310' type='int vtpci_init(struct rte_pci_device * dev, struct virtio_hw * hw)'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_ethdev.c' l='1667' u='c' c='eth_virtio_dev_init'/>
<doc f='dpdk_18.05/drivers/net/virtio/virtio_pci.h' l='307'>/*
 * Function declaration from virtio_pci.c
 */</doc>
<def f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='654' ll='686' type='int vtpci_init(struct rte_pci_device * dev, struct virtio_hw * hw)'/>
<doc f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='646'>/*
 * Return -1:
 *   if there is error mapping with VFIO/UIO.
 *   if port map error when driver type is KDRV_NONE.
 *   if whitelisted but driver type is KDRV_UNKNOWN.
 * Return 1 if kernel driver is managing the device.
 * Return 0 on success.
 */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.h' l='310' type='int vtpci_init(struct rte_pci_device * dev, struct virtio_hw * hw)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_ethdev.c' l='1694' u='c' c='eth_virtio_dev_init'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.h' l='307'>/*
 * Function declaration from virtio_pci.c
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='654' ll='686' type='int vtpci_init(struct rte_pci_device * dev, struct virtio_hw * hw)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='646'>/*
 * Return -1:
 *   if there is error mapping with VFIO/UIO.
 *   if port map error when driver type is KDRV_NONE.
 *   if whitelisted but driver type is KDRV_UNKNOWN.
 * Return 1 if kernel driver is managing the device.
 * Return 0 on success.
 */</doc>
