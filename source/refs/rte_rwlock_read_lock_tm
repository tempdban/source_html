<dec f='dpdk_18.05/lib/librte_eal/common/include/generic/rte_rwlock.h' l='140' type='void rte_rwlock_read_lock_tm(rte_rwlock_t * rwl)'/>
<def f='dpdk_18.05/lib/librte_eal/common/include/arch/x86/rte_rwlock.h' l='15' ll='21' type='void rte_rwlock_read_lock_tm(rte_rwlock_t * rwl)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/generic/rte_rwlock.h' l='126'>/**
 * Try to execute critical section in a hardware memory transaction, if it
 * fails or not available take a read lock
 *
 * NOTE: An attempt to perform a HW I/O operation inside a hardware memory
 * transaction always aborts the transaction since the CPU is not able to
 * roll-back should the transaction fail. Therefore, hardware transactional
 * locks are not advised to be used around rte_eth_rx_burst() and
 * rte_eth_tx_burst() calls.
 *
 * @param rwl
 *   A pointer to a rwlock structure.
 */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/generic/rte_rwlock.h' l='140' type='void rte_rwlock_read_lock_tm(rte_rwlock_t * rwl)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/arch/x86/rte_rwlock.h' l='15' ll='21' type='void rte_rwlock_read_lock_tm(rte_rwlock_t * rwl)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/generic/rte_rwlock.h' l='126'>/**
 * Try to execute critical section in a hardware memory transaction, if it
 * fails or not available take a read lock
 *
 * NOTE: An attempt to perform a HW I/O operation inside a hardware memory
 * transaction always aborts the transaction since the CPU is not able to
 * roll-back should the transaction fail. Therefore, hardware transactional
 * locks are not advised to be used around rte_eth_rx_burst() and
 * rte_eth_tx_burst() calls.
 *
 * @param rwl
 *   A pointer to a rwlock structure.
 */</doc>
