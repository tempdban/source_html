<dec f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='1081' type='u32'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='1132' u='w' c='vnet_sctp_set_cumulative_tsn_ack'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='1138' u='r' c='vnet_sctp_get_cumulative_tsn_ack'/>
<dec f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='1424' type='u32'/>
<use f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='1433' u='w' c='vnet_sctp_set_tsn_last_received_chunk'/>
<offset>128</offset>
<doc f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='1076'>/*
   * This parameter contains the TSN of the last DATA chunk received in
   * sequence before a gap.  In the case where no DATA chunk has been
   * received, this value is set to the peer&apos;s Initial TSN minus one.
   */</doc>
<doc f='vpp_1804/src/vnet/sctp/sctp_packet.h' l='1412'>/*
   * This parameter contains the TSN of the last chunk received in
   * sequence before any gaps.
   *
   * Note: Since the SHUTDOWN message does not contain Gap Ack Blocks,
   * it cannot be used to acknowledge TSNs received out of order. In a
   * SACK, lack of Gap Ack Blocks that were previously included
   * indicates that the data receiver reneged on the associated DATA
   * chunks. Since SHUTDOWN does not contain Gap Ack Blocks, the
   * receiver of the SHUTDOWN shouldn&apos;t interpret the lack of a Gap Ack
   * Block as a renege.
   */</doc>
<use f='vpp_1804/src/vnet/sctp/sctp_input.c' l='1529' u='r' c='sctp_handle_sack'/>
<use f='vpp_1804/src/vnet/sctp/sctp_input.c' l='1532' u='r' c='sctp_handle_sack'/>
<use f='vpp_1804/src/vnet/sctp/sctp_input.c' l='1535' u='r' c='sctp_handle_sack'/>
<use f='vpp_1804/src/vnet/sctp/sctp_output.c' l='1037' u='w' c='sctp_prepare_shutdown_chunk'/>
<use f='vpp_1804/src/vnet/sctp/sctp_output.c' l='1148' u='w' c='sctp_prepare_sack_chunk'/>
