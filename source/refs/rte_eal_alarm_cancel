<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_alarm.h' l='70' type='int rte_eal_alarm_cancel(rte_eal_alarm_callback cb_fn, void * cb_arg)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_alarm.h' l='49'>/**
 * Function to cancel an alarm callback which has been registered before. If
 * used outside alarm callback it wait for all callbacks to finish execution.
 *
 * @param cb_fn
 *  alarm callback
 * @param cb_arg
 *  Pointer parameter to be passed to the callback function. To remove all
 *  copies of a given callback function, irrespective of parameter, (void *)-1
 *  can be used here.
 *
 * @return
 *    - value greater than 0 and rte_errno not changed - returned value is
 *      the number of canceled alarm callback functions
 *    - value greater or equal 0 and rte_errno set to EINPROGRESS, at least one
 *      alarm could not be canceled because cancellation was requested from alarm
 *      callback context. Returned value is the number of successfully canceled
 *      alarm callbacks
 *    -  0 and rte_errno set to ENOENT - no alarm found
 *    - -1 and rte_errno set to EINVAL - invalid parameter (NULL callback)
 */</doc>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1182' u='c' c='bond_mode_8023ad_stop'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1186' u='c' c='bond_mode_8023ad_stop'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='1054' u='c' c='bond_tlb_disable'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='2721' u='c' c='bond_ethdev_lsc_event_callback'/>
<use f='dpdk_18.05/drivers/net/failsafe/failsafe.c' l='91' u='c' c='failsafe_hotplug_alarm_cancel'/>
<use f='dpdk_18.05/drivers/net/vdev_netvsc/vdev_netvsc.c' l='712' u='c' c='vdev_netvsc_vdev_probe'/>
<use f='dpdk_18.05/drivers/net/vdev_netvsc/vdev_netvsc.c' l='764' u='c' c='vdev_netvsc_vdev_remove'/>
<def f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_alarm.c' l='176' ll='242' type='int rte_eal_alarm_cancel(rte_eal_alarm_callback cb_fn, void * cb_arg)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_alarm.h' l='70' type='int rte_eal_alarm_cancel(rte_eal_alarm_callback cb_fn, void * cb_arg)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_alarm.h' l='49'>/**
 * Function to cancel an alarm callback which has been registered before. If
 * used outside alarm callback it wait for all callbacks to finish execution.
 *
 * @param cb_fn
 *  alarm callback
 * @param cb_arg
 *  Pointer parameter to be passed to the callback function. To remove all
 *  copies of a given callback function, irrespective of parameter, (void *)-1
 *  can be used here.
 *
 * @return
 *    - value greater than 0 and rte_errno not changed - returned value is
 *      the number of canceled alarm callback functions
 *    - value greater or equal 0 and rte_errno set to EINPROGRESS, at least one
 *      alarm could not be canceled because cancellation was requested from alarm
 *      callback context. Returned value is the number of successfully canceled
 *      alarm callbacks
 *    -  0 and rte_errno set to ENOENT - no alarm found
 *    - -1 and rte_errno set to EINVAL - invalid parameter (NULL callback)
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1174' u='c' c='bond_mode_8023ad_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1178' u='c' c='bond_mode_8023ad_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_pmd.c' l='1066' u='c' c='bond_tlb_disable'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_pmd.c' l='2692' u='c' c='bond_ethdev_lsc_event_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/sge.c' l='2087' u='c' c='t4_sge_tx_monitor_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/failsafe/failsafe.c' l='89' u='c' c='failsafe_hotplug_alarm_cancel'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/liquidio/lio_ethdev.c' l='1475' u='c' c='lio_dev_start'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/liquidio/lio_ethdev.c' l='1495' u='c' c='lio_dev_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_ethdev.c' l='1706' u='c' c='qede_dev_close'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_ethdev.c' l='3038' u='c' c='qede_common_dev_init'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_ethdev.c' l='3048' u='c' c='qede_common_dev_init'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_ethdev.c' l='3075' u='c' c='qede_common_dev_init'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_main.c' l='219' u='c' c='qed_stop_iov_task'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc.c' l='835' u='c' c='sfc_unprobe'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ev.c' l='698' u='c' c='sfc_ev_mgmt_periodic_qpoll_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_ethdev.c' l='136' u='c' c='nicvf_periodic_alarm_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/vdev_netvsc/vdev_netvsc.c' l='642' u='c' c='vdev_netvsc_vdev_probe'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/vdev_netvsc/vdev_netvsc.c' l='683' u='c' c='vdev_netvsc_vdev_remove'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_alarm.c' l='176' ll='242' type='int rte_eal_alarm_cancel(rte_eal_alarm_callback cb_fn, void * cb_arg)'/>
