<dec f='dpdk_18.05/lib/librte_mempool/rte_mempool.h' l='486' type='ssize_t rte_mempool_op_calc_mem_size_default(const struct rte_mempool * mp, uint32_t obj_num, uint32_t pg_shift, size_t * min_chunk_size, size_t * align)'/>
<doc f='dpdk_18.05/lib/librte_mempool/rte_mempool.h' l='467'>/**
 * Default way to calculate memory size required to store given number of
 * objects.
 *
 * If page boundaries may be ignored, it is just a product of total
 * object size including header and trailer and number of objects.
 * Otherwise, it is a number of pages required to store given number of
 * objects without crossing page boundary.
 *
 * Note that if object size is bigger than page size, then it assumes
 * that pages are grouped in subsets of physically continuous pages big
 * enough to store at least one object.
 *
 * Minimum size of memory chunk is a maximum of the page size and total
 * element size.
 *
 * Required memory chunk alignment is a maximum of page size and cache
 * line size.
 */</doc>
<use f='dpdk_18.05/lib/librte_mempool/rte_mempool_ops.c' l='113' u='c' c='rte_mempool_ops_calc_mem_size'/>
<def f='dpdk_18.05/lib/librte_mempool/rte_mempool_ops_default.c' l='9' ll='27' type='ssize_t rte_mempool_op_calc_mem_size_default(const struct rte_mempool * mp, uint32_t obj_num, uint32_t pg_shift, size_t * min_chunk_size, size_t * align)'/>
