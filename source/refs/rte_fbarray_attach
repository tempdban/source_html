<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_fbarray.h' l='101' type='int rte_fbarray_attach(struct rte_fbarray * arr)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_fbarray.h' l='83'>/**
 * Attach to a file backing an already allocated and correctly set up
 * ``rte_fbarray`` structure.
 *
 * Call this function to attach to file that will be backing the data in the
 * current process. The structure must have been previously correctly set up
 * with a call to ``rte_fbarray_init()``. Calls to ``rte_fbarray_attach()`` are
 * usually meant to be performed in a multiprocessing scenario, with data
 * pointed to by ``arr`` pointer allocated in shared memory.
 *
 * @param arr
 *   Valid pointer to allocated and correctly set up rte_fbarray structure.
 *
 * @return
 *  - 0 on success.
 *  - -1 on failure, with ``rte_errno`` indicating reason for failure.
 */</doc>
<def f='dpdk_18.05/lib/librte_eal/common/eal_common_fbarray.c' l='495' ll='555' type='int rte_fbarray_attach(struct rte_fbarray * arr)'/>
<use f='dpdk_18.05/lib/librte_eal/common/eal_common_memory.c' l='517' u='c' c='memseg_secondary_init'/>
<use f='dpdk_18.05/lib/librte_eal/common/eal_common_memzone.c' l='418' u='c' c='rte_eal_memzone_init'/>
