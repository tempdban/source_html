<def f='include/boost/mpl/if.hpp' l='131' macro='1'/>
<def f='include/boost/mpl/eval_if.hpp' l='67' macro='1'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/or.hpp' l='63' macro='1'/>
<def f='include/boost/mpl/identity.hpp' l='40' macro='1'/>
<def f='include/boost/mpl/identity.hpp' l='41' macro='1'/>
<def f='include/boost/mpl/not.hpp' l='47' macro='1'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/and.hpp' l='63' macro='1'/>
<def f='include/boost/mpl/next_prior.hpp' l='44' macro='1'/>
<def f='include/boost/mpl/next_prior.hpp' l='45' macro='1'/>
<def f='include/boost/mpl/void.hpp' l='71' macro='1'/>
<def f='include/boost/mpl/void.hpp' l='72' macro='1'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='38' ll='43'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='53' ll='59'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='61' ll='77'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='112' ll='135'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='137' ll='154'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='189' ll='217'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='219' ll='236'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='271' ll='301'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='303' ll='320'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='357' ll='389'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='391' ll='408'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='445' ll='484'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='486' ll='504'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='507' ll='513'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='517' ll='531'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='533' ll='553'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='555' macro='1'/>
<def f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='555' macro='1'/>
<size>1</size>
<doc f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='506'>/// special case for &apos;protect&apos;</doc>
<doc f='include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp' l='515'>/// specializations for the main &apos;bind&apos; form</doc>
