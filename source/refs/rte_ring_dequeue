<def f='dpdk_18.05/lib/librte_ring/rte_ring.h' l='666' ll='670' type='int rte_ring_dequeue(struct rte_ring * r, void ** obj_p)'/>
<doc f='dpdk_18.05/lib/librte_ring/rte_ring.h' l='650'>/**
 * Dequeue one object from a ring.
 *
 * This function calls the multi-consumers or the single-consumer
 * version depending on the default behaviour that was specified at
 * ring creation time (see flags).
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj_p
 *   A pointer to a void * pointer (object) that will be filled.
 * @return
 *   - 0: Success, objects dequeued.
 *   - -ENOENT: Not enough entries in the ring to dequeue, no object is
 *     dequeued.
 */</doc>
<use f='dpdk_18.05/drivers/mempool/bucket/rte_mempool_bucket.c' l='194' u='c' c='bucket_dequeue_orphans'/>
<use f='dpdk_18.05/drivers/mempool/bucket/rte_mempool_bucket.c' l='239' u='c' c='bucket_dequeue_buckets'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_8023ad.c' l='872' u='c' c='bond_mode_8023ad_periodic_cb'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1028' u='c' c='bond_mode_8023ad_deactivate_slave'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1031' u='c' c='bond_mode_8023ad_deactivate_slave'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1551' u='c' c='bond_mode_8023ad_ext_periodic_cb'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='1427' u='c' c='bond_ethdev_tx_burst_8023ad'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='2160' u='c' c='bond_ethdev_stop'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='2164' u='c' c='bond_ethdev_stop'/>
<use f='dpdk_18.05/lib/librte_hash/rte_cuckoo_hash.c' l='382' u='c' c='rte_hash_reset'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ring/rte_ring.h' l='670' ll='674' type='int rte_ring_dequeue(struct rte_ring * r, void ** obj_p)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ring/rte_ring.h' l='654'>/**
 * Dequeue one object from a ring.
 *
 * This function calls the multi-consumers or the single-consumer
 * version depending on the default behaviour that was specified at
 * ring creation time (see flags).
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj_p
 *   A pointer to a void * pointer (object) that will be filled.
 * @return
 *   - 0: Success, objects dequeued.
 *   - -ENOENT: Not enough entries in the ring to dequeue, no object is
 *     dequeued.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/aesni_mb/rte_aesni_mb_pmd.c' l='758' u='c' c='aesni_mb_pmd_dequeue_burst'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_8023ad.c' l='864' u='c' c='bond_mode_8023ad_periodic_cb'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1020' u='c' c='bond_mode_8023ad_deactivate_slave'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1023' u='c' c='bond_mode_8023ad_deactivate_slave'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1543' u='c' c='bond_mode_8023ad_ext_periodic_cb'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_pmd.c' l='1438' u='c' c='bond_ethdev_tx_burst_8023ad'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_pmd.c' l='2144' u='c' c='bond_ethdev_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_pmd.c' l='2148' u='c' c='bond_ethdev_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_cuckoo_hash.c' l='382' u='c' c='rte_hash_reset'/>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ring.h' l='670' ll='674' type='int rte_ring_dequeue(struct rte_ring * r, void ** obj_p)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ring.h' l='654'>/**
 * Dequeue one object from a ring.
 *
 * This function calls the multi-consumers or the single-consumer
 * version depending on the default behaviour that was specified at
 * ring creation time (see flags).
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj_p
 *   A pointer to a void * pointer (object) that will be filled.
 * @return
 *   - 0: Success, objects dequeued.
 *   - -ENOENT: Not enough entries in the ring to dequeue, no object is
 *     dequeued.
 */</doc>
