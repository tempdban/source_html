<dec f='dpdk/lib/librte_ethdev/rte_ethdev_driver.h' l='302' type='int rte_eth_dev_create(struct rte_device * device, const char * name, size_t priv_data_size, ethdev_bus_specific_init bus_specific_init, void * bus_init_params, ethdev_init_t ethdev_init, void * init_params)'/>
<doc f='dpdk/lib/librte_ethdev/rte_ethdev_driver.h' l='277'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice.
 *
 * PMD helper function for the creation of a new ethdev ports.
 *
 * @param device
 *  rte_device handle.
 * @param name
 *  port name.
 * @param priv_data_size
 *  size of private data required for port.
 * @param bus_specific_init
 *  port bus specific initialisation callback function
 * @param bus_init_params
 *  port bus specific initialisation parameters
 * @param ethdev_init
 *  device specific port initialization callback function
 * @param init_params
 *  port initialisation parameters
 *
 * @return
 *   Negative errno value on error, 0 on success.
 */</doc>
<use f='dpdk/drivers/net/ixgbe/ixgbe_ethdev.c' l='1741' u='c' c='eth_ixgbe_pci_probe'/>
<use f='dpdk/drivers/net/ixgbe/ixgbe_ethdev.c' l='1775' u='c' c='eth_ixgbe_pci_probe'/>
<def f='dpdk/lib/librte_ethdev/rte_ethdev.c' l='3544' ll='3612' type='int rte_eth_dev_create(struct rte_device * device, const char * name, size_t priv_data_size, ethdev_bus_specific_init ethdev_bus_specific_init, void * bus_init_params, ethdev_init_t ethdev_init, void * init_params)'/>
