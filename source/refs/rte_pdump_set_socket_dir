<dec f='dpdk_18.05/lib/librte_pdump/rte_pdump.h' l='186' type='int rte_pdump_set_socket_dir(const char * path, enum rte_pdump_socktype type)'/>
<def f='dpdk_18.05/lib/librte_pdump/rte_pdump.c' l='620' ll='625' type='int rte_pdump_set_socket_dir(const char * path, enum rte_pdump_socktype type)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.h' l='185' type='int rte_pdump_set_socket_dir(const char * path, enum rte_pdump_socktype type)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/pdump/main.c' l='749' u='c' c='enable_pdump'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/pdump/main.c' l='752' u='c' c='enable_pdump'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.h' l='165'>/**
 * Allows applications to set server and client socket paths.
 * If specified path is null default path will be selected, i.e.
 *&quot;/var/run/&quot; for root user and &quot;$HOME&quot; for non root user.
 * Clients also need to call this API to set their server path if the
 * server path is different from default path.
 * This API is not thread-safe.
 *
 * @param path
 * directory path for server or client socket.
 * @param type
 * specifies RTE_PDUMP_SOCKET_SERVER if socket path is for server.
 * (or)
 * specifies RTE_PDUMP_SOCKET_CLIENT if socket path is for client.
 *
 * @return
 * 0 on success, -EINVAL on error
 *
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.c' l='538' u='c' c='rte_pdump_init'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.c' l='886' ll='913' type='int rte_pdump_set_socket_dir(const char * path, enum rte_pdump_socktype type)'/>
