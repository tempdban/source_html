<dec f='dpdk/lib/librte_net/rte_arp.h' l='67' type='struct rte_mbuf * rte_net_make_rarp_packet(struct rte_mempool * mpool, const struct ether_addr * mac)'/>
<doc f='dpdk/lib/librte_net/rte_arp.h' l='52'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Make a RARP packet based on MAC addr.
 *
 * @param mpool
 *   Pointer to the rte_mempool
 * @param mac
 *   Pointer to the MAC addr
 *
 * @return
 *   - RARP packet pointer on success, or NULL on error
 */</doc>
<use f='dpdk/drivers/net/virtio/virtio_ethdev.c' l='1251' u='c' c='virtio_notify_peers'/>
<def f='dpdk/lib/librte_net/rte_arp.c' l='10' ll='50' type='struct rte_mbuf * rte_net_make_rarp_packet(struct rte_mempool * mpool, const struct ether_addr * mac)'/>
<use f='dpdk/lib/librte_vhost/virtio_net.c' l='1504' u='c' c='rte_vhost_dequeue_burst'/>
