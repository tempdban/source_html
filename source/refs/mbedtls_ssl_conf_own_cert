<dec f='include/mbedtls/ssl.h' l='1635' type='int mbedtls_ssl_conf_own_cert(mbedtls_ssl_config * conf, mbedtls_x509_crt * own_cert, mbedtls_pk_context * pk_key)'/>
<use f='vpp_1804/src/plugins/tlsmbedtls/tls_mbedtls.c' l='326' u='c' c='mbedtls_ctx_init_server'/>
<doc f='include/mbedtls/ssl.h' l='1607'>/**
 * \brief          Set own certificate chain and private key
 *
 * \note           own_cert should contain in order from the bottom up your
 *                 certificate chain. The top certificate (self-signed)
 *                 can be omitted.
 *
 * \note           On server, this function can be called multiple times to
 *                 provision more than one cert/key pair (eg one ECDSA, one
 *                 RSA with SHA-256, one RSA with SHA-1). An adequate
 *                 certificate will be selected according to the client&apos;s
 *                 advertised capabilities. In case mutliple certificates are
 *                 adequate, preference is given to the one set by the first
 *                 call to this function, then second, etc.
 *
 * \note           On client, only the first call has any effect. That is,
 *                 only one client certificate can be provisioned. The
 *                 server&apos;s preferences in its CertficateRequest message will
 *                 be ignored and our only cert will be sent regardless of
 *                 whether it matches those preferences - the server can then
 *                 decide what it wants to do with it.
 *
 * \param conf     SSL configuration
 * \param own_cert own public certificate chain
 * \param pk_key   own private key
 *
 * \return         0 on success or MBEDTLS_ERR_SSL_ALLOC_FAILED
 */</doc>
