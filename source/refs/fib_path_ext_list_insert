<dec f='vpp_1804/src/vnet/fib/fib_path_ext.h' l='153' type='fib_path_ext_t * fib_path_ext_list_insert(fib_path_ext_list_t * list, fib_node_index_t path_list_index, fib_path_ext_type_t ext_type, const fib_route_path_t * rpath)'/>
<use f='vpp_1804/src/vnet/fib/fib_entry_src_adj.c' l='63' u='c' c='fib_entry_src_adj_path_add'/>
<use f='vpp_1804/src/vnet/fib/fib_entry_src_api.c' l='95' u='c' c='fib_entry_src_api_path_add'/>
<def f='vpp_1804/src/vnet/fib/fib_path_ext.c' l='369' ll='411' type='fib_path_ext_t * fib_path_ext_list_insert(fib_path_ext_list_t * list, fib_node_index_t path_list_index, fib_path_ext_type_t ext_type, const fib_route_path_t * rpath)'/>
<doc f='vpp_1804/src/vnet/fib/fib_path_ext.c' l='362'>/*
 * insert, sorted, a path extension to the entry&apos;s list.
 * It&apos;s not strictly necessary to sort the path extensions, since each
 * extension has the path index to which it resolves. However, by being
 * sorted the load-balance produced has a deterministic order, not an order
 * based on the sequence of extension additions. this is a considerable benefit.
 */</doc>
<use f='vpp_1804/src/vnet/mpls/mpls_tunnel.c' l='701' u='c' c='vnet_mpls_tunnel_path_add'/>
