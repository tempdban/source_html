<dec f='vpp_1804/src/vnet/feature/feature.h' l='377' type='clib_error_t * vnet_feature_arc_init(vlib_main_t * vm, vnet_config_main_t * vcm, char ** feature_start_nodes, int num_feature_start_nodes, vnet_feature_registration_t * first_reg, char *** feature_nodes)'/>
<use f='vpp_1804/src/vnet/feature/feature.c' l='95' u='c' c='vnet_feature_init'/>
<def f='vpp_1804/src/vnet/feature/registration.c' l='117' ll='301' type='clib_error_t * vnet_feature_arc_init(vlib_main_t * vm, vnet_config_main_t * vcm, char ** feature_start_nodes, int num_feature_start_nodes, vnet_feature_registration_t * first_reg, char *** in_feature_nodes)'/>
<doc f='vpp_1804/src/vnet/feature/registration.c' l='100'>/**
 * @brief Initialize a feature graph arc
 * @param vm vlib main structure pointer
 * @param vcm vnet config main structure pointer
 * @param feature_start_nodes names of start-nodes which use this
 *	  feature graph arc
 * @param num_feature_start_nodes number of start-nodes
 * @param first_reg first element in
 *        [an __attribute__((constructor)) function built, or
 *        otherwise created] singly-linked list of feature registrations
 * @param [out] in_feature_nodes returned vector of
 *        topologically-sorted feature node names, for use in
 *        show commands
 * @returns 0 on success, otherwise an error message. Errors
 *        are fatal since they invariably involve mistyped node-names, or
 *        genuinely missing node-names
 */</doc>
