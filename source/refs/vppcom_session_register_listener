<dec f='vpp_1804/src/vcl/vppcom.h' l='247' type='int vppcom_session_register_listener(uint32_t session_index, vppcom_session_listener_cb cb, vppcom_session_listener_errcb errcb, uint8_t flags, int q_len, void * ptr)'/>
<doc f='vpp_1804/src/vcl/vppcom.h' l='230'>/**
 * @brief vppcom_session_register_listener accepts a bound session_index, and
 * listens for connections.
 *
 * On successful connection, calls registered callback (cb) with new
 * session_index.
 *
 * On error, calls registered error callback (errcb).
 *
 * @param session_index - bound session_index to create listener on
 * @param cb  - on new accepted session callback
 * @param errcb  - on failure callback
 * @param flags - placeholder for future use. Must be ZERO
 * @param q_len - max listener connection backlog
 * @param ptr - user data
 * @return
 */</doc>
<use f='vpp_1804/src/vcl/test_vcl_listener_server.c' l='84' u='c' c='main'/>
<def f='vpp_1804/src/vcl/vppcom.c' l='2739' ll='2770' type='int vppcom_session_register_listener(uint32_t session_index, vppcom_session_listener_cb cb, vppcom_session_listener_errcb errcb, uint8_t flags, int q_len, void * ptr)'/>
