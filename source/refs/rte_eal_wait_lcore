<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_launch.h' l='130' type='int rte_eal_wait_lcore(unsigned int slave_id)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_launch.h' l='112'>/**
 * Wait until an lcore finishes its job.
 *
 * To be executed on the MASTER lcore only.
 *
 * If the slave lcore identified by the slave_id is in a FINISHED state,
 * switch to the WAIT state. If the lcore is in RUNNING state, wait until
 * the lcore finishes its job and moves to the FINISHED state.
 *
 * @param slave_id
 *   The identifier of the lcore.
 * @return
 *   - 0: If the lcore identified by the slave_id is in a WAIT state.
 *   - The value that was returned by the previous remote launch
 *     function call if the lcore identified by the slave_id was in a
 *     FINISHED or RUNNING state. In this case, it changes the state
 *     of the lcore to WAIT.
 */</doc>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev_perf.c' l='1663' u='c' c='throughput_test'/>
<use f='dpdk_18.05/app/test-crypto-perf/main.c' l='573' u='c' c='main'/>
<use f='dpdk_18.05/app/test-crypto-perf/main.c' l='600' u='c' c='main'/>
<use f='dpdk_18.05/drivers/crypto/scheduler/scheduler_multicore.c' l='300' u='c' c='scheduler_stop'/>
<def f='dpdk_18.05/lib/librte_eal/common/eal_common_launch.c' l='21' ll='36' type='int rte_eal_wait_lcore(unsigned int slave_id)'/>
<use f='dpdk_18.05/lib/librte_eal/common/eal_common_launch.c' l='88' u='c' c='rte_eal_mp_wait_lcore'/>
<doc f='dpdk_18.05/lib/librte_eal/common/eal_common_launch.c' l='18'>/*
 * Wait until a lcore finished its job.
 */</doc>
<use f='dpdk_18.05/lib/librte_eal/common/rte_service.c' l='636' u='c' c='rte_service_lcore_add'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_launch.h' l='130' type='int rte_eal_wait_lcore(unsigned int slave_id)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_launch.h' l='112'>/**
 * Wait until an lcore finishes its job.
 *
 * To be executed on the MASTER lcore only.
 *
 * If the slave lcore identified by the slave_id is in a FINISHED state,
 * switch to the WAIT state. If the lcore is in RUNNING state, wait until
 * the lcore finishes its job and moves to the FINISHED state.
 *
 * @param slave_id
 *   The identifier of the lcore.
 * @return
 *   - 0: If the lcore identified by the slave_id is in a WAIT state.
 *   - The value that was returned by the previous remote launch
 *     function call if the lcore identified by the slave_id was in a
 *     FINISHED or RUNNING state. In this case, it changes the state
 *     of the lcore to WAIT.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev_perf.c' l='1600' u='c' c='throughput_test'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/main.c' l='567' u='c' c='main'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/main.c' l='594' u='c' c='main'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/scheduler/scheduler_multicore.c' l='300' u='c' c='scheduler_stop'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_launch.c' l='21' ll='36' type='int rte_eal_wait_lcore(unsigned int slave_id)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_launch.c' l='88' u='c' c='rte_eal_mp_wait_lcore'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_launch.c' l='18'>/*
 * Wait until a lcore finished its job.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/rte_service.c' l='636' u='c' c='rte_service_lcore_add'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_launch.h' l='130' type='int rte_eal_wait_lcore(unsigned int slave_id)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_launch.h' l='112'>/**
 * Wait until an lcore finishes its job.
 *
 * To be executed on the MASTER lcore only.
 *
 * If the slave lcore identified by the slave_id is in a FINISHED state,
 * switch to the WAIT state. If the lcore is in RUNNING state, wait until
 * the lcore finishes its job and moves to the FINISHED state.
 *
 * @param slave_id
 *   The identifier of the lcore.
 * @return
 *   - 0: If the lcore identified by the slave_id is in a WAIT state.
 *   - The value that was returned by the previous remote launch
 *     function call if the lcore identified by the slave_id was in a
 *     FINISHED or RUNNING state. In this case, it changes the state
 *     of the lcore to WAIT.
 */</doc>
