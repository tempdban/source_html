<dec f='dpdk_18.05/lib/librte_rawdev/rte_rawdev.h' l='543' type='int rte_rawdev_firmware_status_get(uint16_t dev_id, rte_rawdev_obj_t status_info)'/>
<doc f='dpdk_18.05/lib/librte_rawdev/rte_rawdev.h' l='528'>/**
 * Get Firmware status of the device..
 * Returns a memory allocated by driver/implementation containing status
 * information block. It is responsibility of caller to release the buffer.
 *
 * @param dev_id
 *   Raw device identifier
 * @param status_info
 *   Pointer to status information area. Caller is responsible for releasing
 *   the memory associated.
 * @return
 *   0 for success,
 *  !0 for failure, `status_info` argument state is undefined
 */</doc>
<def f='dpdk_18.05/lib/librte_rawdev/rte_rawdev.c' l='320' ll='328' type='int rte_rawdev_firmware_status_get(uint16_t dev_id, rte_rawdev_obj_t status_info)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_rawdev/rte_rawdev.h' l='543' type='int rte_rawdev_firmware_status_get(uint16_t dev_id, rte_rawdev_obj_t status_info)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_rawdev/rte_rawdev.h' l='528'>/**
 * Get Firmware status of the device..
 * Returns a memory allocated by driver/implementation containing status
 * information block. It is responsibility of caller to release the buffer.
 *
 * @param dev_id
 *   Raw device identifier
 * @param status_info
 *   Pointer to status information area. Caller is responsible for releasing
 *   the memory associated.
 * @return
 *   0 for success,
 *  !0 for failure, `status_info` argument state is undefined
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_rawdev/rte_rawdev.c' l='323' ll='331' type='int rte_rawdev_firmware_status_get(uint16_t dev_id, rte_rawdev_obj_t status_info)'/>
