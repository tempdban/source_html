<dec f='dpdk_18.05/lib/librte_pci/rte_pci.h' l='122' type='int eal_parse_pci_BDF(const char * input, struct rte_pci_addr * dev_addr)'/>
<doc f='dpdk_18.05/lib/librte_pci/rte_pci.h' l='108'>/**
 * @deprecated
 * Utility function to produce a PCI Bus-Device-Function value
 * given a string representation. Assumes that the BDF is provided without
 * a domain prefix (i.e. domain returned is always 0)
 *
 * @param input
 *	The input string to be parsed. Should have the format XX:XX.X
 * @param dev_addr
 *	The PCI Bus-Device-Function address to be returned.
 *	Domain will always be returned as 0
 * @return
 *  0 on success, negative on error.
 */</doc>
<def f='dpdk_18.05/lib/librte_pci/rte_pci.c' l='86' ll='90' type='int eal_parse_pci_BDF(const char * input, struct rte_pci_addr * dev_addr)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pci/rte_pci.h' l='122' type='int eal_parse_pci_BDF(const char * input, struct rte_pci_addr * dev_addr)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pci/rte_pci.h' l='108'>/**
 * @deprecated
 * Utility function to produce a PCI Bus-Device-Function value
 * given a string representation. Assumes that the BDF is provided without
 * a domain prefix (i.e. domain returned is always 0)
 *
 * @param input
 *	The input string to be parsed. Should have the format XX:XX.X
 * @param dev_addr
 *	The PCI Bus-Device-Function address to be returned.
 *	Domain will always be returned as 0
 * @return
 *  0 on success, negative on error.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pci/rte_pci.c' l='86' ll='90' type='int eal_parse_pci_BDF(const char * input, struct rte_pci_addr * dev_addr)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_pci.h' l='122' type='int eal_parse_pci_BDF(const char * input, struct rte_pci_addr * dev_addr)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_pci.h' l='108'>/**
 * @deprecated
 * Utility function to produce a PCI Bus-Device-Function value
 * given a string representation. Assumes that the BDF is provided without
 * a domain prefix (i.e. domain returned is always 0)
 *
 * @param input
 *	The input string to be parsed. Should have the format XX:XX.X
 * @param dev_addr
 *	The PCI Bus-Device-Function address to be returned.
 *	Domain will always be returned as 0
 * @return
 *  0 on success, negative on error.
 */</doc>
