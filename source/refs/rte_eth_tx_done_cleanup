<dec f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='2552' type='int rte_eth_tx_done_cleanup(uint16_t port_id, uint16_t queue_id, uint32_t free_cnt)'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='2526'>/**
 * Request the driver to free mbufs currently cached by the driver. The
 * driver will only free the mbuf if it is no longer in use. It is the
 * application&apos;s responsibity to ensure rte_eth_tx_buffer_flush(..) is
 * called if needed.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param queue_id
 *   The index of the transmit queue through which output packets must be
 *   sent.
 *   The value must be in the range [0, nb_tx_queue - 1] previously supplied
 *   to rte_eth_dev_configure().
 * @param free_cnt
 *   Maximum number of packets to free. Use 0 to indicate all possible packets
 *   should be freed. Note that a packet may be using multiple mbufs.
 * @return
 *   Failure: &lt; 0
 *     -ENODEV: Invalid interface
 *     -EIO: device is removed
 *     -ENOTSUP: Driver does not support function
 *   Success: &gt;= 0
 *     0-n: Number of packets freed. More packets may still remain in ring that
 *     are in use.
 */</doc>
<def f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='1804' ll='1818' type='int rte_eth_tx_done_cleanup(uint16_t port_id, uint16_t queue_id, uint32_t free_cnt)'/>
