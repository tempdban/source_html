<dec f='dpdk/lib/librte_distributor/rte_distributor.h' l='51' type='struct rte_distributor * rte_distributor_create(const char * name, unsigned int socket_id, unsigned int num_workers, unsigned int alg_type)'/>
<def f='dpdk/lib/librte_distributor/rte_distributor.c' l='655' macro='1' type='struct rte_distributor * rte_distributor_create(const char * name, unsigned int socket_id, unsigned int num_workers, unsigned int alg_type)'/>
<doc f='dpdk/lib/librte_distributor/rte_distributor.h' l='30'>/**
 * Function to create a new distributor instance
 *
 * Reserves the memory needed for the distributor operation and
 * initializes the distributor to work with the configured number of workers.
 *
 * @param name
 *   The name to be given to the distributor instance.
 * @param socket_id
 *   The NUMA node on which the memory is to be allocated
 * @param num_workers
 *   The maximum number of workers that will request packets from this
 *   distributor
 * @param alg_type
 *   Call the legacy API, or use the new burst API. legacy uses 32-bit
 *   flow ID, and works on a single packet at a time. Latest uses 15-
 *   bit flow ID and works on up to 8 packets at a time to workers.
 * @return
 *   The newly created distributor instance
 */</doc>
