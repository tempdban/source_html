<dec f='include/sys/epoll.h' l='127' type='int epoll_wait(int __epfd, struct epoll_event * __events, int __maxevents, int __timeout)'/>
<doc f='include/sys/epoll.h' l='117'>/* Wait for events on an epoll instance &quot;epfd&quot;. Returns the number of
   triggered events returned in &quot;events&quot; buffer. Or -1 in case of
   error with the &quot;errno&quot; variable set to the specific error code. The
   &quot;events&quot; parameter is a buffer that will contain triggered
   events. The &quot;maxevents&quot; is the maximum number of events to be
   returned ( usually size of &quot;events&quot; ). The &quot;timeout&quot; parameter
   specifies the maximum wait time in milliseconds (-1 == infinite).

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='dpdk_18.05/drivers/net/ifc/ifcvf_vdpa.c' l='390' u='c' c='notify_relay'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='759' u='c' c='eal_intr_handle_interrupts'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='1002' u='c' c='rte_epoll_wait'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='750' u='c' c='eal_intr_handle_interrupts'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='1002' u='c' c='rte_epoll_wait'/>
<dec f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='310' type='int epoll_wait(int __epfd, struct epoll_event * __events, int __maxevents, int __timeout)'/>
<def f='vpp_1804/src/vcl/ldp.c' l='3270' ll='3274' type='int epoll_wait(int epfd, struct epoll_event * events, int maxevents, int timeout)'/>
<doc f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='299'>/* Wait for events on an epoll instance &quot;epfd&quot;. Returns the number of
   triggered events returned in &quot;events&quot; buffer. Or -1 in case of
   error with the &quot;errno&quot; variable set to the specific error code. The
   &quot;events&quot; parameter is a buffer that will contain triggered
   events. The &quot;maxevents&quot; is the maximum number of events to be
   returned ( usually size of &quot;events&quot; ). The &quot;timeout&quot; parameter
   specifies the maximum wait time in milliseconds (-1 == infinite).

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='vpp_1804/src/vcl/sock_test_server.c' l='781' u='c' c='main'/>
<use f='vpp_1804/src/vlib/unix/input.c' l='204' u='c' c='linux_epoll_input_inline'/>
<use f='vpp_1804/src/vpp/app/vppctl.c' l='254' u='c' c='main'/>
