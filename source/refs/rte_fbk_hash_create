<dec f='dpdk/lib/librte_hash/rte_fbk_hash.h' l='344' type='struct rte_fbk_hash_table * rte_fbk_hash_create(const struct rte_fbk_hash_params * params)'/>
<def f='dpdk/lib/librte_hash/rte_fbk_hash.c' l='77' ll='171' type='struct rte_fbk_hash_table * rte_fbk_hash_create(const struct rte_fbk_hash_params * params)'/>
<doc f='dpdk/lib/librte_hash/rte_fbk_hash.c' l='67'>/**
 * Create a new hash table for use with four byte keys.
 *
 * @param params
 *   Parameters used in creation of hash table.
 *
 * @return
 *   Pointer to hash table structure that is used in future hash table
 *   operations, or NULL on error.
 */</doc>
<doc f='dpdk/lib/librte_hash/rte_fbk_hash.h' l='327'>/**
 * Create a new hash table for use with four byte keys.
 *
 * @param params
 *   Parameters used in creation of hash table.
 *
 * @return
 *   Pointer to hash table structure that is used in future hash table
 *   operations, or NULL on error with rte_errno set appropriately.
 *   Possible rte_errno error values include:
 *    - E_RTE_NO_CONFIG - function could not get pointer to rte_config structure
 *    - E_RTE_SECONDARY - function was called from a secondary process instance
 *    - EINVAL - invalid parameter value passed to function
 *    - ENOSPC - the maximum number of memzones has already been allocated
 *    - EEXIST - a memzone with the same name already exists
 *    - ENOMEM - no appropriate memory area found in which to create memzone
 */</doc>
