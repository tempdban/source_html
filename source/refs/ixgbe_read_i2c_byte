<dec f='dpdk_18.05/drivers/net/ixgbe/base/ixgbe_api.h' l='178' type='s32 ixgbe_read_i2c_byte(struct ixgbe_hw * hw, u8 byte_offset, u8 dev_addr, u8 * data)'/>
<def f='dpdk_18.05/drivers/net/ixgbe/base/ixgbe_api.c' l='1442' ll='1447' type='s32 ixgbe_read_i2c_byte(struct ixgbe_hw * hw, u8 byte_offset, u8 dev_addr, u8 * data)'/>
<doc f='dpdk_18.05/drivers/net/ixgbe/base/ixgbe_api.c' l='1433'>/**
 *  ixgbe_read_i2c_byte - Reads 8 bit word over I2C at specified device address
 *  @hw: pointer to hardware structure
 *  @byte_offset: byte offset to read
 *  @dev_addr: I2C bus address to read from
 *  @data: value read
 *
 *  Performs byte read operation to SFP module&apos;s EEPROM over I2C interface.
 **/</doc>
<dec f='dpdk_18.05/kernel/linux/kni/ethtool/ixgbe/ixgbe_api.h' l='139' type='s32 ixgbe_read_i2c_byte(struct ixgbe_hw * hw, u8 byte_offset, u8 dev_addr, u8 * data)'/>
<def f='dpdk_18.05/kernel/linux/kni/ethtool/ixgbe/ixgbe_api.c' l='1013' ll='1018' type='s32 ixgbe_read_i2c_byte(struct ixgbe_hw * hw, u8 byte_offset, u8 dev_addr, u8 * data)'/>
<doc f='dpdk_18.05/kernel/linux/kni/ethtool/ixgbe/ixgbe_api.c' l='1005'>/**
 *  ixgbe_read_i2c_byte - Reads 8 bit word over I2C at specified device address
 *  @hw: pointer to hardware structure
 *  @byte_offset: byte offset to read
 *  @data: value read
 *
 *  Performs byte read operation to SFP module&apos;s EEPROM over I2C interface.
 **/</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_api.h' l='178' type='s32 ixgbe_read_i2c_byte(struct ixgbe_hw * hw, u8 byte_offset, u8 dev_addr, u8 * data)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_api.c' l='1442' ll='1447' type='s32 ixgbe_read_i2c_byte(struct ixgbe_hw * hw, u8 byte_offset, u8 dev_addr, u8 * data)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_api.c' l='1433'>/**
 *  ixgbe_read_i2c_byte - Reads 8 bit word over I2C at specified device address
 *  @hw: pointer to hardware structure
 *  @byte_offset: byte offset to read
 *  @dev_addr: I2C bus address to read from
 *  @data: value read
 *
 *  Performs byte read operation to SFP module&apos;s EEPROM over I2C interface.
 **/</doc>
