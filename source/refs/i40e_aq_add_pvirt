<dec f='dpdk_18.05/drivers/net/i40e/base/i40e_prototype.h' l='318' type='enum i40e_status_code i40e_aq_add_pvirt(struct i40e_hw * hw, u16 flags, u16 mac_seid, u16 vsi_seid, u16 * ret_seid)'/>
<def f='dpdk_18.05/drivers/net/i40e/base/i40e_common.c' l='4700' ll='4724' type='enum i40e_status_code i40e_aq_add_pvirt(struct i40e_hw * hw, u16 flags, u16 mac_seid, u16 vsi_seid, u16 * ret_seid)'/>
<doc f='dpdk_18.05/drivers/net/i40e/base/i40e_common.c' l='4688'>/**
 * i40e_aq_add_pvirt - Instantiate a Port Virtualizer on a port
 * @hw: pointer to the hw struct
 * @flags: component flags
 * @mac_seid: uplink seid (MAC SEID)
 * @vsi_seid: connected vsi seid
 * @ret_seid: seid of create pv component
 *
 * This instantiates an i40e port virtualizer with specified flags.
 * Depending on specified flags the port virtualizer can act as a
 * 802.1Qbr port virtualizer or a 802.1Qbg S-component.
 */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_prototype.h' l='318' type='enum i40e_status_code i40e_aq_add_pvirt(struct i40e_hw * hw, u16 flags, u16 mac_seid, u16 vsi_seid, u16 * ret_seid)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='4700' ll='4724' type='enum i40e_status_code i40e_aq_add_pvirt(struct i40e_hw * hw, u16 flags, u16 mac_seid, u16 vsi_seid, u16 * ret_seid)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_common.c' l='4688'>/**
 * i40e_aq_add_pvirt - Instantiate a Port Virtualizer on a port
 * @hw: pointer to the hw struct
 * @flags: component flags
 * @mac_seid: uplink seid (MAC SEID)
 * @vsi_seid: connected vsi seid
 * @ret_seid: seid of create pv component
 *
 * This instantiates an i40e port virtualizer with specified flags.
 * Depending on specified flags the port virtualizer can act as a
 * 802.1Qbr port virtualizer or a 802.1Qbg S-component.
 */</doc>
