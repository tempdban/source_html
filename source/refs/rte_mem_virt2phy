<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_memory.h' l='127' type='phys_addr_t rte_mem_virt2phy(const void * virt)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_memory.h' l='117'>/**
 * Get physical address of any mapped virtual address in the current process.
 * It is found by browsing the /proc/self/pagemap special file.
 * The page must be locked.
 *
 * @param virt
 *   The virtual address.
 * @return
 *   The physical address or RTE_BAD_IOVA on error.
 */</doc>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_memory.c' l='79' u='c' c='test_phys_addrs_available'/>
<def f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_memory.c' l='93' ll='149' type='phys_addr_t rte_mem_virt2phy(const void * virtaddr)'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_memory.c' l='156' u='c' c='rte_mem_virt2iova'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_memory.c' l='170' u='c' c='find_physaddrs'/>
<doc f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_memory.c' l='90'>/*
 * Get physical address of any mapped virtual address in the current process.
 */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_memory.h' l='120' type='phys_addr_t rte_mem_virt2phy(const void * virt)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_memory.h' l='110'>/**
 * Get physical address of any mapped virtual address in the current process.
 * It is found by browsing the /proc/self/pagemap special file.
 * The page must be locked.
 *
 * @param virt
 *   The virtual address.
 * @return
 *   The physical address or RTE_BAD_IOVA on error.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/cperf_test_common.c' l='94' u='c' c='mempool_obj_init'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_memory.c' l='79' u='c' c='test_phys_addrs_available'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_memory.c' l='93' ll='149' type='phys_addr_t rte_mem_virt2phy(const void * virtaddr)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_memory.c' l='156' u='c' c='rte_mem_virt2iova'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_memory.c' l='170' u='c' c='find_physaddrs'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_memory.c' l='90'>/*
 * Get physical address of any mapped virtual address in the current process.
 */</doc>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_memory.h' l='120' type='phys_addr_t rte_mem_virt2phy(const void * virt)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_memory.h' l='110'>/**
 * Get physical address of any mapped virtual address in the current process.
 * It is found by browsing the /proc/self/pagemap special file.
 * The page must be locked.
 *
 * @param virt
 *   The virtual address.
 * @return
 *   The physical address or RTE_BAD_IOVA on error.
 */</doc>
