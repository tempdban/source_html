<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/nasm.h' l='855' type='void (*)(char *, int32_t, int64_t, int, char *)'/>
<offset>576</offset>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/nasm.h' l='827'>/*
     * This procedure is called once for every symbol defined in
     * the module being assembled. It gives the name and value of
     * the symbol, in NASM&apos;s terms, and indicates whether it has
     * been declared to be global. Note that the parameter &quot;name&quot;,
     * when passed, will point to a piece of static storage
     * allocated inside the label manager - it&apos;s safe to keep using
     * that pointer, because the label manager doesn&apos;t clean up
     * until after the output driver has.
     *
     * Values of `is_global&apos; are: 0 means the symbol is local; 1
     * means the symbol is global; 2 means the symbol is common (in
     * which case `offset&apos; holds the _size_ of the variable).
     * Anything else is available for the output driver to use
     * internally.
     *
     * This routine explicitly _is_ allowed to call the label
     * manager to define further symbols, if it wants to, even
     * though it&apos;s been called _from_ the label manager. That much
     * re-entrancy is guaranteed in the label manager. However, the
     * label manager will in turn call this routine, so it should
     * be prepared to be re-entrant itself.
     *
     * The `special&apos; parameter contains special information passed
     * through from the command that defined the label: it may have
     * been an EXTERN, a COMMON or a GLOBAL. The distinction should
     * be obvious to the output format from the other parameters.
     */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/asm/directiv.c' l='289' u='r' c='process_directives'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/asm/directiv.c' l='334' u='r' c='process_directives'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/asm/directiv.c' l='411' u='r' c='process_directives'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/asm/labels.c' l='135' u='r' c='out_symdef'/>
