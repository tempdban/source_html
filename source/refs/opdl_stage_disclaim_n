<dec f='dpdk/drivers/event/opdl/opdl_ring.h' l='463' type='void opdl_stage_disclaim_n(struct opdl_stage * s, uint32_t num_entries, _Bool block)'/>
<doc f='dpdk/drivers/event/opdl/opdl_ring.h' l='436'>/**
 * This function can be called when a stage has finished its processing of
 * entries, to make them available to any dependent stages. The difference
 * between this function and opdl_stage_disclaim() is that here only a
 * portion of entries are disclaimed, not all of them. For performance reasons,
 * this function does not check input parameters.
 *
 * @param s
 *   The opdl_ring stage in which to disclaim entries.
 *
 * @param num_entries
 *   The number of entries to disclaim.
 *
 * @param block
 *   Entries are always made available to a stage in the same order that they
 *   were input in the stage. If a stage is multithread safe, this may mean that
 *   full disclaiming of a batch of entries can not be considered complete until
 *   all earlier threads in the stage have disclaimed. If this parameter is true
 *   then the function blocks until the specified number of entries has been
 *   disclaimed (or there are no more entries to disclaim). Otherwise it
 *   disclaims as many claims as currently possible and an attempt to disclaim
 *   them is made the next time a claim or disclaim function for this stage on
 *   this thread is called.
 *
 *   In a single threaded stage, this parameter has no effect.
 */</doc>
<def f='dpdk/drivers/event/opdl/opdl_ring.c' l='731' ll='752' type='void opdl_stage_disclaim_n(struct opdl_stage * s, uint32_t num_entries, _Bool block)'/>
