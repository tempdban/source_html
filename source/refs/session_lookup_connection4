<dec f='vpp_1804/src/vnet/session/session_lookup.h' l='37' type='transport_connection_t * session_lookup_connection4(u32 fib_index, ip4_address_t * lcl, ip4_address_t * rmt, u16 lcl_port, u16 rmt_port, u8 proto)'/>
<use f='vpp_1804/src/vnet/session/session_cli.c' l='182' u='c' c='unformat_transport_connection'/>
<def f='vpp_1804/src/vnet/session/session_lookup.c' l='964' ll='1021' type='transport_connection_t * session_lookup_connection4(u32 fib_index, ip4_address_t * lcl, ip4_address_t * rmt, u16 lcl_port, u16 rmt_port, u8 proto)'/>
<doc f='vpp_1804/src/vnet/session/session_lookup.c' l='948'>/**
 * Lookup connection with ip4 and transport layer information
 *
 * Not optimized. This is used on the fast path so it needs to be fast.
 * Thereby, duplication of code and &apos;hacks&apos; allowed. Lookup logic is identical
 * to that of @ref session_lookup_connection_wt4
 *
 * @param fib_index	index of the fib wherein the connection was received
 * @param lcl		local ip4 address
 * @param rmt		remote ip4 address
 * @param lcl_port	local port
 * @param rmt_port	remote port
 * @param proto		transport protocol (e.g., tcp, udp)
 *
 * @return pointer to transport connection, if one is found, 0 otherwise
 */</doc>
<use f='vpp_1804/src/vnet/session/session_test.c' l='909' u='c' c='session_test_rules'/>
