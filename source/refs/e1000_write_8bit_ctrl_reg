<dec f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.h' l='60' type='s32 e1000_write_8bit_ctrl_reg(struct e1000_hw * hw, u32 reg, u32 offset, u8 data)'/>
<def f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.c' l='1060' ll='1064' type='s32 e1000_write_8bit_ctrl_reg(struct e1000_hw * hw, u32 reg, u32 offset, u8 data)'/>
<doc f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.c' l='1050'>/**
 *  e1000_write_8bit_ctrl_reg - Writes 8bit Control register
 *  @hw: pointer to the HW structure
 *  @reg: 32bit register offset
 *  @offset: the register to write
 *  @data: the value to write.
 *
 *  Writes the PHY register at offset with the value in data.
 *  This is a function pointer entry point called by drivers.
 **/</doc>
