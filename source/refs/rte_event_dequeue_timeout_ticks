<dec f='dpdk_18.05/lib/librte_eventdev/rte_eventdev.h' l='1489' type='int rte_event_dequeue_timeout_ticks(uint8_t dev_id, uint64_t ns, uint64_t * timeout_ticks)'/>
<doc f='dpdk_18.05/lib/librte_eventdev/rte_eventdev.h' l='1463'>/**
 * Converts nanoseconds to *timeout_ticks* value for rte_event_dequeue_burst()
 *
 * If the device is configured with RTE_EVENT_DEV_CFG_PER_DEQUEUE_TIMEOUT flag
 * then application can use this function to convert timeout value in
 * nanoseconds to implementations specific timeout value supplied in
 * rte_event_dequeue_burst()
 *
 * @param dev_id
 *   The identifier of the device.
 * @param ns
 *   Wait time in nanosecond
 * @param[out] timeout_ticks
 *   Value for the *timeout_ticks* parameter in rte_event_dequeue_burst()
 *
 * @return
 *  - 0 on success.
 *  - -ENOTSUP if the device doesn&apos;t support timeouts
 *  - -EINVAL if *dev_id* is invalid or *timeout_ticks* is NULL
 *  - other values &lt; 0 on failure.
 *
 * @see rte_event_dequeue_burst(), RTE_EVENT_DEV_CFG_PER_DEQUEUE_TIMEOUT
 * @see rte_event_dev_configure()
 *
 */</doc>
<def f='dpdk_18.05/lib/librte_eventdev/rte_eventdev.c' l='1006' ll='1020' type='int rte_event_dequeue_timeout_ticks(uint8_t dev_id, uint64_t ns, uint64_t * timeout_ticks)'/>
