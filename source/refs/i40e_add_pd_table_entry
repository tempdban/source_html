<dec f='dpdk_18.05/drivers/net/i40e/base/i40e_hmc.h' l='227' type='enum i40e_status_code i40e_add_pd_table_entry(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 pd_index, struct i40e_dma_mem * rsrc_pg)'/>
<def f='dpdk_18.05/drivers/net/i40e/base/i40e_hmc.c' l='142' ll='206' type='enum i40e_status_code i40e_add_pd_table_entry(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 pd_index, struct i40e_dma_mem * rsrc_pg)'/>
<doc f='dpdk_18.05/drivers/net/i40e/base/i40e_hmc.c' l='125'>/**
 * i40e_add_pd_table_entry - Adds page descriptor to the specified table
 * @hw: pointer to our HW structure
 * @hmc_info: pointer to the HMC configuration information structure
 * @pd_index: which page descriptor index to manipulate
 * @rsrc_pg: if not NULL, use preallocated page instead of allocating new one.
 *
 * This function:
 *	1. Initializes the pd entry
 *	2. Adds pd_entry in the pd_table
 *	3. Mark the entry valid in i40e_hmc_pd_entry structure
 *	4. Initializes the pd_entry&apos;s ref count to 1
 * assumptions:
 *	1. The memory for pd should be pinned down, physically contiguous and
 *	   aligned on 4K boundary and zeroed memory.
 *	2. It should be 4K in size.
 **/</doc>
<use f='dpdk_18.05/drivers/net/i40e/base/i40e_lan_hmc.c' l='395' u='c' c='i40e_create_lan_hmc_object'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_hmc.h' l='227' type='enum i40e_status_code i40e_add_pd_table_entry(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 pd_index, struct i40e_dma_mem * rsrc_pg)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_hmc.c' l='142' ll='206' type='enum i40e_status_code i40e_add_pd_table_entry(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 pd_index, struct i40e_dma_mem * rsrc_pg)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_hmc.c' l='125'>/**
 * i40e_add_pd_table_entry - Adds page descriptor to the specified table
 * @hw: pointer to our HW structure
 * @hmc_info: pointer to the HMC configuration information structure
 * @pd_index: which page descriptor index to manipulate
 * @rsrc_pg: if not NULL, use preallocated page instead of allocating new one.
 *
 * This function:
 *	1. Initializes the pd entry
 *	2. Adds pd_entry in the pd_table
 *	3. Mark the entry valid in i40e_hmc_pd_entry structure
 *	4. Initializes the pd_entry&apos;s ref count to 1
 * assumptions:
 *	1. The memory for pd should be pinned down, physically contiguous and
 *	   aligned on 4K boundary and zeroed memory.
 *	2. It should be 4K in size.
 **/</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_lan_hmc.c' l='395' u='c' c='i40e_create_lan_hmc_object'/>
