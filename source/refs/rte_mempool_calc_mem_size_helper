<dec f='dpdk/lib/librte_mempool/rte_mempool.h' l='509' type='size_t rte_mempool_calc_mem_size_helper(uint32_t elt_num, size_t total_elt_sz, uint32_t pg_shift)'/>
<doc f='dpdk/lib/librte_mempool/rte_mempool.h' l='490'>/**
 * @internal Helper function to calculate memory size required to store
 * specified number of objects in assumption that the memory buffer will
 * be aligned at page boundary.
 *
 * Note that if object size is bigger than page size, then it assumes
 * that pages are grouped in subsets of physically continuous pages big
 * enough to store at least one object.
 *
 * @param elt_num
 *   Number of elements.
 * @param total_elt_sz
 *   The size of each element, including header and trailer, as returned
 *   by rte_mempool_calc_obj_size().
 * @param pg_shift
 *   LOG2 of the physical pages size. If set to 0, ignore page boundaries.
 * @return
 *   Required memory size aligned at page boundary.
 */</doc>
<def f='dpdk/lib/librte_mempool/rte_mempool.c' l='234' ll='253' type='size_t rte_mempool_calc_mem_size_helper(uint32_t elt_num, size_t total_elt_sz, uint32_t pg_shift)'/>
<use f='dpdk/lib/librte_mempool/rte_mempool.c' l='262' u='c' c='rte_mempool_xmem_size'/>
<doc f='dpdk/lib/librte_mempool/rte_mempool.c' l='229'>/*
 * Internal function to calculate required memory chunk size shared
 * by default implementation of the corresponding callback and
 * deprecated external function.
 */</doc>
<use f='dpdk/lib/librte_mempool/rte_mempool_ops_default.c' l='19' u='c' c='rte_mempool_op_calc_mem_size_default'/>
