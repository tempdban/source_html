<dec f='dpdk_18.05/lib/librte_bbdev/rte_bbdev.h' l='630' type='int rte_bbdev_callback_unregister(uint16_t dev_id, enum rte_bbdev_event_type event, rte_bbdev_cb_fn cb_fn, void * cb_arg)'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='885' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='885' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='935' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='935' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1013' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1013' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1017' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1017' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1043' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1043' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1048' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1048' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1053' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1053' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1068' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1068' u='c' c='test_bbdev_callback'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1238' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk_18.05/app/test-bbdev/test_bbdev.c' l='1238' u='c' c='test_bbdev_invalid_driver'/>
<doc f='dpdk_18.05/lib/librte_bbdev/rte_bbdev.h' l='610'>/**
 * Unregister a callback function for specific device id.
 *
 * @param dev_id
 *   The device identifier.
 * @param event
 *   The event that the callback will be unregistered for.
 * @param cb_fn
 *   User supplied callback function to be unregistered.
 * @param cb_arg
 *   Pointer to the parameter supplied when registering the callback.
 *   (void *)-1 means to remove all registered callbacks with the specified
 *   function address.
 *
 * @return
 *   - 0 on success
 *   - EINVAL if invalid parameter pointer is provided
 *   - EAGAIN if the provided callback pointer does not exist
 */</doc>
<def f='dpdk_18.05/lib/librte_bbdev/rte_bbdev.c' l='966' ll='1009' type='int rte_bbdev_callback_unregister(uint16_t dev_id, enum rte_bbdev_event_type event, rte_bbdev_cb_fn cb_fn, void * cb_arg)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_bbdev/rte_bbdev.h' l='626' type='int rte_bbdev_callback_unregister(uint16_t dev_id, enum rte_bbdev_event_type event, rte_bbdev_cb_fn cb_fn, void * cb_arg)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='892' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='892' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='942' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='942' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1020' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1020' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1024' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1024' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1050' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1050' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1055' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1055' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1060' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1060' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1075' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1075' u='c' c='test_bbdev_callback'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1245' u='c' c='test_bbdev_invalid_driver'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-bbdev/test_bbdev.c' l='1245' u='c' c='test_bbdev_invalid_driver'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_bbdev/rte_bbdev.h' l='606'>/**
 * Unregister a callback function for specific device id.
 *
 * @param dev_id
 *   The device identifier.
 * @param event
 *   The event that the callback will be unregistered for.
 * @param cb_fn
 *   User supplied callback function to be unregistered.
 * @param cb_arg
 *   Pointer to the parameter supplied when registering the callback.
 *   (void *)-1 means to remove all registered callbacks with the specified
 *   function address.
 *
 * @return
 *   - 0 on success
 *   - EINVAL if invalid parameter pointer is provided
 *   - EAGAIN if the provided callback pointer does not exist
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_bbdev/rte_bbdev.c' l='957' ll='1000' type='int rte_bbdev_callback_unregister(uint16_t dev_id, enum rte_bbdev_event_type event, rte_bbdev_cb_fn cb_fn, void * cb_arg)'/>
