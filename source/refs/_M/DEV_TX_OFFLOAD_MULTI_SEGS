<dec f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='975'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='972'>/**&lt; Multiple threads can invoke rte_eth_tx_burst() concurrently on the same
 * tx queue without SW lock.
 */</doc>
<use f='dpdk_18.05/drivers/net/failsafe/failsafe_ops.c' l='82' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev.c' l='3348' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev_vf.c' l='2221' u='c'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_rxtx.c' l='2433' u='c'/>
<use f='dpdk_18.05/drivers/net/tap/rte_eth_tap.c' l='412' u='c'/>
<use f='dpdk_18.05/drivers/net/vhost/rte_eth_vhost.c' l='1071' u='c'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_ethdev.c' l='2143' u='c'/>
<use f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='1605' u='c'/>
<use f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='1630' u='c'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.h' l='975'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.h' l='972'>/**&lt; Multiple threads can invoke rte_eth_tx_burst() concurrently on the same
 * tx queue without SW lock.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/failsafe/failsafe_ops.c' l='81' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_tx.c' l='48' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_ethdev.c' l='900' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.c' l='1518' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.c' l='1542' u='c'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ethdev.h' l='975'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ethdev.h' l='972'>/**&lt; Multiple threads can invoke rte_eth_tx_burst() concurrently on the same
 * tx queue without SW lock.
 */</doc>
