<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/opflags.h' l='57'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/nasm-2.13.01/include/opflags.h' l='44'>/*
 * Here we define the operand types. These are implemented as bit
 * masks, since some are subsets of others; e.g. AX in a MOV
 * instruction is a special operand type, whereas AX in other
 * contexts is just another 16-bit register. (Also, consider CL in
 * shift instructions, DX in OUT, etc.)
 *
 * The basic concept here is that
 *    (class &amp; ~operand) == 0
 *
 * if and only if &quot;operand&quot; belongs to class type &quot;class&quot;.
 */</doc>
