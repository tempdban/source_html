<dec f='dpdk_18.05/lib/librte_mbuf/rte_mbuf_ptype.h' l='248'/>
<doc f='dpdk_18.05/lib/librte_mbuf/rte_mbuf_ptype.h' l='229'>/**
 * Fragmented IP (Internet Protocol) packet type.
 * It is used for outer packet for tunneling cases.
 *
 * It refers to those packets of any IP types, which can be recognized as
 * fragmented. A fragmented packet cannot be recognized as any other L4 types
 * (RTE_PTYPE_L4_TCP, RTE_PTYPE_L4_UDP, RTE_PTYPE_L4_SCTP, RTE_PTYPE_L4_ICMP,
 * RTE_PTYPE_L4_NONFRAG).
 *
 * Packet format:
 * &lt;&apos;ether type&apos;=0x0800
 * | &apos;version&apos;=4, &apos;MF&apos;=1&gt;
 * or,
 * &lt;&apos;ether type&apos;=0x0800
 * | &apos;version&apos;=4, &apos;frag_offset&apos;!=0&gt;
 * or,
 * &lt;&apos;ether type&apos;=0x86DD
 * | &apos;version&apos;=6, &apos;next header&apos;=44&gt;
 */</doc>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx.h' l='258' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx.h' l='514' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx.h' l='771' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx.h' l='783' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev.c' l='11984' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev.c' l='12008' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx.c' l='1658' u='c'/>
<use f='dpdk_18.05/drivers/net/i40e/rte_pmd_i40e.c' l='2156' u='c'/>
<use f='dpdk_18.05/drivers/net/tap/rte_eth_tap.c' l='1286' u='c'/>
<use f='dpdk_18.05/lib/librte_mbuf/rte_mbuf_ptype.c' l='46' u='c'/>
<use f='dpdk_18.05/lib/librte_net/rte_net.c' l='300' u='c'/>
<use f='dpdk_18.05/lib/librte_net/rte_net.c' l='333' u='c'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf_ptype.h' l='248'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf_ptype.h' l='229'>/**
 * Fragmented IP (Internet Protocol) packet type.
 * It is used for outer packet for tunneling cases.
 *
 * It refers to those packets of any IP types, which can be recognized as
 * fragmented. A fragmented packet cannot be recognized as any other L4 types
 * (RTE_PTYPE_L4_TCP, RTE_PTYPE_L4_UDP, RTE_PTYPE_L4_SCTP, RTE_PTYPE_L4_ICMP,
 * RTE_PTYPE_L4_NONFRAG).
 *
 * Packet format:
 * &lt;&apos;ether type&apos;=0x0800
 * | &apos;version&apos;=4, &apos;MF&apos;=1&gt;
 * or,
 * &lt;&apos;ether type&apos;=0x0800
 * | &apos;version&apos;=4, &apos;frag_offset&apos;!=0&gt;
 * or,
 * &lt;&apos;ether type&apos;=0x86DD
 * | &apos;version&apos;=6, &apos;next header&apos;=44&gt;
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_rxtx.h' l='21' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_rxtx.h' l='33' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_rxtx.h' l='50' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_rxtx.h' l='69' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_rxtx.h' l='85' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_ethdev.c' l='563' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_rxtx.c' l='782' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_rxtx.c' l='922' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_rxtx.c' l='1107' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_rxtx_vec_sse.c' l='206' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/enic_ethdev.c' l='494' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/enic_rxtx.c' l='142' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/enic_rxtx.c' l='148' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx.h' l='257' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx.h' l='513' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx.h' l='770' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx.h' l='782' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev.c' l='11619' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev.c' l='11643' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx.c' l='1661' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/rte_pmd_i40e.c' l='2104' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_ethdev.c' l='989' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_ethdev.c' l='2066' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_rxtx.c' l='1001' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_rxtx.c' l='1004' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_rxtx.c' l='1025' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_rxtx.c' l='1028' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ef10_rx.c' l='298' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ef10_rx.c' l='309' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ef10_rx.c' l='551' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ef10_rx.c' l='563' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_ethdev.c' l='347' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_rxtx.c' l='233' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_rxtx.c' l='245' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_rxtx.c' l='258' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_rxtx.c' l='273' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_rxtx.c' l='286' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_rxtx.c' l='301' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/thunderx/nicvf_rxtx.c' l='313' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf_ptype.c' l='46' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_net/rte_net.c' l='299' u='c'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_net/rte_net.c' l='329' u='c'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf_ptype.h' l='248'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf_ptype.h' l='229'>/**
 * Fragmented IP (Internet Protocol) packet type.
 * It is used for outer packet for tunneling cases.
 *
 * It refers to those packets of any IP types, which can be recognized as
 * fragmented. A fragmented packet cannot be recognized as any other L4 types
 * (RTE_PTYPE_L4_TCP, RTE_PTYPE_L4_UDP, RTE_PTYPE_L4_SCTP, RTE_PTYPE_L4_ICMP,
 * RTE_PTYPE_L4_NONFRAG).
 *
 * Packet format:
 * &lt;&apos;ether type&apos;=0x0800
 * | &apos;version&apos;=4, &apos;MF&apos;=1&gt;
 * or,
 * &lt;&apos;ether type&apos;=0x0800
 * | &apos;version&apos;=4, &apos;frag_offset&apos;!=0&gt;
 * or,
 * &lt;&apos;ether type&apos;=0x86DD
 * | &apos;version&apos;=6, &apos;next header&apos;=44&gt;
 */</doc>
