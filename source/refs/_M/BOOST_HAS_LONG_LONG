<dec f='include/boost/config/compiler/clang.hpp' l='30'/>
<use f='include/boost/config/stdlib/libstdcpp3.hpp' l='63' u='a'/>
<use f='include/boost/config/suffix.hpp' l='56' u='a'/>
<use f='include/boost/config/suffix.hpp' l='103' u='a'/>
<use f='include/boost/config/suffix.hpp' l='481' u='a'/>
<doc f='include/boost/config/compiler/clang.hpp' l='29'>// Clang supports &quot;long long&quot; in all compilation modes.</doc>
<use f='include/boost/type_traits/is_integral.hpp' l='64' u='a'/>
<use f='include/boost/type_traits/make_unsigned.hpp' l='74' u='a'/>
<use f='include/boost/type_traits/make_unsigned.hpp' l='106' u='a'/>
<use f='include/boost/concept_check.hpp' l='84' u='a'/>
<use f='include/boost/concept_check.hpp' l='103' u='a'/>
<use f='include/boost/concept_check.hpp' l='121' u='a'/>
<use f='include/boost/limits.hpp' l='22' u='a'/>
<use f='include/boost/integer_fwd.hpp' l='80' u='a'/>
<use f='include/boost/integer_fwd.hpp' l='106' u='a'/>
<use f='include/boost/integer_fwd.hpp' l='113' u='a'/>
<use f='include/boost/integer_fwd.hpp' l='120' u='a'/>
<use f='include/boost/integer_traits.hpp' l='170' u='a'/>
<use f='include/boost/integer.hpp' l='60' u='a'/>
<use f='include/boost/integer.hpp' l='69' u='a'/>
<use f='include/boost/integer.hpp' l='98' u='a'/>
<use f='include/boost/integer.hpp' l='120' u='a'/>
<use f='include/boost/integer.hpp' l='151' u='a'/>
<use f='include/boost/integer.hpp' l='169' u='a'/>
<use f='include/boost/integer.hpp' l='178' u='a'/>
<use f='include/boost/integer.hpp' l='191' u='a'/>
<use f='include/boost/integer.hpp' l='200' u='a'/>
<use f='include/boost/integer.hpp' l='214' u='a'/>
<use f='include/boost/integer.hpp' l='244' u='a'/>
