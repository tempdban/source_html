<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_cxt.h' l='121' type='enum _ecore_status_t ecore_qm_reconf(struct ecore_hwfn * p_hwfn, struct ecore_ptt * p_ptt)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_cxt.h' l='113'>/**
 * @brief Reconfigures QM pf on the fly
 *
 * @param p_hwfn
 * @param p_ptt
 *
 * @return enum _ecore_status_t
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_dcbx.c' l='885' u='c' c='ecore_dcbx_mib_update_event'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_dev.c' l='1064' ll='1103' type='enum _ecore_status_t ecore_qm_reconf(struct ecore_hwfn * p_hwfn, struct ecore_ptt * p_ptt)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_dev.c' l='1056'>/* This function reconfigures the QM pf on the fly.
 * For this purpose we:
 * 1. reconfigure the QM database
 * 2. set new values to runtime array
 * 3. send an sdm_qm_cmd through the rbc interface to stop the QM
 * 4. activate init tool in QM_PF stage
 * 5. send an sdm_qm_cmd through rbc interface to release the QM
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_mcp.c' l='1956' u='c' c='ecore_mcp_handle_ufp_event'/>
