<dec f='dpdk_18.05/lib/librte_eal/common/eal_thread.h' l='69' type='int eal_thread_dump_affinity(char * str, unsigned int size)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/eal_thread.h' l='53'>/**
 * Dump the current pthread cpuset.
 * This function is private to EAL.
 *
 * Note:
 *   If the dump size is greater than the size of given buffer,
 *   the string will be truncated and with &apos;\0&apos; at the end.
 *
 * @param str
 *   The string buffer the cpuset will dump to.
 * @param size
 *   The string buffer size.
 * @return
 *   0 for success, -1 if truncation happens.
 */</doc>
<def f='dpdk_18.05/lib/librte_eal/common/eal_common_thread.c' l='109' ll='141' type='int eal_thread_dump_affinity(char * str, unsigned int size)'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal.c' l='965' u='c' c='rte_eal_init'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_thread.c' l='122' u='c' c='eal_thread_loop'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_thread.h' l='69' type='int eal_thread_dump_affinity(char * str, unsigned int size)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_thread.h' l='53'>/**
 * Dump the current pthread cpuset.
 * This function is private to EAL.
 *
 * Note:
 *   If the dump size is greater than the size of given buffer,
 *   the string will be truncated and with &apos;\0&apos; at the end.
 *
 * @param str
 *   The string buffer the cpuset will dump to.
 * @param size
 *   The string buffer size.
 * @return
 *   0 for success, -1 if truncation happens.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_thread.c' l='110' ll='142' type='int eal_thread_dump_affinity(char * str, unsigned int size)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal.c' l='891' u='c' c='rte_eal_init'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_thread.c' l='122' u='c' c='eal_thread_loop'/>
