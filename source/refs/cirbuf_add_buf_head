<dec f='dpdk_18.05/lib/librte_cmdline/cmdline_cirbuf.h' l='143' type='int cirbuf_add_buf_head(struct cirbuf * cbuf, const char * c, unsigned int n)'/>
<doc f='dpdk_18.05/lib/librte_cmdline/cmdline_cirbuf.h' l='138'>/**
 * Add a buffer at head of the circular buffer. &apos;c&apos; is a pointer to a
 * buffer, and n is the number of char to add. Return the number of
 * copied bytes on success, or a negative value on error.
 */</doc>
<def f='dpdk_18.05/lib/librte_cmdline/cmdline_cirbuf.c' l='29' ll='56' type='int cirbuf_add_buf_head(struct cirbuf * cbuf, const char * c, unsigned int n)'/>
<doc f='dpdk_18.05/lib/librte_cmdline/cmdline_cirbuf.c' l='27'>/* multiple add */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cmdline/cmdline_cirbuf.h' l='143' type='int cirbuf_add_buf_head(struct cirbuf * cbuf, const char * c, unsigned int n)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cmdline/cmdline_cirbuf.h' l='138'>/**
 * Add a buffer at head of the circular buffer. &apos;c&apos; is a pointer to a
 * buffer, and n is the number of char to add. Return the number of
 * copied bytes on success, or a negative value on error.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cmdline/cmdline_cirbuf.c' l='29' ll='56' type='int cirbuf_add_buf_head(struct cirbuf * cbuf, const char * c, unsigned int n)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cmdline/cmdline_cirbuf.c' l='27'>/* multiple add */</doc>
