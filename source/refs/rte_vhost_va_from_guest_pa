<def f='dpdk_18.05/lib/librte_vhost/rte_vhost.h' l='174' ll='196' type='uint64_t rte_vhost_va_from_guest_pa(struct rte_vhost_memory * mem, uint64_t gpa, uint64_t * len)'/>
<doc f='dpdk_18.05/lib/librte_vhost/rte_vhost.h' l='158'>/**
 * Convert guest physical address to host virtual address safely
 *
 * This variant of rte_vhost_gpa_to_vva() takes care all the
 * requested length is mapped and contiguous in process address
 * space.
 *
 * @param mem
 *  the guest memory regions
 * @param gpa
 *  the guest physical address for querying
 * @param len
 *  the size of the requested area to map, updated with actual size mapped
 * @return
 *  the host virtual address on success, 0 on failure
 */</doc>
<use f='dpdk_18.05/lib/librte_vhost/vhost.h' l='570' u='c' c='vhost_iova_to_vva'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_vhost/rte_vhost.h' l='140' ll='162' type='uint64_t rte_vhost_va_from_guest_pa(struct rte_vhost_memory * mem, uint64_t gpa, uint64_t * len)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_vhost/rte_vhost.h' l='124'>/**
 * Convert guest physical address to host virtual address safely
 *
 * This variant of rte_vhost_gpa_to_vva() takes care all the
 * requested length is mapped and contiguous in process address
 * space.
 *
 * @param mem
 *  the guest memory regions
 * @param gpa
 *  the guest physical address for querying
 * @param len
 *  the size of the requested area to map, updated with actual size mapped
 * @return
 *  the host virtual address on success, 0 on failure
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_vhost/vhost.h' l='383' u='c' c='vhost_iova_to_vva'/>
