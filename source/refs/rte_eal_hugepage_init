<dec f='dpdk_18.05/lib/librte_eal/common/eal_private.h' l='216' type='int rte_eal_hugepage_init()'/>
<doc f='dpdk_18.05/lib/librte_eal/common/eal_private.h' l='209'>/**
 * Prepare physical memory mapping
 * i.e. hugepages on Linux and
 *      contigmem on BSD.
 *
 * This function is private to the EAL.
 */</doc>
<use f='dpdk_18.05/lib/librte_eal/common/eal_common_memory.c' l='936' u='c' c='rte_eal_memory_init'/>
<def f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_memory.c' l='1822' ll='1828' type='int rte_eal_hugepage_init()'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_private.h' l='175' type='int rte_eal_hugepage_init()'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_private.h' l='168'>/**
 * Prepare physical memory mapping
 * i.e. hugepages on Linux and
 *      contigmem on BSD.
 *
 * This function is private to the EAL.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_memory.c' l='127' u='c' c='rte_eal_memory_init'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_memory.c' l='990' ll='1313' type='int rte_eal_hugepage_init()'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_memory.c' l='979'>/*
 * Prepare physical memory mapping: fill configuration structure with
 * these infos, return 0 on success.
 *  1. map N huge pages in separate files in hugetlbfs
 *  2. find associated physical addr
 *  3. find associated NUMA socket ID
 *  4. sort all huge pages by physical address
 *  5. remap these N huge pages in the correct order
 *  6. unmap the first mapping
 *  7. fill memsegs in configuration with contiguous zones
 */</doc>
