<def f='dpdk_18.05/lib/librte_mbuf/rte_mbuf.h' l='1610' ll='1641' type='struct rte_mbuf * rte_pktmbuf_prefree_seg(struct rte_mbuf * m)'/>
<use f='dpdk_18.05/lib/librte_mbuf/rte_mbuf.h' l='1648' u='c' c='__rte_pktmbuf_prefree_seg'/>
<use f='dpdk_18.05/lib/librte_mbuf/rte_mbuf.h' l='1663' u='c' c='rte_pktmbuf_free_seg'/>
<doc f='dpdk_18.05/lib/librte_mbuf/rte_mbuf.h' l='1596'>/**
 * Decrease reference counter and unlink a mbuf segment
 *
 * This function does the same than a free, except that it does not
 * return the segment to its pool.
 * It decreases the reference counter, and if it reaches 0, it is
 * detached from its parent for an indirect mbuf.
 *
 * @param m
 *   The mbuf to be unlinked
 * @return
 *   - (m) if it is the last reference. It can be recycled or freed.
 *   - (NULL) if the mbuf still has remaining references on it.
 */</doc>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx_vec_common.h' l='97' u='c' c='i40e_tx_free_bufs'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx_vec_common.h' l='102' u='c' c='i40e_tx_free_bufs'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_rxtx_vec_common.h' l='118' u='c' c='i40e_tx_free_bufs'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_rxtx.c' l='122' u='c' c='ixgbe_tx_free_bufs'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_rxtx_simple.h' l='72' u='c' c='virtio_xmit_cleanup_simple'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_rxtx_simple.h' l='78' u='c' c='virtio_xmit_cleanup_simple'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_rxtx_simple.h' l='97' u='c' c='virtio_xmit_cleanup_simple'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1391' ll='1422' type='struct rte_mbuf * rte_pktmbuf_prefree_seg(struct rte_mbuf * m)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1429' u='c' c='__rte_pktmbuf_prefree_seg'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1444' u='c' c='rte_pktmbuf_free_seg'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1377'>/**
 * Decrease reference counter and unlink a mbuf segment
 *
 * This function does the same than a free, except that it does not
 * return the segment to its pool.
 * It decreases the reference counter, and if it reaches 0, it is
 * detached from its parent for an indirect mbuf.
 *
 * @param m
 *   The mbuf to be unlinked
 * @return
 *   - (m) if it is the last reference. It can be recycled or freed.
 *   - (NULL) if the mbuf still has remaining references on it.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_rxtx_vec_common.h' l='98' u='c' c='avf_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_rxtx_vec_common.h' l='103' u='c' c='avf_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_rxtx_vec_common.h' l='119' u='c' c='avf_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/enic_rxtx.c' l='406' u='c' c='enic_free_wq_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_rxtx.c' l='408' u='c' c='tx_free_bulk_mbuf'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_rxtx.c' l='413' u='c' c='tx_free_bulk_mbuf'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_rxtx.c' l='429' u='c' c='tx_free_bulk_mbuf'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_rxtx_vec.c' l='748' u='c' c='fm10k_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_rxtx_vec.c' l='753' u='c' c='fm10k_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_rxtx_vec.c' l='768' u='c' c='fm10k_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx_vec_common.h' l='97' u='c' c='i40e_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx_vec_common.h' l='102' u='c' c='i40e_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_rxtx_vec_common.h' l='118' u='c' c='i40e_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_rxtx.c' l='122' u='c' c='ixgbe_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_rxtx_vec_common.h' l='97' u='c' c='ixgbe_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_rxtx_vec_common.h' l='102' u='c' c='ixgbe_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_rxtx_vec_common.h' l='117' u='c' c='ixgbe_tx_free_bufs'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_ef10_tx.c' l='151' u='c' c='sfc_ef10_tx_reap'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_rxtx_simple.h' l='72' u='c' c='virtio_xmit_cleanup_simple'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_rxtx_simple.h' l='78' u='c' c='virtio_xmit_cleanup_simple'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_rxtx_simple.h' l='97' u='c' c='virtio_xmit_cleanup_simple'/>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1391' ll='1422' type='struct rte_mbuf * rte_pktmbuf_prefree_seg(struct rte_mbuf * m)'/>
<use f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1429' u='c' c='__rte_pktmbuf_prefree_seg'/>
<use f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1444' u='c' c='rte_pktmbuf_free_seg'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1377'>/**
 * Decrease reference counter and unlink a mbuf segment
 *
 * This function does the same than a free, except that it does not
 * return the segment to its pool.
 * It decreases the reference counter, and if it reaches 0, it is
 * detached from its parent for an indirect mbuf.
 *
 * @param m
 *   The mbuf to be unlinked
 * @return
 *   - (m) if it is the last reference. It can be recycled or freed.
 *   - (NULL) if the mbuf still has remaining references on it.
 */</doc>
<use f='vpp_1804/src/plugins/dpdk/buffer.c' l='127' u='c' c='dpdk_rte_pktmbuf_free'/>
