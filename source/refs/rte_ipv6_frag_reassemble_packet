<dec f='dpdk_18.05/lib/librte_ip_frag/rte_ip_frag.h' l='208' type='struct rte_mbuf * rte_ipv6_frag_reassemble_packet(struct rte_ip_frag_tbl * tbl, struct rte_ip_frag_death_row * dr, struct rte_mbuf * mb, uint64_t tms, struct ipv6_hdr * ip_hdr, struct ipv6_extension_fragment * frag_hdr)'/>
<doc f='dpdk_18.05/lib/librte_ip_frag/rte_ip_frag.h' l='187'>/**
 * This function implements reassembly of fragmented IPv6 packets.
 * Incoming mbuf should have its l2_len/l3_len fields setup correctly.
 *
 * @param tbl
 *   Table where to lookup/add the fragmented packet.
 * @param dr
 *   Death row to free buffers to
 * @param mb
 *   Incoming mbuf with IPv6 fragment.
 * @param tms
 *   Fragment arrival timestamp.
 * @param ip_hdr
 *   Pointer to the IPv6 header.
 * @param frag_hdr
 *   Pointer to the IPv6 fragment extension header.
 * @return
 *   Pointer to mbuf for reassembled packet, or NULL if:
 *   - an error occurred.
 *   - not all fragments of the packet are collected yet.
 */</doc>
<def f='dpdk_18.05/lib/librte_ip_frag/rte_ipv6_reassembly.c' l='136' ll='204' type='struct rte_mbuf * rte_ipv6_frag_reassemble_packet(struct rte_ip_frag_tbl * tbl, struct rte_ip_frag_death_row * dr, struct rte_mbuf * mb, uint64_t tms, struct ipv6_hdr * ip_hdr, struct ipv6_extension_fragment * frag_hdr)'/>
<use f='dpdk_18.05/lib/librte_port/rte_port_ras.c' l='204' u='c' c='process_ipv6'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ip_frag/rte_ip_frag.h' l='208' type='struct rte_mbuf * rte_ipv6_frag_reassemble_packet(struct rte_ip_frag_tbl * tbl, struct rte_ip_frag_death_row * dr, struct rte_mbuf * mb, uint64_t tms, struct ipv6_hdr * ip_hdr, struct ipv6_extension_fragment * frag_hdr)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ip_frag/rte_ip_frag.h' l='187'>/**
 * This function implements reassembly of fragmented IPv6 packets.
 * Incoming mbuf should have its l2_len/l3_len fields setup correctly.
 *
 * @param tbl
 *   Table where to lookup/add the fragmented packet.
 * @param dr
 *   Death row to free buffers to
 * @param mb
 *   Incoming mbuf with IPv6 fragment.
 * @param tms
 *   Fragment arrival timestamp.
 * @param ip_hdr
 *   Pointer to the IPv6 header.
 * @param frag_hdr
 *   Pointer to the IPv6 fragment extension header.
 * @return
 *   Pointer to mbuf for reassembled packet, or NULL if:
 *   - an error occurred.
 *   - not all fragments of the packet are collected yet.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ip_frag/rte_ipv6_reassembly.c' l='134' ll='202' type='struct rte_mbuf * rte_ipv6_frag_reassemble_packet(struct rte_ip_frag_tbl * tbl, struct rte_ip_frag_death_row * dr, struct rte_mbuf * mb, uint64_t tms, struct ipv6_hdr * ip_hdr, struct ipv6_extension_fragment * frag_hdr)'/>
