<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_vfio.h' l='101' type='int rte_vfio_release_device(const char * sysfs_base, const char * dev_addr, int fd)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_vfio.h' l='82'>/**
 * Release a device mapped to a VFIO-managed I/O MMU group.
 *
 * This function is only relevant to linux and will return
 * an error on BSD.
 *
 * @param sysfs_base
 *   sysfs path prefix.
 *
 * @param dev_addr
 *   device location.
 *
 * @param fd
 *   VFIO fd.
 *
 * @return
 *   0 on success.
 *   &lt;0 on failure.
 */</doc>
<use f='dpdk_18.05/drivers/bus/pci/linux/pci_vfio.c' l='634' u='c' c='pci_vfio_unmap_resource'/>
<def f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_vfio.c' l='831' ll='921' type='int rte_vfio_release_device(const char * sysfs_base, const char * dev_addr, int vfio_dev_fd)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_vfio.h' l='78' type='int rte_vfio_release_device(const char * sysfs_base, const char * dev_addr, int fd)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_vfio.h' l='59'>/**
 * Release a device mapped to a VFIO-managed I/O MMU group.
 *
 * This function is only relevant to linux and will return
 * an error on BSD.
 *
 * @param sysfs_base
 *   sysfs path prefix.
 *
 * @param dev_addr
 *   device location.
 *
 * @param fd
 *   VFIO fd.
 *
 * @return
 *   0 on success.
 *   &lt;0 on failure.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/bus/pci/linux/pci_vfio.c' l='634' u='c' c='pci_vfio_unmap_resource'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_vfio.c' l='389' ll='449' type='int rte_vfio_release_device(const char * sysfs_base, const char * dev_addr, int vfio_dev_fd)'/>
