<dec f='dpdk_18.05/lib/librte_eal/common/malloc_elem.h' l='129' type='int malloc_elem_can_hold(struct malloc_elem * elem, size_t size, unsigned int align, size_t bound, _Bool contig)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/malloc_elem.h' l='124'>/*
 * return true if the current malloc_elem can hold a block of data
 * of the requested size and with the requested alignment
 */</doc>
<def f='dpdk_18.05/lib/librte_eal/common/malloc_elem.c' l='180' ll='185' type='int malloc_elem_can_hold(struct malloc_elem * elem, size_t size, unsigned int align, size_t bound, _Bool contig)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/malloc_elem.c' l='176'>/*
 * use elem_start_pt to determine if we get meet the size and
 * alignment request from the current element
 */</doc>
<use f='dpdk_18.05/lib/librte_eal/common/malloc_heap.c' l='134' u='c' c='find_suitable_element'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.h' l='125' type='int malloc_elem_can_hold(struct malloc_elem * elem, size_t size, unsigned int align, size_t bound)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.h' l='120'>/*
 * return true if the current malloc_elem can hold a block of data
 * of the requested size and with the requested alignment
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.c' l='87' ll='92' type='int malloc_elem_can_hold(struct malloc_elem * elem, size_t size, unsigned int align, size_t bound)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_elem.c' l='83'>/*
 * use elem_start_pt to determine if we get meet the size and
 * alignment request from the current element
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/malloc_heap.c' l='104' u='c' c='find_suitable_element'/>
