<dec f='dpdk_18.05/lib/librte_mbuf/rte_mbuf_pool_ops.h' l='38' type='int rte_mbuf_set_platform_mempool_ops(const char * ops_name)'/>
<doc f='dpdk_18.05/lib/librte_mbuf/rte_mbuf_pool_ops.h' l='26'>/**
 * Set the platform supported pktmbuf HW mempool ops name
 *
 * This function allow the HW to register the actively supported HW mempool
 * ops_name. Only one HW mempool ops can be registered at any point of time.
 *
 * @param ops_name
 * @return
 *   - On success, zero.
 *   - On failure, a negative value.
 */</doc>
<def f='dpdk_18.05/lib/librte_mbuf/rte_mbuf_pool_ops.c' l='12' ll='36' type='int rte_mbuf_set_platform_mempool_ops(const char * ops_name)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf_pool_ops.h' l='38' type='int rte_mbuf_set_platform_mempool_ops(const char * ops_name)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf_pool_ops.h' l='26'>/**
 * Set the platform supported pktmbuf HW mempool ops name
 *
 * This function allow the HW to register the actively supported HW mempool
 * ops_name. Only one HW mempool ops can be registered at any point of time.
 *
 * @param ops_name
 * @return
 *   - On success, zero.
 *   - On failure, a negative value.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_ethdev.c' l='1330' u='c' c='octeontx_probe'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf_pool_ops.c' l='12' ll='36' type='int rte_mbuf_set_platform_mempool_ops(const char * ops_name)'/>
