<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_keepalive.h' l='149' type='void rte_keepalive_mark_sleep(struct rte_keepalive * keepcfg)'/>
<def f='dpdk_18.05/lib/librte_eal/common/rte_keepalive.c' l='158' ll='162' type='void rte_keepalive_mark_sleep(struct rte_keepalive * keepcfg)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_keepalive.h' l='139'>/**
 * Per-core sleep-time indication.
 * @param *keepcfg
 *   Keepalive structure pointer
 *
 * If CPU idling is enabled, this function needs to be called from within
 * the main process loop of the LCore going to sleep, in order to avoid
 * the LCore being mis-detected as dead.
 */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_keepalive.h' l='149' type='void rte_keepalive_mark_sleep(struct rte_keepalive * keepcfg)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/rte_keepalive.c' l='158' ll='162' type='void rte_keepalive_mark_sleep(struct rte_keepalive * keepcfg)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_keepalive.h' l='139'>/**
 * Per-core sleep-time indication.
 * @param *keepcfg
 *   Keepalive structure pointer
 *
 * If CPU idling is enabled, this function needs to be called from within
 * the main process loop of the LCore going to sleep, in order to avoid
 * the LCore being mis-detected as dead.
 */</doc>
