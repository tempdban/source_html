<def f='dpdk_18.05/lib/librte_eventdev/rte_event_ring.h' l='127' ll='149' type='unsigned int rte_event_ring_dequeue_burst(struct rte_event_ring * r, struct rte_event * events, unsigned int n, uint16_t * available)'/>
<doc f='dpdk_18.05/lib/librte_eventdev/rte_event_ring.h' l='109'>/**
 * Dequeue a set of events from a ring
 *
 * Note: this API does not work with pointers to events, rather it copies
 * the events themselves to the destination ``events`` buffer.
 *
 * @param r
 *   pointer to the event ring
 * @param events
 *   pointer to an array to hold the struct rte_event objects
 * @param n
 *   number of events that can be held in the ``events`` array
 * @param available
 *   if non-null, is updated to indicate the number of events remaining in
 *   the ring once the dequeue has completed
 * @return
 *   the number of elements, n&apos;, dequeued from the ring, 0 &lt;= n&apos; &lt;= n
 */</doc>
<use f='dpdk_18.05/drivers/event/sw/sw_evdev_scheduler.c' l='338' u='c' c='sw_refill_pp_buf'/>
<use f='dpdk_18.05/drivers/event/sw/sw_evdev_worker.c' l='165' u='c' c='sw_event_dequeue_burst'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eventdev/rte_event_ring.h' l='127' ll='149' type='unsigned int rte_event_ring_dequeue_burst(struct rte_event_ring * r, struct rte_event * events, unsigned int n, uint16_t * available)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eventdev/rte_event_ring.h' l='109'>/**
 * Dequeue a set of events from a ring
 *
 * Note: this API does not work with pointers to events, rather it copies
 * the events themselves to the destination ``events`` buffer.
 *
 * @param r
 *   pointer to the event ring
 * @param events
 *   pointer to an array to hold the struct rte_event objects
 * @param n
 *   number of events that can be held in the ``events`` array
 * @param available
 *   if non-null, is updated to indicate the number of events remaining in
 *   the ring once the dequeue has completed
 * @return
 *   the number of elements, n&apos;, dequeued from the ring, 0 &lt;= n&apos; &lt;= n
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/event/sw/sw_evdev_scheduler.c' l='338' u='c' c='sw_refill_pp_buf'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/event/sw/sw_evdev_worker.c' l='163' u='c' c='sw_event_dequeue_burst'/>
