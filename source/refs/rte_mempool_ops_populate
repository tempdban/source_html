<dec f='dpdk/lib/librte_mempool/rte_mempool.h' l='786' type='int rte_mempool_ops_populate(struct rte_mempool * mp, unsigned int max_objs, void * vaddr, rte_iova_t iova, size_t len, rte_mempool_populate_obj_cb_t * obj_cb, void * obj_cb_arg)'/>
<doc f='dpdk/lib/librte_mempool/rte_mempool.h' l='763'>/**
 * @internal wrapper for mempool_ops populate callback.
 *
 * Populate memory pool objects using provided memory chunk.
 *
 * @param[in] mp
 *   A pointer to the mempool structure.
 * @param[in] max_objs
 *   Maximum number of objects to be populated.
 * @param[in] vaddr
 *   The virtual address of memory that should be used to store objects.
 * @param[in] iova
 *   The IO address
 * @param[in] len
 *   The length of memory in bytes.
 * @param[in] obj_cb
 *   Callback function to be executed for each populated object.
 * @param[in] obj_cb_arg
 *   An opaque pointer passed to the callback function.
 * @return
 *   The number of objects added on success.
 *   On error, no objects are populated and a negative errno is returned.
 */</doc>
<use f='dpdk/lib/librte_mempool/rte_mempool.c' l='406' u='c' c='rte_mempool_populate_iova'/>
<def f='dpdk/lib/librte_mempool/rte_mempool_ops.c' l='120' ll='137' type='int rte_mempool_ops_populate(struct rte_mempool * mp, unsigned int max_objs, void * vaddr, rte_iova_t iova, size_t len, rte_mempool_populate_obj_cb_t * obj_cb, void * obj_cb_arg)'/>
<doc f='dpdk/lib/librte_mempool/rte_mempool_ops.c' l='119'>/* wrapper to populate memory pool objects using provided memory chunk */</doc>
