<dec f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.h' l='81' type='bool e1000_check_mng_mode(struct e1000_hw * hw)'/>
<def f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.c' l='382' ll='388' type='bool e1000_check_mng_mode(struct e1000_hw * hw)'/>
<doc f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.c' l='375'>/**
 *  e1000_check_mng_mode - Check management mode
 *  @hw: pointer to the HW structure
 *
 *  This checks if the adapter has manageability enabled.
 *  This is a function pointer entry point called by drivers.
 **/</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_api.h' l='111' type='bool e1000_check_mng_mode(struct e1000_hw * hw)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_api.c' l='618' ll='624' type='bool e1000_check_mng_mode(struct e1000_hw * hw)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_api.c' l='611'>/**
 *  e1000_check_mng_mode - Check management mode
 *  @hw: pointer to the HW structure
 *
 *  This checks if the adapter has manageability enabled.
 *  This is a function pointer entry point called by drivers.
 **/</doc>
