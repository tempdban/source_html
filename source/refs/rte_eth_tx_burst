<def f='dpdk/lib/librte_ethdev/rte_ethdev.h' l='4095' ll='4124' type='uint16_t rte_eth_tx_burst(uint16_t port_id, uint16_t queue_id, struct rte_mbuf ** tx_pkts, uint16_t nb_pkts)'/>
<use f='dpdk/lib/librte_ethdev/rte_ethdev.h' l='4268' u='c' c='rte_eth_tx_buffer_flush'/>
<use f='dpdk/app/pdump/main.c' l='449' u='c' c='pdump_rxtx'/>
<doc f='dpdk/lib/librte_ethdev/rte_ethdev.h' l='4029'>/**
 * Send a burst of output packets on a transmit queue of an Ethernet device.
 *
 * The rte_eth_tx_burst() function is invoked to transmit output packets
 * on the output queue *queue_id* of the Ethernet device designated by its
 * *port_id*.
 * The *nb_pkts* parameter is the number of packets to send which are
 * supplied in the *tx_pkts* array of *rte_mbuf* structures, each of them
 * allocated from a pool created with rte_pktmbuf_pool_create().
 * The rte_eth_tx_burst() function loops, sending *nb_pkts* packets,
 * up to the number of transmit descriptors available in the TX ring of the
 * transmit queue.
 * For each packet to send, the rte_eth_tx_burst() function performs
 * the following operations:
 *
 * - Pick up the next available descriptor in the transmit ring.
 *
 * - Free the network buffer previously sent with that descriptor, if any.
 *
 * - Initialize the transmit descriptor with the information provided
 *   in the *rte_mbuf data structure.
 *
 * In the case of a segmented packet composed of a list of *rte_mbuf* buffers,
 * the rte_eth_tx_burst() function uses several transmit descriptors
 * of the ring.
 *
 * The rte_eth_tx_burst() function returns the number of packets it
 * actually sent. A return value equal to *nb_pkts* means that all packets
 * have been sent, and this is likely to signify that other output packets
 * could be immediately transmitted again. Applications that implement a
 * &quot;send as many packets to transmit as possible&quot; policy can check this
 * specific case and keep invoking the rte_eth_tx_burst() function until
 * a value less than *nb_pkts* is returned.
 *
 * It is the responsibility of the rte_eth_tx_burst() function to
 * transparently free the memory buffers of packets previously sent.
 * This feature is driven by the *tx_free_thresh* value supplied to the
 * rte_eth_dev_configure() function at device configuration time.
 * When the number of free TX descriptors drops below this threshold, the
 * rte_eth_tx_burst() function must [attempt to] free the *rte_mbuf*  buffers
 * of those packets whose transmission was effectively completed.
 *
 * If the PMD is DEV_TX_OFFLOAD_MT_LOCKFREE capable, multiple threads can
 * invoke this function concurrently on the same tx queue without SW lock.
 * @see rte_eth_dev_info_get, struct rte_eth_txconf::txq_flags
 *
 * @see rte_eth_tx_prepare to perform some prior checks or adjustments
 * for offloads.
 *
 * @param port_id
 *   The port identifier of the Ethernet device.
 * @param queue_id
 *   The index of the transmit queue through which output packets must be
 *   sent.
 *   The value must be in the range [0, nb_tx_queue - 1] previously supplied
 *   to rte_eth_dev_configure().
 * @param tx_pkts
 *   The address of an array of *nb_pkts* pointers to *rte_mbuf* structures
 *   which contain the output packets.
 * @param nb_pkts
 *   The maximum number of packets to transmit.
 * @return
 *   The number of output packets actually stored in transmit descriptors of
 *   the transmit ring. The return value can be less than the value of the
 *   *tx_pkts* parameter when the transmit ring is full or has been filled up.
 */</doc>
<use f='dpdk/app/test-eventdev/test_pipeline_common.h' l='136' u='c' c='pipeline_tx_pkt'/>
<use f='dpdk/app/test-pmd/csumonly.c' l='966' u='c' c='pkt_burst_checksum_forward'/>
<use f='dpdk/app/test-pmd/csumonly.c' l='976' u='c' c='pkt_burst_checksum_forward'/>
<use f='dpdk/app/test-pmd/flowgen.c' l='215' u='c' c='pkt_burst_flow_gen'/>
<use f='dpdk/app/test-pmd/flowgen.c' l='223' u='c' c='pkt_burst_flow_gen'/>
<use f='dpdk/app/test-pmd/icmpecho.c' l='490' u='c' c='reply_to_icmp_echo_rqsts'/>
<use f='dpdk/app/test-pmd/icmpecho.c' l='500' u='c' c='reply_to_icmp_echo_rqsts'/>
<use f='dpdk/app/test-pmd/iofwd.c' l='76' u='c' c='pkt_burst_io_forward'/>
<use f='dpdk/app/test-pmd/iofwd.c' l='85' u='c' c='pkt_burst_io_forward'/>
<use f='dpdk/app/test-pmd/macfwd.c' l='106' u='c' c='pkt_burst_mac_forward'/>
<use f='dpdk/app/test-pmd/macfwd.c' l='114' u='c' c='pkt_burst_mac_forward'/>
<use f='dpdk/app/test-pmd/macswap.c' l='137' u='c' c='pkt_burst_mac_swap'/>
<use f='dpdk/app/test-pmd/macswap.c' l='145' u='c' c='pkt_burst_mac_swap'/>
<use f='dpdk/app/test-pmd/tm.c' l='269' u='c' c='softport_packet_fwd'/>
<use f='dpdk/app/test-pmd/tm.c' l='277' u='c' c='softport_packet_fwd'/>
<use f='dpdk/app/test-pmd/txonly.c' l='257' u='c' c='pkt_burst_transmit'/>
<use f='dpdk/app/test-pmd/txonly.c' l='265' u='c' c='pkt_burst_transmit'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_8023ad.c' l='626' u='c' c='tx_machine'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_8023ad.c' l='1239' u='c' c='bond_mode_8023ad_handle_slow_pkt'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='352' u='c' c='bond_ethdev_tx_burst_8023ad_fast_queue'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='707' u='c' c='bond_ethdev_tx_burst_round_robin'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='740' u='c' c='bond_ethdev_tx_burst_active_backup'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='1041' u='c' c='bond_ethdev_tx_burst_tlb'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='1152' u='c' c='bond_ethdev_tx_burst_alb'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='1175' u='c' c='bond_ethdev_tx_burst_alb'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='1259' u='c' c='bond_ethdev_tx_burst_balance'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='1373' u='c' c='bond_ethdev_tx_burst_8023ad'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='1429' u='c' c='bond_ethdev_tx_burst_8023ad'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='1476' u='c' c='bond_ethdev_tx_burst_broadcast'/>
<use f='dpdk/drivers/net/softnic/rte_eth_softnic.c' l='286' u='c' c='run_default'/>
<use f='dpdk/drivers/net/softnic/rte_eth_softnic.c' l='299' u='c' c='run_default'/>
<use f='dpdk/drivers/net/softnic/rte_eth_softnic.c' l='378' u='c' c='run_tm'/>
<use f='dpdk/lib/librte_port/rte_port_ethdev.c' l='172' u='c' c='send_burst'/>
<use f='dpdk/lib/librte_port/rte_port_ethdev.c' l='216' u='c' c='rte_port_ethdev_writer_tx_bulk'/>
<use f='dpdk/lib/librte_port/rte_port_ethdev.c' l='360' u='c' c='send_burst_nodrop'/>
<use f='dpdk/lib/librte_port/rte_port_ethdev.c' l='370' u='c' c='send_burst_nodrop'/>
<use f='dpdk/lib/librte_port/rte_port_ethdev.c' l='423' u='c' c='rte_port_ethdev_writer_nodrop_tx_bulk'/>
