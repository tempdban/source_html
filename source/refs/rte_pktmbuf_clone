<def f='dpdk_18.05/lib/librte_mbuf/rte_mbuf.h' l='1708' ll='1743' type='struct rte_mbuf * rte_pktmbuf_clone(struct rte_mbuf * md, struct rte_mempool * mp)'/>
<use f='dpdk_18.05/lib/librte_net/rte_ether.h' l='390' u='c' c='rte_vlan_insert'/>
<doc f='dpdk_18.05/lib/librte_mbuf/rte_mbuf.h' l='1691'>/**
 * Creates a &quot;clone&quot; of the given packet mbuf.
 *
 * Walks through all segments of the given packet mbuf, and for each of them:
 *  - Creates a new packet mbuf from the given pool.
 *  - Attaches newly created mbuf to the segment.
 * Then updates pkt_len and nb_segs of the &quot;clone&quot; packet mbuf to match values
 * from the original packet mbuf.
 *
 * @param md
 *   The packet mbuf to be cloned.
 * @param mp
 *   The mempool from which the &quot;clone&quot; mbufs are allocated.
 * @return
 *   - The pointer to the new &quot;clone&quot; mbuf on success.
 *   - NULL if allocation fails.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1489' ll='1524' type='struct rte_mbuf * rte_pktmbuf_clone(struct rte_mbuf * md, struct rte_mempool * mp)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_net/rte_ether.h' l='363' u='c' c='rte_vlan_insert'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_mbuf/rte_mbuf.h' l='1472'>/**
 * Creates a &quot;clone&quot; of the given packet mbuf.
 *
 * Walks through all segments of the given packet mbuf, and for each of them:
 *  - Creates a new packet mbuf from the given pool.
 *  - Attaches newly created mbuf to the segment.
 * Then updates pkt_len and nb_segs of the &quot;clone&quot; packet mbuf to match values
 * from the original packet mbuf.
 *
 * @param md
 *   The packet mbuf to be cloned.
 * @param mp
 *   The mempool from which the &quot;clone&quot; mbufs are allocated.
 * @return
 *   - The pointer to the new &quot;clone&quot; mbuf on success.
 *   - NULL if allocation fails.
 */</doc>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1489' ll='1524' type='struct rte_mbuf * rte_pktmbuf_clone(struct rte_mbuf * md, struct rte_mempool * mp)'/>
<use f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ether.h' l='363' u='c' c='rte_vlan_insert'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_mbuf.h' l='1472'>/**
 * Creates a &quot;clone&quot; of the given packet mbuf.
 *
 * Walks through all segments of the given packet mbuf, and for each of them:
 *  - Creates a new packet mbuf from the given pool.
 *  - Attaches newly created mbuf to the segment.
 * Then updates pkt_len and nb_segs of the &quot;clone&quot; packet mbuf to match values
 * from the original packet mbuf.
 *
 * @param md
 *   The packet mbuf to be cloned.
 * @param mp
 *   The mempool from which the &quot;clone&quot; mbufs are allocated.
 * @return
 *   - The pointer to the new &quot;clone&quot; mbuf on success.
 *   - NULL if allocation fails.
 */</doc>
