<dec f='dpdk_18.05/lib/librte_compressdev/rte_compressdev.h' l='466' type='int rte_compressdev_stream_create(uint8_t dev_id, const struct rte_comp_xform * xform, void ** stream)'/>
<doc f='dpdk_18.05/lib/librte_compressdev/rte_compressdev.h' l='441'>/**
 * This should alloc a stream from the device&apos;s mempool and initialise it.
 * The application should call this API when setting up for the stateful
 * processing of a set of data on a device. The API can be called multiple
 * times to set up a stream for each data set. The handle returned is only for
 * use with ops of op_type STATEFUL and must be passed to the PMD
 * with every op in the data stream
 *
 * @param dev_id
 *   Compress device identifier
 * @param xform
 *   xform data
 * @param stream
 *   Pointer to where PMD&apos;s private stream handle should be stored
 *
 * @return
 *  - 0 if successful and valid stream handle
 *  - &lt;0 in error cases
 *  - Returns -EINVAL if input parameters are invalid.
 *  - Returns -ENOTSUP if comp device does not support STATEFUL operations.
 *  - Returns -ENOTSUP if comp device does not support the comp transform.
 *  - Returns -ENOMEM if the private stream could not be allocated.
 *
 */</doc>
<def f='dpdk_18.05/lib/librte_compressdev/rte_compressdev.c' l='707' ll='730' type='int rte_compressdev_stream_create(uint8_t dev_id, const struct rte_comp_xform * xform, void ** stream)'/>
