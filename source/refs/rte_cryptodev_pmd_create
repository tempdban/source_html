<dec f='dpdk_18.05/lib/librte_cryptodev/rte_cryptodev_pmd.h' l='463' type='struct rte_cryptodev * rte_cryptodev_pmd_create(const char * name, struct rte_device * device, struct rte_cryptodev_pmd_init_params * params)'/>
<use f='dpdk_18.05/drivers/crypto/null/null_crypto_pmd.c' l='165' u='c' c='cryptodev_null_create'/>
<doc f='dpdk_18.05/lib/librte_cryptodev/rte_cryptodev_pmd.h' l='448'>/**
 * @internal
 *
 * PMD assist function to provide boiler plate code for crypto driver to create
 * and allocate resources for a new crypto PMD device instance.
 *
 * @param	name	crypto device name.
 * @param	device	base device instance
 * @param	params	PMD initialisation parameters
 *
 * @return
 *  - crypto device instance on success
 *  - NULL on creation failure
 */</doc>
<use f='dpdk_18.05/drivers/crypto/scheduler/scheduler_pmd.c' l='82' u='c' c='cryptodev_scheduler_create'/>
<use f='dpdk_18.05/drivers/crypto/virtio/virtio_cryptodev.c' l='739' u='c' c='crypto_virtio_create'/>
<def f='dpdk_18.05/lib/librte_cryptodev/rte_cryptodev_pmd.c' l='95' ll='149' type='struct rte_cryptodev * rte_cryptodev_pmd_create(const char * name, struct rte_device * device, struct rte_cryptodev_pmd_init_params * params)'/>
