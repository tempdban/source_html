<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_eal.h' l='467' type='int rte_sys_gettid()'/>
<use f='dpdk_18.05/lib/librte_eal/common/include/rte_eal.h' l='480' u='c' c='rte_gettid'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_eal.h' l='460'>/**
 * A wrap API for syscall gettid.
 *
 * @return
 *   On success, returns the thread ID of calling process.
 *   It is always successful.
 */</doc>
<def f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_thread.c' l='172' ll='175' type='int rte_sys_gettid()'/>
<doc f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_thread.c' l='171'>/* require calling thread tid by gettid() */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_eal.h' l='429' type='int rte_sys_gettid()'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_eal.h' l='442' u='c' c='rte_gettid'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_eal.h' l='422'>/**
 * A wrap API for syscall gettid.
 *
 * @return
 *   On success, returns the thread ID of calling process.
 *   It is always successful.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_thread.c' l='172' ll='175' type='int rte_sys_gettid()'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_thread.c' l='171'>/* require calling thread tid by gettid() */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.c' l='442' u='c' c='pdump_get_socket_path'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_pdump/rte_pdump.c' l='627' u='c' c='pdump_create_client_socket'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_eal.h' l='429' type='int rte_sys_gettid()'/>
<use f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_eal.h' l='442' u='c' c='rte_gettid'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_eal.h' l='422'>/**
 * A wrap API for syscall gettid.
 *
 * @return
 *   On success, returns the thread ID of calling process.
 *   It is always successful.
 */</doc>
