<dec f='dpdk_18.05/lib/librte_pipeline/rte_table_action.h' l='741' type='int rte_table_action_apply(struct rte_table_action * action, void * data, enum rte_table_action_type type, void * action_params)'/>
<def f='dpdk_18.05/lib/librte_pipeline/rte_table_action.c' l='1549' ll='1615' type='int rte_table_action_apply(struct rte_table_action * action, void * data, enum rte_table_action_type type, void * action_params)'/>
<doc f='dpdk_18.05/lib/librte_pipeline/rte_table_action.h' l='722'>/**
 * Table action apply.
 *
 * @param[in] action
 *   Handle to table action object (needs to be valid).
 * @param[in] data
 *   Data byte array (typically table rule data) to apply action *type* on.
 * @param[in] type
 *   Specific table action previously registered for the table action profile of
 *   the *action* object.
 * @param[in] action_params
 *   Parameters for the *type* action.
 *   If struct rte_table_action_*type*_params is defined by the Table Action
 *   API, it needs to point to a valid instance of this structure, otherwise it
 *   needs to be set to NULL.
 * @return
 *   Zero on success, non-zero error code otherwise.
 */</doc>
