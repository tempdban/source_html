<dec f='dpdk_18.05/lib/librte_ethdev/rte_flow.h' l='2090' type='int rte_flow_query(uint16_t port_id, struct rte_flow * flow, const struct rte_flow_action * action, void * data, struct rte_flow_error * error)'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_flow.h' l='2065'>/**
 * Query an existing flow rule.
 *
 * This function allows retrieving flow-specific data such as counters.
 * Data is gathered by special actions which must be present in the flow
 * rule definition.
 *
 * \see RTE_FLOW_ACTION_TYPE_COUNT
 *
 * @param port_id
 *   Port identifier of Ethernet device.
 * @param flow
 *   Flow rule handle to query.
 * @param action
 *   Action definition as defined in original flow rule.
 * @param[in, out] data
 *   Pointer to storage for the associated query data type.
 * @param[out] error
 *   Perform verbose error reporting if not NULL. PMDs initialize this
 *   structure in case of error only.
 *
 * @return
 *   0 on success, a negative errno value otherwise and rte_errno is set.
 */</doc>
<use f='dpdk_18.05/app/test-pmd/config.c' l='1520' u='c' c='port_flow_query'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_flow.c' l='168' u='c' c='bond_flow_query_count'/>
<use f='dpdk_18.05/drivers/net/failsafe/failsafe_flow.c' l='186' u='c' c='fs_flow_query'/>
<def f='dpdk_18.05/lib/librte_ethdev/rte_flow.c' l='233' ll='251' type='int rte_flow_query(uint16_t port_id, struct rte_flow * flow, const struct rte_flow_action * action, void * data, struct rte_flow_error * error)'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_flow.c' l='232'>/* Query an existing flow rule. */</doc>
