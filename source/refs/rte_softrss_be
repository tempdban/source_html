<def f='dpdk_18.05/lib/librte_hash/rte_thash.h' l='237' ll='251' type='uint32_t rte_softrss_be(uint32_t * input_tuple, uint32_t input_len, const uint8_t * rss_key)'/>
<use f='dpdk_18.05/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='338' u='c' c='do_softrss'/>
<doc f='dpdk_18.05/lib/librte_hash/rte_thash.h' l='224'>/**
 * Optimized implementation.
 * If you want the calculated hash value matches NIC RSS value
 * you have to use special converted key with rte_convert_rss_key() fn.
 * @param input_tuple
 *   Pointer to input tuple
 * @param input_len
 *   Length of input_tuple in 4-bytes chunks
 * @param *rss_key
 *   Pointer to RSS hash key.
 * @return
 *   Calculated hash value.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_thash.h' l='237' ll='251' type='uint32_t rte_softrss_be(uint32_t * input_tuple, uint32_t input_len, const uint8_t * rss_key)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eventdev/rte_event_eth_rx_adapter.c' l='334' u='c' c='do_softrss'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_thash.h' l='224'>/**
 * Optimized implementation.
 * If you want the calculated hash value matches NIC RSS value
 * you have to use special converted key with rte_convert_rss_key() fn.
 * @param input_tuple
 *   Pointer to input tuple
 * @param input_len
 *   Length of input_tuple in 4-bytes chunks
 * @param *rss_key
 *   Pointer to RSS hash key.
 * @return
 *   Calculated hash value.
 */</doc>
