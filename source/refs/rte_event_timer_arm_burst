<def f='dpdk/lib/librte_eventdev/rte_event_timer_adapter.h' l='672' ll='682' type='uint16_t rte_event_timer_arm_burst(const struct rte_event_timer_adapter * adapter, struct rte_event_timer ** evtims, uint16_t nb_evtims)'/>
<doc f='dpdk/lib/librte_eventdev/rte_event_timer_adapter.h' l='638'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Arm a burst of event timers with separate expiration timeout tick for each
 * event timer.
 *
 * Before calling this function, the application allocates
 * ``struct rte_event_timer`` objects from mempool or huge page backed
 * application buffers of desired size. On successful allocation,
 * application updates the `struct rte_event_timer`` attributes such as
 * expiry event attributes, timeout ticks from now.
 * This function submits the event timer arm requests to the event timer adapter
 * and on expiry, the events will be injected to designated event queue.
 *
 * @param adapter
 *   A pointer to an event timer adapter structure.
 * @param evtims
 *   Pointer to an array of objects of type *rte_event_timer* structure.
 * @param nb_evtims
 *   Number of event timers in the supplied array.
 *
 * @return
 *   The number of successfully armed event timers. The return value can be less
 *   than the value of the *nb_evtims* parameter. If the return value is less
 *   than *nb_evtims*, the remaining event timers at the end of *evtims*
 *   are not consumed, and the caller has to take care of them, and rte_errno
 *   is set accordingly. Possible errno values include:
 *   - EINVAL Invalid timer adapter, expiry event queue ID is invalid, or an
 *   expiry event&apos;s sched type doesn&apos;t match the capabilities of the
 *   destination event queue.
 *   - EAGAIN Specified timer adapter is not running
 *   - EALREADY A timer was encountered that was already armed
 */</doc>
<use f='dpdk/app/test-eventdev/test_perf_common.c' l='117' u='c' c='perf_event_timer_producer'/>
