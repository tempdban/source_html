<dec f='dpdk/lib/librte_eventdev/rte_eventdev.h' l='1186' type='int rte_event_crypto_adapter_caps_get(uint8_t dev_id, uint8_t cdev_id, uint32_t * caps)'/>
<doc f='dpdk/lib/librte_eventdev/rte_eventdev.h' l='1162'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Retrieve the event device&apos;s crypto adapter capabilities for the
 * specified cryptodev device
 *
 * @param dev_id
 *   The identifier of the device.
 *
 * @param cdev_id
 *   The identifier of the cryptodev device.
 *
 * @param[out] caps
 *   A pointer to memory filled with event adapter capabilities.
 *   It is expected to be pre-allocated &amp; initialized by caller.
 *
 * @return
 *   - 0: Success, driver provides event adapter capabilities for the
 *     cryptodev device.
 *   - &lt;0: Error code returned by the driver function.
 *
 */</doc>
<use f='dpdk/lib/librte_eventdev/rte_event_crypto_adapter.c' l='787' u='c' c='rte_event_crypto_adapter_queue_pair_add'/>
<use f='dpdk/lib/librte_eventdev/rte_event_crypto_adapter.c' l='901' u='c' c='rte_event_crypto_adapter_queue_pair_del'/>
<def f='dpdk/lib/librte_eventdev/rte_eventdev.c' l='150' ll='171' type='int rte_event_crypto_adapter_caps_get(uint8_t dev_id, uint8_t cdev_id, uint32_t * caps)'/>
