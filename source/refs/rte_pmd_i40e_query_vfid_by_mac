<dec f='dpdk_18.05/drivers/net/i40e/rte_pmd_i40e.h' l='926' type='int rte_pmd_i40e_query_vfid_by_mac(uint16_t port, const struct ether_addr * vf_mac)'/>
<doc f='dpdk_18.05/drivers/net/i40e/rte_pmd_i40e.h' l='914'>/**
 * On the PF, find VF index based on VF MAC address
 *
 * @param port
 *    pointer to port identifier of the device
 * @param vf_mac
 *    the mac address of the vf to determine index of
 * @return
 *    The index of vfid If successful.
 *    -EINVAL: vf mac address does not exist for this port
 *    -ENOTSUP: i40e not supported for this port.
 */</doc>
<def f='dpdk_18.05/drivers/net/i40e/rte_pmd_i40e.c' l='2492' ll='2520' type='int rte_pmd_i40e_query_vfid_by_mac(uint16_t port, const struct ether_addr * vf_mac)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/rte_pmd_i40e.h' l='908' type='int rte_pmd_i40e_query_vfid_by_mac(uint16_t port, const struct ether_addr * vf_mac)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/rte_pmd_i40e.h' l='896'>/**
 * On the PF, find VF index based on VF MAC address
 *
 * @param port
 *    pointer to port identifier of the device
 * @param vf_mac
 *    the mac address of the vf to determine index of
 * @return
 *    The index of vfid If successful.
 *    -EINVAL: vf mac address does not exist for this port
 *    -ENOTSUP: i40e not supported for this port.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/rte_pmd_i40e.c' l='2440' ll='2468' type='int rte_pmd_i40e_query_vfid_by_mac(uint16_t port, const struct ether_addr * vf_mac)'/>
