<dec f='dpdk/lib/librte_pdump/rte_pdump.h' l='87' type='int rte_pdump_enable(uint16_t port, uint16_t queue, uint32_t flags, struct rte_ring * ring, struct rte_mempool * mp, void * filter)'/>
<use f='dpdk/app/pdump/main.c' l='738' u='c' c='enable_pdump'/>
<use f='dpdk/app/pdump/main.c' l='741' u='c' c='enable_pdump'/>
<use f='dpdk/app/pdump/main.c' l='753' u='c' c='enable_pdump'/>
<use f='dpdk/app/pdump/main.c' l='764' u='c' c='enable_pdump'/>
<doc f='dpdk/lib/librte_pdump/rte_pdump.h' l='63'>/**
 * Enables packet capturing on given port and queue.
 *
 * @param port
 *  port on which packet capturing should be enabled.
 * @param queue
 *  queue of a given port on which packet capturing should be enabled.
 *  users should pass on value UINT16_MAX to enable packet capturing on all
 *  queues of a given port.
 * @param flags
 *  flags specifies RTE_PDUMP_FLAG_RX/RTE_PDUMP_FLAG_TX/RTE_PDUMP_FLAG_RXTX
 *  on which packet capturing should be enabled for a given port and queue.
 * @param ring
 *  ring on which captured packets will be enqueued for user.
 * @param mp
 *  mempool on to which original packets will be mirrored or duplicated.
 * @param filter
 *  place holder for packet filtering.
 *
 * @return
 *    0 on success, -1 on error, rte_errno is set accordingly.
 */</doc>
<def f='dpdk/lib/librte_pdump/rte_pdump.c' l='537' ll='561' type='int rte_pdump_enable(uint16_t port, uint16_t queue, uint32_t flags, struct rte_ring * ring, struct rte_mempool * mp, void * filter)'/>
