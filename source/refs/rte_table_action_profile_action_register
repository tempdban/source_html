<dec f='dpdk/lib/librte_pipeline/rte_table_action.h' l='651' type='int rte_table_action_profile_action_register(struct rte_table_action_profile * profile, enum rte_table_action_type type, void * action_config)'/>
<def f='dpdk/lib/librte_pipeline/rte_table_action.c' l='1418' ll='1475' type='int rte_table_action_profile_action_register(struct rte_table_action_profile * profile, enum rte_table_action_type type, void * action_config)'/>
<doc f='dpdk/lib/librte_pipeline/rte_table_action.h' l='635'>/**
 * Table action profile action register.
 *
 * @param[in] profile
 *   Table profile action handle (needs to be valid and not in frozen state).
 * @param[in] type
 *   Specific table action to be registered for *profile*.
 * @param[in] action_config
 *   Configuration for the *type* action.
 *   If struct rte_table_action_*type*_config is defined by the Table Action
 *   API, it needs to point to a valid instance of this structure, otherwise it
 *   needs to be set to NULL.
 * @return
 *   Zero on success, non-zero error code otherwise.
 */</doc>
