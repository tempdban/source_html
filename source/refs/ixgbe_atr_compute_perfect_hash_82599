<dec f='dpdk_18.05/drivers/net/ixgbe/base/ixgbe_api.h' l='173' type='void ixgbe_atr_compute_perfect_hash_82599(union ixgbe_atr_input * input, union ixgbe_atr_input * mask)'/>
<def f='dpdk_18.05/drivers/net/ixgbe/base/ixgbe_82599.c' l='1615' ll='1661' type='void ixgbe_atr_compute_perfect_hash_82599(union ixgbe_atr_input * input, union ixgbe_atr_input * input_mask)'/>
<use f='dpdk_18.05/drivers/net/ixgbe/base/ixgbe_82599.c' l='2062' u='c' c='ixgbe_fdir_add_perfect_filter_82599'/>
<doc f='dpdk_18.05/drivers/net/ixgbe/base/ixgbe_82599.c' l='1604'>/**
 *  ixgbe_atr_compute_perfect_hash_82599 - Compute the perfect filter hash
 *  @input: input bitstream to compute the hash on
 *  @input_mask: mask for the input bitstream
 *
 *  This function serves two main purposes.  First it applies the input_mask
 *  to the atr_input resulting in a cleaned up atr_input data stream.
 *  Secondly it computes the hash and stores it in the bkt_hash field at
 *  the end of the input byte stream.  This way it will be available for
 *  future use without needing to recompute the hash.
 **/</doc>
<dec f='dpdk_18.05/kernel/linux/kni/ethtool/ixgbe/ixgbe_api.h' l='135' type='void ixgbe_atr_compute_perfect_hash_82599(union ixgbe_atr_input * input, union ixgbe_atr_input * mask)'/>
<def f='dpdk_18.05/kernel/linux/kni/ethtool/ixgbe/ixgbe_82599.c' l='1421' ll='1494' type='void ixgbe_atr_compute_perfect_hash_82599(union ixgbe_atr_input * input, union ixgbe_atr_input * input_mask)'/>
<use f='dpdk_18.05/kernel/linux/kni/ethtool/ixgbe/ixgbe_82599.c' l='1780' u='c' c='ixgbe_fdir_add_perfect_filter_82599'/>
<doc f='dpdk_18.05/kernel/linux/kni/ethtool/ixgbe/ixgbe_82599.c' l='1410'>/**
 *  ixgbe_atr_compute_perfect_hash_82599 - Compute the perfect filter hash
 *  @atr_input: input bitstream to compute the hash on
 *  @input_mask: mask for the input bitstream
 *
 *  This function serves two main purposes.  First it applys the input_mask
 *  to the atr_input resulting in a cleaned up atr_input data stream.
 *  Secondly it computes the hash and stores it in the bkt_hash field at
 *  the end of the input byte stream.  This way it will be available for
 *  future use without needing to recompute the hash.
 **/</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_api.h' l='173' type='void ixgbe_atr_compute_perfect_hash_82599(union ixgbe_atr_input * input, union ixgbe_atr_input * mask)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_82599.c' l='1615' ll='1661' type='void ixgbe_atr_compute_perfect_hash_82599(union ixgbe_atr_input * input, union ixgbe_atr_input * input_mask)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_82599.c' l='2062' u='c' c='ixgbe_fdir_add_perfect_filter_82599'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/base/ixgbe_82599.c' l='1604'>/**
 *  ixgbe_atr_compute_perfect_hash_82599 - Compute the perfect filter hash
 *  @input: input bitstream to compute the hash on
 *  @input_mask: mask for the input bitstream
 *
 *  This function serves two main purposes.  First it applies the input_mask
 *  to the atr_input resulting in a cleaned up atr_input data stream.
 *  Secondly it computes the hash and stores it in the bkt_hash field at
 *  the end of the input byte stream.  This way it will be available for
 *  future use without needing to recompute the hash.
 **/</doc>
