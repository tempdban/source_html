<def f='dpdk/lib/librte_ethdev/rte_mtr_driver.h' l='155' ll='171' type='int rte_mtr_error_set(struct rte_mtr_error * error, int code, enum rte_mtr_error_type type, const void * cause, const char * message)'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='21' u='c' c='rte_mtr_ops_get'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='32' u='c' c='rte_mtr_ops_get'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_capabilities_get'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_meter_profile_add'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_meter_profile_delete'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_create'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_destroy'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_meter_enable'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_meter_disable'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_meter_profile_update'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_meter_dscp_table_update'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_policer_actions_update'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_stats_update'/>
<use f='dpdk/lib/librte_ethdev/rte_mtr.c' l='51' u='c' c='rte_mtr_stats_read'/>
<doc f='dpdk/lib/librte_ethdev/rte_mtr_driver.h' l='136'>/**
 * Initialize generic error structure.
 *
 * This function also sets rte_errno to a given value.
 *
 * @param[out] error
 *   Pointer to error structure (may be NULL).
 * @param[in] code
 *   Related error code (rte_errno).
 * @param[in] type
 *   Cause field and error type.
 * @param[in] cause
 *   Object responsible for the error.
 * @param[in] message
 *   Human-readable error message.
 *
 * @return
 *   Error code.
 */</doc>
