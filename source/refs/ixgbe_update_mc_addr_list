<dec f='dpdk/drivers/net/ixgbe/base/ixgbe_api.h' l='121' type='s32 ixgbe_update_mc_addr_list(struct ixgbe_hw * hw, u8 * mc_addr_list, u32 mc_addr_count, ixgbe_mc_addr_itr func, bool clear)'/>
<def f='dpdk/drivers/net/ixgbe/base/ixgbe_api.c' l='1053' ll='1060' type='s32 ixgbe_update_mc_addr_list(struct ixgbe_hw * hw, u8 * mc_addr_list, u32 mc_addr_count, ixgbe_mc_addr_itr func, bool clear)'/>
<doc f='dpdk/drivers/net/ixgbe/base/ixgbe_api.c' l='1040'>/**
 *  ixgbe_update_mc_addr_list - Updates the MAC&apos;s list of multicast addresses
 *  @hw: pointer to hardware structure
 *  @mc_addr_list: the list of new multicast addresses
 *  @mc_addr_count: number of addresses
 *  @func: iterator function to walk the multicast address list
 *  @clear: flag, when set clears the table beforehand
 *
 *  The given list replaces any existing list. Clears the MC addrs from receive
 *  address registers and the multicast table. Uses unused receive address
 *  registers for the first multicast addresses, and hashes the rest into the
 *  multicast table.
 **/</doc>
<use f='dpdk/drivers/net/ixgbe/ixgbe_ethdev.c' l='6777' u='c' c='ixgbe_dev_set_mc_addr_list'/>
<dec f='dpdk/kernel/linux/kni/ethtool/ixgbe/ixgbe_api.h' l='88' type='s32 ixgbe_update_mc_addr_list(struct ixgbe_hw * hw, u8 * mc_addr_list, u32 mc_addr_count, ixgbe_mc_addr_itr func, bool clear)'/>
<def f='dpdk/kernel/linux/kni/ethtool/ixgbe/ixgbe_api.c' l='835' ll='842' type='s32 ixgbe_update_mc_addr_list(struct ixgbe_hw * hw, u8 * mc_addr_list, u32 mc_addr_count, ixgbe_mc_addr_itr func, bool clear)'/>
<doc f='dpdk/kernel/linux/kni/ethtool/ixgbe/ixgbe_api.c' l='823'>/**
 *  ixgbe_update_mc_addr_list - Updates the MAC&apos;s list of multicast addresses
 *  @hw: pointer to hardware structure
 *  @mc_addr_list: the list of new multicast addresses
 *  @mc_addr_count: number of addresses
 *  @func: iterator function to walk the multicast address list
 *
 *  The given list replaces any existing list. Clears the MC addrs from receive
 *  address registers and the multicast table. Uses unused receive address
 *  registers for the first multicast addresses, and hashes the rest into the
 *  multicast table.
 **/</doc>
