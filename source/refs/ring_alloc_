<def f='vpp_1804/src/vlibmemory/memory_shared.h' l='35' ll='42'/>
<size>24</size>
<doc f='vpp_1804/src/vlibmemory/memory_shared.h' l='26'>/*
 * Ring-allocation scheme for client API messages
 *
 * Only one proc/thread has control of a given message buffer.
 * To free a buffer allocated from one of these rings, we clear
 * a field in the buffer (header), and leave.
 *
 * No locks, no hits, no errors...
 */</doc>
<mbr r='ring_alloc_::rp' o='0' t='svm_queue_t *'/>
<mbr r='ring_alloc_::size' o='64' t='u16'/>
<mbr r='ring_alloc_::nitems' o='80' t='u16'/>
<mbr r='ring_alloc_::hits' o='96' t='u32'/>
<mbr r='ring_alloc_::misses' o='128' t='u32'/>
