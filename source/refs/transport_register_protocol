<dec f='vpp_1804/src/vnet/session/transport_interface.h' l='95' type='void transport_register_protocol(transport_proto_t transport_proto, const transport_proto_vft_t * vft, fib_protocol_t fib_proto, u32 output_node)'/>
<use f='vpp_1804/src/vnet/sctp/sctp.c' l='971' u='c' c='sctp_init'/>
<use f='vpp_1804/src/vnet/sctp/sctp.c' l='973' u='c' c='sctp_init'/>
<def f='vpp_1804/src/vnet/session/transport.c' l='162' ll='173' type='void transport_register_protocol(transport_proto_t transport_proto, const transport_proto_vft_t * vft, fib_protocol_t fib_proto, u32 output_node)'/>
<doc f='vpp_1804/src/vnet/session/transport.c' l='153'>/**
 * Register transport virtual function table.
 *
 * @param transport_proto - transport protocol type (i.e., TCP, UDP ..)
 * @param vft - virtual function table for transport proto
 * @param fib_proto - network layer protocol
 * @param output_node - output node index that session layer will hand off
 * 			buffers to, for requested fib proto
 */</doc>
<use f='vpp_1804/src/vnet/tcp/tcp.c' l='1300' u='c' c='tcp_init'/>
<use f='vpp_1804/src/vnet/tcp/tcp.c' l='1302' u='c' c='tcp_init'/>
<use f='vpp_1804/src/vnet/tls/tls.c' l='753' u='c' c='tls_init'/>
<use f='vpp_1804/src/vnet/tls/tls.c' l='755' u='c' c='tls_init'/>
<use f='vpp_1804/src/vnet/udp/udp.c' l='360' u='c' c='udp_init'/>
<use f='vpp_1804/src/vnet/udp/udp.c' l='362' u='c' c='udp_init'/>
