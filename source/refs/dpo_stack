<dec f='vpp_1804/src/vnet/dpo/dpo.h' l='323' type='void dpo_stack(dpo_type_t child_type, dpo_proto_t child_proto, dpo_id_t * dpo, const dpo_id_t * parent_dpo)'/>
<doc f='vpp_1804/src/vnet/dpo/dpo.h' l='304'>/**
 * @brief
 *  Set and stack a DPO.
 *  The DPO passed is set to the parent DPO and the necessary
 *  VLIB graph arcs are created. The child_type and child_proto
 * are used to get the VLID nodes from which the arcs are added.
 *
 * @param child_type
 *  Child DPO type.
 *
 * @param child_proto
 *  Child DPO proto
 *
 * @parem dpo
 *  This is the DPO to stack and set.
 *
 * @paren parent_dpo
 *  The parent DPO to stack onto.
 */</doc>
<use f='vpp_1804/src/vnet/adj/adj_midchain.c' l='559' u='c' c='adj_nbr_midchain_unstack'/>
<use f='vpp_1804/src/vnet/bier/bier_disp_entry.c' l='159' u='c' c='bier_disp_entry_restack'/>
<use f='vpp_1804/src/vnet/bier/bier_fmask.c' l='107' u='c' c='bier_fmask_stack'/>
<use f='vpp_1804/src/vnet/bier/bier_imp.c' l='100' u='c' c='bier_imp_add_or_lock'/>
<def f='vpp_1804/src/vnet/dpo/dpo.c' l='514' ll='521' type='void dpo_stack(dpo_type_t child_type, dpo_proto_t child_proto, dpo_id_t * dpo, const dpo_id_t * parent)'/>
<doc f='vpp_1804/src/vnet/dpo/dpo.c' l='509'>/**
 * @brief Stack one DPO object on another, and thus establish a child-parent
 * relationship. The VLIB graph arc used is taken from the parent and child types
 * passed.
 */</doc>
<use f='vpp_1804/src/vnet/dpo/load_balance.c' l='207' u='c' c='load_balance_set_bucket_i'/>
<use f='vpp_1804/src/vnet/dpo/mpls_disposition.c' l='67' u='c' c='mpls_disp_dpo_create'/>
<use f='vpp_1804/src/vnet/dpo/mpls_label_dpo.c' l='84' u='c' c='mpls_label_dpo_create'/>
<use f='vpp_1804/src/vnet/dpo/mpls_label_dpo.c' l='161' u='c' c='mpls_label_dpo_create'/>
<use f='vpp_1804/src/vnet/dpo/mpls_label_dpo.c' l='1228' u='c' c='mpls_label_interpose'/>
<use f='vpp_1804/src/vnet/dpo/replicate_dpo.c' l='181' u='c' c='replicate_set_bucket_i'/>
<use f='vpp_1804/src/vnet/mfib/mfib_entry.c' l='581' u='c' c='mfib_entry_stack'/>
<use f='vpp_1804/src/vnet/mfib/mfib_entry.c' l='600' u='c' c='mfib_entry_stack'/>
<use f='vpp_1804/src/vnet/mfib/mfib_entry.c' l='619' u='c' c='mfib_entry_stack'/>
<use f='vpp_1804/src/vnet/mfib/mfib_entry.c' l='639' u='c' c='mfib_entry_stack'/>
<use f='vpp_1804/src/vnet/udp/udp_encap.c' l='60' u='c' c='udp_encap_restack'/>
<use f='vpp_1804/src/plugins/ila/ila.c' l='614' u='c' c='ila_entry_stack'/>
<use f='vpp_1804/src/plugins/kubeproxy/kp.c' l='891' u='c' c='kp_pod_stack'/>
<use f='vpp_1804/src/plugins/lb/lb.c' l='823' u='c' c='lb_as_stack'/>
