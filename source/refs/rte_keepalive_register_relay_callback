<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_keepalive.h' l='166' type='void rte_keepalive_register_relay_callback(struct rte_keepalive * keepcfg, rte_keepalive_relay_callback_t callback, void * data)'/>
<def f='dpdk_18.05/lib/librte_eal/common/rte_keepalive.c' l='135' ll='141' type='void rte_keepalive_register_relay_callback(struct rte_keepalive * keepcfg, rte_keepalive_relay_callback_t callback, void * data)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_keepalive.h' l='151'>/**
 * Registers a &apos;live core&apos; callback.
 *
 * The complement of the &apos;dead core&apos; callback. This is called when a
 * core is known to be alive, and is intended for cases when an app
 * needs to know &apos;liveness&apos; beyond just knowing when a core has died.
 *
 * @param *keepcfg
 *   Keepalive structure pointer
 * @param callback
 *   Function called upon detection of a dead core.
 * @param data
 *   Data pointer to be passed to function callback.
 */</doc>
