<dec f='dpdk_18.05/lib/librte_cryptodev/rte_cryptodev.h' l='267' type='int rte_cryptodev_sym_capability_check_aead(const struct rte_cryptodev_symmetric_capability * capability, uint16_t key_size, uint16_t digest_size, uint16_t aad_size, uint16_t iv_size)'/>
<doc f='dpdk_18.05/lib/librte_cryptodev/rte_cryptodev.h' l='252'>/**
 * Check if key, digest, AAD and initial vector sizes are supported
 * in crypto AEAD capability
 *
 * @param	capability	Description of the symmetric crypto capability.
 * @param	key_size	AEAD key size.
 * @param	digest_size	AEAD digest size.
 * @param	aad_size	AEAD AAD size.
 * @param	iv_size		AEAD IV size.
 *
 * @return
 *   - Return 0 if the parameters are in range of the capability.
 *   - Return -1 if the parameters are out of range of the capability.
 */</doc>
<use f='dpdk_18.05/app/test-crypto-perf/main.c' l='270' u='c' c='cperf_verify_devices_capabilities'/>
<def f='dpdk_18.05/lib/librte_cryptodev/rte_cryptodev.c' l='321' ll='340' type='int rte_cryptodev_sym_capability_check_aead(const struct rte_cryptodev_symmetric_capability * capability, uint16_t key_size, uint16_t digest_size, uint16_t aad_size, uint16_t iv_size)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev.h' l='267' type='int rte_cryptodev_sym_capability_check_aead(const struct rte_cryptodev_symmetric_capability * capability, uint16_t key_size, uint16_t digest_size, uint16_t aad_size, uint16_t iv_size)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev.h' l='252'>/**
 * Check if key, digest, AAD and initial vector sizes are supported
 * in crypto AEAD capability
 *
 * @param	capability	Description of the symmetric crypto capability.
 * @param	key_size	AEAD key size.
 * @param	digest_size	AEAD digest size.
 * @param	aad_size	AEAD AAD size.
 * @param	iv_size		AEAD IV size.
 *
 * @return
 *   - Return 0 if the parameters are in range of the capability.
 *   - Return -1 if the parameters are out of range of the capability.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-crypto-perf/main.c' l='264' u='c' c='cperf_verify_devices_capabilities'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_cryptodev/rte_cryptodev.c' l='300' ll='319' type='int rte_cryptodev_sym_capability_check_aead(const struct rte_cryptodev_symmetric_capability * capability, uint16_t key_size, uint16_t digest_size, uint16_t aad_size, uint16_t iv_size)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_cryptodev.h' l='267' type='int rte_cryptodev_sym_capability_check_aead(const struct rte_cryptodev_symmetric_capability * capability, uint16_t key_size, uint16_t digest_size, uint16_t aad_size, uint16_t iv_size)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_cryptodev.h' l='252'>/**
 * Check if key, digest, AAD and initial vector sizes are supported
 * in crypto AEAD capability
 *
 * @param	capability	Description of the symmetric crypto capability.
 * @param	key_size	AEAD key size.
 * @param	digest_size	AEAD digest size.
 * @param	aad_size	AEAD AAD size.
 * @param	iv_size		AEAD IV size.
 *
 * @return
 *   - Return 0 if the parameters are in range of the capability.
 *   - Return -1 if the parameters are out of range of the capability.
 */</doc>
