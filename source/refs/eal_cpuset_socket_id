<dec f='dpdk_18.05/lib/librte_eal/common/eal_thread.h' l='46' type='int eal_cpuset_socket_id(rte_cpuset_t * cpusetp)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/eal_thread.h' l='37'>/**
 * Get the NUMA socket id from cpuset.
 * This function is private to EAL.
 *
 * @param cpusetp
 *   The point to a valid cpu set.
 * @return
 *   socket_id or SOCKET_ID_ANY
 */</doc>
<def f='dpdk_18.05/lib/librte_eal/common/eal_common_thread.c' l='40' ll='65' type='int eal_cpuset_socket_id(rte_cpuset_t * cpusetp)'/>
<use f='dpdk_18.05/lib/librte_eal/common/eal_common_thread.c' l='84' u='c' c='rte_thread_set_affinity'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_thread.h' l='46' type='int eal_cpuset_socket_id(rte_cpuset_t * cpusetp)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_thread.h' l='37'>/**
 * Get the NUMA socket id from cpuset.
 * This function is private to EAL.
 *
 * @param cpusetp
 *   The point to a valid cpu set.
 * @return
 *   socket_id or SOCKET_ID_ANY
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_thread.c' l='41' ll='66' type='int eal_cpuset_socket_id(rte_cpuset_t * cpusetp)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_thread.c' l='85' u='c' c='rte_thread_set_affinity'/>
