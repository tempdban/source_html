<dec f='dpdk/lib/librte_ethdev/rte_mtr.h' l='719' type='int rte_mtr_stats_read(uint16_t port_id, uint32_t mtr_id, struct rte_mtr_stats * stats, uint64_t * stats_mask, int clear, struct rte_mtr_error * error)'/>
<use f='dpdk/app/test-pmd/cmdline_mtr.c' l='1419' u='c' c='cmd_show_port_meter_stats_parsed'/>
<doc f='dpdk/lib/librte_ethdev/rte_mtr.h' l='693'>/**
 * MTR object statistics counters read
 *
 * @param[in] port_id
 *   The port identifier of the Ethernet device.
 * @param[in] mtr_id
 *   MTR object ID. Needs to be valid.
 * @param[out] stats
 *   When non-NULL, it contains the current value for the statistics counters
 *   enabled for the current MTR object.
 * @param[out] stats_mask
 *   When non-NULL, it contains the mask of statistics counter types that are
 *   currently enabled for this MTR object, indicating which of the counters
 *   retrieved with the *stats* structure are valid.
 * @param[in] clear
 *   When this parameter has a non-zero value, the statistics counters are
 *   cleared (i.e. set to zero) immediately after they have been read,
 *   otherwise the statistics counters are left untouched.
 * @param[out] error
 *   Error details. Filled in only on error, when not NULL.
 * @return
 *   0 on success, non-zero error code otherwise.
 *
 * @see enum rte_mtr_stats_type
 */</doc>
<def f='dpdk/lib/librte_ethdev/rte_mtr.c' l='190' ll='201' type='int rte_mtr_stats_read(uint16_t port_id, uint32_t mtr_id, struct rte_mtr_stats * stats, uint64_t * stats_mask, int clear, struct rte_mtr_error * error)'/>
<doc f='dpdk/lib/librte_ethdev/rte_mtr.c' l='189'>/** MTR object stats read */</doc>
