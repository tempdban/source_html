<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_interrupts.h' l='61' type='int rte_intr_callback_unregister(const struct rte_intr_handle * intr_handle, rte_intr_callback_fn cb, void * cb_arg)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_interrupts.h' l='46'>/**
 * It unregisters the callback according to the specified interrupt handle.
 *
 * @param intr_handle
 *  pointer to the interrupt handle.
 * @param cb
 *  callback address.
 * @param cb_arg
 *  address of parameter for callback, (void *)-1 means to remove all
 *  registered which has the same callback address.
 *
 * @return
 *  - On success, return the number of callback entities removed.
 *  - On failure, a negative value.
 */</doc>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev.c' l='1651' u='c' c='eth_i40e_dev_uninit'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev.c' l='2237' u='c' c='i40e_dev_start'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev_vf.c' l='2307' u='c' c='i40evf_dev_close'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_ethdev.c' l='1318' u='c' c='eth_ixgbe_dev_uninit'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_ethdev.c' l='1718' u='c' c='eth_ixgbevf_dev_uninit'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_ethdev.c' l='2742' u='c' c='ixgbe_dev_start'/>
<use f='dpdk_18.05/drivers/net/tap/rte_eth_tap.c' l='1233' u='c' c='tap_lsc_intr_handle_set'/>
<use f='dpdk_18.05/drivers/net/tap/rte_eth_tap.c' l='1246' u='c' c='tap_lsc_intr_handle_set'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_ethdev.c' l='1408' u='c' c='virtio_configure_intr'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_ethdev.c' l='1709' u='c' c='eth_virtio_dev_uninit'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_user_ethdev.c' l='79' u='c' c='virtio_user_server_reconnect'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_user_ethdev.c' l='106' u='c' c='virtio_user_delayed_handler'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_dev.c' l='139' u='c' c='dev_delayed_unregister'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_dev.c' l='213' u='c' c='rte_dev_event_monitor_stop'/>
<def f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='462' ll='524' type='int rte_intr_callback_unregister(const struct rte_intr_handle * intr_handle, rte_intr_callback_fn cb_fn, void * cb_arg)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_interrupts.h' l='61' type='int rte_intr_callback_unregister(const struct rte_intr_handle * intr_handle, rte_intr_callback_fn cb, void * cb_arg)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_interrupts.h' l='46'>/**
 * It unregisters the callback according to the specified interrupt handle.
 *
 * @param intr_handle
 *  pointer to the interrupt handle.
 * @param cb
 *  callback address.
 * @param cb_arg
 *  address of parameter for callback, (void *)-1 means to remove all
 *  registered which has the same callback address.
 *
 * @return
 *  - On success, return the number of callback entities removed.
 *  - On failure, a negative value.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/avf_ethdev.c' l='1276' u='c' c='avf_dev_close'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bnxt/bnxt_irq.c' l='107' u='c' c='bnxt_free_int'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/em_ethdev.c' l='390' u='c' c='eth_em_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/em_ethdev.c' l='747' u='c' c='eth_em_start'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/igb_ethdev.c' l='971' u='c' c='eth_igb_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/igb_ethdev.c' l='1124' u='c' c='eth_igbvf_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/igb_ethdev.c' l='1486' u='c' c='eth_igb_start'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/enic/enic_main.c' l='808' u='c' c='enic_disable'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_ethdev.c' l='3184' u='c' c='eth_fm10k_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/fm10k/fm10k_ethdev.c' l='3190' u='c' c='eth_fm10k_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev.c' l='1578' u='c' c='eth_i40e_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev.c' l='2154' u='c' c='i40e_dev_start'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/i40e_ethdev_vf.c' l='2290' u='c' c='i40evf_dev_close'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_ethdev.c' l='1362' u='c' c='eth_ixgbe_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_ethdev.c' l='1752' u='c' c='eth_ixgbevf_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/ixgbe/ixgbe_ethdev.c' l='2679' u='c' c='ixgbe_dev_start'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/nfp/nfp_net.c' l='779' u='c' c='nfp_net_start'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/nfp/nfp_net.c' l='923' u='c' c='nfp_net_close'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/qede_ethdev.c' l='1703' u='c' c='qede_dev_close'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_intr.c' l='202' u='c' c='sfc_intr_start'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/sfc/sfc_intr.c' l='230' u='c' c='sfc_intr_stop'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_ethdev.c' l='1435' u='c' c='virtio_configure_intr'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_ethdev.c' l='1736' u='c' c='eth_virtio_dev_uninit'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_user_ethdev.c' l='33' u='c' c='virtio_user_delayed_handler'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/vmxnet3/vmxnet3_ethdev.c' l='838' u='c' c='vmxnet3_dev_stop'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='462' ll='524' type='int rte_intr_callback_unregister(const struct rte_intr_handle * intr_handle, rte_intr_callback_fn cb_fn, void * cb_arg)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_interrupts.h' l='61' type='int rte_intr_callback_unregister(const struct rte_intr_handle * intr_handle, rte_intr_callback_fn cb, void * cb_arg)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_interrupts.h' l='46'>/**
 * It unregisters the callback according to the specified interrupt handle.
 *
 * @param intr_handle
 *  pointer to the interrupt handle.
 * @param cb
 *  callback address.
 * @param cb_arg
 *  address of parameter for callback, (void *)-1 means to remove all
 *  registered which has the same callback address.
 *
 * @return
 *  - On success, return the number of callback entities removed.
 *  - On failure, a negative value.
 */</doc>
