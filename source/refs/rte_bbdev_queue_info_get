<dec f='dpdk/lib/librte_bbdev/rte_bbdev.h' l='357' type='int rte_bbdev_queue_info_get(uint16_t dev_id, uint16_t queue_id, struct rte_bbdev_queue_info * queue_info)'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='313' u='c' c='test_bbdev_configure_stop_queue'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='313' u='c' c='test_bbdev_configure_stop_queue'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='353' u='c' c='test_bbdev_configure_stop_queue'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='353' u='c' c='test_bbdev_configure_stop_queue'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='372' u='c' c='test_bbdev_configure_stop_queue'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='372' u='c' c='test_bbdev_configure_stop_queue'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1167' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1167' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1172' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1172' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1177' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1177' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1182' u='c' c='test_bbdev_invalid_driver'/>
<use f='dpdk/app/test-bbdev/test_bbdev.c' l='1182' u='c' c='test_bbdev_invalid_driver'/>
<doc f='dpdk/lib/librte_bbdev/rte_bbdev.h' l='341'>/**
 * Retrieve information about a specific queue on a device.
 *
 * @param dev_id
 *   The identifier of the device.
 * @param queue_id
 *   The index of the queue.
 * @param queue_info
 *   Pointer to structure to where information will be copied. On error, this
 *   location may or may not have been modified.
 *
 * @return
 *   - 0 on success
 *   - EINVAL if invalid parameter pointer is provided
 */</doc>
<def f='dpdk/lib/librte_bbdev/rte_bbdev.c' l='809' ll='831' type='int rte_bbdev_queue_info_get(uint16_t dev_id, uint16_t queue_id, struct rte_bbdev_queue_info * queue_info)'/>
