<dec f='include/sys/socket.h' l='120' type='int socketpair(int __domain, int __type, int __protocol, int * __fds)'/>
<doc f='include/sys/socket.h' l='116'>/* Create two new sockets, of type TYPE in domain DOMAIN and using
   protocol PROTOCOL, which are connected to each other, and put file
   descriptors for them in FDS[0] and FDS[1].  If PROTOCOL is zero,
   one will be chosen automatically.  Returns 0 on success, -1 for errors.  */</doc>
<dec f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='126' type='int socketpair(int __domain, int __type, int __protocol, int * __fds)'/>
<def f='vpp_1804/src/vcl/ldp.c' l='1212' ll='1256' type='int socketpair(int domain, int type, int protocol, int * fds)'/>
<doc f='vpp_1804/src/vcl/ldp.c' l='1205'>/*
 * Create two new sockets, of type TYPE in domain DOMAIN and using
 * protocol PROTOCOL, which are connected to each other, and put file
 * descriptors for them in FDS[0] and FDS[1].  If PROTOCOL is zero,
 * one will be chosen automatically.
 * Returns 0 on success, -1 for errors.
 * */</doc>
<doc f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='121'>/* Create two new sockets, of type TYPE in domain DOMAIN and using
   protocol PROTOCOL, which are connected to each other, and put file
   descriptors for them in FDS[0] and FDS[1].  If PROTOCOL is zero,
   one will be chosen automatically.  Returns 0 on success, -1 for errors.  */</doc>
<use f='include/boost/asio/detail/impl/socket_ops.ipp' l='536' u='c' c='_ZN5boost4asio6detail10socket_ops10socketpairEiiiPiRNS_6system10error_codeE'/>
