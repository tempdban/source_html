<def f='dpdk/lib/librte_ethdev/rte_ethdev_vdev.h' l='56' ll='82' type='struct rte_eth_dev * rte_eth_vdev_allocate(struct rte_vdev_device * dev, size_t private_data_size)'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='2947' u='c' c='bond_alloc'/>
<doc f='dpdk/lib/librte_ethdev/rte_ethdev_vdev.h' l='42'>/**
 * @internal
 * Allocates a new ethdev slot for an ethernet device and returns the pointer
 * to that slot for the driver to use.
 *
 * @param dev
 *	Pointer to virtual device
 *
 * @param private_data_size
 *	Size of private data structure
 *
 * @return
 *	A pointer to a rte_eth_dev or NULL if allocation failed.
 */</doc>
<use f='dpdk/drivers/net/failsafe/failsafe.c' l='178' u='c' c='fs_eth_dev_create'/>
<use f='dpdk/drivers/net/kni/rte_eth_kni.c' l='350' u='c' c='eth_kni_create'/>
<use f='dpdk/drivers/net/null/rte_eth_null.c' l='521' u='c' c='eth_dev_null_create'/>
<use f='dpdk/drivers/net/tap/rte_eth_tap.c' l='1389' u='c' c='eth_dev_tap_create'/>
<use f='dpdk/drivers/net/virtio/virtio_user_ethdev.c' l='416' u='c' c='virtio_user_eth_dev_alloc'/>
<use f='dpdk/drivers/net/vhost/rte_eth_vhost.c' l='1220' u='c' c='eth_dev_vhost_create'/>
