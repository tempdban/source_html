<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/base/avf_prototype.h' l='52' type='enum avf_status_code avf_init_arq(struct avf_hw * hw)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/base/avf_adminq.c' l='425' ll='469' type='enum avf_status_code avf_init_arq(struct avf_hw * hw)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/base/avf_adminq.c' l='577' u='c' c='avf_init_adminq'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/avf/base/avf_adminq.c' l='412'>/**
 *  avf_init_arq - initialize ARQ
 *  @hw: pointer to the hardware structure
 *
 *  The main initialization routine for the Admin Receive (Event) Queue.
 *  Prior to calling this function, drivers *MUST* set the following fields
 *  in the hw-&gt;aq structure:
 *     - hw-&gt;aq.num_asq_entries
 *     - hw-&gt;aq.arq_buf_size
 *
 *  Do *NOT* hold the lock when calling this as the memory allocation routines
 *  called are not going to be atomic context safe
 **/</doc>
