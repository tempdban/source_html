<def f='dpdk_18.05/lib/librte_ethdev/rte_flow.h' l='1611' ll='1644'/>
<size>40</size>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_flow.h' l='1595'>/**
 * RTE_FLOW_ACTION_TYPE_RSS
 *
 * Similar to QUEUE, except RSS is additionally performed on packets to
 * spread them among several queues according to the provided parameters.
 *
 * Unlike global RSS settings used by other DPDK APIs, unsetting the
 * @p types field does not disable RSS in a flow rule. Doing so instead
 * requests safe unspecified &quot;best-effort&quot; settings from the underlying PMD,
 * which depending on the flow rule, may result in anything ranging from
 * empty (single queue) to all-inclusive RSS.
 *
 * Note: RSS hash result is stored in the hash.rss mbuf field which overlaps
 * hash.fdir.lo. Since the MARK action sets the hash.fdir.hi field only,
 * both can be requested simultaneously.
 */</doc>
<mbr r='rte_flow_action_rss::func' o='0' t='enum rte_eth_hash_function'/>
<mbr r='rte_flow_action_rss::level' o='32' t='uint32_t'/>
<mbr r='rte_flow_action_rss::types' o='64' t='uint64_t'/>
<mbr r='rte_flow_action_rss::key_len' o='128' t='uint32_t'/>
<mbr r='rte_flow_action_rss::queue_num' o='160' t='uint32_t'/>
<mbr r='rte_flow_action_rss::key' o='192' t='const uint8_t *'/>
<mbr r='rte_flow_action_rss::queue' o='256' t='const uint16_t *'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_flow.h' l='1081' ll='1085'/>
<size>16</size>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_flow.h' l='1069'>/**
 * RTE_FLOW_ACTION_TYPE_RSS
 *
 * Similar to QUEUE, except RSS is additionally performed on packets to
 * spread them among several queues according to the provided parameters.
 *
 * Note: RSS hash result is stored in the hash.rss mbuf field which overlaps
 * hash.fdir.lo. Since the MARK action sets the hash.fdir.hi field only,
 * both can be requested simultaneously.
 *
 * Terminating by default.
 */</doc>
<mbr r='rte_flow_action_rss::rss_conf' o='0' t='const struct rte_eth_rss_conf *'/>
<mbr r='rte_flow_action_rss::num' o='64' t='uint16_t'/>
<mbr r='rte_flow_action_rss::queue' o='80' t='uint16_t []'/>
