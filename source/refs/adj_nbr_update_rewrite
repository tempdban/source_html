<dec f='vpp_1804/src/vnet/adj/adj_nbr.h' l='111' type='void adj_nbr_update_rewrite(adj_index_t adj_index, adj_nbr_rewrite_flag_t flags, u8 * rewrite)'/>
<doc f='vpp_1804/src/vnet/adj/adj_nbr.h' l='101'>/**
 * @brief
 *  Update the rewrite string for an existing adjacecny.
 *
 * @param
 *  The index of the adj to update
 *
 * @param
 *  The new rewrite
 */</doc>
<use f='vpp_1804/src/vnet/adj/adj_nbr.c' l='276' u='c' c='adj_nbr_add_or_lock_w_rewrite'/>
<def f='vpp_1804/src/vnet/adj/adj_nbr.c' l='290' ll='323' type='void adj_nbr_update_rewrite(adj_index_t adj_index, adj_nbr_rewrite_flag_t flags, u8 * rewrite)'/>
<doc f='vpp_1804/src/vnet/adj/adj_nbr.c' l='283'>/**
 * adj_nbr_update_rewrite
 *
 * Update the adjacency&apos;s rewrite string. A NULL string implies the
 * rewirte is reset (i.e. when ARP/ND etnry is gone).
 * NB: the adj being updated may be handling traffic in the DP.
 */</doc>
<use f='vpp_1804/src/vnet/ethernet/arp.c' l='384' u='c' c='arp_mk_complete'/>
<use f='vpp_1804/src/vnet/ethernet/arp.c' l='396' u='c' c='arp_mk_incomplete'/>
<use f='vpp_1804/src/vnet/ethernet/arp.c' l='474' u='c' c='arp_update_adjacency'/>
<use f='vpp_1804/src/vnet/fib/fib_test.c' l='1103' u='c' c='fib_test_v4'/>
<use f='vpp_1804/src/vnet/fib/fib_test.c' l='1132' u='c' c='fib_test_v4'/>
<use f='vpp_1804/src/vnet/fib/fib_test.c' l='1180' u='c' c='fib_test_v4'/>
<use f='vpp_1804/src/vnet/fib/fib_test.c' l='4596' u='c' c='fib_test_v6'/>
<use f='vpp_1804/src/vnet/fib/fib_test.c' l='4634' u='c' c='fib_test_v6'/>
<use f='vpp_1804/src/vnet/interface.c' l='1523' u='c' c='default_update_adjacency'/>
<use f='vpp_1804/src/vnet/ip/ip6_neighbor.c' l='548' u='c' c='ip6_nd_mk_complete'/>
<use f='vpp_1804/src/vnet/ip/ip6_neighbor.c' l='560' u='c' c='ip6_nd_mk_incomplete'/>
<use f='vpp_1804/src/vnet/ip/ip6_neighbor.c' l='641' u='c' c='ip6_ethernet_update_adjacency'/>
