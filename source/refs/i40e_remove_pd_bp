<dec f='dpdk_18.05/drivers/net/i40e/base/i40e_hmc.h' l='231' type='enum i40e_status_code i40e_remove_pd_bp(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 idx)'/>
<def f='dpdk_18.05/drivers/net/i40e/base/i40e_hmc.c' l='223' ll='272' type='enum i40e_status_code i40e_remove_pd_bp(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 idx)'/>
<doc f='dpdk_18.05/drivers/net/i40e/base/i40e_hmc.c' l='208'>/**
 * i40e_remove_pd_bp - remove a backing page from a page descriptor
 * @hw: pointer to our HW structure
 * @hmc_info: pointer to the HMC configuration information structure
 * @idx: the page index
 *
 * This function:
 *	1. Marks the entry in pd tabe (for paged address mode) or in sd table
 *	   (for direct address mode) invalid.
 *	2. Write to register PMPDINV to invalidate the backing page in FV cache
 *	3. Decrement the ref count for the pd _entry
 * assumptions:
 *	1. Caller can deallocate the memory used by backing storage after this
 *	   function returns.
 **/</doc>
<use f='dpdk_18.05/drivers/net/i40e/base/i40e_lan_hmc.c' l='406' u='c' c='i40e_create_lan_hmc_object'/>
<use f='dpdk_18.05/drivers/net/i40e/base/i40e_lan_hmc.c' l='442' u='c' c='i40e_create_lan_hmc_object'/>
<use f='dpdk_18.05/drivers/net/i40e/base/i40e_lan_hmc.c' l='619' u='c' c='i40e_delete_lan_hmc_object'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_hmc.h' l='231' type='enum i40e_status_code i40e_remove_pd_bp(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 idx)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_hmc.c' l='223' ll='272' type='enum i40e_status_code i40e_remove_pd_bp(struct i40e_hw * hw, struct i40e_hmc_info * hmc_info, u32 idx)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_hmc.c' l='208'>/**
 * i40e_remove_pd_bp - remove a backing page from a page descriptor
 * @hw: pointer to our HW structure
 * @hmc_info: pointer to the HMC configuration information structure
 * @idx: the page index
 *
 * This function:
 *	1. Marks the entry in pd tabe (for paged address mode) or in sd table
 *	   (for direct address mode) invalid.
 *	2. Write to register PMPDINV to invalidate the backing page in FV cache
 *	3. Decrement the ref count for the pd _entry
 * assumptions:
 *	1. Caller can deallocate the memory used by backing storage after this
 *	   function returns.
 **/</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_lan_hmc.c' l='406' u='c' c='i40e_create_lan_hmc_object'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_lan_hmc.c' l='442' u='c' c='i40e_create_lan_hmc_object'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/i40e/base/i40e_lan_hmc.c' l='619' u='c' c='i40e_delete_lan_hmc_object'/>
