<dec f='dpdk_18.05/lib/librte_hash/rte_hash.h' l='280' type='int rte_hash_lookup_data(const struct rte_hash * h, const void * key, void ** data)'/>
<doc f='dpdk_18.05/lib/librte_hash/rte_hash.h' l='264'>/**
 * Find a key-value pair in the hash table.
 * This operation is multi-thread safe.
 *
 * @param h
 *   Hash table to look in.
 * @param key
 *   Key to find.
 * @param data
 *   Output with pointer to data returned from the hash table.
 * @return
 *   0 if successful lookup
 *   - EINVAL if the parameters are invalid.
 *   - ENOENT if the key is not found.
 */</doc>
<def f='dpdk_18.05/lib/librte_hash/rte_cuckoo_hash.c' l='773' ll='778' type='int rte_hash_lookup_data(const struct rte_hash * h, const void * key, void ** data)'/>
<use f='dpdk_18.05/lib/librte_vhost/vhost_crypto.c' l='399' u='c' c='vhost_crypto_close_sess'/>
<use f='dpdk_18.05/lib/librte_vhost/vhost_crypto.c' l='1002' u='c' c='vhost_crypto_process_one_req'/>
