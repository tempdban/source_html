<dec f='dpdk_18.05/lib/librte_eventdev/rte_event_timer_adapter.h' l='239' type='struct rte_event_timer_adapter * rte_event_timer_adapter_create(const struct rte_event_timer_adapter_conf * conf)'/>
<doc f='dpdk_18.05/lib/librte_eventdev/rte_event_timer_adapter.h' l='213'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Create an event timer adapter.
 *
 * This function must be invoked first before any other function in the API.
 *
 * @param conf
 *   The event timer adapter configuration structure.
 *
 * @return
 *   A pointer to the new allocated event timer adapter on success.
 *   NULL on error with rte_errno set appropriately.
 *   Possible rte_errno values include:
 *   - ERANGE: timer_tick_ns is not in supported range.
 *   - ENOMEM: unable to allocate sufficient memory for adapter instances
 *   - EINVAL: invalid event device identifier specified in config
 *   - ENOSPC: maximum number of adapters already created
 *   - EIO: event device reconfiguration and restart error.  The adapter
 *   reconfigures the event device with an additional port by default if it is
 *   required to use a service to manage timers. If the device had been started
 *   before this call, this error code indicates an error in restart following
 *   an error in reconfiguration, i.e., a combination of the two error codes.
 */</doc>
<use f='dpdk_18.05/app/test-eventdev/test_perf_common.c' l='438' u='c' c='perf_event_timer_adapter_setup'/>
<def f='dpdk_18.05/lib/librte_eventdev/rte_event_timer_adapter.c' l='120' ll='125' type='struct rte_event_timer_adapter * rte_event_timer_adapter_create(const struct rte_event_timer_adapter_conf * conf)'/>
