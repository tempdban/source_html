<dec f='vpp_1804/src/vnet/fib/fib_node.h' l='333' type='fib_node_type_t fib_node_register_new_type(const fib_node_vft_t * vft)'/>
<doc f='vpp_1804/src/vnet/fib/fib_node.h' l='324'>/**
 * @brief
 *  Create a new FIB node type and Register the function table for it.
 *
 * @param vft
 * virtual function table
 *
 * @return new FIB node type
 */</doc>
<def f='vpp_1804/src/vnet/fib/fib_node.c' l='79' ll='89' type='fib_node_type_t fib_node_register_new_type(const fib_node_vft_t * vft)'/>
<use f='vpp_1804/src/vnet/ipip/ipip.c' l='553' u='c' c='ipip_init'/>
<use f='vpp_1804/src/vnet/ipip/sixrd.c' l='508' u='c' c='sixrd_init'/>
<use f='vpp_1804/src/plugins/gtpu/gtpu.c' l='1098' u='c' c='gtpu_init'/>
<use f='vpp_1804/src/plugins/ila/ila.c' l='937' u='c' c='ila_init'/>
<use f='vpp_1804/src/plugins/ioam/lib-vxlan-gpe/vxlan_gpe_ioam.c' l='760' u='c' c='vxlan_gpe_ioam_interface_init'/>
<use f='vpp_1804/src/plugins/kubeproxy/kp.c' l='951' u='c' c='kp_init'/>
<use f='vpp_1804/src/plugins/lb/lb.c' l='868' u='c' c='lb_init'/>
