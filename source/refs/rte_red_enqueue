<def f='dpdk/lib/librte_sched/rte_red.h' l='379' ll='393' type='int rte_red_enqueue(const struct rte_red_config * red_cfg, struct rte_red * red, const unsigned int q, const uint64_t time)'/>
<doc f='dpdk/lib/librte_sched/rte_red.h' l='363'>/**
 * @brief Decides if new packet should be enqeued or dropped
 * Updates run time data based on new queue size value.
 * Based on new queue average and RED configuration parameters
 * gives verdict whether to enqueue or drop the packet.
 *
 * @param red_cfg [in] config pointer to a RED configuration parameter structure
 * @param red [in,out] data pointer to RED runtime data
 * @param q [in] updated queue size in packets
 * @param time [in] current time stamp
 *
 * @return Operation status
 * @retval 0 enqueue the packet
 * @retval 1 drop the packet based on max threshold criteria
 * @retval 2 drop the packet based on mark probability criteria
 */</doc>
