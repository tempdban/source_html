<dec f='dpdk_18.05/lib/librte_hash/rte_fbk_hash.h' l='325' type='struct rte_fbk_hash_table * rte_fbk_hash_find_existing(const char * name)'/>
<def f='dpdk_18.05/lib/librte_hash/rte_fbk_hash.c' l='43' ll='65' type='struct rte_fbk_hash_table * rte_fbk_hash_find_existing(const char * name)'/>
<doc f='dpdk_18.05/lib/librte_hash/rte_fbk_hash.c' l='33'>/**
 * Performs a lookup for an existing hash table, and returns a pointer to
 * the table if found.
 *
 * @param name
 *   Name of the hash table to find
 *
 * @return
 *   pointer to hash table structure or NULL on error.
 */</doc>
<doc f='dpdk_18.05/lib/librte_hash/rte_fbk_hash.h' l='313'>/**
 * Performs a lookup for an existing hash table, and returns a pointer to
 * the table if found.
 *
 * @param name
 *   Name of the hash table to find
 *
 * @return
 *   pointer to hash table structure or NULL on error with rte_errno
 *   set appropriately. Possible rte_errno values include:
 *    - ENOENT - required entry not available to return.
 */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_fbk_hash.h' l='325' type='struct rte_fbk_hash_table * rte_fbk_hash_find_existing(const char * name)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_fbk_hash.c' l='43' ll='65' type='struct rte_fbk_hash_table * rte_fbk_hash_find_existing(const char * name)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_fbk_hash.c' l='33'>/**
 * Performs a lookup for an existing hash table, and returns a pointer to
 * the table if found.
 *
 * @param name
 *   Name of the hash table to find
 *
 * @return
 *   pointer to hash table structure or NULL on error.
 */</doc>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_fbk_hash.h' l='313'>/**
 * Performs a lookup for an existing hash table, and returns a pointer to
 * the table if found.
 *
 * @param name
 *   Name of the hash table to find
 *
 * @return
 *   pointer to hash table structure or NULL on error with rte_errno
 *   set appropriately. Possible rte_errno values include:
 *    - ENOENT - required entry not available to return.
 */</doc>
