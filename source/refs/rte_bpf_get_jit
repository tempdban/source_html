<dec f='dpdk_18.05/lib/librte_bpf/rte_bpf.h' l='184' type='int rte_bpf_get_jit(const struct rte_bpf * bpf, struct rte_bpf_jit * jit)'/>
<doc f='dpdk_18.05/lib/librte_bpf/rte_bpf.h' l='172'>/**
 * Provide information about natively compield code for given BPF handle.
 *
 * @param bpf
 *   handle for the BPF code.
 * @param jit
 *   pointer to the rte_bpf_jit structure to be filled with related data.
 * @return
 *   - -EINVAL if the parameters are invalid.
 *   - Zero if operation completed successfully.
 */</doc>
<def f='dpdk_18.05/lib/librte_bpf/bpf.c' l='29' ll='37' macro='1' type='int rte_bpf_get_jit(const struct rte_bpf * bpf, struct rte_bpf_jit * jit)'/>
<use f='dpdk_18.05/lib/librte_bpf/bpf_pkt.c' l='539' u='c' c='bpf_eth_elf_load'/>
