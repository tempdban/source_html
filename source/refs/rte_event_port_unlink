<dec f='dpdk/lib/librte_eventdev/rte_eventdev.h' l='1694' type='int rte_event_port_unlink(uint8_t dev_id, uint8_t port_id, uint8_t * queues, uint16_t nb_unlinks)'/>
<doc f='dpdk/lib/librte_eventdev/rte_eventdev.h' l='1654'>/**
 * Unlink multiple source event queues supplied in *queues* from the destination
 * event port designated by its *port_id* on the event device designated
 * by its *dev_id*.
 *
 * The unlink establishment shall disable the event port *port_id* from
 * receiving events from the specified event queue *queue_id*
 *
 * Event queue(s) to event port unlink establishment can be changed at runtime
 * without re-configuring the device.
 *
 * @param dev_id
 *   The identifier of the device.
 *
 * @param port_id
 *   Event port identifier to select the destination port to unlink.
 *
 * @param queues
 *   Points to an array of *nb_unlinks* event queues to be unlinked
 *   from the event port.
 *   NULL value is allowed, in which case this function unlinks all the
 *   event queue(s) from the event port *port_id*.
 *
 * @param nb_unlinks
 *   The number of unlinks to establish. This parameter is ignored if queues is
 *   NULL.
 *
 * @return
 * The number of unlinks actually established. The return value can be less
 * than the value of the *nb_unlinks* parameter when the implementation has the
 * limitation on specific queue to port unlink establishment or
 * if invalid parameters are specified.
 * If the return value is less than *nb_unlinks*, the remaining queues at the
 * end of queues[] are not established, and the caller has to take care of them.
 * If return value is less than *nb_unlinks* then implementation shall update
 * the rte_errno accordingly, Possible rte_errno values are
 * (-EINVAL) Invalid parameter
 *
 */</doc>
<use f='dpdk/drivers/event/sw/sw_evdev_selftest.c' l='1337' u='c' c='port_single_lb_reconfig'/>
<use f='dpdk/lib/librte_eventdev/rte_eventdev.c' l='738' u='c' c='rte_event_port_setup'/>
<def f='dpdk/lib/librte_eventdev/rte_eventdev.c' l='913' ll='976' type='int rte_event_port_unlink(uint8_t dev_id, uint8_t port_id, uint8_t * queues, uint16_t nb_unlinks)'/>
