<dec f='vpp_1804/src/vlib/threads.h' l='522' type='void *'/>
<def f='vpp_1804/src/vlib/threads.c' l='1801' type='void *'/>
<use f='vpp_1804/src/vlib/threads.c' l='1806' u='r' c='vlib_rpc_call_main_thread'/>
<use f='vpp_1804/src/vlib/threads.c' l='1808' u='r' c='vlib_rpc_call_main_thread'/>
<dec f='vpp_1804/src/vlibmemory/vlib_api.c' l='712' type='void *'/>
<use f='vpp_1804/src/vlibmemory/vlib_api.c' l='740' u='w' c='rpc_api_hookup'/>
<doc f='vpp_1804/src/vlibmemory/vlib_api.c' l='703'>/*
 * Set the rpc callback at our earliest possible convenience.
 * This avoids ordering issues between thread_init() -&gt; start_workers and
 * an init function which we could define here. If we ever intend to use
 * vlib all by itself, we can&apos;t create a link-time dependency on
 * an init function here and a typical &quot;call foo_init first&quot;
 * guitar lick.
 */</doc>
