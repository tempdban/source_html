<dec f='dpdk/lib/librte_ethdev/rte_ethdev_driver.h' l='101' type='int _rte_eth_dev_callback_process(struct rte_eth_dev * dev, enum rte_eth_event_type event, void * ret_param)'/>
<doc f='dpdk/lib/librte_ethdev/rte_ethdev_driver.h' l='84'>/**
 * @internal Executes all the user application registered callbacks for
 * the specific device. It is for DPDK internal user only. User
 * application should not call it directly.
 *
 * @param dev
 *  Pointer to struct rte_eth_dev.
 * @param event
 *  Eth device interrupt event type.
 * @param ret_param
 *  To pass data back to user application.
 *  This allows the user application to decide if a particular function
 *  is permitted or not.
 *
 * @return
 *  int
 */</doc>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='2614' u='c' c='bond_ethdev_delayed_lsc_propagation'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='2730' u='c' c='bond_ethdev_lsc_event_callback'/>
<use f='dpdk/drivers/net/bonding/rte_eth_bond_pmd.c' l='2740' u='c' c='bond_ethdev_lsc_event_callback'/>
<use f='dpdk/drivers/net/failsafe/failsafe_ether.c' l='490' u='c' c='failsafe_eth_lsc_event_callback'/>
<use f='dpdk/drivers/net/ixgbe/ixgbe_ethdev.c' l='4366' u='c' c='ixgbe_dev_interrupt_delayed_handler'/>
<use f='dpdk/drivers/net/ixgbe/ixgbe_ethdev.c' l='4371' u='c' c='ixgbe_dev_interrupt_delayed_handler'/>
<use f='dpdk/drivers/net/ixgbe/ixgbe_ethdev.c' l='8282' u='c' c='ixgbevf_mbx_process'/>
<use f='dpdk/drivers/net/ixgbe/ixgbe_pf.c' l='745' u='c' c='ixgbe_rcv_msg_from_vf'/>
<use f='dpdk/drivers/net/ixgbe/ixgbe_pf.c' l='757' u='c' c='ixgbe_rcv_msg_from_vf'/>
<use f='dpdk/drivers/net/virtio/virtio_ethdev.c' l='1301' u='c' c='virtio_interrupt_handler'/>
<use f='dpdk/lib/librte_ethdev/rte_ethdev.c' l='369' u='c' c='rte_eth_dev_release_port'/>
<def f='dpdk/lib/librte_ethdev/rte_ethdev.c' l='3449' ll='3474' type='int _rte_eth_dev_callback_process(struct rte_eth_dev * dev, enum rte_eth_event_type event, void * ret_param)'/>
<use f='dpdk/lib/librte_ethdev/rte_ethdev.c' l='3482' u='c' c='rte_eth_dev_probing_finish'/>
