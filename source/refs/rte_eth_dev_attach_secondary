<dec f='dpdk_18.05/lib/librte_ethdev/rte_ethdev_driver.h' l='58' type='struct rte_eth_dev * rte_eth_dev_attach_secondary(const char * name)'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_ethdev_driver.h' l='47'>/**
 * @internal
 * Attach to the ethdev already initialized by the primary
 * process.
 *
 * @param       name    Ethernet device&apos;s name.
 * @return
 *   - Success: Slot in the rte_dev_devices array for attached
 *        device.
 *   - Error: Null pointer.
 */</doc>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='3061' u='c' c='bond_probe'/>
<use f='dpdk_18.05/drivers/net/failsafe/failsafe.c' l='324' u='c' c='rte_pmd_failsafe_probe'/>
<use f='dpdk_18.05/lib/librte_ethdev/rte_ethdev_pci.h' l='125' u='c' c='rte_eth_dev_pci_allocate'/>
<use f='dpdk_18.05/drivers/net/kni/rte_eth_kni.c' l='415' u='c' c='eth_kni_probe'/>
<use f='dpdk_18.05/drivers/net/null/rte_eth_null.c' l='619' u='c' c='rte_pmd_null_probe'/>
<use f='dpdk_18.05/drivers/net/softnic/rte_eth_softnic.c' l='746' u='c' c='pmd_probe'/>
<use f='dpdk_18.05/drivers/net/tap/rte_eth_tap.c' l='1687' u='c' c='rte_pmd_tun_probe'/>
<use f='dpdk_18.05/drivers/net/tap/rte_eth_tap.c' l='1755' u='c' c='rte_pmd_tap_probe'/>
<use f='dpdk_18.05/drivers/net/vhost/rte_eth_vhost.c' l='1349' u='c' c='rte_pmd_vhost_probe'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_user_ethdev.c' l='595' u='c' c='virtio_user_pmd_probe'/>
<def f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='333' ll='359' type='struct rte_eth_dev * rte_eth_dev_attach_secondary(const char * name)'/>
<use f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='3575' u='c' c='rte_eth_dev_create'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='328'>/*
 * Attach to a port already registered by the primary process, which
 * makes sure that the same device would have the same port id both
 * in the primary and secondary process.
 */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev_driver.h' l='58' type='struct rte_eth_dev * rte_eth_dev_attach_secondary(const char * name)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev_driver.h' l='47'>/**
 * @internal
 * Attach to the ethdev already initialized by the primary
 * process.
 *
 * @param       name    Ethernet device&apos;s name.
 * @return
 *   - Success: Slot in the rte_dev_devices array for attached
 *        device.
 *   - Error: Null pointer.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev_pci.h' l='113' u='c' c='rte_eth_dev_pci_allocate'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/octeontx/octeontx_ethdev.c' l='1049' u='c' c='octeontx_create'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_user_ethdev.c' l='486' u='c' c='virtio_user_pmd_probe'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.c' l='309' ll='335' type='struct rte_eth_dev * rte_eth_dev_attach_secondary(const char * name)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.c' l='304'>/*
 * Attach to a port already registered by the primary process, which
 * makes sure that the same device would have the same port id both
 * in the primary and secondary process.
 */</doc>
