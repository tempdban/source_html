<dec f='include/sys/epoll.h' l='113' type='int epoll_ctl(int __epfd, int __op, int __fd, struct epoll_event * __event)'/>
<doc f='include/sys/epoll.h' l='107'>/* Manipulate an epoll instance &quot;epfd&quot;. Returns 0 in case of success,
   -1 in case of error ( the &quot;errno&quot; variable will contain the
   specific error code ) The &quot;op&quot; parameter is one of the EPOLL_CTL_*
   constants defined above. The &quot;fd&quot; parameter is the target of the
   operation. The &quot;event&quot; parameter describes which events the caller
   is interested in and any associated user data.  */</doc>
<use f='dpdk_18.05/drivers/net/ifc/ifcvf_vdpa.c' l='383' u='c' c='notify_relay'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='814' u='c' c='eal_intr_thread_main'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='833' u='c' c='eal_intr_thread_main'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='1059' u='c' c='rte_epoll_ctl'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='805' u='c' c='eal_intr_thread_main'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='824' u='c' c='eal_intr_thread_main'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='1059' u='c' c='rte_epoll_ctl'/>
<dec f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='294' type='int epoll_ctl(int __epfd, int __op, int __fd, struct epoll_event * __event)'/>
<def f='vpp_1804/src/vcl/ldp.c' l='3007' ll='3144' type='int epoll_ctl(int epfd, int op, int fd, struct epoll_event * event)'/>
<doc f='vpp_1804/src/vcl/ldp_glibc_socket.h' l='287'>/* Manipulate an epoll instance &quot;epfd&quot;. Returns 0 in case of success,
   -1 in case of error ( the &quot;errno&quot; variable will contain the
   specific error code ) The &quot;op&quot; parameter is one of the EPOLL_CTL_*
   constants defined above. The &quot;fd&quot; parameter is the target of the
   operation. The &quot;event&quot; parameter describes which events the caller
   is interested in and any associated user data.  */</doc>
<use f='vpp_1804/src/vcl/sock_test_server.c' l='428' u='c' c='new_client'/>
<use f='vpp_1804/src/vcl/sock_test_server.c' l='710' u='c' c='main'/>
<use f='vpp_1804/src/vcl/sock_test_server.c' l='725' u='c' c='main'/>
<use f='vpp_1804/src/vlib/unix/input.c' l='118' u='c' c='linux_epoll_file_update'/>
<use f='vpp_1804/src/vpp/app/vppctl.c' l='225' u='c' c='main'/>
<use f='vpp_1804/src/vpp/app/vppctl.c' l='238' u='c' c='main'/>
