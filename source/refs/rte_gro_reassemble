<dec f='dpdk_18.05/lib/librte_gro/rte_gro.h' l='133' type='uint16_t rte_gro_reassemble(struct rte_mbuf ** pkts, uint16_t nb_pkts, void * ctx)'/>
<doc f='dpdk_18.05/lib/librte_gro/rte_gro.h' l='106'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * Reassembly function, which tries to merge input packets with the
 * existed packets in the reassembly tables of a given GRO context.
 * It doesn&apos;t check if input packets have correct checksums and doesn&apos;t
 * re-calculate checksums for merged packets. Additionally, it assumes
 * the packets are complete (i.e., MF==0 &amp;&amp; frag_off==0), when IP
 * fragmentation is possible (i.e., DF==0).
 *
 * If the input packets have invalid parameters (e.g. no data payload,
 * unsupported GRO types), they are returned to applications. Otherwise,
 * they are either merged or inserted into the table. Applications need
 * to flush packets from the tables by flush API, if they want to get the
 * GROed packets.
 *
 * @param pkts
 *  Packets to reassemble. It&apos;s also used to store the unprocessed packets.
 * @param nb_pkts
 *  The number of packets to reassemble
 * @param ctx
 *  GRO context object pointer
 *
 * @return
 *  The number of unprocessed packets.
 */</doc>
<use f='dpdk_18.05/app/test-pmd/csumonly.c' l='923' u='c' c='pkt_burst_checksum_forward'/>
<def f='dpdk_18.05/lib/librte_gro/rte_gro.c' l='220' ll='266' type='uint16_t rte_gro_reassemble(struct rte_mbuf ** pkts, uint16_t nb_pkts, void * ctx)'/>
