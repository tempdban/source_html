<dec f='dpdk_18.05/drivers/event/opdl/opdl_ring.h' l='83' type='struct opdl_ring * opdl_ring_create(const char * name, uint32_t num_slots, uint32_t slot_size, uint32_t max_num_stages, int socket)'/>
<doc f='dpdk_18.05/drivers/event/opdl/opdl_ring.h' l='60'>/**
 * Create a new instance of a opdl_ring.
 *
 * @param name
 *   String containing the name to give the new opdl_ring instance.
 * @param num_slots
 *   How many slots the opdl_ring contains. Must be a power a 2!
 * @param slot_size
 *   How many bytes in each slot.
 * @param max_num_stages
 *   Maximum number of stages.
 * @param socket
 *   The NUMA socket (or SOCKET_ID_ANY) to allocate the memory used for this
 *   opdl_ring instance.
 * @param threadsafe
 *   Whether to support multiple threads inputting to the opdl_ring or not.
 *   Enabling this may have a negative impact on performance if only one thread
 *   will be inputting.
 *
 * @return
 *   A pointer to a new opdl_ring instance, or NULL on error.
 */</doc>
<use f='dpdk_18.05/drivers/event/opdl/opdl_evdev_init.c' l='558' u='c' c='create_opdl'/>
<def f='dpdk_18.05/drivers/event/opdl/opdl_ring.c' l='897' ll='966' type='struct opdl_ring * opdl_ring_create(const char * name, uint32_t num_slots, uint32_t slot_size, uint32_t max_num_stages, int socket)'/>
