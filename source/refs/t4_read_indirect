<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/common.h' l='382' type='void t4_read_indirect(struct adapter * adap, unsigned int addr_reg, unsigned int data_reg, u32 * vals, unsigned int nregs, unsigned int start_idx)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/t4_hw.c' l='212' ll='221' type='void t4_read_indirect(struct adapter * adap, unsigned int addr_reg, unsigned int data_reg, u32 * vals, unsigned int nregs, unsigned int start_idx)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/t4_hw.c' l='4612' u='c' c='t4_init_tp_params'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/t4_hw.c' l='4614' u='c' c='t4_init_tp_params'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/cxgbe/base/t4_hw.c' l='200'>/**
 * t4_read_indirect - read indirectly addressed registers
 * @adap: the adapter
 * @addr_reg: register holding the indirect address
 * @data_reg: register holding the value of the indirect register
 * @vals: where the read register values are stored
 * @nregs: how many indirect registers to read
 * @start_idx: index of first indirect register to read
 *
 * Reads registers that are accessed indirectly through an address/data
 * register pair.
 */</doc>
