<def f='dpdk_18.05/lib/librte_ring/rte_ring.h' l='576' ll='582' type='unsigned int rte_ring_sc_dequeue_bulk(struct rte_ring * r, void ** obj_table, unsigned int n, unsigned int * available)'/>
<use f='dpdk_18.05/lib/librte_ring/rte_ring.h' l='647' u='c' c='rte_ring_sc_dequeue'/>
<doc f='dpdk_18.05/lib/librte_ring/rte_ring.h' l='560'>/**
 * Dequeue several objects from a ring (NOT multi-consumers safe).
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj_table
 *   A pointer to a table of void * pointers (objects) that will be filled.
 * @param n
 *   The number of objects to dequeue from the ring to the obj_table,
 *   must be strictly positive.
 * @param available
 *   If non-NULL, returns the number of remaining ring entries after the
 *   dequeue has finished.
 * @return
 *   The number of objects dequeued, either 0 or n
 */</doc>
<use f='dpdk_18.05/drivers/crypto/scheduler/scheduler_pmd_private.h' l='122' u='c' c='scheduler_order_drain'/>
<use f='dpdk_18.05/drivers/crypto/scheduler/scheduler_multicore.c' l='133' u='c' c='schedule_dequeue_ordering'/>
<use f='dpdk_18.05/drivers/mempool/ring/rte_mempool_ring.c' l='38' u='c' c='common_ring_sc_dequeue'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ring/rte_ring.h' l='580' ll='586' type='unsigned int rte_ring_sc_dequeue_bulk(struct rte_ring * r, void ** obj_table, unsigned int n, unsigned int * available)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ring/rte_ring.h' l='651' u='c' c='rte_ring_sc_dequeue'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ring/rte_ring.h' l='564'>/**
 * Dequeue several objects from a ring (NOT multi-consumers safe).
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj_table
 *   A pointer to a table of void * pointers (objects) that will be filled.
 * @param n
 *   The number of objects to dequeue from the ring to the obj_table,
 *   must be strictly positive.
 * @param available
 *   If non-NULL, returns the number of remaining ring entries after the
 *   dequeue has finished.
 * @return
 *   The number of objects dequeued, either 0 or n
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/scheduler/scheduler_pmd_private.h' l='122' u='c' c='scheduler_order_drain'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/crypto/scheduler/scheduler_multicore.c' l='133' u='c' c='schedule_dequeue_ordering'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/mempool/ring/rte_mempool_ring.c' l='38' u='c' c='common_ring_sc_dequeue'/>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ring.h' l='580' ll='586' type='unsigned int rte_ring_sc_dequeue_bulk(struct rte_ring * r, void ** obj_table, unsigned int n, unsigned int * available)'/>
<use f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ring.h' l='651' u='c' c='rte_ring_sc_dequeue'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ring.h' l='564'>/**
 * Dequeue several objects from a ring (NOT multi-consumers safe).
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj_table
 *   A pointer to a table of void * pointers (objects) that will be filled.
 * @param n
 *   The number of objects to dequeue from the ring to the obj_table,
 *   must be strictly positive.
 * @param available
 *   If non-NULL, returns the number of remaining ring entries after the
 *   dequeue has finished.
 * @return
 *   The number of objects dequeued, either 0 or n
 */</doc>
