<dec f='dpdk_18.05/lib/librte_hash/rte_hash.h' l='398' type='int rte_hash_lookup_bulk(const struct rte_hash * h, const void ** keys, uint32_t num_keys, int32_t * positions)'/>
<doc f='dpdk_18.05/lib/librte_hash/rte_hash.h' l='378'>/**
 * Find multiple keys in the hash table.
 * This operation is multi-thread safe.
 *
 * @param h
 *   Hash table to look in.
 * @param keys
 *   A pointer to a list of keys to look for.
 * @param num_keys
 *   How many keys are in the keys list (less than RTE_HASH_LOOKUP_BULK_MAX).
 * @param positions
 *   Output containing a list of values, corresponding to the list of keys that
 *   can be used by the caller as an offset into an array of user data. These
 *   values are unique for each key, and are the same values that were returned
 *   when each key was added. If a key in the list was not found, then -ENOENT
 *   will be the value.
 * @return
 *   -EINVAL if there&apos;s an error, otherwise 0.
 */</doc>
<def f='dpdk_18.05/lib/librte_hash/rte_cuckoo_hash.c' l='1095' ll='1105' type='int rte_hash_lookup_bulk(const struct rte_hash * h, const void ** keys, uint32_t num_keys, int32_t * positions)'/>
<use f='dpdk_18.05/lib/librte_table/rte_table_hash_cuckoo.c' l='256' u='c' c='rte_table_hash_cuckoo_lookup'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_hash.h' l='398' type='int rte_hash_lookup_bulk(const struct rte_hash * h, const void ** keys, uint32_t num_keys, int32_t * positions)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_hash.h' l='378'>/**
 * Find multiple keys in the hash table.
 * This operation is multi-thread safe.
 *
 * @param h
 *   Hash table to look in.
 * @param keys
 *   A pointer to a list of keys to look for.
 * @param num_keys
 *   How many keys are in the keys list (less than RTE_HASH_LOOKUP_BULK_MAX).
 * @param positions
 *   Output containing a list of values, corresponding to the list of keys that
 *   can be used by the caller as an offset into an array of user data. These
 *   values are unique for each key, and are the same values that were returned
 *   when each key was added. If a key in the list was not found, then -ENOENT
 *   will be the value.
 * @return
 *   -EINVAL if there&apos;s an error, otherwise 0.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_hash/rte_cuckoo_hash.c' l='1093' ll='1103' type='int rte_hash_lookup_bulk(const struct rte_hash * h, const void ** keys, uint32_t num_keys, int32_t * positions)'/>
