<dec f='dpdk/lib/librte_eal/common/include/rte_malloc.h' l='249' type='int rte_malloc_validate(const void * ptr, size_t * size)'/>
<doc f='dpdk/lib/librte_eal/common/include/rte_malloc.h' l='231'>/**
 * If malloc debug is enabled, check a memory block for header
 * and trailer markers to indicate that all is well with the block.
 * If size is non-null, also return the size of the block.
 *
 * @param ptr
 *   pointer to the start of a data block, must have been returned
 *   by a previous call to rte_malloc(), rte_zmalloc(), rte_calloc()
 *   or rte_realloc()
 * @param size
 *   if non-null, and memory block pointer is valid, returns the size
 *   of the memory block
 * @return
 *   -1 on error, invalid pointer passed or header and trailer markers
 *   are missing or corrupted
 *   0 on success
 */</doc>
<def f='dpdk/lib/librte_eal/common/rte_malloc.c' l='136' ll='145' type='int rte_malloc_validate(const void * ptr, size_t * size)'/>
