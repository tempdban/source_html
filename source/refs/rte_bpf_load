<dec f='dpdk/lib/librte_bpf/rte_bpf.h' l='119' type='struct rte_bpf * rte_bpf_load(const struct rte_bpf_prm * prm)'/>
<doc f='dpdk/lib/librte_bpf/rte_bpf.h' l='106'>/**
 * Create a new eBPF execution context and load given BPF code into it.
 *
 * @param prm
 *  Parameters used to create and initialise the BPF exeution context.
 * @return
 *   BPF handle that is used in future BPF operations,
 *   or NULL on error, with error code set in rte_errno.
 *   Possible rte_errno errors include:
 *   - EINVAL - invalid parameter passed to function
 *   - ENOMEM - can&apos;t reserve enough memory
 */</doc>
<def f='dpdk/lib/librte_bpf/bpf_load.c' l='54' ll='85' macro='1' type='struct rte_bpf * rte_bpf_load(const struct rte_bpf_prm * prm)'/>
