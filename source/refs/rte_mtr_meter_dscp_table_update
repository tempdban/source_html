<dec f='dpdk/lib/librte_ethdev/rte_mtr.h' l='637' type='int rte_mtr_meter_dscp_table_update(uint16_t port_id, uint32_t mtr_id, enum rte_mtr_color * dscp_table, struct rte_mtr_error * error)'/>
<use f='dpdk/app/test-pmd/cmdline_mtr.c' l='1154' u='c' c='cmd_set_port_meter_dscp_table_parsed'/>
<doc f='dpdk/lib/librte_ethdev/rte_mtr.h' l='618'>/**
 * MTR object DSCP table update
 *
 * @param[in] port_id
 *   The port identifier of the Ethernet device.
 * @param[in] mtr_id
 *   MTR object ID. Needs to be valid.
 * @param[in] dscp_table
 *   When non-NULL: it points to a pre-allocated and pre-populated table with
 *   exactly 64 elements providing the input color for each value of the
 *   IPv4/IPv6 Differentiated Services Code Point (DSCP) input packet field.
 *   When NULL: it is equivalent to setting this parameter to an “all-green”
 *   populated table (i.e. table with all the 64 elements set to green color).
 * @param[out] error
 *   Error details. Filled in only on error, when not NULL.
 * @return
 *   0 on success, non-zero error code otherwise.
 */</doc>
<def f='dpdk/lib/librte_ethdev/rte_mtr.c' l='153' ll='162' type='int rte_mtr_meter_dscp_table_update(uint16_t port_id, uint32_t mtr_id, enum rte_mtr_color * dscp_table, struct rte_mtr_error * error)'/>
<doc f='dpdk/lib/librte_ethdev/rte_mtr.c' l='152'>/** MTR object meter DSCP table update */</doc>
