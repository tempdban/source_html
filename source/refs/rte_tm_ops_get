<dec f='dpdk/lib/librte_ethdev/rte_tm_driver.h' l='331' type='const struct rte_tm_ops * rte_tm_ops_get(uint16_t port_id, struct rte_tm_error * error)'/>
<doc f='dpdk/lib/librte_ethdev/rte_tm_driver.h' l='318'>/**
 * Get generic traffic manager operations structure from a port
 *
 * @param[in] port_id
 *   The port identifier of the Ethernet device.
 * @param[out] error
 *   Error details
 *
 * @return
 *   The traffic manager operations structure associated with port_id on
 *   success, NULL otherwise.
 */</doc>
<def f='dpdk/lib/librte_ethdev/rte_tm.c' l='13' ll='40' type='const struct rte_tm_ops * rte_tm_ops_get(uint16_t port_id, struct rte_tm_error * error)'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='67' u='c' c='rte_tm_get_number_of_leaf_nodes'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_type_get'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_capabilities_get'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_level_capabilities_get'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_capabilities_get'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_wred_profile_add'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_wred_profile_delete'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_shared_wred_context_add_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_shared_wred_context_delete'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_shaper_profile_add'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_shaper_profile_delete'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_shared_shaper_add_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_shared_shaper_delete'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_add'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_delete'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_suspend'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_resume'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_hierarchy_commit'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_parent_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_shaper_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_shared_shaper_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_stats_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_wfq_weight_mode_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_cman_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_wred_context_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_shared_wred_context_update'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_node_stats_read'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_mark_vlan_dei'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_mark_ip_ecn'/>
<use f='dpdk/lib/librte_ethdev/rte_tm.c' l='45' u='c' c='rte_tm_mark_ip_dscp'/>
<doc f='dpdk/lib/librte_ethdev/rte_tm.c' l='12'>/* Get generic traffic manager operations structure from a port. */</doc>
