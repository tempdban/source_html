<def f='include/c++/4.8.2/bits/stl_set.h' l='218' ll='222' type='void std::set::set&lt;_Key, _Compare, _Alloc&gt;(initializer_list&lt;std::set::value_type&gt; __l, const _Compare &amp; __comp = _Compare(), const std::set::allocator_type &amp; __a = std::set::allocator_type())'/>
<doc f='include/c++/4.8.2/bits/stl_set.h' l='208'>/**
       *  @brief  Builds a %set from an initializer_list.
       *  @param  __l  An initializer_list.
       *  @param  __comp  A comparison functor.
       *  @param  __a  An allocator object.
       *
       *  Create a %set consisting of copies of the elements in the list.
       *  This is linear in N if the list is already sorted, and NlogN
       *  otherwise (where N is @a __l.size()).
       */</doc>
<use f='vpp_1804/src/vpp-api/vom/route.cpp' l='237' u='c' c='_ZN3VOM5route8ip_routeC1ERKNS0_8prefix_tERKNS0_4pathE'/>
<use f='vpp_1804/src/vpp-api/vom/route.cpp' l='271' u='c' c='_ZN3VOM5route8ip_routeC1ERKNS_12route_domainERKNS0_8prefix_tERKNS0_4pathE'/>
