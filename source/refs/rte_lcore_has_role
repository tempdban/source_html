<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_lcore.h' l='317' type='int rte_lcore_has_role(unsigned int lcore_id, enum rte_lcore_role_t role)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_lcore.h' l='305'>/**
 * Test if the core supplied has a specific role
 *
 * @param lcore_id
 *   The identifier of the lcore, which MUST be between 0 and
 *   RTE_MAX_LCORE-1.
 * @param role
 *   The role to be checked against.
 * @return
 *   Boolean value: positive if test is true; otherwise returns 0.
 */</doc>
<def f='dpdk_18.05/lib/librte_eal/common/eal_common_thread.c' l='29' ll='38' type='int rte_lcore_has_role(unsigned int lcore_id, enum rte_lcore_role_t role)'/>
<use f='dpdk_18.05/lib/librte_eal/common/eal_common_thread.c' l='201' u='c' c='rte_ctrl_thread_create'/>
<use f='dpdk_18.05/lib/librte_timer/rte_timer.c' l='406' u='c' c='rte_timer_reset'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_lcore.h' l='261' type='int rte_lcore_has_role(unsigned int lcore_id, enum rte_lcore_role_t role)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/include/rte_lcore.h' l='249'>/**
 * Test if the core supplied has a specific role
 *
 * @param lcore_id
 *   The identifier of the lcore, which MUST be between 0 and
 *   RTE_MAX_LCORE-1.
 * @param role
 *   The role to be checked against.
 * @return
 *   On success, return 0; otherwise return a negative value.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_eal/common/eal_common_thread.c' l='27' ll='39' type='int rte_lcore_has_role(unsigned int lcore_id, enum rte_lcore_role_t role)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_lcore.h' l='261' type='int rte_lcore_has_role(unsigned int lcore_id, enum rte_lcore_role_t role)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_lcore.h' l='249'>/**
 * Test if the core supplied has a specific role
 *
 * @param lcore_id
 *   The identifier of the lcore, which MUST be between 0 and
 *   RTE_MAX_LCORE-1.
 * @param role
 *   The role to be checked against.
 * @return
 *   On success, return 0; otherwise return a negative value.
 */</doc>
