<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_interrupts.h' l='43' type='int rte_intr_callback_register(const struct rte_intr_handle * intr_handle, rte_intr_callback_fn cb, void * cb_arg)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_interrupts.h' l='29'>/**
 * It registers the callback for the specific interrupt. Multiple
 * callbacks cal be registered at the same time.
 * @param intr_handle
 *  Pointer to the interrupt handle.
 * @param cb
 *  callback address.
 * @param cb_arg
 *  address of parameter for callback.
 *
 * @return
 *  - On success, zero.
 *  - On failure, a negative value.
 */</doc>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev.c' l='1442' u='c' c='eth_i40e_dev_init'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev.c' l='2314' u='c' c='i40e_dev_stop'/>
<use f='dpdk_18.05/drivers/net/i40e/i40e_ethdev_vf.c' l='1446' u='c' c='i40evf_dev_init'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_ethdev.c' l='1254' u='c' c='eth_ixgbe_dev_init'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_ethdev.c' l='1676' u='c' c='eth_ixgbevf_dev_init'/>
<use f='dpdk_18.05/drivers/net/ixgbe/ixgbe_ethdev.c' l='2827' u='c' c='ixgbe_dev_stop'/>
<use f='dpdk_18.05/drivers/net/tap/rte_eth_tap.c' l='1242' u='c' c='tap_lsc_intr_handle_set'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_ethdev.c' l='1411' u='c' c='virtio_configure_intr'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_ethdev.c' l='1679' u='c' c='eth_virtio_dev_init'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_user_ethdev.c' l='83' u='c' c='virtio_user_server_reconnect'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_user_ethdev.c' l='114' u='c' c='virtio_user_delayed_handler'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_alarm.c' l='139' u='c' c='rte_eal_alarm_set'/>
<use f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_dev.c' l='193' u='c' c='rte_dev_event_monitor_start'/>
<def f='dpdk_18.05/lib/librte_eal/linuxapp/eal/eal_interrupts.c' l='390' ll='460' type='int rte_intr_callback_register(const struct rte_intr_handle * intr_handle, rte_intr_callback_fn cb, void * cb_arg)'/>
