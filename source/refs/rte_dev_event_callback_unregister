<dec f='dpdk_18.05/lib/librte_eal/common/include/rte_dev.h' l='336' type='int rte_dev_event_callback_unregister(const char * device_name, rte_dev_event_cb_fn cb_fn, void * cb_arg)'/>
<doc f='dpdk_18.05/lib/librte_eal/common/include/rte_dev.h' l='316'>/**
 * @warning
 * @b EXPERIMENTAL: this API may change without prior notice
 *
 * It unregisters the callback according to the specified device.
 *
 * @param device_name
 *  The device name, that is the param name of the struct rte_device,
 *  null value means for all devices and their callbacks.
 * @param cb_fn
 *  callback address.
 * @param cb_arg
 *  address of parameter for callback, (void *)-1 means to remove all
 *  registered which has the same callback address.
 *
 * @return
 *  - On success, return the number of callback entities removed.
 *  - On failure, a negative value.
 */</doc>
<use f='dpdk_18.05/app/test-pmd/testpmd.c' l='1941' u='c' c='eth_dev_event_callback_unregister'/>
<def f='dpdk_18.05/lib/librte_eal/common/eal_common_dev.c' l='277' ll='320' type='int rte_dev_event_callback_unregister(const char * device_name, rte_dev_event_cb_fn cb_fn, void * cb_arg)'/>
