<def f='dpdk_18.05/lib/librte_ring/rte_ring.h' l='490' ll='494' type='int rte_ring_mp_enqueue(struct rte_ring * r, void * obj)'/>
<doc f='dpdk_18.05/lib/librte_ring/rte_ring.h' l='476'>/**
 * Enqueue one object on a ring (multi-producers safe).
 *
 * This function uses a &quot;compare and set&quot; instruction to move the
 * producer index atomically.
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj
 *   A pointer to the object to be added.
 * @return
 *   - 0: Success; objects enqueued.
 *   - -ENOBUFS: Not enough room in the ring to enqueue; no object is enqueued.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ring/rte_ring.h' l='494' ll='498' type='int rte_ring_mp_enqueue(struct rte_ring * r, void * obj)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ring/rte_ring.h' l='480'>/**
 * Enqueue one object on a ring (multi-producers safe).
 *
 * This function uses a &quot;compare and set&quot; instruction to move the
 * producer index atomically.
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj
 *   A pointer to the object to be added.
 * @return
 *   - 0: Success; objects enqueued.
 *   - -ENOBUFS: Not enough room in the ring to enqueue; no object is enqueued.
 */</doc>
<def f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ring.h' l='494' ll='498' type='int rte_ring_mp_enqueue(struct rte_ring * r, void * obj)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ring.h' l='480'>/**
 * Enqueue one object on a ring (multi-producers safe).
 *
 * This function uses a &quot;compare and set&quot; instruction to move the
 * producer index atomically.
 *
 * @param r
 *   A pointer to the ring structure.
 * @param obj
 *   A pointer to the object to be added.
 * @return
 *   - 0: Success; objects enqueued.
 *   - -ENOBUFS: Not enough room in the ring to enqueue; no object is enqueued.
 */</doc>
