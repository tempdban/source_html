<dec f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.h' l='47' type='s32 e1000_setup_led(struct e1000_hw * hw)'/>
<def f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.c' l='475' ll='481' type='s32 e1000_setup_led(struct e1000_hw * hw)'/>
<doc f='dpdk_18.05/kernel/linux/kni/ethtool/igb/e1000_api.c' l='467'>/**
 *  e1000_setup_led - Configures SW controllable LED
 *  @hw: pointer to the HW structure
 *
 *  This prepares the SW controllable LED for use and saves the current state
 *  of the LED so it can be later restored. This is a function pointer entry
 *  point called by drivers.
 **/</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_api.h' l='75' type='s32 e1000_setup_led(struct e1000_hw * hw)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_api.c' l='711' ll='717' type='s32 e1000_setup_led(struct e1000_hw * hw)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_api.c' l='703'>/**
 *  e1000_setup_led - Configures SW controllable LED
 *  @hw: pointer to the HW structure
 *
 *  This prepares the SW controllable LED for use and saves the current state
 *  of the LED so it can be later restored. This is a function pointer entry
 *  point called by drivers.
 **/</doc>
