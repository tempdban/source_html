<dec f='dpdk_18.05/lib/librte_rawdev/rte_rawdev.h' l='387' type='int rte_rawdev_enqueue_buffers(uint16_t dev_id, struct rte_rawdev_buf ** buffers, unsigned int count, rte_rawdev_obj_t context)'/>
<doc f='dpdk_18.05/lib/librte_rawdev/rte_rawdev.h' l='365'>/**
 * Enqueue a stream of buffers to the device.
 *
 * Rather than specifying a queue, this API passes along an opaque object
 * to the driver implementation. That object can be a queue or any other
 * contextual information necessary for the device to enqueue buffers.
 *
 * @param dev_id
 *   The identifier of the device to configure.
 * @param buffers
 *   Collection of buffers for enqueueing
 * @param count
 *   Count of buffers to enqueue
 * @param context
 *   Opaque context information.
 * @return
 *   &gt;=0 for buffers enqueued
 *  !0 for failure.
 *  Whether partial enqueue is failure or success is defined between app
 *  and driver implementation.
 */</doc>
<use f='dpdk_18.05/drivers/raw/skeleton_rawdev/skeleton_rawdev_test.c' l='360' u='c' c='test_rawdev_enqdeq'/>
<def f='dpdk_18.05/lib/librte_rawdev/rte_rawdev.c' l='203' ll='216' type='int rte_rawdev_enqueue_buffers(uint16_t dev_id, struct rte_rawdev_buf ** buffers, unsigned int count, rte_rawdev_obj_t context)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_rawdev/rte_rawdev.h' l='387' type='int rte_rawdev_enqueue_buffers(uint16_t dev_id, struct rte_rawdev_buf ** buffers, unsigned int count, rte_rawdev_obj_t context)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_rawdev/rte_rawdev.h' l='365'>/**
 * Enqueue a stream of buffers to the device.
 *
 * Rather than specifying a queue, this API passes along an opaque object
 * to the driver implementation. That object can be a queue or any other
 * contextual information necessary for the device to enqueue buffers.
 *
 * @param dev_id
 *   The identifier of the device to configure.
 * @param buffers
 *   Collection of buffers for enqueueing
 * @param count
 *   Count of buffers to enqueue
 * @param context
 *   Opaque context information.
 * @return
 *   &gt;=0 for buffers enqueued
 *  !0 for failure.
 *  Whether partial enqueue is failure or success is defined between app
 *  and driver implementation.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/raw/skeleton_rawdev/skeleton_rawdev_test.c' l='359' u='c' c='test_rawdev_enqdeq'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_rawdev/rte_rawdev.c' l='206' ll='219' type='int rte_rawdev_enqueue_buffers(uint16_t dev_id, struct rte_rawdev_buf ** buffers, unsigned int count, rte_rawdev_obj_t context)'/>
