<dec f='dpdk/lib/librte_efd/rte_efd.h' l='164' type='struct rte_efd_table * rte_efd_find_existing(const char * name)'/>
<def f='dpdk/lib/librte_efd/rte_efd.c' l='712' ll='736' type='struct rte_efd_table * rte_efd_find_existing(const char * name)'/>
<doc f='dpdk/lib/librte_efd/rte_efd.h' l='153'>/**
 * Find an existing EFD table object and return a pointer to it.
 *
 * @param name
 *   Name of the EFD table as passed to rte_efd_create()
 * @return
 *   Pointer to EFD table or NULL if object not found
 *   with rte_errno set appropriately. Possible rte_errno values include:
 *    - ENOENT - value not available for return
 */</doc>
