<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_int.h' l='137' type='enum _ecore_status_t ecore_int_register_cb(struct ecore_hwfn * p_hwfn, ecore_int_comp_cb_t comp_cb, void * cookie, u8 * sb_idx, __le16 ** p_fw_cons)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_int.h' l='117'>/**
 * @brief ecore_int_register_cb - Register callback func for
 *      slowhwfn statusblock.
 *
 *	Every protocol that uses the slowhwfn status block
 *	should register a callback function that will be called
 *	once there is an update of the sp status block.
 *
 * @param p_hwfn
 * @param comp_cb - function to be called when there is an
 *                  interrupt on the sp sb
 *
 * @param cookie  - passed to the callback function
 * @param sb_idx  - OUT parameter which gives the chosen index
 *                  for this protocol.
 * @param p_fw_cons  - pointer to the actual address of the
 *                     consumer for this protocol.
 *
 * @return enum _ecore_status_t
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_int.c' l='1822' ll='1845' type='enum _ecore_status_t ecore_int_register_cb(struct ecore_hwfn * p_hwfn, ecore_int_comp_cb_t comp_cb, void * cookie, u8 * sb_idx, __le16 ** p_fw_cons)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/qede/base/ecore_spq.c' l='410' u='c' c='ecore_eq_alloc'/>
