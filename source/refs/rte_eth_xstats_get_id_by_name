<dec f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='2123' type='int rte_eth_xstats_get_id_by_name(uint16_t port_id, const char * xstat_name, uint64_t * id)'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='2105'>/**
 * Gets the ID of a statistic from its name.
 *
 * This function searches for the statistics using string compares, and
 * as such should not be used on the fast-path. For fast-path retrieval of
 * specific statistics, store the ID as provided in *id* from this function,
 * and pass the ID to rte_eth_xstats_get()
 *
 * @param port_id The port to look up statistics from
 * @param xstat_name The name of the statistic to return
 * @param[out] id A pointer to an app-supplied uint64_t which should be
 *                set to the ID of the stat if the stat exists.
 * @return
 *    0 on success
 *    -ENODEV for invalid port_id,
 *    -EIO if device is removed,
 *    -EINVAL if the xstat_name doesn&apos;t exist in port_id
 */</doc>
<use f='dpdk_18.05/app/proc-info/main.c' l='392' u='c' c='nic_xstats_by_name_display'/>
<def f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='2003' ll='2045' type='int rte_eth_xstats_get_id_by_name(uint16_t port_id, const char * xstat_name, uint64_t * id)'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.h' l='2009' type='int rte_eth_xstats_get_id_by_name(uint16_t port_id, const char * xstat_name, uint64_t * id)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.h' l='1991'>/**
 * Gets the ID of a statistic from its name.
 *
 * This function searches for the statistics using string compares, and
 * as such should not be used on the fast-path. For fast-path retrieval of
 * specific statistics, store the ID as provided in *id* from this function,
 * and pass the ID to rte_eth_xstats_get()
 *
 * @param port_id The port to look up statistics from
 * @param xstat_name The name of the statistic to return
 * @param[out] id A pointer to an app-supplied uint64_t which should be
 *                set to the ID of the stat if the stat exists.
 * @return
 *    0 on success
 *    -ENODEV for invalid port_id,
 *    -EIO if device is removed,
 *    -EINVAL if the xstat_name doesn&apos;t exist in port_id
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/proc_info/main.c' l='392' u='c' c='nic_xstats_by_name_display'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_ethdev.c' l='1889' ll='1931' type='int rte_eth_xstats_get_id_by_name(uint16_t port_id, const char * xstat_name, uint64_t * id)'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ethdev.h' l='2009' type='int rte_eth_xstats_get_id_by_name(uint16_t port_id, const char * xstat_name, uint64_t * id)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_ethdev.h' l='1991'>/**
 * Gets the ID of a statistic from its name.
 *
 * This function searches for the statistics using string compares, and
 * as such should not be used on the fast-path. For fast-path retrieval of
 * specific statistics, store the ID as provided in *id* from this function,
 * and pass the ID to rte_eth_xstats_get()
 *
 * @param port_id The port to look up statistics from
 * @param xstat_name The name of the statistic to return
 * @param[out] id A pointer to an app-supplied uint64_t which should be
 *                set to the ID of the stat if the stat exists.
 * @return
 *    0 on success
 *    -ENODEV for invalid port_id,
 *    -EIO if device is removed,
 *    -EINVAL if the xstat_name doesn&apos;t exist in port_id
 */</doc>
