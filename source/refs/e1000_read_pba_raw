<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_nvm.h' l='72' type='s32 e1000_read_pba_raw(struct e1000_hw * hw, u16 * eeprom_buf, u32 eeprom_buf_size, u16 max_pba_block_size, struct e1000_pba * pba)'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_nvm.c' l='984' ll='1040' type='s32 e1000_read_pba_raw(struct e1000_hw * hw, u16 * eeprom_buf, u32 eeprom_buf_size, u16 max_pba_block_size, struct e1000_pba * pba)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/e1000/base/e1000_nvm.c' l='972'>/**
 *  e1000_read_pba_raw
 *  @hw: pointer to the HW structure
 *  @eeprom_buf: optional pointer to EEPROM image
 *  @eeprom_buf_size: size of EEPROM image in words
 *  @max_pba_block_size: PBA block size limit
 *  @pba: pointer to output PBA structure
 *
 *  Reads PBA from EEPROM image when eeprom_buf is not NULL.
 *  Reads PBA from physical EEPROM device when eeprom_buf is NULL.
 *
 **/</doc>
