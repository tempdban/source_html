<dec f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='1568' type='int rte_eth_dev_configure(uint16_t port_id, uint16_t nb_rx_queue, uint16_t nb_tx_queue, const struct rte_eth_conf * eth_conf)'/>
<use f='dpdk_18.05/app/pdump/main.c' l='537' u='c' c='configure_vdev'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.h' l='1531'>/**
 * Configure an Ethernet device.
 * This function must be invoked first before any other function in the
 * Ethernet API. This function can also be re-invoked when a device is in the
 * stopped state.
 *
 * @param port_id
 *   The port identifier of the Ethernet device to configure.
 * @param nb_rx_queue
 *   The number of receive queues to set up for the Ethernet device.
 * @param nb_tx_queue
 *   The number of transmit queues to set up for the Ethernet device.
 * @param eth_conf
 *   The pointer to the configuration data to be used for the Ethernet device.
 *   The *rte_eth_conf* structure includes:
 *     -  the hardware offload features to activate, with dedicated fields for
 *        each statically configurable offload hardware feature provided by
 *        Ethernet devices, such as IP checksum or VLAN tag stripping for
 *        example.
 *        The Rx offload bitfield API is obsolete and will be deprecated.
 *        Applications should set the ignore_bitfield_offloads bit on *rxmode*
 *        structure and use offloads field to set per-port offloads instead.
 *     -  Any offloading set in eth_conf-&gt;[rt]xmode.offloads must be within
 *        the [rt]x_offload_capa returned from rte_eth_dev_infos_get().
 *        Any type of device supported offloading set in the input argument
 *        eth_conf-&gt;[rt]xmode.offloads to rte_eth_dev_configure() is enabled
 *        on all queues and it can&apos;t be disabled in rte_eth_[rt]x_queue_setup().
 *     - the Receive Side Scaling (RSS) configuration when using multiple RX
 *         queues per port.
 *
 *   Embedding all configuration information in a single data structure
 *   is the more flexible method that allows the addition of new features
 *   without changing the syntax of the API.
 * @return
 *   - 0: Success, device configured.
 *   - &lt;0: Error code returned by the driver configuration function.
 */</doc>
<use f='dpdk_18.05/app/test-eventdev/test_perf_common.c' l='710' u='c' c='perf_ethdev_setup'/>
<use f='dpdk_18.05/app/test-eventdev/test_pipeline_common.c' l='252' u='c' c='pipeline_ethdev_setup'/>
<use f='dpdk_18.05/app/test-pmd/testpmd.c' l='1631' u='c' c='start_port'/>
<use f='dpdk_18.05/app/test-pmd/testpmd.c' l='2539' u='c' c='init_port_dcb_config'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='1837' u='c' c='slave_configure'/>
<use f='dpdk_18.05/drivers/net/failsafe/failsafe_ops.c' l='130' u='c' c='fs_dev_configure'/>
<def f='dpdk_18.05/lib/librte_ethdev/rte_ethdev.c' l='1040' ll='1237' type='int rte_eth_dev_configure(uint16_t port_id, uint16_t nb_rx_q, uint16_t nb_tx_q, const struct rte_eth_conf * dev_conf)'/>
