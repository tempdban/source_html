<dec f='dpdk_18.05/drivers/bus/pci/rte_bus_pci.h' l='307' type='void rte_pci_ioport_write(struct rte_pci_ioport * p, const void * data, size_t len, off_t offset)'/>
<doc f='dpdk_18.05/drivers/bus/pci/rte_bus_pci.h' l='295'>/**
 * Write to a io pci resource.
 *
 * @param p
 *   The rte_pci_ioport object to which we want to write.
 * @param data
 *   A data buffer where the bytes should be read into
 * @param len
 *   The length of the data buffer.
 * @param offset
 *   The offset into the pci io resource.
 */</doc>
<def f='dpdk_18.05/drivers/bus/pci/linux/pci.c' l='845' ll='869' type='void rte_pci_ioport_write(struct rte_pci_ioport * p, const void * data, size_t len, off_t offset)'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='128' u='c' c='legacy_write_dev_config'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='150' u='c' c='legacy_set_features'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='166' u='c' c='legacy_set_status'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='190' u='c' c='legacy_set_config_irq'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='200' u='c' c='legacy_set_queue_irq'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='202' u='c' c='legacy_set_queue_irq'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='212' u='c' c='legacy_get_queue_num'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='225' u='c' c='legacy_setup_queue'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='228' u='c' c='legacy_setup_queue'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='238' u='c' c='legacy_del_queue'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='240' u='c' c='legacy_del_queue'/>
<use f='dpdk_18.05/drivers/net/virtio/virtio_pci.c' l='246' u='c' c='legacy_notify_queue'/>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/bus/pci/rte_bus_pci.h' l='304' type='void rte_pci_ioport_write(struct rte_pci_ioport * p, const void * data, size_t len, off_t offset)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/bus/pci/rte_bus_pci.h' l='292'>/**
 * Write to a io pci resource.
 *
 * @param p
 *   The rte_pci_ioport object to which we want to write.
 * @param data
 *   A data buffer where the bytes should be read into
 * @param len
 *   The length of the data buffer.
 * @param offset
 *   The offset into the pci io resource.
 */</doc>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/bus/pci/linux/pci.c' l='840' ll='864' type='void rte_pci_ioport_write(struct rte_pci_ioport * p, const void * data, size_t len, off_t offset)'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='128' u='c' c='legacy_write_dev_config'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='150' u='c' c='legacy_set_features'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='166' u='c' c='legacy_set_status'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='190' u='c' c='legacy_set_config_irq'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='200' u='c' c='legacy_set_queue_irq'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='202' u='c' c='legacy_set_queue_irq'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='212' u='c' c='legacy_get_queue_num'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='225' u='c' c='legacy_setup_queue'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='228' u='c' c='legacy_setup_queue'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='238' u='c' c='legacy_del_queue'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='240' u='c' c='legacy_del_queue'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/virtio/virtio_pci.c' l='246' u='c' c='legacy_notify_queue'/>
<dec f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_bus_pci.h' l='304' type='void rte_pci_ioport_write(struct rte_pci_ioport * p, const void * data, size_t len, off_t offset)'/>
<doc f='vpp_1804/build-root/install-vpp_debug-native/dpdk/include/dpdk/rte_bus_pci.h' l='292'>/**
 * Write to a io pci resource.
 *
 * @param p
 *   The rte_pci_ioport object to which we want to write.
 * @param data
 *   A data buffer where the bytes should be read into
 * @param len
 *   The length of the data buffer.
 * @param offset
 *   The offset into the pci io resource.
 */</doc>
