<dec f='dpdk_18.05/lib/librte_ethdev/rte_flow.h' l='2041' type='int rte_flow_destroy(uint16_t port_id, struct rte_flow * flow, struct rte_flow_error * error)'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_flow.h' l='2020'>/**
 * Destroy a flow rule on a given port.
 *
 * Failure to destroy a flow rule handle may occur when other flow rules
 * depend on it, and destroying it would result in an inconsistent state.
 *
 * This function is only guaranteed to succeed if handles are destroyed in
 * reverse order of their creation.
 *
 * @param port_id
 *   Port identifier of Ethernet device.
 * @param flow
 *   Flow rule handle to destroy.
 * @param[out] error
 *   Perform verbose error reporting if not NULL. PMDs initialize this
 *   structure in case of error only.
 *
 * @return
 *   0 on success, a negative errno value otherwise and rte_errno is set.
 */</doc>
<use f='dpdk_18.05/app/test-pmd/config.c' l='1388' u='c' c='port_flow_create'/>
<use f='dpdk_18.05/app/test-pmd/config.c' l='1399' u='c' c='port_flow_create'/>
<use f='dpdk_18.05/app/test-pmd/config.c' l='1438' u='c' c='port_flow_destroy'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_api.c' l='260' u='c' c='slave_rte_flow_prepare'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_api.c' l='500' u='c' c='__eth_bond_slave_remove_lock_free'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_flow.c' l='98' u='c' c='bond_flow_create'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_flow.c' l='118' u='c' c='bond_flow_destroy'/>
<use f='dpdk_18.05/drivers/net/bonding/rte_eth_bond_pmd.c' l='1893' u='c' c='slave_configure'/>
<use f='dpdk_18.05/drivers/net/failsafe/failsafe_flow.c' l='102' u='c' c='fs_flow_create'/>
<use f='dpdk_18.05/drivers/net/failsafe/failsafe_flow.c' l='130' u='c' c='fs_flow_destroy'/>
<def f='dpdk_18.05/lib/librte_ethdev/rte_flow.c' l='197' ll='213' type='int rte_flow_destroy(uint16_t port_id, struct rte_flow * flow, struct rte_flow_error * error)'/>
<doc f='dpdk_18.05/lib/librte_ethdev/rte_flow.c' l='196'>/* Destroy a flow rule on a given port. */</doc>
<dec f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_flow.h' l='1316' type='int rte_flow_destroy(uint16_t port_id, struct rte_flow * flow, struct rte_flow_error * error)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_flow.h' l='1295'>/**
 * Destroy a flow rule on a given port.
 *
 * Failure to destroy a flow rule handle may occur when other flow rules
 * depend on it, and destroying it would result in an inconsistent state.
 *
 * This function is only guaranteed to succeed if handles are destroyed in
 * reverse order of their creation.
 *
 * @param port_id
 *   Port identifier of Ethernet device.
 * @param flow
 *   Flow rule handle to destroy.
 * @param[out] error
 *   Perform verbose error reporting if not NULL. PMDs initialize this
 *   structure in case of error only.
 *
 * @return
 *   0 on success, a negative errno value otherwise and rte_errno is set.
 */</doc>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-pmd/config.c' l='1234' u='c' c='port_flow_create'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-pmd/config.c' l='1245' u='c' c='port_flow_create'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/app/test-pmd/config.c' l='1284' u='c' c='port_flow_destroy'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/bonding/rte_eth_bond_pmd.c' l='1891' u='c' c='slave_configure'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/failsafe/failsafe_flow.c' l='102' u='c' c='fs_flow_create'/>
<use f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/drivers/net/failsafe/failsafe_flow.c' l='130' u='c' c='fs_flow_destroy'/>
<def f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_flow.c' l='165' ll='181' type='int rte_flow_destroy(uint16_t port_id, struct rte_flow * flow, struct rte_flow_error * error)'/>
<doc f='vpp_1804/build-root/build-vpp_debug-native/dpdk/dpdk-stable-18.02.1/lib/librte_ether/rte_flow.c' l='164'>/* Destroy a flow rule on a given port. */</doc>
