<dec f='dpdk/lib/librte_lpm/rte_lpm6.h' l='69' type='struct rte_lpm6 * rte_lpm6_find_existing(const char * name)'/>
<def f='dpdk/lib/librte_lpm/rte_lpm6.c' l='209' ll='232' type='struct rte_lpm6 * rte_lpm6_find_existing(const char * name)'/>
<doc f='dpdk/lib/librte_lpm/rte_lpm6.c' l='206'>/*
 * Find an existing lpm table and return a pointer to it.
 */</doc>
<doc f='dpdk/lib/librte_lpm/rte_lpm6.h' l='58'>/**
 * Find an existing LPM object and return a pointer to it.
 *
 * @param name
 *   Name of the lpm object as passed to rte_lpm6_create()
 * @return
 *   Pointer to lpm object or NULL if object not found with rte_errno
 *   set appropriately. Possible rte_errno values include:
 *    - ENOENT - required entry not available to return.
 */</doc>
